
CytronMD10C.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000046cc  00080000  00080000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  000846cc  000846cc  000146cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000af0  20070000  000846d4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000198  20070af0  000851c4  00020af0  2**2
                  ALLOC
  4 .stack        00002000  20070c88  0008535c  00020af0  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020af0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020b19  2**0
                  CONTENTS, READONLY
  7 .debug_info   00018fb1  00000000  00000000  00020b72  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003b08  00000000  00000000  00039b23  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00004a7a  00000000  00000000  0003d62b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000b28  00000000  00000000  000420a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000a28  00000000  00000000  00042bcd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001a9bc  00000000  00000000  000435f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000121cb  00000000  00000000  0005dfb1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000648c0  00000000  00000000  0007017c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000025f8  00000000  00000000  000d4a3c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	88 2c 07 20 d1 0a 08 00 cd 0a 08 00 cd 0a 08 00     .,. ............
   80010:	cd 0a 08 00 cd 0a 08 00 cd 0a 08 00 00 00 00 00     ................
	...
   8002c:	cd 0a 08 00 cd 0a 08 00 00 00 00 00 cd 0a 08 00     ................
   8003c:	cd 0a 08 00 cd 0a 08 00 cd 0a 08 00 cd 0a 08 00     ................
   8004c:	cd 0a 08 00 cd 0a 08 00 cd 0a 08 00 cd 0a 08 00     ................
   8005c:	cd 0a 08 00 cd 0a 08 00 cd 0a 08 00 00 00 00 00     ................
   8006c:	1d 09 08 00 31 09 08 00 45 09 08 00 59 09 08 00     ....1...E...Y...
	...
   80084:	dd 03 08 00 cd 0a 08 00 cd 0a 08 00 cd 0a 08 00     ................
   80094:	cd 0a 08 00 cd 0a 08 00 cd 0a 08 00 cd 0a 08 00     ................
   800a4:	00 00 00 00 cd 0a 08 00 cd 0a 08 00 cd 0a 08 00     ................
   800b4:	cd 0a 08 00 cd 0a 08 00 cd 0a 08 00 cd 0a 08 00     ................
   800c4:	cd 0a 08 00 cd 0a 08 00 cd 0a 08 00 cd 0a 08 00     ................
   800d4:	cd 0a 08 00 cd 0a 08 00 cd 0a 08 00 cd 0a 08 00     ................
   800e4:	cd 0a 08 00 cd 0a 08 00 cd 0a 08 00 cd 0a 08 00     ................

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070af0 	.word	0x20070af0
   80110:	00000000 	.word	0x00000000
   80114:	000846d4 	.word	0x000846d4

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	000846d4 	.word	0x000846d4
   80154:	20070af4 	.word	0x20070af4
   80158:	000846d4 	.word	0x000846d4
   8015c:	00000000 	.word	0x00000000

00080160 <init_motors>:

static void setup_direction_pin(void);
static void maintain_speed(int speed);

void init_motors(void)
{
   80160:	b510      	push	{r4, lr}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   80162:	200b      	movs	r0, #11
   80164:	4c0c      	ldr	r4, [pc, #48]	; (80198 <init_motors+0x38>)
   80166:	47a0      	blx	r4
   80168:	200c      	movs	r0, #12
   8016a:	47a0      	blx	r4
   8016c:	200d      	movs	r0, #13
   8016e:	47a0      	blx	r4
   80170:	200e      	movs	r0, #14
   80172:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   80174:	4b09      	ldr	r3, [pc, #36]	; (8019c <init_motors+0x3c>)
   80176:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   8017a:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8017c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   80180:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   80184:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80186:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	setup_direction_pin();
	pulse_init();
   8018a:	4b05      	ldr	r3, [pc, #20]	; (801a0 <init_motors+0x40>)
   8018c:	4798      	blx	r3
	pulse_start(0);
   8018e:	2000      	movs	r0, #0
   80190:	2100      	movs	r1, #0
   80192:	4b04      	ldr	r3, [pc, #16]	; (801a4 <init_motors+0x44>)
   80194:	4798      	blx	r3
   80196:	bd10      	pop	{r4, pc}
   80198:	00080a55 	.word	0x00080a55
   8019c:	400e1200 	.word	0x400e1200
   801a0:	00080221 	.word	0x00080221
   801a4:	0008031d 	.word	0x0008031d

000801a8 <drive_forward>:
}

void drive_forward(int speed)
{
   801a8:	b508      	push	{r3, lr}
	ioport_set_pin_dir(DIR_pin_MotorB, IOPORT_DIR_OUTPUT);
}

static void maintain_speed(int speed)
{
	pulse_set_duty_cycle(speed);
   801aa:	4b02      	ldr	r3, [pc, #8]	; (801b4 <drive_forward+0xc>)
   801ac:	4798      	blx	r3
   801ae:	4b02      	ldr	r3, [pc, #8]	; (801b8 <drive_forward+0x10>)
   801b0:	4798      	blx	r3
   801b2:	bd08      	pop	{r3, pc}
   801b4:	00081171 	.word	0x00081171
   801b8:	000802a5 	.word	0x000802a5

000801bc <set_direction>:
	if(dir == FORWARD)
   801bc:	2801      	cmp	r0, #1
   801be:	d008      	beq.n	801d2 <set_direction+0x16>
	if(dir == REVERSE)
   801c0:	b930      	cbnz	r0, 801d0 <set_direction+0x14>
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   801c2:	4b08      	ldr	r3, [pc, #32]	; (801e4 <set_direction+0x28>)
   801c4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   801c8:	635a      	str	r2, [r3, #52]	; 0x34
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   801ca:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   801ce:	631a      	str	r2, [r3, #48]	; 0x30
   801d0:	4770      	bx	lr
   801d2:	4b04      	ldr	r3, [pc, #16]	; (801e4 <set_direction+0x28>)
   801d4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   801d8:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   801da:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   801de:	635a      	str	r2, [r3, #52]	; 0x34
   801e0:	4770      	bx	lr
   801e2:	bf00      	nop
   801e4:	400e1200 	.word	0x400e1200

000801e8 <accelerate>:
{
   801e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	for (int i = 0; i < speed; i++)
   801ec:	1e05      	subs	r5, r0, #0
   801ee:	dd0d      	ble.n	8020c <accelerate+0x24>
   801f0:	2400      	movs	r4, #0
		pulse_set_duty_cycle(i);
   801f2:	4e07      	ldr	r6, [pc, #28]	; (80210 <accelerate+0x28>)
   801f4:	4f07      	ldr	r7, [pc, #28]	; (80214 <accelerate+0x2c>)
		delay_ms(50);
   801f6:	f8df 8024 	ldr.w	r8, [pc, #36]	; 8021c <accelerate+0x34>
		pulse_set_duty_cycle(i);
   801fa:	4620      	mov	r0, r4
   801fc:	47b0      	blx	r6
   801fe:	47b8      	blx	r7
		delay_ms(50);
   80200:	4640      	mov	r0, r8
   80202:	4b05      	ldr	r3, [pc, #20]	; (80218 <accelerate+0x30>)
   80204:	4798      	blx	r3
	for (int i = 0; i < speed; i++)
   80206:	3401      	adds	r4, #1
   80208:	42a5      	cmp	r5, r4
   8020a:	d1f6      	bne.n	801fa <accelerate+0x12>
   8020c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80210:	00081171 	.word	0x00081171
   80214:	000802a5 	.word	0x000802a5
   80218:	20070001 	.word	0x20070001
   8021c:	000493e0 	.word	0x000493e0

00080220 <pulse_init>:
 #include <asf.h>
 #include "pulse.h"
 #include "driving.h"
 
 void pulse_init(void)
 {
   80220:	b570      	push	{r4, r5, r6, lr}
   80222:	200b      	movs	r0, #11
   80224:	4c19      	ldr	r4, [pc, #100]	; (8028c <pulse_init+0x6c>)
   80226:	47a0      	blx	r4
   80228:	200c      	movs	r0, #12
   8022a:	47a0      	blx	r4
   8022c:	200d      	movs	r0, #13
   8022e:	47a0      	blx	r4
   80230:	200e      	movs	r0, #14
   80232:	47a0      	blx	r4
		base->PIO_PUER = mask;
   80234:	4b16      	ldr	r3, [pc, #88]	; (80290 <pulse_init+0x70>)
   80236:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   8023a:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_MDDR = mask;
   8023c:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
   8023e:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_SCIFSR = mask;
   80240:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABSR |= mask;
   80244:	6f19      	ldr	r1, [r3, #112]	; 0x70
   80246:	4311      	orrs	r1, r2
   80248:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   8024a:	605a      	str	r2, [r3, #4]
		base->PIO_PUER = mask;
   8024c:	f5a3 7300 	sub.w	r3, r3, #512	; 0x200
   80250:	2204      	movs	r2, #4
   80252:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_MDDR = mask;
   80254:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
   80256:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_SCIFSR = mask;
   80258:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABSR &= ~mask;
   8025c:	6f19      	ldr	r1, [r3, #112]	; 0x70
   8025e:	f021 0104 	bic.w	r1, r1, #4
   80262:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   80264:	605a      	str	r2, [r3, #4]
	  */
	 ioport_set_pin_mode(PWM_pin_MotorA, IOPORT_MODE_MUX_B | IOPORT_MODE_PULLUP); // PB_25 (Digital pin 2) is PWM pin of Motor A
	 ioport_disable_pin(PWM_pin_MotorA);
	 ioport_set_pin_mode(PWM_pin_MotorB, IOPORT_MODE_MUX_A | IOPORT_MODE_PULLUP); // PA_2 (Analog IN 7) is PWM pin of Motor B
	 ioport_disable_pin(PWM_pin_MotorB);
	 pmc_set_writeprotect(false);
   80266:	2000      	movs	r0, #0
   80268:	4b0a      	ldr	r3, [pc, #40]	; (80294 <pulse_init+0x74>)
   8026a:	4798      	blx	r3
	  * second link contains a nice table over the PMC id:s of every Timer Counter channel.
	  *    (1) https://github.com/ivanseidel/DueTimer/blob/master/TimerCounter.md
	  *    (2) http://ko7m.blogspot.com/2015/01/arduino-due-timers-part-1.html
	  */
	 // TIOA0 = PB_25 = Digital pin 2 on Arduino Due board, TC0 channel 0 (peripheral function B)
	 pmc_enable_periph_clk(ID_TC0); // PMC ID of TC0 ch0 = ID_TC0
   8026c:	201b      	movs	r0, #27
   8026e:	47a0      	blx	r4
	 // TIOA1 = PA_2 = Analog In 2 on Arduino Due board, TC0 channel 1 (peripheral function A)
	 pmc_enable_periph_clk(ID_TC1); // PMC ID of TC0 ch1 = ID_TC1
   80270:	201c      	movs	r0, #28
   80272:	47a0      	blx	r4
	  *     1/(RC * presc/MCK) = MCK/(RC * presc)
	  * 
	  * In our case the PWM frequency = MCK/(RC * presc) = 84 MHz/(656 * 128) = 1 kHz
	  * 
	  */
	 tc_init(TC0, 0, TC_CMR_TCCLKS_TIMER_CLOCK4 
   80274:	4e08      	ldr	r6, [pc, #32]	; (80298 <pulse_init+0x78>)
   80276:	4d09      	ldr	r5, [pc, #36]	; (8029c <pulse_init+0x7c>)
   80278:	4632      	mov	r2, r6
   8027a:	2100      	movs	r1, #0
   8027c:	4628      	mov	r0, r5
   8027e:	4c08      	ldr	r4, [pc, #32]	; (802a0 <pulse_init+0x80>)
   80280:	47a0      	blx	r4
								| TC_CMR_WAVSEL_UP_RC 
								| TC_CMR_WAVE 
								| TC_CMR_ACPA_SET 
								| TC_CMR_ACPC_CLEAR); 
	tc_init(TC0, 1, TC_CMR_TCCLKS_TIMER_CLOCK4 
   80282:	4632      	mov	r2, r6
   80284:	2101      	movs	r1, #1
   80286:	4628      	mov	r0, r5
   80288:	47a0      	blx	r4
   8028a:	bd70      	pop	{r4, r5, r6, pc}
   8028c:	00080a55 	.word	0x00080a55
   80290:	400e1000 	.word	0x400e1000
   80294:	00080aa9 	.word	0x00080aa9
   80298:	0009c003 	.word	0x0009c003
   8029c:	40080000 	.word	0x40080000
   802a0:	00080555 	.word	0x00080555

000802a4 <pulse_set_duty_cycle>:
	pulse_set_duty_cycle(duty_cycle);
	tc_start(TC0, 1);
 }
 
 void pulse_set_duty_cycle(double duty_cycle)
 {
   802a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	 double rc = 0, ra = 0;
	 rc = 656;
	 ra = rc * (1 - duty_cycle/100);
   802a6:	2200      	movs	r2, #0
   802a8:	4b12      	ldr	r3, [pc, #72]	; (802f4 <pulse_set_duty_cycle+0x50>)
   802aa:	4c13      	ldr	r4, [pc, #76]	; (802f8 <pulse_set_duty_cycle+0x54>)
   802ac:	47a0      	blx	r4
   802ae:	4602      	mov	r2, r0
   802b0:	460b      	mov	r3, r1
   802b2:	2000      	movs	r0, #0
   802b4:	4911      	ldr	r1, [pc, #68]	; (802fc <pulse_set_duty_cycle+0x58>)
   802b6:	4c12      	ldr	r4, [pc, #72]	; (80300 <pulse_set_duty_cycle+0x5c>)
   802b8:	47a0      	blx	r4
   802ba:	2200      	movs	r2, #0
   802bc:	4b11      	ldr	r3, [pc, #68]	; (80304 <pulse_set_duty_cycle+0x60>)
   802be:	4c12      	ldr	r4, [pc, #72]	; (80308 <pulse_set_duty_cycle+0x64>)
   802c0:	47a0      	blx	r4
	 
	 /*
	  * RA Compare is used to control the TIOA/TIOB output. The value of RA will regulate the
	  * duty cycle. The signal will go high on RA compare and get cleared on RC compare.
	  */	
	tc_write_ra(TC0, 0, (uint32_t) ra);
   802c2:	4b12      	ldr	r3, [pc, #72]	; (8030c <pulse_set_duty_cycle+0x68>)
   802c4:	4798      	blx	r3
   802c6:	4607      	mov	r7, r0
   802c8:	4c11      	ldr	r4, [pc, #68]	; (80310 <pulse_set_duty_cycle+0x6c>)
   802ca:	4602      	mov	r2, r0
   802cc:	2100      	movs	r1, #0
   802ce:	4620      	mov	r0, r4
   802d0:	4e10      	ldr	r6, [pc, #64]	; (80314 <pulse_set_duty_cycle+0x70>)
   802d2:	47b0      	blx	r6
	tc_write_rc(TC0, 0, (uint32_t) rc);
   802d4:	f44f 7224 	mov.w	r2, #656	; 0x290
   802d8:	2100      	movs	r1, #0
   802da:	4620      	mov	r0, r4
   802dc:	4d0e      	ldr	r5, [pc, #56]	; (80318 <pulse_set_duty_cycle+0x74>)
   802de:	47a8      	blx	r5
	
	// Same for Motor B
	tc_write_ra(TC0, 1, (uint32_t) ra);
   802e0:	463a      	mov	r2, r7
   802e2:	2101      	movs	r1, #1
   802e4:	4620      	mov	r0, r4
   802e6:	47b0      	blx	r6
	tc_write_rc(TC0, 1, (uint32_t) rc);
   802e8:	f44f 7224 	mov.w	r2, #656	; 0x290
   802ec:	2101      	movs	r1, #1
   802ee:	4620      	mov	r0, r4
   802f0:	47a8      	blx	r5
   802f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   802f4:	40590000 	.word	0x40590000
   802f8:	00081491 	.word	0x00081491
   802fc:	3ff00000 	.word	0x3ff00000
   80300:	00080ed5 	.word	0x00080ed5
   80304:	40848000 	.word	0x40848000
   80308:	0008123d 	.word	0x0008123d
   8030c:	00081661 	.word	0x00081661
   80310:	40080000 	.word	0x40080000
   80314:	00080575 	.word	0x00080575
   80318:	0008057d 	.word	0x0008057d

0008031c <pulse_start>:
 {	
   8031c:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   80320:	4680      	mov	r8, r0
   80322:	4689      	mov	r9, r1
	pulse_set_duty_cycle(duty_cycle);
   80324:	4e07      	ldr	r6, [pc, #28]	; (80344 <pulse_start+0x28>)
   80326:	47b0      	blx	r6
	tc_start(TC0, 0);
   80328:	4d07      	ldr	r5, [pc, #28]	; (80348 <pulse_start+0x2c>)
   8032a:	2100      	movs	r1, #0
   8032c:	4628      	mov	r0, r5
   8032e:	4c07      	ldr	r4, [pc, #28]	; (8034c <pulse_start+0x30>)
   80330:	47a0      	blx	r4
	pulse_set_duty_cycle(duty_cycle);
   80332:	4640      	mov	r0, r8
   80334:	4649      	mov	r1, r9
   80336:	47b0      	blx	r6
	tc_start(TC0, 1);
   80338:	2101      	movs	r1, #1
   8033a:	4628      	mov	r0, r5
   8033c:	47a0      	blx	r4
   8033e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   80342:	bf00      	nop
   80344:	000802a5 	.word	0x000802a5
   80348:	40080000 	.word	0x40080000
   8034c:	0008056d 	.word	0x0008056d

00080350 <test_case_1>:

#include "test_cases.h"
#include "driving.h"

void test_case_1(int target_speed)
{
   80350:	b510      	push	{r4, lr}
   80352:	4604      	mov	r4, r0
	set_direction(FORWARD);
   80354:	2001      	movs	r0, #1
   80356:	4b04      	ldr	r3, [pc, #16]	; (80368 <test_case_1+0x18>)
   80358:	4798      	blx	r3
	accelerate(target_speed);
   8035a:	4620      	mov	r0, r4
   8035c:	4b03      	ldr	r3, [pc, #12]	; (8036c <test_case_1+0x1c>)
   8035e:	4798      	blx	r3
	drive_forward(target_speed);
   80360:	4620      	mov	r0, r4
   80362:	4b03      	ldr	r3, [pc, #12]	; (80370 <test_case_1+0x20>)
   80364:	4798      	blx	r3
   80366:	bd10      	pop	{r4, pc}
   80368:	000801bd 	.word	0x000801bd
   8036c:	000801e9 	.word	0x000801e9
   80370:	000801a9 	.word	0x000801a9

00080374 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
   80374:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
   80378:	b980      	cbnz	r0, 8039c <_read+0x28>
   8037a:	460c      	mov	r4, r1
   8037c:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
   8037e:	2a00      	cmp	r2, #0
   80380:	dd0f      	ble.n	803a2 <_read+0x2e>
   80382:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
   80384:	4e08      	ldr	r6, [pc, #32]	; (803a8 <_read+0x34>)
   80386:	4d09      	ldr	r5, [pc, #36]	; (803ac <_read+0x38>)
   80388:	6830      	ldr	r0, [r6, #0]
   8038a:	4621      	mov	r1, r4
   8038c:	682b      	ldr	r3, [r5, #0]
   8038e:	4798      	blx	r3
		ptr++;
   80390:	3401      	adds	r4, #1
	for (; len > 0; --len) {
   80392:	42bc      	cmp	r4, r7
   80394:	d1f8      	bne.n	80388 <_read+0x14>
		nChars++;
	}
	return nChars;
}
   80396:	4640      	mov	r0, r8
   80398:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   8039c:	f04f 38ff 	mov.w	r8, #4294967295
   803a0:	e7f9      	b.n	80396 <_read+0x22>
	for (; len > 0; --len) {
   803a2:	4680      	mov	r8, r0
   803a4:	e7f7      	b.n	80396 <_read+0x22>
   803a6:	bf00      	nop
   803a8:	20070c5c 	.word	0x20070c5c
   803ac:	20070c54 	.word	0x20070c54

000803b0 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
   803b0:	6943      	ldr	r3, [r0, #20]
   803b2:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
   803b6:	bf1d      	ittte	ne
   803b8:	f3c1 0108 	ubfxne	r1, r1, #0, #9
   803bc:	61c1      	strne	r1, [r0, #28]
	return 0;
   803be:	2000      	movne	r0, #0
		return 1;
   803c0:	2001      	moveq	r0, #1
}
   803c2:	4770      	bx	lr

000803c4 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
   803c4:	6943      	ldr	r3, [r0, #20]
   803c6:	f013 0f01 	tst.w	r3, #1
   803ca:	d005      	beq.n	803d8 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   803cc:	6983      	ldr	r3, [r0, #24]
   803ce:	f3c3 0308 	ubfx	r3, r3, #0, #9
   803d2:	600b      	str	r3, [r1, #0]

	return 0;
   803d4:	2000      	movs	r0, #0
   803d6:	4770      	bx	lr
		return 1;
   803d8:	2001      	movs	r0, #1
}
   803da:	4770      	bx	lr

000803dc <USART0_Handler>:
#if SAMD || SAMR21 || SAML21 || SAMR30
void USART_HOST_ISR_VECT(uint8_t instance)
#else
USART_HOST_ISR_VECT()
#endif
{
   803dc:	b500      	push	{lr}
   803de:	b083      	sub	sp, #12
#if SAMD || SAMR21 || SAML21 || SAMR30
	usart_serial_read_packet(&host_uart_module, &temp, 1);
#elif SAM4E || SAM4S
	usart_serial_read_packet((Usart *)USART_HOST, &temp, 1);
#else
    usart_serial_read_packet(USART_HOST, &temp, 1);
   803e0:	2201      	movs	r2, #1
   803e2:	f10d 0107 	add.w	r1, sp, #7
   803e6:	4810      	ldr	r0, [pc, #64]	; (80428 <USART0_Handler+0x4c>)
   803e8:	4b10      	ldr	r3, [pc, #64]	; (8042c <USART0_Handler+0x50>)
   803ea:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   803ec:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   803ee:	f3bf 8f5f 	dmb	sy
#endif

	/* Introducing critical section to avoid buffer corruption. */
	cpu_irq_disable();
   803f2:	2200      	movs	r2, #0
   803f4:	4b0e      	ldr	r3, [pc, #56]	; (80430 <USART0_Handler+0x54>)
   803f6:	701a      	strb	r2, [r3, #0]

	/* The number of data in the receive buffer is incremented and the
	 * buffer is updated. */

	serial_rx_buf[serial_rx_buf_tail] = temp;
   803f8:	4b0e      	ldr	r3, [pc, #56]	; (80434 <USART0_Handler+0x58>)
   803fa:	781b      	ldrb	r3, [r3, #0]
   803fc:	f89d 1007 	ldrb.w	r1, [sp, #7]
   80400:	4a0d      	ldr	r2, [pc, #52]	; (80438 <USART0_Handler+0x5c>)
   80402:	54d1      	strb	r1, [r2, r3]

	if ((SERIAL_RX_BUF_SIZE_HOST - 1) == serial_rx_buf_tail) {
   80404:	2b9b      	cmp	r3, #155	; 0x9b
   80406:	d00b      	beq.n	80420 <USART0_Handler+0x44>
		/* Reached the end of buffer, revert back to beginning of
		 * buffer. */
		serial_rx_buf_tail = 0x00;
	} else {
		serial_rx_buf_tail++;
   80408:	3301      	adds	r3, #1
   8040a:	4a0a      	ldr	r2, [pc, #40]	; (80434 <USART0_Handler+0x58>)
   8040c:	7013      	strb	r3, [r2, #0]
	}

	cpu_irq_enable();
   8040e:	2201      	movs	r2, #1
   80410:	4b07      	ldr	r3, [pc, #28]	; (80430 <USART0_Handler+0x54>)
   80412:	701a      	strb	r2, [r3, #0]
   80414:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80418:	b662      	cpsie	i
}
   8041a:	b003      	add	sp, #12
   8041c:	f85d fb04 	ldr.w	pc, [sp], #4
		serial_rx_buf_tail = 0x00;
   80420:	2200      	movs	r2, #0
   80422:	4b04      	ldr	r3, [pc, #16]	; (80434 <USART0_Handler+0x58>)
   80424:	701a      	strb	r2, [r3, #0]
   80426:	e7f2      	b.n	8040e <USART0_Handler+0x32>
   80428:	40098000 	.word	0x40098000
   8042c:	0008048d 	.word	0x0008048d
   80430:	20070138 	.word	0x20070138
   80434:	20070ba8 	.word	0x20070ba8
   80438:	20070b0c 	.word	0x20070b0c

0008043c <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
   8043c:	3801      	subs	r0, #1
   8043e:	2802      	cmp	r0, #2
   80440:	d815      	bhi.n	8046e <_write+0x32>
{
   80442:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80446:	460e      	mov	r6, r1
   80448:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
   8044a:	b19a      	cbz	r2, 80474 <_write+0x38>
   8044c:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
   8044e:	f8df 8038 	ldr.w	r8, [pc, #56]	; 80488 <_write+0x4c>
   80452:	4f0c      	ldr	r7, [pc, #48]	; (80484 <_write+0x48>)
   80454:	f8d8 0000 	ldr.w	r0, [r8]
   80458:	f815 1b01 	ldrb.w	r1, [r5], #1
   8045c:	683b      	ldr	r3, [r7, #0]
   8045e:	4798      	blx	r3
   80460:	2800      	cmp	r0, #0
   80462:	db0a      	blt.n	8047a <_write+0x3e>
   80464:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
   80466:	3c01      	subs	r4, #1
   80468:	d1f4      	bne.n	80454 <_write+0x18>
   8046a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   8046e:	f04f 30ff 	mov.w	r0, #4294967295
   80472:	4770      	bx	lr
	for (; len != 0; --len) {
   80474:	4610      	mov	r0, r2
   80476:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
   8047a:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
   8047e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80482:	bf00      	nop
   80484:	20070c58 	.word	0x20070c58
   80488:	20070c5c 	.word	0x20070c5c

0008048c <usart_serial_read_packet>:
 *
 */
status_code_t usart_serial_read_packet(usart_if usart, uint8_t *data,
		size_t len)
{
	while (len) {
   8048c:	2a00      	cmp	r2, #0
   8048e:	d051      	beq.n	80534 <usart_serial_read_packet+0xa8>
{
   80490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   80494:	b083      	sub	sp, #12
   80496:	4605      	mov	r5, r0
   80498:	460c      	mov	r4, r1
   8049a:	4692      	mov	sl, r2
   8049c:	448a      	add	sl, r1

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   8049e:	4f26      	ldr	r7, [pc, #152]	; (80538 <usart_serial_read_packet+0xac>)
		while (uart_read((Uart*)p_usart, data));
   804a0:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 8054c <usart_serial_read_packet+0xc0>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   804a4:	4e25      	ldr	r6, [pc, #148]	; (8053c <usart_serial_read_packet+0xb0>)
   804a6:	e01d      	b.n	804e4 <usart_serial_read_packet+0x58>
		while (uart_read((Uart*)p_usart, data));
   804a8:	4621      	mov	r1, r4
   804aa:	4638      	mov	r0, r7
   804ac:	47c8      	blx	r9
   804ae:	2800      	cmp	r0, #0
   804b0:	d1fa      	bne.n	804a8 <usart_serial_read_packet+0x1c>
   804b2:	e021      	b.n	804f8 <usart_serial_read_packet+0x6c>
		while (usart_read(p_usart, &val));
   804b4:	469b      	mov	fp, r3
   804b6:	f8df 8098 	ldr.w	r8, [pc, #152]	; 80550 <usart_serial_read_packet+0xc4>
   804ba:	a901      	add	r1, sp, #4
   804bc:	4658      	mov	r0, fp
   804be:	47c0      	blx	r8
   804c0:	2800      	cmp	r0, #0
   804c2:	d1fa      	bne.n	804ba <usart_serial_read_packet+0x2e>
		*data = (uint8_t)(val & 0xFF);
   804c4:	9b01      	ldr	r3, [sp, #4]
   804c6:	7023      	strb	r3, [r4, #0]
   804c8:	e019      	b.n	804fe <usart_serial_read_packet+0x72>
		while (usart_read(p_usart, &val));
   804ca:	469b      	mov	fp, r3
   804cc:	f8df 8080 	ldr.w	r8, [pc, #128]	; 80550 <usart_serial_read_packet+0xc4>
   804d0:	a901      	add	r1, sp, #4
   804d2:	4658      	mov	r0, fp
   804d4:	47c0      	blx	r8
   804d6:	2800      	cmp	r0, #0
   804d8:	d1fa      	bne.n	804d0 <usart_serial_read_packet+0x44>
		*data = (uint8_t)(val & 0xFF);
   804da:	9b01      	ldr	r3, [sp, #4]
   804dc:	7023      	strb	r3, [r4, #0]
		usart_serial_getchar(usart, data);
		len--;
		data++;
   804de:	3401      	adds	r4, #1
	while (len) {
   804e0:	4554      	cmp	r4, sl
   804e2:	d023      	beq.n	8052c <usart_serial_read_packet+0xa0>
	uint32_t val = 0;
   804e4:	2300      	movs	r3, #0
   804e6:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
   804e8:	42bd      	cmp	r5, r7
   804ea:	d0dd      	beq.n	804a8 <usart_serial_read_packet+0x1c>
	if (USART0 == p_usart) {
   804ec:	4b14      	ldr	r3, [pc, #80]	; (80540 <usart_serial_read_packet+0xb4>)
   804ee:	429d      	cmp	r5, r3
   804f0:	d0e0      	beq.n	804b4 <usart_serial_read_packet+0x28>
	if (USART1 == p_usart) {
   804f2:	4b14      	ldr	r3, [pc, #80]	; (80544 <usart_serial_read_packet+0xb8>)
   804f4:	429d      	cmp	r5, r3
   804f6:	d0e8      	beq.n	804ca <usart_serial_read_packet+0x3e>
	if (USART2 == p_usart) {
   804f8:	4b13      	ldr	r3, [pc, #76]	; (80548 <usart_serial_read_packet+0xbc>)
   804fa:	429d      	cmp	r5, r3
   804fc:	d00b      	beq.n	80516 <usart_serial_read_packet+0x8a>
	if (USART3 == p_usart) {
   804fe:	42b5      	cmp	r5, r6
   80500:	d1ed      	bne.n	804de <usart_serial_read_packet+0x52>
		while (usart_read(p_usart, &val));
   80502:	f8df 804c 	ldr.w	r8, [pc, #76]	; 80550 <usart_serial_read_packet+0xc4>
   80506:	a901      	add	r1, sp, #4
   80508:	4630      	mov	r0, r6
   8050a:	47c0      	blx	r8
   8050c:	2800      	cmp	r0, #0
   8050e:	d1fa      	bne.n	80506 <usart_serial_read_packet+0x7a>
		*data = (uint8_t)(val & 0xFF);
   80510:	9b01      	ldr	r3, [sp, #4]
   80512:	7023      	strb	r3, [r4, #0]
   80514:	e7e3      	b.n	804de <usart_serial_read_packet+0x52>
		while (usart_read(p_usart, &val));
   80516:	469b      	mov	fp, r3
   80518:	f8df 8034 	ldr.w	r8, [pc, #52]	; 80550 <usart_serial_read_packet+0xc4>
   8051c:	a901      	add	r1, sp, #4
   8051e:	4658      	mov	r0, fp
   80520:	47c0      	blx	r8
   80522:	2800      	cmp	r0, #0
   80524:	d1fa      	bne.n	8051c <usart_serial_read_packet+0x90>
		*data = (uint8_t)(val & 0xFF);
   80526:	9b01      	ldr	r3, [sp, #4]
   80528:	7023      	strb	r3, [r4, #0]
   8052a:	e7d8      	b.n	804de <usart_serial_read_packet+0x52>
	}
	return STATUS_OK;
}
   8052c:	2000      	movs	r0, #0
   8052e:	b003      	add	sp, #12
   80530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80534:	2000      	movs	r0, #0
   80536:	4770      	bx	lr
   80538:	400e0800 	.word	0x400e0800
   8053c:	400a4000 	.word	0x400a4000
   80540:	40098000 	.word	0x40098000
   80544:	4009c000 	.word	0x4009c000
   80548:	400a0000 	.word	0x400a0000
   8054c:	000805cb 	.word	0x000805cb
   80550:	000803c5 	.word	0x000803c5

00080554 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80554:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80556:	0189      	lsls	r1, r1, #6
   80558:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   8055a:	2402      	movs	r4, #2
   8055c:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   8055e:	f04f 31ff 	mov.w	r1, #4294967295
   80562:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   80564:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   80566:	605a      	str	r2, [r3, #4]
}
   80568:	bc10      	pop	{r4}
   8056a:	4770      	bx	lr

0008056c <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   8056c:	0189      	lsls	r1, r1, #6
   8056e:	2305      	movs	r3, #5
   80570:	5043      	str	r3, [r0, r1]
   80572:	4770      	bx	lr

00080574 <tc_write_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RA = ul_value;
   80574:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80578:	614a      	str	r2, [r1, #20]
   8057a:	4770      	bx	lr

0008057c <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   8057c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80580:	61ca      	str	r2, [r1, #28]
   80582:	4770      	bx	lr

00080584 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
   80584:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   80586:	23ac      	movs	r3, #172	; 0xac
   80588:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   8058a:	680b      	ldr	r3, [r1, #0]
   8058c:	684a      	ldr	r2, [r1, #4]
   8058e:	fbb3 f3f2 	udiv	r3, r3, r2
   80592:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   80594:	1e5c      	subs	r4, r3, #1
   80596:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   8059a:	4294      	cmp	r4, r2
   8059c:	d80b      	bhi.n	805b6 <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
   8059e:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
   805a0:	688b      	ldr	r3, [r1, #8]
   805a2:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   805a4:	f240 2302 	movw	r3, #514	; 0x202
   805a8:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   805ac:	2350      	movs	r3, #80	; 0x50
   805ae:	6003      	str	r3, [r0, #0]

	return 0;
   805b0:	2000      	movs	r0, #0
}
   805b2:	bc10      	pop	{r4}
   805b4:	4770      	bx	lr
		return 1;
   805b6:	2001      	movs	r0, #1
   805b8:	e7fb      	b.n	805b2 <uart_init+0x2e>

000805ba <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
   805ba:	6943      	ldr	r3, [r0, #20]
   805bc:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
   805c0:	bf1a      	itte	ne
   805c2:	61c1      	strne	r1, [r0, #28]
	return 0;
   805c4:	2000      	movne	r0, #0
		return 1;
   805c6:	2001      	moveq	r0, #1
}
   805c8:	4770      	bx	lr

000805ca <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
   805ca:	6943      	ldr	r3, [r0, #20]
   805cc:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
   805d0:	bf1d      	ittte	ne
   805d2:	6983      	ldrne	r3, [r0, #24]
   805d4:	700b      	strbne	r3, [r1, #0]
	return 0;
   805d6:	2000      	movne	r0, #0
		return 1;
   805d8:	2001      	moveq	r0, #1
}
   805da:	4770      	bx	lr

000805dc <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   805dc:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   805de:	480e      	ldr	r0, [pc, #56]	; (80618 <sysclk_init+0x3c>)
   805e0:	4b0e      	ldr	r3, [pc, #56]	; (8061c <sysclk_init+0x40>)
   805e2:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   805e4:	213e      	movs	r1, #62	; 0x3e
   805e6:	2000      	movs	r0, #0
   805e8:	4b0d      	ldr	r3, [pc, #52]	; (80620 <sysclk_init+0x44>)
   805ea:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   805ec:	4c0d      	ldr	r4, [pc, #52]	; (80624 <sysclk_init+0x48>)
   805ee:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   805f0:	2800      	cmp	r0, #0
   805f2:	d0fc      	beq.n	805ee <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   805f4:	4b0c      	ldr	r3, [pc, #48]	; (80628 <sysclk_init+0x4c>)
   805f6:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   805f8:	4a0c      	ldr	r2, [pc, #48]	; (8062c <sysclk_init+0x50>)
   805fa:	4b0d      	ldr	r3, [pc, #52]	; (80630 <sysclk_init+0x54>)
   805fc:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   805fe:	4c0d      	ldr	r4, [pc, #52]	; (80634 <sysclk_init+0x58>)
   80600:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   80602:	2800      	cmp	r0, #0
   80604:	d0fc      	beq.n	80600 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80606:	2010      	movs	r0, #16
   80608:	4b0b      	ldr	r3, [pc, #44]	; (80638 <sysclk_init+0x5c>)
   8060a:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   8060c:	4b0b      	ldr	r3, [pc, #44]	; (8063c <sysclk_init+0x60>)
   8060e:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   80610:	4801      	ldr	r0, [pc, #4]	; (80618 <sysclk_init+0x3c>)
   80612:	4b02      	ldr	r3, [pc, #8]	; (8061c <sysclk_init+0x40>)
   80614:	4798      	blx	r3
   80616:	bd10      	pop	{r4, pc}
   80618:	0501bd00 	.word	0x0501bd00
   8061c:	200700b1 	.word	0x200700b1
   80620:	000809d1 	.word	0x000809d1
   80624:	00080a25 	.word	0x00080a25
   80628:	00080a35 	.word	0x00080a35
   8062c:	200d3f01 	.word	0x200d3f01
   80630:	400e0600 	.word	0x400e0600
   80634:	00080a45 	.word	0x00080a45
   80638:	0008096d 	.word	0x0008096d
   8063c:	00080b69 	.word	0x00080b69

00080640 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   80640:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   80642:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80646:	4b16      	ldr	r3, [pc, #88]	; (806a0 <board_init+0x60>)
   80648:	605a      	str	r2, [r3, #4]
   8064a:	200b      	movs	r0, #11
   8064c:	4c15      	ldr	r4, [pc, #84]	; (806a4 <board_init+0x64>)
   8064e:	47a0      	blx	r4
   80650:	200c      	movs	r0, #12
   80652:	47a0      	blx	r4
   80654:	200d      	movs	r0, #13
   80656:	47a0      	blx	r4
   80658:	200e      	movs	r0, #14
   8065a:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   8065c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80660:	203b      	movs	r0, #59	; 0x3b
   80662:	4c11      	ldr	r4, [pc, #68]	; (806a8 <board_init+0x68>)
   80664:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   80666:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8066a:	2055      	movs	r0, #85	; 0x55
   8066c:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   8066e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80672:	2056      	movs	r0, #86	; 0x56
   80674:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   80676:	490d      	ldr	r1, [pc, #52]	; (806ac <board_init+0x6c>)
   80678:	2068      	movs	r0, #104	; 0x68
   8067a:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   8067c:	490c      	ldr	r1, [pc, #48]	; (806b0 <board_init+0x70>)
   8067e:	205c      	movs	r0, #92	; 0x5c
   80680:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   80682:	4a0c      	ldr	r2, [pc, #48]	; (806b4 <board_init+0x74>)
   80684:	f44f 7140 	mov.w	r1, #768	; 0x300
   80688:	480b      	ldr	r0, [pc, #44]	; (806b8 <board_init+0x78>)
   8068a:	4b0c      	ldr	r3, [pc, #48]	; (806bc <board_init+0x7c>)
   8068c:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   8068e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80692:	202b      	movs	r0, #43	; 0x2b
   80694:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   80696:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8069a:	202a      	movs	r0, #42	; 0x2a
   8069c:	47a0      	blx	r4
   8069e:	bd10      	pop	{r4, pc}
   806a0:	400e1a50 	.word	0x400e1a50
   806a4:	00080a55 	.word	0x00080a55
   806a8:	00080761 	.word	0x00080761
   806ac:	28000079 	.word	0x28000079
   806b0:	28000001 	.word	0x28000001
   806b4:	08000001 	.word	0x08000001
   806b8:	400e0e00 	.word	0x400e0e00
   806bc:	00080831 	.word	0x00080831

000806c0 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   806c0:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   806c2:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   806c6:	d016      	beq.n	806f6 <pio_set_peripheral+0x36>
   806c8:	d80b      	bhi.n	806e2 <pio_set_peripheral+0x22>
   806ca:	b149      	cbz	r1, 806e0 <pio_set_peripheral+0x20>
   806cc:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   806d0:	d105      	bne.n	806de <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   806d2:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   806d4:	6f01      	ldr	r1, [r0, #112]	; 0x70
   806d6:	400b      	ands	r3, r1
   806d8:	ea23 0302 	bic.w	r3, r3, r2
   806dc:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   806de:	6042      	str	r2, [r0, #4]
   806e0:	4770      	bx	lr
	switch (ul_type) {
   806e2:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   806e6:	d0fb      	beq.n	806e0 <pio_set_peripheral+0x20>
   806e8:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   806ec:	d0f8      	beq.n	806e0 <pio_set_peripheral+0x20>
   806ee:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   806f2:	d1f4      	bne.n	806de <pio_set_peripheral+0x1e>
   806f4:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   806f6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   806f8:	4313      	orrs	r3, r2
   806fa:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   806fc:	e7ef      	b.n	806de <pio_set_peripheral+0x1e>

000806fe <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   806fe:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80700:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80704:	bf14      	ite	ne
   80706:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80708:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   8070a:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   8070e:	bf14      	ite	ne
   80710:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   80712:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   80714:	f012 0f02 	tst.w	r2, #2
   80718:	d107      	bne.n	8072a <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   8071a:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   8071e:	bf18      	it	ne
   80720:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   80724:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80726:	6001      	str	r1, [r0, #0]
   80728:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   8072a:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   8072e:	e7f9      	b.n	80724 <pio_set_input+0x26>

00080730 <pio_set_output>:
{
   80730:	b410      	push	{r4}
   80732:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   80734:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80736:	b944      	cbnz	r4, 8074a <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   80738:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   8073a:	b143      	cbz	r3, 8074e <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   8073c:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   8073e:	b942      	cbnz	r2, 80752 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   80740:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   80742:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80744:	6001      	str	r1, [r0, #0]
}
   80746:	bc10      	pop	{r4}
   80748:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   8074a:	6641      	str	r1, [r0, #100]	; 0x64
   8074c:	e7f5      	b.n	8073a <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   8074e:	6541      	str	r1, [r0, #84]	; 0x54
   80750:	e7f5      	b.n	8073e <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   80752:	6301      	str	r1, [r0, #48]	; 0x30
   80754:	e7f5      	b.n	80742 <pio_set_output+0x12>

00080756 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80756:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   80758:	4770      	bx	lr

0008075a <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   8075a:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   8075c:	4770      	bx	lr
	...

00080760 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   80760:	b570      	push	{r4, r5, r6, lr}
   80762:	b082      	sub	sp, #8
   80764:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80766:	0943      	lsrs	r3, r0, #5
   80768:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8076c:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80770:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   80772:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   80776:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   8077a:	d031      	beq.n	807e0 <pio_configure_pin+0x80>
   8077c:	d816      	bhi.n	807ac <pio_configure_pin+0x4c>
   8077e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   80782:	d01b      	beq.n	807bc <pio_configure_pin+0x5c>
   80784:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80788:	d116      	bne.n	807b8 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   8078a:	f000 001f 	and.w	r0, r0, #31
   8078e:	2601      	movs	r6, #1
   80790:	4086      	lsls	r6, r0
   80792:	4632      	mov	r2, r6
   80794:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80798:	4620      	mov	r0, r4
   8079a:	4b22      	ldr	r3, [pc, #136]	; (80824 <pio_configure_pin+0xc4>)
   8079c:	4798      	blx	r3
	if (ul_pull_up_enable) {
   8079e:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   807a2:	bf14      	ite	ne
   807a4:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   807a6:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   807a8:	2001      	movs	r0, #1
   807aa:	e017      	b.n	807dc <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   807ac:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   807b0:	d021      	beq.n	807f6 <pio_configure_pin+0x96>
   807b2:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   807b6:	d01e      	beq.n	807f6 <pio_configure_pin+0x96>
		return 0;
   807b8:	2000      	movs	r0, #0
   807ba:	e00f      	b.n	807dc <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   807bc:	f000 001f 	and.w	r0, r0, #31
   807c0:	2601      	movs	r6, #1
   807c2:	4086      	lsls	r6, r0
   807c4:	4632      	mov	r2, r6
   807c6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   807ca:	4620      	mov	r0, r4
   807cc:	4b15      	ldr	r3, [pc, #84]	; (80824 <pio_configure_pin+0xc4>)
   807ce:	4798      	blx	r3
	if (ul_pull_up_enable) {
   807d0:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   807d4:	bf14      	ite	ne
   807d6:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   807d8:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   807da:	2001      	movs	r0, #1
}
   807dc:	b002      	add	sp, #8
   807de:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   807e0:	f000 011f 	and.w	r1, r0, #31
   807e4:	2601      	movs	r6, #1
   807e6:	462a      	mov	r2, r5
   807e8:	fa06 f101 	lsl.w	r1, r6, r1
   807ec:	4620      	mov	r0, r4
   807ee:	4b0e      	ldr	r3, [pc, #56]	; (80828 <pio_configure_pin+0xc8>)
   807f0:	4798      	blx	r3
	return 1;
   807f2:	4630      	mov	r0, r6
		break;
   807f4:	e7f2      	b.n	807dc <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   807f6:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   807fa:	f000 011f 	and.w	r1, r0, #31
   807fe:	2601      	movs	r6, #1
   80800:	ea05 0306 	and.w	r3, r5, r6
   80804:	9300      	str	r3, [sp, #0]
   80806:	f3c5 0380 	ubfx	r3, r5, #2, #1
   8080a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   8080e:	bf14      	ite	ne
   80810:	2200      	movne	r2, #0
   80812:	2201      	moveq	r2, #1
   80814:	fa06 f101 	lsl.w	r1, r6, r1
   80818:	4620      	mov	r0, r4
   8081a:	4c04      	ldr	r4, [pc, #16]	; (8082c <pio_configure_pin+0xcc>)
   8081c:	47a0      	blx	r4
	return 1;
   8081e:	4630      	mov	r0, r6
		break;
   80820:	e7dc      	b.n	807dc <pio_configure_pin+0x7c>
   80822:	bf00      	nop
   80824:	000806c1 	.word	0x000806c1
   80828:	000806ff 	.word	0x000806ff
   8082c:	00080731 	.word	0x00080731

00080830 <pio_configure_pin_group>:
{
   80830:	b570      	push	{r4, r5, r6, lr}
   80832:	b082      	sub	sp, #8
   80834:	4605      	mov	r5, r0
   80836:	460e      	mov	r6, r1
   80838:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
   8083a:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   8083e:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   80842:	d027      	beq.n	80894 <pio_configure_pin_group+0x64>
   80844:	d811      	bhi.n	8086a <pio_configure_pin_group+0x3a>
   80846:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8084a:	d016      	beq.n	8087a <pio_configure_pin_group+0x4a>
   8084c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80850:	d111      	bne.n	80876 <pio_configure_pin_group+0x46>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80852:	460a      	mov	r2, r1
   80854:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80858:	4b19      	ldr	r3, [pc, #100]	; (808c0 <pio_configure_pin_group+0x90>)
   8085a:	4798      	blx	r3
	if (ul_pull_up_enable) {
   8085c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   80860:	bf14      	ite	ne
   80862:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80864:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   80866:	2001      	movs	r0, #1
   80868:	e012      	b.n	80890 <pio_configure_pin_group+0x60>
	switch (ul_flags & PIO_TYPE_Msk) {
   8086a:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   8086e:	d015      	beq.n	8089c <pio_configure_pin_group+0x6c>
   80870:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   80874:	d012      	beq.n	8089c <pio_configure_pin_group+0x6c>
		return 0;
   80876:	2000      	movs	r0, #0
   80878:	e00a      	b.n	80890 <pio_configure_pin_group+0x60>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   8087a:	460a      	mov	r2, r1
   8087c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80880:	4b0f      	ldr	r3, [pc, #60]	; (808c0 <pio_configure_pin_group+0x90>)
   80882:	4798      	blx	r3
	if (ul_pull_up_enable) {
   80884:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   80888:	bf14      	ite	ne
   8088a:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   8088c:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   8088e:	2001      	movs	r0, #1
}
   80890:	b002      	add	sp, #8
   80892:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, ul_mask, ul_flags);
   80894:	4b0b      	ldr	r3, [pc, #44]	; (808c4 <pio_configure_pin_group+0x94>)
   80896:	4798      	blx	r3
	return 1;
   80898:	2001      	movs	r0, #1
		break;
   8089a:	e7f9      	b.n	80890 <pio_configure_pin_group+0x60>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   8089c:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   808a0:	f004 0301 	and.w	r3, r4, #1
   808a4:	9300      	str	r3, [sp, #0]
   808a6:	f3c4 0380 	ubfx	r3, r4, #2, #1
   808aa:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   808ae:	bf14      	ite	ne
   808b0:	2200      	movne	r2, #0
   808b2:	2201      	moveq	r2, #1
   808b4:	4631      	mov	r1, r6
   808b6:	4628      	mov	r0, r5
   808b8:	4c03      	ldr	r4, [pc, #12]	; (808c8 <pio_configure_pin_group+0x98>)
   808ba:	47a0      	blx	r4
	return 1;
   808bc:	2001      	movs	r0, #1
		break;
   808be:	e7e7      	b.n	80890 <pio_configure_pin_group+0x60>
   808c0:	000806c1 	.word	0x000806c1
   808c4:	000806ff 	.word	0x000806ff
   808c8:	00080731 	.word	0x00080731

000808cc <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   808cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   808d0:	4604      	mov	r4, r0
   808d2:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   808d4:	4b0e      	ldr	r3, [pc, #56]	; (80910 <pio_handler_process+0x44>)
   808d6:	4798      	blx	r3
   808d8:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   808da:	4620      	mov	r0, r4
   808dc:	4b0d      	ldr	r3, [pc, #52]	; (80914 <pio_handler_process+0x48>)
   808de:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   808e0:	4005      	ands	r5, r0
   808e2:	d013      	beq.n	8090c <pio_handler_process+0x40>
   808e4:	4c0c      	ldr	r4, [pc, #48]	; (80918 <pio_handler_process+0x4c>)
   808e6:	f104 0660 	add.w	r6, r4, #96	; 0x60
   808ea:	e003      	b.n	808f4 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   808ec:	42b4      	cmp	r4, r6
   808ee:	d00d      	beq.n	8090c <pio_handler_process+0x40>
   808f0:	3410      	adds	r4, #16
		while (status != 0) {
   808f2:	b15d      	cbz	r5, 8090c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   808f4:	6820      	ldr	r0, [r4, #0]
   808f6:	4540      	cmp	r0, r8
   808f8:	d1f8      	bne.n	808ec <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   808fa:	6861      	ldr	r1, [r4, #4]
   808fc:	4229      	tst	r1, r5
   808fe:	d0f5      	beq.n	808ec <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80900:	68e3      	ldr	r3, [r4, #12]
   80902:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80904:	6863      	ldr	r3, [r4, #4]
   80906:	ea25 0503 	bic.w	r5, r5, r3
   8090a:	e7ef      	b.n	808ec <pio_handler_process+0x20>
   8090c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80910:	00080757 	.word	0x00080757
   80914:	0008075b 	.word	0x0008075b
   80918:	20070bac 	.word	0x20070bac

0008091c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   8091c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   8091e:	210b      	movs	r1, #11
   80920:	4801      	ldr	r0, [pc, #4]	; (80928 <PIOA_Handler+0xc>)
   80922:	4b02      	ldr	r3, [pc, #8]	; (8092c <PIOA_Handler+0x10>)
   80924:	4798      	blx	r3
   80926:	bd08      	pop	{r3, pc}
   80928:	400e0e00 	.word	0x400e0e00
   8092c:	000808cd 	.word	0x000808cd

00080930 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80930:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80932:	210c      	movs	r1, #12
   80934:	4801      	ldr	r0, [pc, #4]	; (8093c <PIOB_Handler+0xc>)
   80936:	4b02      	ldr	r3, [pc, #8]	; (80940 <PIOB_Handler+0x10>)
   80938:	4798      	blx	r3
   8093a:	bd08      	pop	{r3, pc}
   8093c:	400e1000 	.word	0x400e1000
   80940:	000808cd 	.word	0x000808cd

00080944 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80944:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80946:	210d      	movs	r1, #13
   80948:	4801      	ldr	r0, [pc, #4]	; (80950 <PIOC_Handler+0xc>)
   8094a:	4b02      	ldr	r3, [pc, #8]	; (80954 <PIOC_Handler+0x10>)
   8094c:	4798      	blx	r3
   8094e:	bd08      	pop	{r3, pc}
   80950:	400e1200 	.word	0x400e1200
   80954:	000808cd 	.word	0x000808cd

00080958 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80958:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   8095a:	210e      	movs	r1, #14
   8095c:	4801      	ldr	r0, [pc, #4]	; (80964 <PIOD_Handler+0xc>)
   8095e:	4b02      	ldr	r3, [pc, #8]	; (80968 <PIOD_Handler+0x10>)
   80960:	4798      	blx	r3
   80962:	bd08      	pop	{r3, pc}
   80964:	400e1400 	.word	0x400e1400
   80968:	000808cd 	.word	0x000808cd

0008096c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   8096c:	4a17      	ldr	r2, [pc, #92]	; (809cc <pmc_switch_mck_to_pllack+0x60>)
   8096e:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80970:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   80974:	4318      	orrs	r0, r3
   80976:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80978:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8097a:	f013 0f08 	tst.w	r3, #8
   8097e:	d10a      	bne.n	80996 <pmc_switch_mck_to_pllack+0x2a>
   80980:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80984:	4911      	ldr	r1, [pc, #68]	; (809cc <pmc_switch_mck_to_pllack+0x60>)
   80986:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80988:	f012 0f08 	tst.w	r2, #8
   8098c:	d103      	bne.n	80996 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8098e:	3b01      	subs	r3, #1
   80990:	d1f9      	bne.n	80986 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
   80992:	2001      	movs	r0, #1
   80994:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   80996:	4a0d      	ldr	r2, [pc, #52]	; (809cc <pmc_switch_mck_to_pllack+0x60>)
   80998:	6b13      	ldr	r3, [r2, #48]	; 0x30
   8099a:	f023 0303 	bic.w	r3, r3, #3
   8099e:	f043 0302 	orr.w	r3, r3, #2
   809a2:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   809a4:	6e93      	ldr	r3, [r2, #104]	; 0x68
   809a6:	f013 0f08 	tst.w	r3, #8
   809aa:	d10a      	bne.n	809c2 <pmc_switch_mck_to_pllack+0x56>
   809ac:	f44f 6300 	mov.w	r3, #2048	; 0x800
   809b0:	4906      	ldr	r1, [pc, #24]	; (809cc <pmc_switch_mck_to_pllack+0x60>)
   809b2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   809b4:	f012 0f08 	tst.w	r2, #8
   809b8:	d105      	bne.n	809c6 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   809ba:	3b01      	subs	r3, #1
   809bc:	d1f9      	bne.n	809b2 <pmc_switch_mck_to_pllack+0x46>
			return 1;
   809be:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   809c0:	4770      	bx	lr
	return 0;
   809c2:	2000      	movs	r0, #0
   809c4:	4770      	bx	lr
   809c6:	2000      	movs	r0, #0
   809c8:	4770      	bx	lr
   809ca:	bf00      	nop
   809cc:	400e0600 	.word	0x400e0600

000809d0 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   809d0:	b9c8      	cbnz	r0, 80a06 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   809d2:	4a11      	ldr	r2, [pc, #68]	; (80a18 <pmc_switch_mainck_to_xtal+0x48>)
   809d4:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   809d6:	0209      	lsls	r1, r1, #8
   809d8:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   809da:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   809de:	f023 0303 	bic.w	r3, r3, #3
   809e2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   809e6:	f043 0301 	orr.w	r3, r3, #1
   809ea:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   809ec:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   809ee:	6e93      	ldr	r3, [r2, #104]	; 0x68
   809f0:	f013 0f01 	tst.w	r3, #1
   809f4:	d0fb      	beq.n	809ee <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   809f6:	4a08      	ldr	r2, [pc, #32]	; (80a18 <pmc_switch_mainck_to_xtal+0x48>)
   809f8:	6a13      	ldr	r3, [r2, #32]
   809fa:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   809fe:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80a02:	6213      	str	r3, [r2, #32]
   80a04:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80a06:	4904      	ldr	r1, [pc, #16]	; (80a18 <pmc_switch_mainck_to_xtal+0x48>)
   80a08:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   80a0a:	4a04      	ldr	r2, [pc, #16]	; (80a1c <pmc_switch_mainck_to_xtal+0x4c>)
   80a0c:	401a      	ands	r2, r3
   80a0e:	4b04      	ldr	r3, [pc, #16]	; (80a20 <pmc_switch_mainck_to_xtal+0x50>)
   80a10:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80a12:	620b      	str	r3, [r1, #32]
   80a14:	4770      	bx	lr
   80a16:	bf00      	nop
   80a18:	400e0600 	.word	0x400e0600
   80a1c:	fec8fffc 	.word	0xfec8fffc
   80a20:	01370002 	.word	0x01370002

00080a24 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80a24:	4b02      	ldr	r3, [pc, #8]	; (80a30 <pmc_osc_is_ready_mainck+0xc>)
   80a26:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80a28:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80a2c:	4770      	bx	lr
   80a2e:	bf00      	nop
   80a30:	400e0600 	.word	0x400e0600

00080a34 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80a34:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80a38:	4b01      	ldr	r3, [pc, #4]	; (80a40 <pmc_disable_pllack+0xc>)
   80a3a:	629a      	str	r2, [r3, #40]	; 0x28
   80a3c:	4770      	bx	lr
   80a3e:	bf00      	nop
   80a40:	400e0600 	.word	0x400e0600

00080a44 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   80a44:	4b02      	ldr	r3, [pc, #8]	; (80a50 <pmc_is_locked_pllack+0xc>)
   80a46:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80a48:	f000 0002 	and.w	r0, r0, #2
   80a4c:	4770      	bx	lr
   80a4e:	bf00      	nop
   80a50:	400e0600 	.word	0x400e0600

00080a54 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80a54:	282c      	cmp	r0, #44	; 0x2c
   80a56:	d81e      	bhi.n	80a96 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
   80a58:	281f      	cmp	r0, #31
   80a5a:	d80c      	bhi.n	80a76 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80a5c:	4b11      	ldr	r3, [pc, #68]	; (80aa4 <pmc_enable_periph_clk+0x50>)
   80a5e:	699a      	ldr	r2, [r3, #24]
   80a60:	2301      	movs	r3, #1
   80a62:	4083      	lsls	r3, r0
   80a64:	4393      	bics	r3, r2
   80a66:	d018      	beq.n	80a9a <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
   80a68:	2301      	movs	r3, #1
   80a6a:	fa03 f000 	lsl.w	r0, r3, r0
   80a6e:	4b0d      	ldr	r3, [pc, #52]	; (80aa4 <pmc_enable_periph_clk+0x50>)
   80a70:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80a72:	2000      	movs	r0, #0
   80a74:	4770      	bx	lr
		ul_id -= 32;
   80a76:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80a78:	4b0a      	ldr	r3, [pc, #40]	; (80aa4 <pmc_enable_periph_clk+0x50>)
   80a7a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   80a7e:	2301      	movs	r3, #1
   80a80:	4083      	lsls	r3, r0
   80a82:	4393      	bics	r3, r2
   80a84:	d00b      	beq.n	80a9e <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
   80a86:	2301      	movs	r3, #1
   80a88:	fa03 f000 	lsl.w	r0, r3, r0
   80a8c:	4b05      	ldr	r3, [pc, #20]	; (80aa4 <pmc_enable_periph_clk+0x50>)
   80a8e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
   80a92:	2000      	movs	r0, #0
   80a94:	4770      	bx	lr
		return 1;
   80a96:	2001      	movs	r0, #1
   80a98:	4770      	bx	lr
	return 0;
   80a9a:	2000      	movs	r0, #0
   80a9c:	4770      	bx	lr
   80a9e:	2000      	movs	r0, #0
}
   80aa0:	4770      	bx	lr
   80aa2:	bf00      	nop
   80aa4:	400e0600 	.word	0x400e0600

00080aa8 <pmc_set_writeprotect>:
 *
 * \param ul_enable 1 to enable, 0 to disable.
 */
void pmc_set_writeprotect(uint32_t ul_enable)
{
	if (ul_enable) {
   80aa8:	b920      	cbnz	r0, 80ab4 <pmc_set_writeprotect+0xc>
		PMC->PMC_WPMR = PMC_WPMR_WPKEY_PASSWD | PMC_WPMR_WPEN;
	} else {
		PMC->PMC_WPMR = PMC_WPMR_WPKEY_PASSWD;
   80aaa:	4a05      	ldr	r2, [pc, #20]	; (80ac0 <pmc_set_writeprotect+0x18>)
   80aac:	4b05      	ldr	r3, [pc, #20]	; (80ac4 <pmc_set_writeprotect+0x1c>)
   80aae:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
   80ab2:	4770      	bx	lr
		PMC->PMC_WPMR = PMC_WPMR_WPKEY_PASSWD | PMC_WPMR_WPEN;
   80ab4:	4a04      	ldr	r2, [pc, #16]	; (80ac8 <pmc_set_writeprotect+0x20>)
   80ab6:	4b03      	ldr	r3, [pc, #12]	; (80ac4 <pmc_set_writeprotect+0x1c>)
   80ab8:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
   80abc:	4770      	bx	lr
   80abe:	bf00      	nop
   80ac0:	504d4300 	.word	0x504d4300
   80ac4:	400e0600 	.word	0x400e0600
   80ac8:	504d4301 	.word	0x504d4301

00080acc <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80acc:	e7fe      	b.n	80acc <Dummy_Handler>
	...

00080ad0 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80ad0:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80ad2:	4b1c      	ldr	r3, [pc, #112]	; (80b44 <Reset_Handler+0x74>)
   80ad4:	4a1c      	ldr	r2, [pc, #112]	; (80b48 <Reset_Handler+0x78>)
   80ad6:	429a      	cmp	r2, r3
   80ad8:	d010      	beq.n	80afc <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   80ada:	4b1c      	ldr	r3, [pc, #112]	; (80b4c <Reset_Handler+0x7c>)
   80adc:	4a19      	ldr	r2, [pc, #100]	; (80b44 <Reset_Handler+0x74>)
   80ade:	429a      	cmp	r2, r3
   80ae0:	d20c      	bcs.n	80afc <Reset_Handler+0x2c>
   80ae2:	3b01      	subs	r3, #1
   80ae4:	1a9b      	subs	r3, r3, r2
   80ae6:	f023 0303 	bic.w	r3, r3, #3
   80aea:	3304      	adds	r3, #4
   80aec:	4413      	add	r3, r2
   80aee:	4916      	ldr	r1, [pc, #88]	; (80b48 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   80af0:	f851 0b04 	ldr.w	r0, [r1], #4
   80af4:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   80af8:	429a      	cmp	r2, r3
   80afa:	d1f9      	bne.n	80af0 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80afc:	4b14      	ldr	r3, [pc, #80]	; (80b50 <Reset_Handler+0x80>)
   80afe:	4a15      	ldr	r2, [pc, #84]	; (80b54 <Reset_Handler+0x84>)
   80b00:	429a      	cmp	r2, r3
   80b02:	d20a      	bcs.n	80b1a <Reset_Handler+0x4a>
   80b04:	3b01      	subs	r3, #1
   80b06:	1a9b      	subs	r3, r3, r2
   80b08:	f023 0303 	bic.w	r3, r3, #3
   80b0c:	3304      	adds	r3, #4
   80b0e:	4413      	add	r3, r2
		*pDest++ = 0;
   80b10:	2100      	movs	r1, #0
   80b12:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   80b16:	4293      	cmp	r3, r2
   80b18:	d1fb      	bne.n	80b12 <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80b1a:	4b0f      	ldr	r3, [pc, #60]	; (80b58 <Reset_Handler+0x88>)
   80b1c:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   80b20:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   80b24:	490d      	ldr	r1, [pc, #52]	; (80b5c <Reset_Handler+0x8c>)
   80b26:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80b28:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   80b2c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   80b30:	d203      	bcs.n	80b3a <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80b32:	688b      	ldr	r3, [r1, #8]
   80b34:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   80b38:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80b3a:	4b09      	ldr	r3, [pc, #36]	; (80b60 <Reset_Handler+0x90>)
   80b3c:	4798      	blx	r3

	/* Branch to main function */
	main();
   80b3e:	4b09      	ldr	r3, [pc, #36]	; (80b64 <Reset_Handler+0x94>)
   80b40:	4798      	blx	r3
   80b42:	e7fe      	b.n	80b42 <Reset_Handler+0x72>
   80b44:	20070000 	.word	0x20070000
   80b48:	000846d4 	.word	0x000846d4
   80b4c:	20070af0 	.word	0x20070af0
   80b50:	20070c88 	.word	0x20070c88
   80b54:	20070af0 	.word	0x20070af0
   80b58:	00080000 	.word	0x00080000
   80b5c:	e000ed00 	.word	0xe000ed00
   80b60:	000816a1 	.word	0x000816a1
   80b64:	00080e19 	.word	0x00080e19

00080b68 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80b68:	4b3d      	ldr	r3, [pc, #244]	; (80c60 <SystemCoreClockUpdate+0xf8>)
   80b6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80b6c:	f003 0303 	and.w	r3, r3, #3
   80b70:	2b03      	cmp	r3, #3
   80b72:	d80e      	bhi.n	80b92 <SystemCoreClockUpdate+0x2a>
   80b74:	e8df f003 	tbb	[pc, r3]
   80b78:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80b7c:	4b39      	ldr	r3, [pc, #228]	; (80c64 <SystemCoreClockUpdate+0xfc>)
   80b7e:	695b      	ldr	r3, [r3, #20]
   80b80:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80b84:	bf14      	ite	ne
   80b86:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80b8a:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80b8e:	4b36      	ldr	r3, [pc, #216]	; (80c68 <SystemCoreClockUpdate+0x100>)
   80b90:	601a      	str	r2, [r3, #0]
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80b92:	4b33      	ldr	r3, [pc, #204]	; (80c60 <SystemCoreClockUpdate+0xf8>)
   80b94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80b96:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80b9a:	2b70      	cmp	r3, #112	; 0x70
   80b9c:	d057      	beq.n	80c4e <SystemCoreClockUpdate+0xe6>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   80b9e:	4b30      	ldr	r3, [pc, #192]	; (80c60 <SystemCoreClockUpdate+0xf8>)
   80ba0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80ba2:	4931      	ldr	r1, [pc, #196]	; (80c68 <SystemCoreClockUpdate+0x100>)
   80ba4:	f3c2 1202 	ubfx	r2, r2, #4, #3
   80ba8:	680b      	ldr	r3, [r1, #0]
   80baa:	40d3      	lsrs	r3, r2
   80bac:	600b      	str	r3, [r1, #0]
   80bae:	4770      	bx	lr
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80bb0:	4b2b      	ldr	r3, [pc, #172]	; (80c60 <SystemCoreClockUpdate+0xf8>)
   80bb2:	6a1b      	ldr	r3, [r3, #32]
   80bb4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80bb8:	d003      	beq.n	80bc2 <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80bba:	4a2c      	ldr	r2, [pc, #176]	; (80c6c <SystemCoreClockUpdate+0x104>)
   80bbc:	4b2a      	ldr	r3, [pc, #168]	; (80c68 <SystemCoreClockUpdate+0x100>)
   80bbe:	601a      	str	r2, [r3, #0]
   80bc0:	e7e7      	b.n	80b92 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80bc2:	4a2b      	ldr	r2, [pc, #172]	; (80c70 <SystemCoreClockUpdate+0x108>)
   80bc4:	4b28      	ldr	r3, [pc, #160]	; (80c68 <SystemCoreClockUpdate+0x100>)
   80bc6:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80bc8:	4b25      	ldr	r3, [pc, #148]	; (80c60 <SystemCoreClockUpdate+0xf8>)
   80bca:	6a1b      	ldr	r3, [r3, #32]
   80bcc:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80bd0:	2b10      	cmp	r3, #16
   80bd2:	d005      	beq.n	80be0 <SystemCoreClockUpdate+0x78>
   80bd4:	2b20      	cmp	r3, #32
   80bd6:	d1dc      	bne.n	80b92 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 3U;
   80bd8:	4a24      	ldr	r2, [pc, #144]	; (80c6c <SystemCoreClockUpdate+0x104>)
   80bda:	4b23      	ldr	r3, [pc, #140]	; (80c68 <SystemCoreClockUpdate+0x100>)
   80bdc:	601a      	str	r2, [r3, #0]
				break;
   80bde:	e7d8      	b.n	80b92 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 2U;
   80be0:	4a24      	ldr	r2, [pc, #144]	; (80c74 <SystemCoreClockUpdate+0x10c>)
   80be2:	4b21      	ldr	r3, [pc, #132]	; (80c68 <SystemCoreClockUpdate+0x100>)
   80be4:	601a      	str	r2, [r3, #0]
				break;
   80be6:	e7d4      	b.n	80b92 <SystemCoreClockUpdate+0x2a>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80be8:	4b1d      	ldr	r3, [pc, #116]	; (80c60 <SystemCoreClockUpdate+0xf8>)
   80bea:	6a1b      	ldr	r3, [r3, #32]
   80bec:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80bf0:	d00c      	beq.n	80c0c <SystemCoreClockUpdate+0xa4>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80bf2:	4a1e      	ldr	r2, [pc, #120]	; (80c6c <SystemCoreClockUpdate+0x104>)
   80bf4:	4b1c      	ldr	r3, [pc, #112]	; (80c68 <SystemCoreClockUpdate+0x100>)
   80bf6:	601a      	str	r2, [r3, #0]
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80bf8:	4b19      	ldr	r3, [pc, #100]	; (80c60 <SystemCoreClockUpdate+0xf8>)
   80bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80bfc:	f003 0303 	and.w	r3, r3, #3
   80c00:	2b02      	cmp	r3, #2
   80c02:	d016      	beq.n	80c32 <SystemCoreClockUpdate+0xca>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   80c04:	4a1c      	ldr	r2, [pc, #112]	; (80c78 <SystemCoreClockUpdate+0x110>)
   80c06:	4b18      	ldr	r3, [pc, #96]	; (80c68 <SystemCoreClockUpdate+0x100>)
   80c08:	601a      	str	r2, [r3, #0]
   80c0a:	e7c2      	b.n	80b92 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80c0c:	4a18      	ldr	r2, [pc, #96]	; (80c70 <SystemCoreClockUpdate+0x108>)
   80c0e:	4b16      	ldr	r3, [pc, #88]	; (80c68 <SystemCoreClockUpdate+0x100>)
   80c10:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80c12:	4b13      	ldr	r3, [pc, #76]	; (80c60 <SystemCoreClockUpdate+0xf8>)
   80c14:	6a1b      	ldr	r3, [r3, #32]
   80c16:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80c1a:	2b10      	cmp	r3, #16
   80c1c:	d005      	beq.n	80c2a <SystemCoreClockUpdate+0xc2>
   80c1e:	2b20      	cmp	r3, #32
   80c20:	d1ea      	bne.n	80bf8 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
   80c22:	4a12      	ldr	r2, [pc, #72]	; (80c6c <SystemCoreClockUpdate+0x104>)
   80c24:	4b10      	ldr	r3, [pc, #64]	; (80c68 <SystemCoreClockUpdate+0x100>)
   80c26:	601a      	str	r2, [r3, #0]
				break;
   80c28:	e7e6      	b.n	80bf8 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
   80c2a:	4a12      	ldr	r2, [pc, #72]	; (80c74 <SystemCoreClockUpdate+0x10c>)
   80c2c:	4b0e      	ldr	r3, [pc, #56]	; (80c68 <SystemCoreClockUpdate+0x100>)
   80c2e:	601a      	str	r2, [r3, #0]
				break;
   80c30:	e7e2      	b.n	80bf8 <SystemCoreClockUpdate+0x90>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80c32:	4a0b      	ldr	r2, [pc, #44]	; (80c60 <SystemCoreClockUpdate+0xf8>)
   80c34:	6a91      	ldr	r1, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80c36:	6a92      	ldr	r2, [r2, #40]	; 0x28
   80c38:	480b      	ldr	r0, [pc, #44]	; (80c68 <SystemCoreClockUpdate+0x100>)
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80c3a:	f3c1 410a 	ubfx	r1, r1, #16, #11
   80c3e:	6803      	ldr	r3, [r0, #0]
   80c40:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80c44:	b2d2      	uxtb	r2, r2
   80c46:	fbb3 f3f2 	udiv	r3, r3, r2
   80c4a:	6003      	str	r3, [r0, #0]
   80c4c:	e7a1      	b.n	80b92 <SystemCoreClockUpdate+0x2a>
		SystemCoreClock /= 3U;
   80c4e:	4a06      	ldr	r2, [pc, #24]	; (80c68 <SystemCoreClockUpdate+0x100>)
   80c50:	6813      	ldr	r3, [r2, #0]
   80c52:	490a      	ldr	r1, [pc, #40]	; (80c7c <SystemCoreClockUpdate+0x114>)
   80c54:	fba1 1303 	umull	r1, r3, r1, r3
   80c58:	085b      	lsrs	r3, r3, #1
   80c5a:	6013      	str	r3, [r2, #0]
   80c5c:	4770      	bx	lr
   80c5e:	bf00      	nop
   80c60:	400e0600 	.word	0x400e0600
   80c64:	400e1a10 	.word	0x400e1a10
   80c68:	2007013c 	.word	0x2007013c
   80c6c:	00b71b00 	.word	0x00b71b00
   80c70:	003d0900 	.word	0x003d0900
   80c74:	007a1200 	.word	0x007a1200
   80c78:	0e4e1c00 	.word	0x0e4e1c00
   80c7c:	aaaaaaab 	.word	0xaaaaaaab

00080c80 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80c80:	4b0a      	ldr	r3, [pc, #40]	; (80cac <_sbrk+0x2c>)
   80c82:	681b      	ldr	r3, [r3, #0]
   80c84:	b153      	cbz	r3, 80c9c <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   80c86:	4b09      	ldr	r3, [pc, #36]	; (80cac <_sbrk+0x2c>)
   80c88:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80c8a:	181a      	adds	r2, r3, r0
   80c8c:	4908      	ldr	r1, [pc, #32]	; (80cb0 <_sbrk+0x30>)
   80c8e:	4291      	cmp	r1, r2
   80c90:	db08      	blt.n	80ca4 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   80c92:	4610      	mov	r0, r2
   80c94:	4a05      	ldr	r2, [pc, #20]	; (80cac <_sbrk+0x2c>)
   80c96:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80c98:	4618      	mov	r0, r3
   80c9a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   80c9c:	4a05      	ldr	r2, [pc, #20]	; (80cb4 <_sbrk+0x34>)
   80c9e:	4b03      	ldr	r3, [pc, #12]	; (80cac <_sbrk+0x2c>)
   80ca0:	601a      	str	r2, [r3, #0]
   80ca2:	e7f0      	b.n	80c86 <_sbrk+0x6>
		return (caddr_t) -1;	
   80ca4:	f04f 30ff 	mov.w	r0, #4294967295
}
   80ca8:	4770      	bx	lr
   80caa:	bf00      	nop
   80cac:	20070c1c 	.word	0x20070c1c
   80cb0:	20087ffc 	.word	0x20087ffc
   80cb4:	20072c88 	.word	0x20072c88

00080cb8 <_close>:
}

extern int _close(int file)
{
	return -1;
}
   80cb8:	f04f 30ff 	mov.w	r0, #4294967295
   80cbc:	4770      	bx	lr

00080cbe <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   80cbe:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   80cc2:	604b      	str	r3, [r1, #4]

	return 0;
}
   80cc4:	2000      	movs	r0, #0
   80cc6:	4770      	bx	lr

00080cc8 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   80cc8:	2001      	movs	r0, #1
   80cca:	4770      	bx	lr

00080ccc <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   80ccc:	2000      	movs	r0, #0
   80cce:	4770      	bx	lr

00080cd0 <usart_serial_getchar>:
{
   80cd0:	b5f0      	push	{r4, r5, r6, r7, lr}
   80cd2:	b083      	sub	sp, #12
   80cd4:	4604      	mov	r4, r0
   80cd6:	460d      	mov	r5, r1
	uint32_t val = 0;
   80cd8:	2300      	movs	r3, #0
   80cda:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
   80cdc:	4b20      	ldr	r3, [pc, #128]	; (80d60 <usart_serial_getchar+0x90>)
   80cde:	4298      	cmp	r0, r3
   80ce0:	d00d      	beq.n	80cfe <usart_serial_getchar+0x2e>
	if (USART0 == p_usart) {
   80ce2:	4b20      	ldr	r3, [pc, #128]	; (80d64 <usart_serial_getchar+0x94>)
   80ce4:	4298      	cmp	r0, r3
   80ce6:	d012      	beq.n	80d0e <usart_serial_getchar+0x3e>
	if (USART1 == p_usart) {
   80ce8:	4b1f      	ldr	r3, [pc, #124]	; (80d68 <usart_serial_getchar+0x98>)
   80cea:	4298      	cmp	r0, r3
   80cec:	d019      	beq.n	80d22 <usart_serial_getchar+0x52>
	if (USART2 == p_usart) {
   80cee:	4b1f      	ldr	r3, [pc, #124]	; (80d6c <usart_serial_getchar+0x9c>)
   80cf0:	429c      	cmp	r4, r3
   80cf2:	d020      	beq.n	80d36 <usart_serial_getchar+0x66>
	if (USART3 == p_usart) {
   80cf4:	4b1e      	ldr	r3, [pc, #120]	; (80d70 <usart_serial_getchar+0xa0>)
   80cf6:	429c      	cmp	r4, r3
   80cf8:	d027      	beq.n	80d4a <usart_serial_getchar+0x7a>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   80cfa:	b003      	add	sp, #12
   80cfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
   80cfe:	461f      	mov	r7, r3
   80d00:	4e1c      	ldr	r6, [pc, #112]	; (80d74 <usart_serial_getchar+0xa4>)
   80d02:	4629      	mov	r1, r5
   80d04:	4638      	mov	r0, r7
   80d06:	47b0      	blx	r6
   80d08:	2800      	cmp	r0, #0
   80d0a:	d1fa      	bne.n	80d02 <usart_serial_getchar+0x32>
   80d0c:	e7ef      	b.n	80cee <usart_serial_getchar+0x1e>
		while (usart_read(p_usart, &val));
   80d0e:	461f      	mov	r7, r3
   80d10:	4e19      	ldr	r6, [pc, #100]	; (80d78 <usart_serial_getchar+0xa8>)
   80d12:	a901      	add	r1, sp, #4
   80d14:	4638      	mov	r0, r7
   80d16:	47b0      	blx	r6
   80d18:	2800      	cmp	r0, #0
   80d1a:	d1fa      	bne.n	80d12 <usart_serial_getchar+0x42>
		*data = (uint8_t)(val & 0xFF);
   80d1c:	9b01      	ldr	r3, [sp, #4]
   80d1e:	702b      	strb	r3, [r5, #0]
   80d20:	e7e8      	b.n	80cf4 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
   80d22:	461e      	mov	r6, r3
   80d24:	4c14      	ldr	r4, [pc, #80]	; (80d78 <usart_serial_getchar+0xa8>)
   80d26:	a901      	add	r1, sp, #4
   80d28:	4630      	mov	r0, r6
   80d2a:	47a0      	blx	r4
   80d2c:	2800      	cmp	r0, #0
   80d2e:	d1fa      	bne.n	80d26 <usart_serial_getchar+0x56>
		*data = (uint8_t)(val & 0xFF);
   80d30:	9b01      	ldr	r3, [sp, #4]
   80d32:	702b      	strb	r3, [r5, #0]
   80d34:	e7e1      	b.n	80cfa <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   80d36:	461e      	mov	r6, r3
   80d38:	4c0f      	ldr	r4, [pc, #60]	; (80d78 <usart_serial_getchar+0xa8>)
   80d3a:	a901      	add	r1, sp, #4
   80d3c:	4630      	mov	r0, r6
   80d3e:	47a0      	blx	r4
   80d40:	2800      	cmp	r0, #0
   80d42:	d1fa      	bne.n	80d3a <usart_serial_getchar+0x6a>
		*data = (uint8_t)(val & 0xFF);
   80d44:	9b01      	ldr	r3, [sp, #4]
   80d46:	702b      	strb	r3, [r5, #0]
   80d48:	e7d7      	b.n	80cfa <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   80d4a:	461e      	mov	r6, r3
   80d4c:	4c0a      	ldr	r4, [pc, #40]	; (80d78 <usart_serial_getchar+0xa8>)
   80d4e:	a901      	add	r1, sp, #4
   80d50:	4630      	mov	r0, r6
   80d52:	47a0      	blx	r4
   80d54:	2800      	cmp	r0, #0
   80d56:	d1fa      	bne.n	80d4e <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
   80d58:	9b01      	ldr	r3, [sp, #4]
   80d5a:	702b      	strb	r3, [r5, #0]
}
   80d5c:	e7cd      	b.n	80cfa <usart_serial_getchar+0x2a>
   80d5e:	bf00      	nop
   80d60:	400e0800 	.word	0x400e0800
   80d64:	40098000 	.word	0x40098000
   80d68:	4009c000 	.word	0x4009c000
   80d6c:	400a0000 	.word	0x400a0000
   80d70:	400a4000 	.word	0x400a4000
   80d74:	000805cb 	.word	0x000805cb
   80d78:	000803c5 	.word	0x000803c5

00080d7c <usart_serial_putchar>:
{
   80d7c:	b570      	push	{r4, r5, r6, lr}
   80d7e:	460c      	mov	r4, r1
	if (UART == (Uart*)p_usart) {
   80d80:	4b1e      	ldr	r3, [pc, #120]	; (80dfc <usart_serial_putchar+0x80>)
   80d82:	4298      	cmp	r0, r3
   80d84:	d00d      	beq.n	80da2 <usart_serial_putchar+0x26>
	if (USART0 == p_usart) {
   80d86:	4b1e      	ldr	r3, [pc, #120]	; (80e00 <usart_serial_putchar+0x84>)
   80d88:	4298      	cmp	r0, r3
   80d8a:	d013      	beq.n	80db4 <usart_serial_putchar+0x38>
	if (USART1 == p_usart) {
   80d8c:	4b1d      	ldr	r3, [pc, #116]	; (80e04 <usart_serial_putchar+0x88>)
   80d8e:	4298      	cmp	r0, r3
   80d90:	d019      	beq.n	80dc6 <usart_serial_putchar+0x4a>
	if (USART2 == p_usart) {
   80d92:	4b1d      	ldr	r3, [pc, #116]	; (80e08 <usart_serial_putchar+0x8c>)
   80d94:	4298      	cmp	r0, r3
   80d96:	d01f      	beq.n	80dd8 <usart_serial_putchar+0x5c>
	if (USART3 == p_usart) {
   80d98:	4b1c      	ldr	r3, [pc, #112]	; (80e0c <usart_serial_putchar+0x90>)
   80d9a:	4298      	cmp	r0, r3
   80d9c:	d025      	beq.n	80dea <usart_serial_putchar+0x6e>
	return 0;
   80d9e:	2000      	movs	r0, #0
}
   80da0:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
   80da2:	461e      	mov	r6, r3
   80da4:	4d1a      	ldr	r5, [pc, #104]	; (80e10 <usart_serial_putchar+0x94>)
   80da6:	4621      	mov	r1, r4
   80da8:	4630      	mov	r0, r6
   80daa:	47a8      	blx	r5
   80dac:	2800      	cmp	r0, #0
   80dae:	d1fa      	bne.n	80da6 <usart_serial_putchar+0x2a>
		return 1;
   80db0:	2001      	movs	r0, #1
   80db2:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80db4:	461e      	mov	r6, r3
   80db6:	4d17      	ldr	r5, [pc, #92]	; (80e14 <usart_serial_putchar+0x98>)
   80db8:	4621      	mov	r1, r4
   80dba:	4630      	mov	r0, r6
   80dbc:	47a8      	blx	r5
   80dbe:	2800      	cmp	r0, #0
   80dc0:	d1fa      	bne.n	80db8 <usart_serial_putchar+0x3c>
		return 1;
   80dc2:	2001      	movs	r0, #1
   80dc4:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80dc6:	461e      	mov	r6, r3
   80dc8:	4d12      	ldr	r5, [pc, #72]	; (80e14 <usart_serial_putchar+0x98>)
   80dca:	4621      	mov	r1, r4
   80dcc:	4630      	mov	r0, r6
   80dce:	47a8      	blx	r5
   80dd0:	2800      	cmp	r0, #0
   80dd2:	d1fa      	bne.n	80dca <usart_serial_putchar+0x4e>
		return 1;
   80dd4:	2001      	movs	r0, #1
   80dd6:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80dd8:	461e      	mov	r6, r3
   80dda:	4d0e      	ldr	r5, [pc, #56]	; (80e14 <usart_serial_putchar+0x98>)
   80ddc:	4621      	mov	r1, r4
   80dde:	4630      	mov	r0, r6
   80de0:	47a8      	blx	r5
   80de2:	2800      	cmp	r0, #0
   80de4:	d1fa      	bne.n	80ddc <usart_serial_putchar+0x60>
		return 1;
   80de6:	2001      	movs	r0, #1
   80de8:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80dea:	461e      	mov	r6, r3
   80dec:	4d09      	ldr	r5, [pc, #36]	; (80e14 <usart_serial_putchar+0x98>)
   80dee:	4621      	mov	r1, r4
   80df0:	4630      	mov	r0, r6
   80df2:	47a8      	blx	r5
   80df4:	2800      	cmp	r0, #0
   80df6:	d1fa      	bne.n	80dee <usart_serial_putchar+0x72>
		return 1;
   80df8:	2001      	movs	r0, #1
   80dfa:	bd70      	pop	{r4, r5, r6, pc}
   80dfc:	400e0800 	.word	0x400e0800
   80e00:	40098000 	.word	0x40098000
   80e04:	4009c000 	.word	0x4009c000
   80e08:	400a0000 	.word	0x400a0000
   80e0c:	400a4000 	.word	0x400a4000
   80e10:	000805bb 	.word	0x000805bb
   80e14:	000803b1 	.word	0x000803b1

00080e18 <main>:
	printf("Console ready\n");
	printf("=============\n");
}

int main (void)
{
   80e18:	b530      	push	{r4, r5, lr}
   80e1a:	b085      	sub	sp, #20
	sysclk_init();
   80e1c:	4b19      	ldr	r3, [pc, #100]	; (80e84 <main+0x6c>)
   80e1e:	4798      	blx	r3
	board_init();
   80e20:	4b19      	ldr	r3, [pc, #100]	; (80e88 <main+0x70>)
   80e22:	4798      	blx	r3
   80e24:	2008      	movs	r0, #8
   80e26:	4d19      	ldr	r5, [pc, #100]	; (80e8c <main+0x74>)
   80e28:	47a8      	blx	r5
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
   80e2a:	4c19      	ldr	r4, [pc, #100]	; (80e90 <main+0x78>)
   80e2c:	4b19      	ldr	r3, [pc, #100]	; (80e94 <main+0x7c>)
   80e2e:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   80e30:	4a19      	ldr	r2, [pc, #100]	; (80e98 <main+0x80>)
   80e32:	4b1a      	ldr	r3, [pc, #104]	; (80e9c <main+0x84>)
   80e34:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   80e36:	4a1a      	ldr	r2, [pc, #104]	; (80ea0 <main+0x88>)
   80e38:	4b1a      	ldr	r3, [pc, #104]	; (80ea4 <main+0x8c>)
   80e3a:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   80e3c:	4b1a      	ldr	r3, [pc, #104]	; (80ea8 <main+0x90>)
   80e3e:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
   80e40:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   80e44:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
   80e46:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80e4a:	9303      	str	r3, [sp, #12]
   80e4c:	2008      	movs	r0, #8
   80e4e:	47a8      	blx	r5
		uart_init((Uart*)p_usart, &uart_settings);
   80e50:	a901      	add	r1, sp, #4
   80e52:	4620      	mov	r0, r4
   80e54:	4b15      	ldr	r3, [pc, #84]	; (80eac <main+0x94>)
   80e56:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   80e58:	4d15      	ldr	r5, [pc, #84]	; (80eb0 <main+0x98>)
   80e5a:	682b      	ldr	r3, [r5, #0]
   80e5c:	2100      	movs	r1, #0
   80e5e:	6898      	ldr	r0, [r3, #8]
   80e60:	4c14      	ldr	r4, [pc, #80]	; (80eb4 <main+0x9c>)
   80e62:	47a0      	blx	r4
	setbuf(stdin, NULL);
   80e64:	682b      	ldr	r3, [r5, #0]
   80e66:	2100      	movs	r1, #0
   80e68:	6858      	ldr	r0, [r3, #4]
   80e6a:	47a0      	blx	r4
	printf("Console ready\n");
   80e6c:	4812      	ldr	r0, [pc, #72]	; (80eb8 <main+0xa0>)
   80e6e:	4c13      	ldr	r4, [pc, #76]	; (80ebc <main+0xa4>)
   80e70:	47a0      	blx	r4
	printf("=============\n");
   80e72:	4813      	ldr	r0, [pc, #76]	; (80ec0 <main+0xa8>)
   80e74:	47a0      	blx	r4
	configureConsole();
	
	init_motors();
   80e76:	4b13      	ldr	r3, [pc, #76]	; (80ec4 <main+0xac>)
   80e78:	4798      	blx	r3
	int target_speed = 50;
	
	// Choose test case from suite for any kind of robot testing
	test_case_1(target_speed);
   80e7a:	2032      	movs	r0, #50	; 0x32
   80e7c:	4b12      	ldr	r3, [pc, #72]	; (80ec8 <main+0xb0>)
   80e7e:	4798      	blx	r3
   80e80:	e7fe      	b.n	80e80 <main+0x68>
   80e82:	bf00      	nop
   80e84:	000805dd 	.word	0x000805dd
   80e88:	00080641 	.word	0x00080641
   80e8c:	00080a55 	.word	0x00080a55
   80e90:	400e0800 	.word	0x400e0800
   80e94:	20070c5c 	.word	0x20070c5c
   80e98:	00080d7d 	.word	0x00080d7d
   80e9c:	20070c58 	.word	0x20070c58
   80ea0:	00080cd1 	.word	0x00080cd1
   80ea4:	20070c54 	.word	0x20070c54
   80ea8:	0501bd00 	.word	0x0501bd00
   80eac:	00080585 	.word	0x00080585
   80eb0:	20070140 	.word	0x20070140
   80eb4:	000817b5 	.word	0x000817b5
   80eb8:	00084520 	.word	0x00084520
   80ebc:	000816f1 	.word	0x000816f1
   80ec0:	00084530 	.word	0x00084530
   80ec4:	00080161 	.word	0x00080161
   80ec8:	00080351 	.word	0x00080351

00080ecc <__aeabi_drsub>:
   80ecc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   80ed0:	e002      	b.n	80ed8 <__adddf3>
   80ed2:	bf00      	nop

00080ed4 <__aeabi_dsub>:
   80ed4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00080ed8 <__adddf3>:
   80ed8:	b530      	push	{r4, r5, lr}
   80eda:	ea4f 0441 	mov.w	r4, r1, lsl #1
   80ede:	ea4f 0543 	mov.w	r5, r3, lsl #1
   80ee2:	ea94 0f05 	teq	r4, r5
   80ee6:	bf08      	it	eq
   80ee8:	ea90 0f02 	teqeq	r0, r2
   80eec:	bf1f      	itttt	ne
   80eee:	ea54 0c00 	orrsne.w	ip, r4, r0
   80ef2:	ea55 0c02 	orrsne.w	ip, r5, r2
   80ef6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   80efa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   80efe:	f000 80e2 	beq.w	810c6 <__adddf3+0x1ee>
   80f02:	ea4f 5454 	mov.w	r4, r4, lsr #21
   80f06:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   80f0a:	bfb8      	it	lt
   80f0c:	426d      	neglt	r5, r5
   80f0e:	dd0c      	ble.n	80f2a <__adddf3+0x52>
   80f10:	442c      	add	r4, r5
   80f12:	ea80 0202 	eor.w	r2, r0, r2
   80f16:	ea81 0303 	eor.w	r3, r1, r3
   80f1a:	ea82 0000 	eor.w	r0, r2, r0
   80f1e:	ea83 0101 	eor.w	r1, r3, r1
   80f22:	ea80 0202 	eor.w	r2, r0, r2
   80f26:	ea81 0303 	eor.w	r3, r1, r3
   80f2a:	2d36      	cmp	r5, #54	; 0x36
   80f2c:	bf88      	it	hi
   80f2e:	bd30      	pophi	{r4, r5, pc}
   80f30:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   80f34:	ea4f 3101 	mov.w	r1, r1, lsl #12
   80f38:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   80f3c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   80f40:	d002      	beq.n	80f48 <__adddf3+0x70>
   80f42:	4240      	negs	r0, r0
   80f44:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80f48:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   80f4c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   80f50:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   80f54:	d002      	beq.n	80f5c <__adddf3+0x84>
   80f56:	4252      	negs	r2, r2
   80f58:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   80f5c:	ea94 0f05 	teq	r4, r5
   80f60:	f000 80a7 	beq.w	810b2 <__adddf3+0x1da>
   80f64:	f1a4 0401 	sub.w	r4, r4, #1
   80f68:	f1d5 0e20 	rsbs	lr, r5, #32
   80f6c:	db0d      	blt.n	80f8a <__adddf3+0xb2>
   80f6e:	fa02 fc0e 	lsl.w	ip, r2, lr
   80f72:	fa22 f205 	lsr.w	r2, r2, r5
   80f76:	1880      	adds	r0, r0, r2
   80f78:	f141 0100 	adc.w	r1, r1, #0
   80f7c:	fa03 f20e 	lsl.w	r2, r3, lr
   80f80:	1880      	adds	r0, r0, r2
   80f82:	fa43 f305 	asr.w	r3, r3, r5
   80f86:	4159      	adcs	r1, r3
   80f88:	e00e      	b.n	80fa8 <__adddf3+0xd0>
   80f8a:	f1a5 0520 	sub.w	r5, r5, #32
   80f8e:	f10e 0e20 	add.w	lr, lr, #32
   80f92:	2a01      	cmp	r2, #1
   80f94:	fa03 fc0e 	lsl.w	ip, r3, lr
   80f98:	bf28      	it	cs
   80f9a:	f04c 0c02 	orrcs.w	ip, ip, #2
   80f9e:	fa43 f305 	asr.w	r3, r3, r5
   80fa2:	18c0      	adds	r0, r0, r3
   80fa4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   80fa8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80fac:	d507      	bpl.n	80fbe <__adddf3+0xe6>
   80fae:	f04f 0e00 	mov.w	lr, #0
   80fb2:	f1dc 0c00 	rsbs	ip, ip, #0
   80fb6:	eb7e 0000 	sbcs.w	r0, lr, r0
   80fba:	eb6e 0101 	sbc.w	r1, lr, r1
   80fbe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   80fc2:	d31b      	bcc.n	80ffc <__adddf3+0x124>
   80fc4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   80fc8:	d30c      	bcc.n	80fe4 <__adddf3+0x10c>
   80fca:	0849      	lsrs	r1, r1, #1
   80fcc:	ea5f 0030 	movs.w	r0, r0, rrx
   80fd0:	ea4f 0c3c 	mov.w	ip, ip, rrx
   80fd4:	f104 0401 	add.w	r4, r4, #1
   80fd8:	ea4f 5244 	mov.w	r2, r4, lsl #21
   80fdc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   80fe0:	f080 809a 	bcs.w	81118 <__adddf3+0x240>
   80fe4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   80fe8:	bf08      	it	eq
   80fea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   80fee:	f150 0000 	adcs.w	r0, r0, #0
   80ff2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   80ff6:	ea41 0105 	orr.w	r1, r1, r5
   80ffa:	bd30      	pop	{r4, r5, pc}
   80ffc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   81000:	4140      	adcs	r0, r0
   81002:	eb41 0101 	adc.w	r1, r1, r1
   81006:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8100a:	f1a4 0401 	sub.w	r4, r4, #1
   8100e:	d1e9      	bne.n	80fe4 <__adddf3+0x10c>
   81010:	f091 0f00 	teq	r1, #0
   81014:	bf04      	itt	eq
   81016:	4601      	moveq	r1, r0
   81018:	2000      	moveq	r0, #0
   8101a:	fab1 f381 	clz	r3, r1
   8101e:	bf08      	it	eq
   81020:	3320      	addeq	r3, #32
   81022:	f1a3 030b 	sub.w	r3, r3, #11
   81026:	f1b3 0220 	subs.w	r2, r3, #32
   8102a:	da0c      	bge.n	81046 <__adddf3+0x16e>
   8102c:	320c      	adds	r2, #12
   8102e:	dd08      	ble.n	81042 <__adddf3+0x16a>
   81030:	f102 0c14 	add.w	ip, r2, #20
   81034:	f1c2 020c 	rsb	r2, r2, #12
   81038:	fa01 f00c 	lsl.w	r0, r1, ip
   8103c:	fa21 f102 	lsr.w	r1, r1, r2
   81040:	e00c      	b.n	8105c <__adddf3+0x184>
   81042:	f102 0214 	add.w	r2, r2, #20
   81046:	bfd8      	it	le
   81048:	f1c2 0c20 	rsble	ip, r2, #32
   8104c:	fa01 f102 	lsl.w	r1, r1, r2
   81050:	fa20 fc0c 	lsr.w	ip, r0, ip
   81054:	bfdc      	itt	le
   81056:	ea41 010c 	orrle.w	r1, r1, ip
   8105a:	4090      	lslle	r0, r2
   8105c:	1ae4      	subs	r4, r4, r3
   8105e:	bfa2      	ittt	ge
   81060:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   81064:	4329      	orrge	r1, r5
   81066:	bd30      	popge	{r4, r5, pc}
   81068:	ea6f 0404 	mvn.w	r4, r4
   8106c:	3c1f      	subs	r4, #31
   8106e:	da1c      	bge.n	810aa <__adddf3+0x1d2>
   81070:	340c      	adds	r4, #12
   81072:	dc0e      	bgt.n	81092 <__adddf3+0x1ba>
   81074:	f104 0414 	add.w	r4, r4, #20
   81078:	f1c4 0220 	rsb	r2, r4, #32
   8107c:	fa20 f004 	lsr.w	r0, r0, r4
   81080:	fa01 f302 	lsl.w	r3, r1, r2
   81084:	ea40 0003 	orr.w	r0, r0, r3
   81088:	fa21 f304 	lsr.w	r3, r1, r4
   8108c:	ea45 0103 	orr.w	r1, r5, r3
   81090:	bd30      	pop	{r4, r5, pc}
   81092:	f1c4 040c 	rsb	r4, r4, #12
   81096:	f1c4 0220 	rsb	r2, r4, #32
   8109a:	fa20 f002 	lsr.w	r0, r0, r2
   8109e:	fa01 f304 	lsl.w	r3, r1, r4
   810a2:	ea40 0003 	orr.w	r0, r0, r3
   810a6:	4629      	mov	r1, r5
   810a8:	bd30      	pop	{r4, r5, pc}
   810aa:	fa21 f004 	lsr.w	r0, r1, r4
   810ae:	4629      	mov	r1, r5
   810b0:	bd30      	pop	{r4, r5, pc}
   810b2:	f094 0f00 	teq	r4, #0
   810b6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   810ba:	bf06      	itte	eq
   810bc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   810c0:	3401      	addeq	r4, #1
   810c2:	3d01      	subne	r5, #1
   810c4:	e74e      	b.n	80f64 <__adddf3+0x8c>
   810c6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   810ca:	bf18      	it	ne
   810cc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   810d0:	d029      	beq.n	81126 <__adddf3+0x24e>
   810d2:	ea94 0f05 	teq	r4, r5
   810d6:	bf08      	it	eq
   810d8:	ea90 0f02 	teqeq	r0, r2
   810dc:	d005      	beq.n	810ea <__adddf3+0x212>
   810de:	ea54 0c00 	orrs.w	ip, r4, r0
   810e2:	bf04      	itt	eq
   810e4:	4619      	moveq	r1, r3
   810e6:	4610      	moveq	r0, r2
   810e8:	bd30      	pop	{r4, r5, pc}
   810ea:	ea91 0f03 	teq	r1, r3
   810ee:	bf1e      	ittt	ne
   810f0:	2100      	movne	r1, #0
   810f2:	2000      	movne	r0, #0
   810f4:	bd30      	popne	{r4, r5, pc}
   810f6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   810fa:	d105      	bne.n	81108 <__adddf3+0x230>
   810fc:	0040      	lsls	r0, r0, #1
   810fe:	4149      	adcs	r1, r1
   81100:	bf28      	it	cs
   81102:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   81106:	bd30      	pop	{r4, r5, pc}
   81108:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   8110c:	bf3c      	itt	cc
   8110e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   81112:	bd30      	popcc	{r4, r5, pc}
   81114:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   81118:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   8111c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   81120:	f04f 0000 	mov.w	r0, #0
   81124:	bd30      	pop	{r4, r5, pc}
   81126:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   8112a:	bf1a      	itte	ne
   8112c:	4619      	movne	r1, r3
   8112e:	4610      	movne	r0, r2
   81130:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   81134:	bf1c      	itt	ne
   81136:	460b      	movne	r3, r1
   81138:	4602      	movne	r2, r0
   8113a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8113e:	bf06      	itte	eq
   81140:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   81144:	ea91 0f03 	teqeq	r1, r3
   81148:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   8114c:	bd30      	pop	{r4, r5, pc}
   8114e:	bf00      	nop

00081150 <__aeabi_ui2d>:
   81150:	f090 0f00 	teq	r0, #0
   81154:	bf04      	itt	eq
   81156:	2100      	moveq	r1, #0
   81158:	4770      	bxeq	lr
   8115a:	b530      	push	{r4, r5, lr}
   8115c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   81160:	f104 0432 	add.w	r4, r4, #50	; 0x32
   81164:	f04f 0500 	mov.w	r5, #0
   81168:	f04f 0100 	mov.w	r1, #0
   8116c:	e750      	b.n	81010 <__adddf3+0x138>
   8116e:	bf00      	nop

00081170 <__aeabi_i2d>:
   81170:	f090 0f00 	teq	r0, #0
   81174:	bf04      	itt	eq
   81176:	2100      	moveq	r1, #0
   81178:	4770      	bxeq	lr
   8117a:	b530      	push	{r4, r5, lr}
   8117c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   81180:	f104 0432 	add.w	r4, r4, #50	; 0x32
   81184:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   81188:	bf48      	it	mi
   8118a:	4240      	negmi	r0, r0
   8118c:	f04f 0100 	mov.w	r1, #0
   81190:	e73e      	b.n	81010 <__adddf3+0x138>
   81192:	bf00      	nop

00081194 <__aeabi_f2d>:
   81194:	0042      	lsls	r2, r0, #1
   81196:	ea4f 01e2 	mov.w	r1, r2, asr #3
   8119a:	ea4f 0131 	mov.w	r1, r1, rrx
   8119e:	ea4f 7002 	mov.w	r0, r2, lsl #28
   811a2:	bf1f      	itttt	ne
   811a4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   811a8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   811ac:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   811b0:	4770      	bxne	lr
   811b2:	f092 0f00 	teq	r2, #0
   811b6:	bf14      	ite	ne
   811b8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   811bc:	4770      	bxeq	lr
   811be:	b530      	push	{r4, r5, lr}
   811c0:	f44f 7460 	mov.w	r4, #896	; 0x380
   811c4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   811c8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   811cc:	e720      	b.n	81010 <__adddf3+0x138>
   811ce:	bf00      	nop

000811d0 <__aeabi_ul2d>:
   811d0:	ea50 0201 	orrs.w	r2, r0, r1
   811d4:	bf08      	it	eq
   811d6:	4770      	bxeq	lr
   811d8:	b530      	push	{r4, r5, lr}
   811da:	f04f 0500 	mov.w	r5, #0
   811de:	e00a      	b.n	811f6 <__aeabi_l2d+0x16>

000811e0 <__aeabi_l2d>:
   811e0:	ea50 0201 	orrs.w	r2, r0, r1
   811e4:	bf08      	it	eq
   811e6:	4770      	bxeq	lr
   811e8:	b530      	push	{r4, r5, lr}
   811ea:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   811ee:	d502      	bpl.n	811f6 <__aeabi_l2d+0x16>
   811f0:	4240      	negs	r0, r0
   811f2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   811f6:	f44f 6480 	mov.w	r4, #1024	; 0x400
   811fa:	f104 0432 	add.w	r4, r4, #50	; 0x32
   811fe:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   81202:	f43f aedc 	beq.w	80fbe <__adddf3+0xe6>
   81206:	f04f 0203 	mov.w	r2, #3
   8120a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   8120e:	bf18      	it	ne
   81210:	3203      	addne	r2, #3
   81212:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   81216:	bf18      	it	ne
   81218:	3203      	addne	r2, #3
   8121a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   8121e:	f1c2 0320 	rsb	r3, r2, #32
   81222:	fa00 fc03 	lsl.w	ip, r0, r3
   81226:	fa20 f002 	lsr.w	r0, r0, r2
   8122a:	fa01 fe03 	lsl.w	lr, r1, r3
   8122e:	ea40 000e 	orr.w	r0, r0, lr
   81232:	fa21 f102 	lsr.w	r1, r1, r2
   81236:	4414      	add	r4, r2
   81238:	e6c1      	b.n	80fbe <__adddf3+0xe6>
   8123a:	bf00      	nop

0008123c <__aeabi_dmul>:
   8123c:	b570      	push	{r4, r5, r6, lr}
   8123e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   81242:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   81246:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8124a:	bf1d      	ittte	ne
   8124c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   81250:	ea94 0f0c 	teqne	r4, ip
   81254:	ea95 0f0c 	teqne	r5, ip
   81258:	f000 f8de 	bleq	81418 <__aeabi_dmul+0x1dc>
   8125c:	442c      	add	r4, r5
   8125e:	ea81 0603 	eor.w	r6, r1, r3
   81262:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   81266:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   8126a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   8126e:	bf18      	it	ne
   81270:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   81274:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81278:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   8127c:	d038      	beq.n	812f0 <__aeabi_dmul+0xb4>
   8127e:	fba0 ce02 	umull	ip, lr, r0, r2
   81282:	f04f 0500 	mov.w	r5, #0
   81286:	fbe1 e502 	umlal	lr, r5, r1, r2
   8128a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   8128e:	fbe0 e503 	umlal	lr, r5, r0, r3
   81292:	f04f 0600 	mov.w	r6, #0
   81296:	fbe1 5603 	umlal	r5, r6, r1, r3
   8129a:	f09c 0f00 	teq	ip, #0
   8129e:	bf18      	it	ne
   812a0:	f04e 0e01 	orrne.w	lr, lr, #1
   812a4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   812a8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   812ac:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   812b0:	d204      	bcs.n	812bc <__aeabi_dmul+0x80>
   812b2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   812b6:	416d      	adcs	r5, r5
   812b8:	eb46 0606 	adc.w	r6, r6, r6
   812bc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   812c0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   812c4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   812c8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   812cc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   812d0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   812d4:	bf88      	it	hi
   812d6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   812da:	d81e      	bhi.n	8131a <__aeabi_dmul+0xde>
   812dc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   812e0:	bf08      	it	eq
   812e2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   812e6:	f150 0000 	adcs.w	r0, r0, #0
   812ea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   812ee:	bd70      	pop	{r4, r5, r6, pc}
   812f0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   812f4:	ea46 0101 	orr.w	r1, r6, r1
   812f8:	ea40 0002 	orr.w	r0, r0, r2
   812fc:	ea81 0103 	eor.w	r1, r1, r3
   81300:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   81304:	bfc2      	ittt	gt
   81306:	ebd4 050c 	rsbsgt	r5, r4, ip
   8130a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8130e:	bd70      	popgt	{r4, r5, r6, pc}
   81310:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81314:	f04f 0e00 	mov.w	lr, #0
   81318:	3c01      	subs	r4, #1
   8131a:	f300 80ab 	bgt.w	81474 <__aeabi_dmul+0x238>
   8131e:	f114 0f36 	cmn.w	r4, #54	; 0x36
   81322:	bfde      	ittt	le
   81324:	2000      	movle	r0, #0
   81326:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   8132a:	bd70      	pople	{r4, r5, r6, pc}
   8132c:	f1c4 0400 	rsb	r4, r4, #0
   81330:	3c20      	subs	r4, #32
   81332:	da35      	bge.n	813a0 <__aeabi_dmul+0x164>
   81334:	340c      	adds	r4, #12
   81336:	dc1b      	bgt.n	81370 <__aeabi_dmul+0x134>
   81338:	f104 0414 	add.w	r4, r4, #20
   8133c:	f1c4 0520 	rsb	r5, r4, #32
   81340:	fa00 f305 	lsl.w	r3, r0, r5
   81344:	fa20 f004 	lsr.w	r0, r0, r4
   81348:	fa01 f205 	lsl.w	r2, r1, r5
   8134c:	ea40 0002 	orr.w	r0, r0, r2
   81350:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   81354:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   81358:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8135c:	fa21 f604 	lsr.w	r6, r1, r4
   81360:	eb42 0106 	adc.w	r1, r2, r6
   81364:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   81368:	bf08      	it	eq
   8136a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8136e:	bd70      	pop	{r4, r5, r6, pc}
   81370:	f1c4 040c 	rsb	r4, r4, #12
   81374:	f1c4 0520 	rsb	r5, r4, #32
   81378:	fa00 f304 	lsl.w	r3, r0, r4
   8137c:	fa20 f005 	lsr.w	r0, r0, r5
   81380:	fa01 f204 	lsl.w	r2, r1, r4
   81384:	ea40 0002 	orr.w	r0, r0, r2
   81388:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8138c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   81390:	f141 0100 	adc.w	r1, r1, #0
   81394:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   81398:	bf08      	it	eq
   8139a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8139e:	bd70      	pop	{r4, r5, r6, pc}
   813a0:	f1c4 0520 	rsb	r5, r4, #32
   813a4:	fa00 f205 	lsl.w	r2, r0, r5
   813a8:	ea4e 0e02 	orr.w	lr, lr, r2
   813ac:	fa20 f304 	lsr.w	r3, r0, r4
   813b0:	fa01 f205 	lsl.w	r2, r1, r5
   813b4:	ea43 0302 	orr.w	r3, r3, r2
   813b8:	fa21 f004 	lsr.w	r0, r1, r4
   813bc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   813c0:	fa21 f204 	lsr.w	r2, r1, r4
   813c4:	ea20 0002 	bic.w	r0, r0, r2
   813c8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   813cc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   813d0:	bf08      	it	eq
   813d2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   813d6:	bd70      	pop	{r4, r5, r6, pc}
   813d8:	f094 0f00 	teq	r4, #0
   813dc:	d10f      	bne.n	813fe <__aeabi_dmul+0x1c2>
   813de:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   813e2:	0040      	lsls	r0, r0, #1
   813e4:	eb41 0101 	adc.w	r1, r1, r1
   813e8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   813ec:	bf08      	it	eq
   813ee:	3c01      	subeq	r4, #1
   813f0:	d0f7      	beq.n	813e2 <__aeabi_dmul+0x1a6>
   813f2:	ea41 0106 	orr.w	r1, r1, r6
   813f6:	f095 0f00 	teq	r5, #0
   813fa:	bf18      	it	ne
   813fc:	4770      	bxne	lr
   813fe:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   81402:	0052      	lsls	r2, r2, #1
   81404:	eb43 0303 	adc.w	r3, r3, r3
   81408:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   8140c:	bf08      	it	eq
   8140e:	3d01      	subeq	r5, #1
   81410:	d0f7      	beq.n	81402 <__aeabi_dmul+0x1c6>
   81412:	ea43 0306 	orr.w	r3, r3, r6
   81416:	4770      	bx	lr
   81418:	ea94 0f0c 	teq	r4, ip
   8141c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   81420:	bf18      	it	ne
   81422:	ea95 0f0c 	teqne	r5, ip
   81426:	d00c      	beq.n	81442 <__aeabi_dmul+0x206>
   81428:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   8142c:	bf18      	it	ne
   8142e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   81432:	d1d1      	bne.n	813d8 <__aeabi_dmul+0x19c>
   81434:	ea81 0103 	eor.w	r1, r1, r3
   81438:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8143c:	f04f 0000 	mov.w	r0, #0
   81440:	bd70      	pop	{r4, r5, r6, pc}
   81442:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81446:	bf06      	itte	eq
   81448:	4610      	moveq	r0, r2
   8144a:	4619      	moveq	r1, r3
   8144c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   81450:	d019      	beq.n	81486 <__aeabi_dmul+0x24a>
   81452:	ea94 0f0c 	teq	r4, ip
   81456:	d102      	bne.n	8145e <__aeabi_dmul+0x222>
   81458:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   8145c:	d113      	bne.n	81486 <__aeabi_dmul+0x24a>
   8145e:	ea95 0f0c 	teq	r5, ip
   81462:	d105      	bne.n	81470 <__aeabi_dmul+0x234>
   81464:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   81468:	bf1c      	itt	ne
   8146a:	4610      	movne	r0, r2
   8146c:	4619      	movne	r1, r3
   8146e:	d10a      	bne.n	81486 <__aeabi_dmul+0x24a>
   81470:	ea81 0103 	eor.w	r1, r1, r3
   81474:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81478:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8147c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   81480:	f04f 0000 	mov.w	r0, #0
   81484:	bd70      	pop	{r4, r5, r6, pc}
   81486:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8148a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8148e:	bd70      	pop	{r4, r5, r6, pc}

00081490 <__aeabi_ddiv>:
   81490:	b570      	push	{r4, r5, r6, lr}
   81492:	f04f 0cff 	mov.w	ip, #255	; 0xff
   81496:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   8149a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8149e:	bf1d      	ittte	ne
   814a0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   814a4:	ea94 0f0c 	teqne	r4, ip
   814a8:	ea95 0f0c 	teqne	r5, ip
   814ac:	f000 f8a7 	bleq	815fe <__aeabi_ddiv+0x16e>
   814b0:	eba4 0405 	sub.w	r4, r4, r5
   814b4:	ea81 0e03 	eor.w	lr, r1, r3
   814b8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   814bc:	ea4f 3101 	mov.w	r1, r1, lsl #12
   814c0:	f000 8088 	beq.w	815d4 <__aeabi_ddiv+0x144>
   814c4:	ea4f 3303 	mov.w	r3, r3, lsl #12
   814c8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   814cc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   814d0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   814d4:	ea4f 2202 	mov.w	r2, r2, lsl #8
   814d8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   814dc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   814e0:	ea4f 2600 	mov.w	r6, r0, lsl #8
   814e4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   814e8:	429d      	cmp	r5, r3
   814ea:	bf08      	it	eq
   814ec:	4296      	cmpeq	r6, r2
   814ee:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   814f2:	f504 7440 	add.w	r4, r4, #768	; 0x300
   814f6:	d202      	bcs.n	814fe <__aeabi_ddiv+0x6e>
   814f8:	085b      	lsrs	r3, r3, #1
   814fa:	ea4f 0232 	mov.w	r2, r2, rrx
   814fe:	1ab6      	subs	r6, r6, r2
   81500:	eb65 0503 	sbc.w	r5, r5, r3
   81504:	085b      	lsrs	r3, r3, #1
   81506:	ea4f 0232 	mov.w	r2, r2, rrx
   8150a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   8150e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   81512:	ebb6 0e02 	subs.w	lr, r6, r2
   81516:	eb75 0e03 	sbcs.w	lr, r5, r3
   8151a:	bf22      	ittt	cs
   8151c:	1ab6      	subcs	r6, r6, r2
   8151e:	4675      	movcs	r5, lr
   81520:	ea40 000c 	orrcs.w	r0, r0, ip
   81524:	085b      	lsrs	r3, r3, #1
   81526:	ea4f 0232 	mov.w	r2, r2, rrx
   8152a:	ebb6 0e02 	subs.w	lr, r6, r2
   8152e:	eb75 0e03 	sbcs.w	lr, r5, r3
   81532:	bf22      	ittt	cs
   81534:	1ab6      	subcs	r6, r6, r2
   81536:	4675      	movcs	r5, lr
   81538:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   8153c:	085b      	lsrs	r3, r3, #1
   8153e:	ea4f 0232 	mov.w	r2, r2, rrx
   81542:	ebb6 0e02 	subs.w	lr, r6, r2
   81546:	eb75 0e03 	sbcs.w	lr, r5, r3
   8154a:	bf22      	ittt	cs
   8154c:	1ab6      	subcs	r6, r6, r2
   8154e:	4675      	movcs	r5, lr
   81550:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   81554:	085b      	lsrs	r3, r3, #1
   81556:	ea4f 0232 	mov.w	r2, r2, rrx
   8155a:	ebb6 0e02 	subs.w	lr, r6, r2
   8155e:	eb75 0e03 	sbcs.w	lr, r5, r3
   81562:	bf22      	ittt	cs
   81564:	1ab6      	subcs	r6, r6, r2
   81566:	4675      	movcs	r5, lr
   81568:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   8156c:	ea55 0e06 	orrs.w	lr, r5, r6
   81570:	d018      	beq.n	815a4 <__aeabi_ddiv+0x114>
   81572:	ea4f 1505 	mov.w	r5, r5, lsl #4
   81576:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   8157a:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8157e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   81582:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   81586:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   8158a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8158e:	d1c0      	bne.n	81512 <__aeabi_ddiv+0x82>
   81590:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81594:	d10b      	bne.n	815ae <__aeabi_ddiv+0x11e>
   81596:	ea41 0100 	orr.w	r1, r1, r0
   8159a:	f04f 0000 	mov.w	r0, #0
   8159e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   815a2:	e7b6      	b.n	81512 <__aeabi_ddiv+0x82>
   815a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   815a8:	bf04      	itt	eq
   815aa:	4301      	orreq	r1, r0
   815ac:	2000      	moveq	r0, #0
   815ae:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   815b2:	bf88      	it	hi
   815b4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   815b8:	f63f aeaf 	bhi.w	8131a <__aeabi_dmul+0xde>
   815bc:	ebb5 0c03 	subs.w	ip, r5, r3
   815c0:	bf04      	itt	eq
   815c2:	ebb6 0c02 	subseq.w	ip, r6, r2
   815c6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   815ca:	f150 0000 	adcs.w	r0, r0, #0
   815ce:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   815d2:	bd70      	pop	{r4, r5, r6, pc}
   815d4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   815d8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   815dc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   815e0:	bfc2      	ittt	gt
   815e2:	ebd4 050c 	rsbsgt	r5, r4, ip
   815e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   815ea:	bd70      	popgt	{r4, r5, r6, pc}
   815ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   815f0:	f04f 0e00 	mov.w	lr, #0
   815f4:	3c01      	subs	r4, #1
   815f6:	e690      	b.n	8131a <__aeabi_dmul+0xde>
   815f8:	ea45 0e06 	orr.w	lr, r5, r6
   815fc:	e68d      	b.n	8131a <__aeabi_dmul+0xde>
   815fe:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   81602:	ea94 0f0c 	teq	r4, ip
   81606:	bf08      	it	eq
   81608:	ea95 0f0c 	teqeq	r5, ip
   8160c:	f43f af3b 	beq.w	81486 <__aeabi_dmul+0x24a>
   81610:	ea94 0f0c 	teq	r4, ip
   81614:	d10a      	bne.n	8162c <__aeabi_ddiv+0x19c>
   81616:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8161a:	f47f af34 	bne.w	81486 <__aeabi_dmul+0x24a>
   8161e:	ea95 0f0c 	teq	r5, ip
   81622:	f47f af25 	bne.w	81470 <__aeabi_dmul+0x234>
   81626:	4610      	mov	r0, r2
   81628:	4619      	mov	r1, r3
   8162a:	e72c      	b.n	81486 <__aeabi_dmul+0x24a>
   8162c:	ea95 0f0c 	teq	r5, ip
   81630:	d106      	bne.n	81640 <__aeabi_ddiv+0x1b0>
   81632:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   81636:	f43f aefd 	beq.w	81434 <__aeabi_dmul+0x1f8>
   8163a:	4610      	mov	r0, r2
   8163c:	4619      	mov	r1, r3
   8163e:	e722      	b.n	81486 <__aeabi_dmul+0x24a>
   81640:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81644:	bf18      	it	ne
   81646:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8164a:	f47f aec5 	bne.w	813d8 <__aeabi_dmul+0x19c>
   8164e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   81652:	f47f af0d 	bne.w	81470 <__aeabi_dmul+0x234>
   81656:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   8165a:	f47f aeeb 	bne.w	81434 <__aeabi_dmul+0x1f8>
   8165e:	e712      	b.n	81486 <__aeabi_dmul+0x24a>

00081660 <__aeabi_d2uiz>:
   81660:	004a      	lsls	r2, r1, #1
   81662:	d211      	bcs.n	81688 <__aeabi_d2uiz+0x28>
   81664:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   81668:	d211      	bcs.n	8168e <__aeabi_d2uiz+0x2e>
   8166a:	d50d      	bpl.n	81688 <__aeabi_d2uiz+0x28>
   8166c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   81670:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   81674:	d40e      	bmi.n	81694 <__aeabi_d2uiz+0x34>
   81676:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   8167a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8167e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   81682:	fa23 f002 	lsr.w	r0, r3, r2
   81686:	4770      	bx	lr
   81688:	f04f 0000 	mov.w	r0, #0
   8168c:	4770      	bx	lr
   8168e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   81692:	d102      	bne.n	8169a <__aeabi_d2uiz+0x3a>
   81694:	f04f 30ff 	mov.w	r0, #4294967295
   81698:	4770      	bx	lr
   8169a:	f04f 0000 	mov.w	r0, #0
   8169e:	4770      	bx	lr

000816a0 <__libc_init_array>:
   816a0:	b570      	push	{r4, r5, r6, lr}
   816a2:	4e0f      	ldr	r6, [pc, #60]	; (816e0 <__libc_init_array+0x40>)
   816a4:	4d0f      	ldr	r5, [pc, #60]	; (816e4 <__libc_init_array+0x44>)
   816a6:	1b76      	subs	r6, r6, r5
   816a8:	10b6      	asrs	r6, r6, #2
   816aa:	bf18      	it	ne
   816ac:	2400      	movne	r4, #0
   816ae:	d005      	beq.n	816bc <__libc_init_array+0x1c>
   816b0:	3401      	adds	r4, #1
   816b2:	f855 3b04 	ldr.w	r3, [r5], #4
   816b6:	4798      	blx	r3
   816b8:	42a6      	cmp	r6, r4
   816ba:	d1f9      	bne.n	816b0 <__libc_init_array+0x10>
   816bc:	4e0a      	ldr	r6, [pc, #40]	; (816e8 <__libc_init_array+0x48>)
   816be:	4d0b      	ldr	r5, [pc, #44]	; (816ec <__libc_init_array+0x4c>)
   816c0:	f002 fff2 	bl	846a8 <_init>
   816c4:	1b76      	subs	r6, r6, r5
   816c6:	10b6      	asrs	r6, r6, #2
   816c8:	bf18      	it	ne
   816ca:	2400      	movne	r4, #0
   816cc:	d006      	beq.n	816dc <__libc_init_array+0x3c>
   816ce:	3401      	adds	r4, #1
   816d0:	f855 3b04 	ldr.w	r3, [r5], #4
   816d4:	4798      	blx	r3
   816d6:	42a6      	cmp	r6, r4
   816d8:	d1f9      	bne.n	816ce <__libc_init_array+0x2e>
   816da:	bd70      	pop	{r4, r5, r6, pc}
   816dc:	bd70      	pop	{r4, r5, r6, pc}
   816de:	bf00      	nop
   816e0:	000846b4 	.word	0x000846b4
   816e4:	000846b4 	.word	0x000846b4
   816e8:	000846bc 	.word	0x000846bc
   816ec:	000846b4 	.word	0x000846b4

000816f0 <iprintf>:
   816f0:	b40f      	push	{r0, r1, r2, r3}
   816f2:	b510      	push	{r4, lr}
   816f4:	4b07      	ldr	r3, [pc, #28]	; (81714 <iprintf+0x24>)
   816f6:	b082      	sub	sp, #8
   816f8:	ac04      	add	r4, sp, #16
   816fa:	f854 2b04 	ldr.w	r2, [r4], #4
   816fe:	6818      	ldr	r0, [r3, #0]
   81700:	4623      	mov	r3, r4
   81702:	6881      	ldr	r1, [r0, #8]
   81704:	9401      	str	r4, [sp, #4]
   81706:	f000 f965 	bl	819d4 <_vfiprintf_r>
   8170a:	b002      	add	sp, #8
   8170c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81710:	b004      	add	sp, #16
   81712:	4770      	bx	lr
   81714:	20070140 	.word	0x20070140

00081718 <memset>:
   81718:	b470      	push	{r4, r5, r6}
   8171a:	0786      	lsls	r6, r0, #30
   8171c:	d046      	beq.n	817ac <memset+0x94>
   8171e:	1e54      	subs	r4, r2, #1
   81720:	2a00      	cmp	r2, #0
   81722:	d041      	beq.n	817a8 <memset+0x90>
   81724:	b2ca      	uxtb	r2, r1
   81726:	4603      	mov	r3, r0
   81728:	e002      	b.n	81730 <memset+0x18>
   8172a:	f114 34ff 	adds.w	r4, r4, #4294967295
   8172e:	d33b      	bcc.n	817a8 <memset+0x90>
   81730:	f803 2b01 	strb.w	r2, [r3], #1
   81734:	079d      	lsls	r5, r3, #30
   81736:	d1f8      	bne.n	8172a <memset+0x12>
   81738:	2c03      	cmp	r4, #3
   8173a:	d92e      	bls.n	8179a <memset+0x82>
   8173c:	b2cd      	uxtb	r5, r1
   8173e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   81742:	2c0f      	cmp	r4, #15
   81744:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   81748:	d919      	bls.n	8177e <memset+0x66>
   8174a:	4626      	mov	r6, r4
   8174c:	f103 0210 	add.w	r2, r3, #16
   81750:	3e10      	subs	r6, #16
   81752:	2e0f      	cmp	r6, #15
   81754:	f842 5c10 	str.w	r5, [r2, #-16]
   81758:	f842 5c0c 	str.w	r5, [r2, #-12]
   8175c:	f842 5c08 	str.w	r5, [r2, #-8]
   81760:	f842 5c04 	str.w	r5, [r2, #-4]
   81764:	f102 0210 	add.w	r2, r2, #16
   81768:	d8f2      	bhi.n	81750 <memset+0x38>
   8176a:	f1a4 0210 	sub.w	r2, r4, #16
   8176e:	f022 020f 	bic.w	r2, r2, #15
   81772:	f004 040f 	and.w	r4, r4, #15
   81776:	3210      	adds	r2, #16
   81778:	2c03      	cmp	r4, #3
   8177a:	4413      	add	r3, r2
   8177c:	d90d      	bls.n	8179a <memset+0x82>
   8177e:	461e      	mov	r6, r3
   81780:	4622      	mov	r2, r4
   81782:	3a04      	subs	r2, #4
   81784:	2a03      	cmp	r2, #3
   81786:	f846 5b04 	str.w	r5, [r6], #4
   8178a:	d8fa      	bhi.n	81782 <memset+0x6a>
   8178c:	1f22      	subs	r2, r4, #4
   8178e:	f022 0203 	bic.w	r2, r2, #3
   81792:	3204      	adds	r2, #4
   81794:	4413      	add	r3, r2
   81796:	f004 0403 	and.w	r4, r4, #3
   8179a:	b12c      	cbz	r4, 817a8 <memset+0x90>
   8179c:	b2c9      	uxtb	r1, r1
   8179e:	441c      	add	r4, r3
   817a0:	f803 1b01 	strb.w	r1, [r3], #1
   817a4:	429c      	cmp	r4, r3
   817a6:	d1fb      	bne.n	817a0 <memset+0x88>
   817a8:	bc70      	pop	{r4, r5, r6}
   817aa:	4770      	bx	lr
   817ac:	4614      	mov	r4, r2
   817ae:	4603      	mov	r3, r0
   817b0:	e7c2      	b.n	81738 <memset+0x20>
   817b2:	bf00      	nop

000817b4 <setbuf>:
   817b4:	2900      	cmp	r1, #0
   817b6:	bf0c      	ite	eq
   817b8:	2202      	moveq	r2, #2
   817ba:	2200      	movne	r2, #0
   817bc:	f44f 6380 	mov.w	r3, #1024	; 0x400
   817c0:	f000 b800 	b.w	817c4 <setvbuf>

000817c4 <setvbuf>:
   817c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   817c8:	4d61      	ldr	r5, [pc, #388]	; (81950 <setvbuf+0x18c>)
   817ca:	b083      	sub	sp, #12
   817cc:	682d      	ldr	r5, [r5, #0]
   817ce:	4604      	mov	r4, r0
   817d0:	460f      	mov	r7, r1
   817d2:	4690      	mov	r8, r2
   817d4:	461e      	mov	r6, r3
   817d6:	b115      	cbz	r5, 817de <setvbuf+0x1a>
   817d8:	6bab      	ldr	r3, [r5, #56]	; 0x38
   817da:	2b00      	cmp	r3, #0
   817dc:	d064      	beq.n	818a8 <setvbuf+0xe4>
   817de:	f1b8 0f02 	cmp.w	r8, #2
   817e2:	d006      	beq.n	817f2 <setvbuf+0x2e>
   817e4:	f1b8 0f01 	cmp.w	r8, #1
   817e8:	f200 809f 	bhi.w	8192a <setvbuf+0x166>
   817ec:	2e00      	cmp	r6, #0
   817ee:	f2c0 809c 	blt.w	8192a <setvbuf+0x166>
   817f2:	6e63      	ldr	r3, [r4, #100]	; 0x64
   817f4:	07d8      	lsls	r0, r3, #31
   817f6:	d534      	bpl.n	81862 <setvbuf+0x9e>
   817f8:	4621      	mov	r1, r4
   817fa:	4628      	mov	r0, r5
   817fc:	f001 f882 	bl	82904 <_fflush_r>
   81800:	6b21      	ldr	r1, [r4, #48]	; 0x30
   81802:	b141      	cbz	r1, 81816 <setvbuf+0x52>
   81804:	f104 0340 	add.w	r3, r4, #64	; 0x40
   81808:	4299      	cmp	r1, r3
   8180a:	d002      	beq.n	81812 <setvbuf+0x4e>
   8180c:	4628      	mov	r0, r5
   8180e:	f001 f9f7 	bl	82c00 <_free_r>
   81812:	2300      	movs	r3, #0
   81814:	6323      	str	r3, [r4, #48]	; 0x30
   81816:	2200      	movs	r2, #0
   81818:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8181c:	61a2      	str	r2, [r4, #24]
   8181e:	6062      	str	r2, [r4, #4]
   81820:	061a      	lsls	r2, r3, #24
   81822:	d43a      	bmi.n	8189a <setvbuf+0xd6>
   81824:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   81828:	f023 0303 	bic.w	r3, r3, #3
   8182c:	f1b8 0f02 	cmp.w	r8, #2
   81830:	81a3      	strh	r3, [r4, #12]
   81832:	d01d      	beq.n	81870 <setvbuf+0xac>
   81834:	ab01      	add	r3, sp, #4
   81836:	466a      	mov	r2, sp
   81838:	4621      	mov	r1, r4
   8183a:	4628      	mov	r0, r5
   8183c:	f001 fc7e 	bl	8313c <__swhatbuf_r>
   81840:	89a3      	ldrh	r3, [r4, #12]
   81842:	4318      	orrs	r0, r3
   81844:	81a0      	strh	r0, [r4, #12]
   81846:	2e00      	cmp	r6, #0
   81848:	d132      	bne.n	818b0 <setvbuf+0xec>
   8184a:	9e00      	ldr	r6, [sp, #0]
   8184c:	4630      	mov	r0, r6
   8184e:	f001 fced 	bl	8322c <malloc>
   81852:	4607      	mov	r7, r0
   81854:	2800      	cmp	r0, #0
   81856:	d06b      	beq.n	81930 <setvbuf+0x16c>
   81858:	89a3      	ldrh	r3, [r4, #12]
   8185a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   8185e:	81a3      	strh	r3, [r4, #12]
   81860:	e028      	b.n	818b4 <setvbuf+0xf0>
   81862:	89a3      	ldrh	r3, [r4, #12]
   81864:	0599      	lsls	r1, r3, #22
   81866:	d4c7      	bmi.n	817f8 <setvbuf+0x34>
   81868:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8186a:	f001 fc63 	bl	83134 <__retarget_lock_acquire_recursive>
   8186e:	e7c3      	b.n	817f8 <setvbuf+0x34>
   81870:	2500      	movs	r5, #0
   81872:	2600      	movs	r6, #0
   81874:	2001      	movs	r0, #1
   81876:	6e61      	ldr	r1, [r4, #100]	; 0x64
   81878:	f104 0243 	add.w	r2, r4, #67	; 0x43
   8187c:	f043 0302 	orr.w	r3, r3, #2
   81880:	60a6      	str	r6, [r4, #8]
   81882:	07ce      	lsls	r6, r1, #31
   81884:	81a3      	strh	r3, [r4, #12]
   81886:	6160      	str	r0, [r4, #20]
   81888:	6022      	str	r2, [r4, #0]
   8188a:	6122      	str	r2, [r4, #16]
   8188c:	d401      	bmi.n	81892 <setvbuf+0xce>
   8188e:	0598      	lsls	r0, r3, #22
   81890:	d53e      	bpl.n	81910 <setvbuf+0x14c>
   81892:	4628      	mov	r0, r5
   81894:	b003      	add	sp, #12
   81896:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8189a:	6921      	ldr	r1, [r4, #16]
   8189c:	4628      	mov	r0, r5
   8189e:	f001 f9af 	bl	82c00 <_free_r>
   818a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   818a6:	e7bd      	b.n	81824 <setvbuf+0x60>
   818a8:	4628      	mov	r0, r5
   818aa:	f001 f883 	bl	829b4 <__sinit>
   818ae:	e796      	b.n	817de <setvbuf+0x1a>
   818b0:	2f00      	cmp	r7, #0
   818b2:	d0cb      	beq.n	8184c <setvbuf+0x88>
   818b4:	6bab      	ldr	r3, [r5, #56]	; 0x38
   818b6:	2b00      	cmp	r3, #0
   818b8:	d033      	beq.n	81922 <setvbuf+0x15e>
   818ba:	9b00      	ldr	r3, [sp, #0]
   818bc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   818c0:	429e      	cmp	r6, r3
   818c2:	bf1c      	itt	ne
   818c4:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
   818c8:	81a2      	strhne	r2, [r4, #12]
   818ca:	f1b8 0f01 	cmp.w	r8, #1
   818ce:	bf04      	itt	eq
   818d0:	f042 0201 	orreq.w	r2, r2, #1
   818d4:	81a2      	strheq	r2, [r4, #12]
   818d6:	b292      	uxth	r2, r2
   818d8:	f012 0308 	ands.w	r3, r2, #8
   818dc:	6027      	str	r7, [r4, #0]
   818de:	6127      	str	r7, [r4, #16]
   818e0:	6166      	str	r6, [r4, #20]
   818e2:	d00e      	beq.n	81902 <setvbuf+0x13e>
   818e4:	07d1      	lsls	r1, r2, #31
   818e6:	d51a      	bpl.n	8191e <setvbuf+0x15a>
   818e8:	2300      	movs	r3, #0
   818ea:	6e65      	ldr	r5, [r4, #100]	; 0x64
   818ec:	4276      	negs	r6, r6
   818ee:	f015 0501 	ands.w	r5, r5, #1
   818f2:	61a6      	str	r6, [r4, #24]
   818f4:	60a3      	str	r3, [r4, #8]
   818f6:	d009      	beq.n	8190c <setvbuf+0x148>
   818f8:	2500      	movs	r5, #0
   818fa:	4628      	mov	r0, r5
   818fc:	b003      	add	sp, #12
   818fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   81902:	60a3      	str	r3, [r4, #8]
   81904:	6e65      	ldr	r5, [r4, #100]	; 0x64
   81906:	f015 0501 	ands.w	r5, r5, #1
   8190a:	d1f5      	bne.n	818f8 <setvbuf+0x134>
   8190c:	0593      	lsls	r3, r2, #22
   8190e:	d4c0      	bmi.n	81892 <setvbuf+0xce>
   81910:	6da0      	ldr	r0, [r4, #88]	; 0x58
   81912:	f001 fc11 	bl	83138 <__retarget_lock_release_recursive>
   81916:	4628      	mov	r0, r5
   81918:	b003      	add	sp, #12
   8191a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8191e:	60a6      	str	r6, [r4, #8]
   81920:	e7f0      	b.n	81904 <setvbuf+0x140>
   81922:	4628      	mov	r0, r5
   81924:	f001 f846 	bl	829b4 <__sinit>
   81928:	e7c7      	b.n	818ba <setvbuf+0xf6>
   8192a:	f04f 35ff 	mov.w	r5, #4294967295
   8192e:	e7b0      	b.n	81892 <setvbuf+0xce>
   81930:	f8dd 9000 	ldr.w	r9, [sp]
   81934:	45b1      	cmp	r9, r6
   81936:	d004      	beq.n	81942 <setvbuf+0x17e>
   81938:	4648      	mov	r0, r9
   8193a:	f001 fc77 	bl	8322c <malloc>
   8193e:	4607      	mov	r7, r0
   81940:	b920      	cbnz	r0, 8194c <setvbuf+0x188>
   81942:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   81946:	f04f 35ff 	mov.w	r5, #4294967295
   8194a:	e792      	b.n	81872 <setvbuf+0xae>
   8194c:	464e      	mov	r6, r9
   8194e:	e783      	b.n	81858 <setvbuf+0x94>
   81950:	20070140 	.word	0x20070140

00081954 <__sprint_r.part.0>:
   81954:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81958:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   8195a:	4693      	mov	fp, r2
   8195c:	049c      	lsls	r4, r3, #18
   8195e:	d52f      	bpl.n	819c0 <__sprint_r.part.0+0x6c>
   81960:	6893      	ldr	r3, [r2, #8]
   81962:	6812      	ldr	r2, [r2, #0]
   81964:	b353      	cbz	r3, 819bc <__sprint_r.part.0+0x68>
   81966:	460e      	mov	r6, r1
   81968:	4607      	mov	r7, r0
   8196a:	f102 0908 	add.w	r9, r2, #8
   8196e:	e919 0420 	ldmdb	r9, {r5, sl}
   81972:	ea5f 089a 	movs.w	r8, sl, lsr #2
   81976:	d017      	beq.n	819a8 <__sprint_r.part.0+0x54>
   81978:	2400      	movs	r4, #0
   8197a:	3d04      	subs	r5, #4
   8197c:	e001      	b.n	81982 <__sprint_r.part.0+0x2e>
   8197e:	45a0      	cmp	r8, r4
   81980:	d010      	beq.n	819a4 <__sprint_r.part.0+0x50>
   81982:	4632      	mov	r2, r6
   81984:	f855 1f04 	ldr.w	r1, [r5, #4]!
   81988:	4638      	mov	r0, r7
   8198a:	f001 f8b5 	bl	82af8 <_fputwc_r>
   8198e:	1c43      	adds	r3, r0, #1
   81990:	f104 0401 	add.w	r4, r4, #1
   81994:	d1f3      	bne.n	8197e <__sprint_r.part.0+0x2a>
   81996:	2300      	movs	r3, #0
   81998:	f8cb 3008 	str.w	r3, [fp, #8]
   8199c:	f8cb 3004 	str.w	r3, [fp, #4]
   819a0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   819a4:	f8db 3008 	ldr.w	r3, [fp, #8]
   819a8:	f02a 0a03 	bic.w	sl, sl, #3
   819ac:	eba3 030a 	sub.w	r3, r3, sl
   819b0:	f8cb 3008 	str.w	r3, [fp, #8]
   819b4:	f109 0908 	add.w	r9, r9, #8
   819b8:	2b00      	cmp	r3, #0
   819ba:	d1d8      	bne.n	8196e <__sprint_r.part.0+0x1a>
   819bc:	2000      	movs	r0, #0
   819be:	e7ea      	b.n	81996 <__sprint_r.part.0+0x42>
   819c0:	f001 fa04 	bl	82dcc <__sfvwrite_r>
   819c4:	2300      	movs	r3, #0
   819c6:	f8cb 3008 	str.w	r3, [fp, #8]
   819ca:	f8cb 3004 	str.w	r3, [fp, #4]
   819ce:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   819d2:	bf00      	nop

000819d4 <_vfiprintf_r>:
   819d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   819d8:	b0ad      	sub	sp, #180	; 0xb4
   819da:	461d      	mov	r5, r3
   819dc:	468b      	mov	fp, r1
   819de:	4690      	mov	r8, r2
   819e0:	9307      	str	r3, [sp, #28]
   819e2:	9006      	str	r0, [sp, #24]
   819e4:	b118      	cbz	r0, 819ee <_vfiprintf_r+0x1a>
   819e6:	6b83      	ldr	r3, [r0, #56]	; 0x38
   819e8:	2b00      	cmp	r3, #0
   819ea:	f000 80f3 	beq.w	81bd4 <_vfiprintf_r+0x200>
   819ee:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   819f2:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
   819f6:	07df      	lsls	r7, r3, #31
   819f8:	b281      	uxth	r1, r0
   819fa:	d402      	bmi.n	81a02 <_vfiprintf_r+0x2e>
   819fc:	058e      	lsls	r6, r1, #22
   819fe:	f140 80fc 	bpl.w	81bfa <_vfiprintf_r+0x226>
   81a02:	048c      	lsls	r4, r1, #18
   81a04:	d40a      	bmi.n	81a1c <_vfiprintf_r+0x48>
   81a06:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   81a0a:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
   81a0e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   81a12:	f8ab 100c 	strh.w	r1, [fp, #12]
   81a16:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
   81a1a:	b289      	uxth	r1, r1
   81a1c:	0708      	lsls	r0, r1, #28
   81a1e:	f140 80b3 	bpl.w	81b88 <_vfiprintf_r+0x1b4>
   81a22:	f8db 3010 	ldr.w	r3, [fp, #16]
   81a26:	2b00      	cmp	r3, #0
   81a28:	f000 80ae 	beq.w	81b88 <_vfiprintf_r+0x1b4>
   81a2c:	f001 031a 	and.w	r3, r1, #26
   81a30:	2b0a      	cmp	r3, #10
   81a32:	f000 80b5 	beq.w	81ba0 <_vfiprintf_r+0x1cc>
   81a36:	2300      	movs	r3, #0
   81a38:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
   81a3c:	46d1      	mov	r9, sl
   81a3e:	930b      	str	r3, [sp, #44]	; 0x2c
   81a40:	9303      	str	r3, [sp, #12]
   81a42:	9311      	str	r3, [sp, #68]	; 0x44
   81a44:	9310      	str	r3, [sp, #64]	; 0x40
   81a46:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
   81a4a:	f8cd b010 	str.w	fp, [sp, #16]
   81a4e:	f898 3000 	ldrb.w	r3, [r8]
   81a52:	4644      	mov	r4, r8
   81a54:	b1fb      	cbz	r3, 81a96 <_vfiprintf_r+0xc2>
   81a56:	2b25      	cmp	r3, #37	; 0x25
   81a58:	d102      	bne.n	81a60 <_vfiprintf_r+0x8c>
   81a5a:	e01c      	b.n	81a96 <_vfiprintf_r+0xc2>
   81a5c:	2b25      	cmp	r3, #37	; 0x25
   81a5e:	d003      	beq.n	81a68 <_vfiprintf_r+0x94>
   81a60:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   81a64:	2b00      	cmp	r3, #0
   81a66:	d1f9      	bne.n	81a5c <_vfiprintf_r+0x88>
   81a68:	eba4 0508 	sub.w	r5, r4, r8
   81a6c:	b19d      	cbz	r5, 81a96 <_vfiprintf_r+0xc2>
   81a6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81a70:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81a72:	3301      	adds	r3, #1
   81a74:	442a      	add	r2, r5
   81a76:	2b07      	cmp	r3, #7
   81a78:	f8c9 8000 	str.w	r8, [r9]
   81a7c:	f8c9 5004 	str.w	r5, [r9, #4]
   81a80:	9211      	str	r2, [sp, #68]	; 0x44
   81a82:	9310      	str	r3, [sp, #64]	; 0x40
   81a84:	dd7a      	ble.n	81b7c <_vfiprintf_r+0x1a8>
   81a86:	2a00      	cmp	r2, #0
   81a88:	f040 84b5 	bne.w	823f6 <_vfiprintf_r+0xa22>
   81a8c:	46d1      	mov	r9, sl
   81a8e:	9b03      	ldr	r3, [sp, #12]
   81a90:	9210      	str	r2, [sp, #64]	; 0x40
   81a92:	442b      	add	r3, r5
   81a94:	9303      	str	r3, [sp, #12]
   81a96:	7823      	ldrb	r3, [r4, #0]
   81a98:	2b00      	cmp	r3, #0
   81a9a:	f000 83e5 	beq.w	82268 <_vfiprintf_r+0x894>
   81a9e:	2000      	movs	r0, #0
   81aa0:	f04f 0300 	mov.w	r3, #0
   81aa4:	f104 0801 	add.w	r8, r4, #1
   81aa8:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   81aac:	7862      	ldrb	r2, [r4, #1]
   81aae:	4606      	mov	r6, r0
   81ab0:	4605      	mov	r5, r0
   81ab2:	4603      	mov	r3, r0
   81ab4:	f04f 34ff 	mov.w	r4, #4294967295
   81ab8:	f108 0801 	add.w	r8, r8, #1
   81abc:	f1a2 0120 	sub.w	r1, r2, #32
   81ac0:	2958      	cmp	r1, #88	; 0x58
   81ac2:	f200 82d9 	bhi.w	82078 <_vfiprintf_r+0x6a4>
   81ac6:	e8df f011 	tbh	[pc, r1, lsl #1]
   81aca:	0228      	.short	0x0228
   81acc:	02d702d7 	.word	0x02d702d7
   81ad0:	02d70230 	.word	0x02d70230
   81ad4:	02d702d7 	.word	0x02d702d7
   81ad8:	02d702d7 	.word	0x02d702d7
   81adc:	00a002d7 	.word	0x00a002d7
   81ae0:	02d70288 	.word	0x02d70288
   81ae4:	02b800a8 	.word	0x02b800a8
   81ae8:	01a602d7 	.word	0x01a602d7
   81aec:	01ab01ab 	.word	0x01ab01ab
   81af0:	01ab01ab 	.word	0x01ab01ab
   81af4:	01ab01ab 	.word	0x01ab01ab
   81af8:	01ab01ab 	.word	0x01ab01ab
   81afc:	02d701ab 	.word	0x02d701ab
   81b00:	02d702d7 	.word	0x02d702d7
   81b04:	02d702d7 	.word	0x02d702d7
   81b08:	02d702d7 	.word	0x02d702d7
   81b0c:	02d702d7 	.word	0x02d702d7
   81b10:	01b902d7 	.word	0x01b902d7
   81b14:	02d702d7 	.word	0x02d702d7
   81b18:	02d702d7 	.word	0x02d702d7
   81b1c:	02d702d7 	.word	0x02d702d7
   81b20:	02d702d7 	.word	0x02d702d7
   81b24:	02d702d7 	.word	0x02d702d7
   81b28:	02d7019e 	.word	0x02d7019e
   81b2c:	02d702d7 	.word	0x02d702d7
   81b30:	02d702d7 	.word	0x02d702d7
   81b34:	02d701a2 	.word	0x02d701a2
   81b38:	025a02d7 	.word	0x025a02d7
   81b3c:	02d702d7 	.word	0x02d702d7
   81b40:	02d702d7 	.word	0x02d702d7
   81b44:	02d702d7 	.word	0x02d702d7
   81b48:	02d702d7 	.word	0x02d702d7
   81b4c:	02d702d7 	.word	0x02d702d7
   81b50:	02220261 	.word	0x02220261
   81b54:	02d702d7 	.word	0x02d702d7
   81b58:	027602d7 	.word	0x027602d7
   81b5c:	02d70222 	.word	0x02d70222
   81b60:	027b02d7 	.word	0x027b02d7
   81b64:	01fc02d7 	.word	0x01fc02d7
   81b68:	02100189 	.word	0x02100189
   81b6c:	02d702d2 	.word	0x02d702d2
   81b70:	02d70295 	.word	0x02d70295
   81b74:	02d700ad 	.word	0x02d700ad
   81b78:	023502d7 	.word	0x023502d7
   81b7c:	f109 0908 	add.w	r9, r9, #8
   81b80:	9b03      	ldr	r3, [sp, #12]
   81b82:	442b      	add	r3, r5
   81b84:	9303      	str	r3, [sp, #12]
   81b86:	e786      	b.n	81a96 <_vfiprintf_r+0xc2>
   81b88:	4659      	mov	r1, fp
   81b8a:	9806      	ldr	r0, [sp, #24]
   81b8c:	f000 fdaa 	bl	826e4 <__swsetup_r>
   81b90:	bb18      	cbnz	r0, 81bda <_vfiprintf_r+0x206>
   81b92:	f8bb 100c 	ldrh.w	r1, [fp, #12]
   81b96:	f001 031a 	and.w	r3, r1, #26
   81b9a:	2b0a      	cmp	r3, #10
   81b9c:	f47f af4b 	bne.w	81a36 <_vfiprintf_r+0x62>
   81ba0:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
   81ba4:	2b00      	cmp	r3, #0
   81ba6:	f6ff af46 	blt.w	81a36 <_vfiprintf_r+0x62>
   81baa:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   81bae:	07db      	lsls	r3, r3, #31
   81bb0:	d405      	bmi.n	81bbe <_vfiprintf_r+0x1ea>
   81bb2:	058f      	lsls	r7, r1, #22
   81bb4:	d403      	bmi.n	81bbe <_vfiprintf_r+0x1ea>
   81bb6:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   81bba:	f001 fabd 	bl	83138 <__retarget_lock_release_recursive>
   81bbe:	462b      	mov	r3, r5
   81bc0:	4642      	mov	r2, r8
   81bc2:	4659      	mov	r1, fp
   81bc4:	9806      	ldr	r0, [sp, #24]
   81bc6:	f000 fd49 	bl	8265c <__sbprintf>
   81bca:	9003      	str	r0, [sp, #12]
   81bcc:	9803      	ldr	r0, [sp, #12]
   81bce:	b02d      	add	sp, #180	; 0xb4
   81bd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81bd4:	f000 feee 	bl	829b4 <__sinit>
   81bd8:	e709      	b.n	819ee <_vfiprintf_r+0x1a>
   81bda:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   81bde:	07d9      	lsls	r1, r3, #31
   81be0:	d404      	bmi.n	81bec <_vfiprintf_r+0x218>
   81be2:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   81be6:	059a      	lsls	r2, r3, #22
   81be8:	f140 84ae 	bpl.w	82548 <_vfiprintf_r+0xb74>
   81bec:	f04f 33ff 	mov.w	r3, #4294967295
   81bf0:	9303      	str	r3, [sp, #12]
   81bf2:	9803      	ldr	r0, [sp, #12]
   81bf4:	b02d      	add	sp, #180	; 0xb4
   81bf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81bfa:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   81bfe:	f001 fa99 	bl	83134 <__retarget_lock_acquire_recursive>
   81c02:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
   81c06:	b281      	uxth	r1, r0
   81c08:	e6fb      	b.n	81a02 <_vfiprintf_r+0x2e>
   81c0a:	9907      	ldr	r1, [sp, #28]
   81c0c:	460a      	mov	r2, r1
   81c0e:	680d      	ldr	r5, [r1, #0]
   81c10:	3204      	adds	r2, #4
   81c12:	2d00      	cmp	r5, #0
   81c14:	9207      	str	r2, [sp, #28]
   81c16:	da02      	bge.n	81c1e <_vfiprintf_r+0x24a>
   81c18:	426d      	negs	r5, r5
   81c1a:	f043 0304 	orr.w	r3, r3, #4
   81c1e:	f898 2000 	ldrb.w	r2, [r8]
   81c22:	e749      	b.n	81ab8 <_vfiprintf_r+0xe4>
   81c24:	9508      	str	r5, [sp, #32]
   81c26:	069e      	lsls	r6, r3, #26
   81c28:	f100 845a 	bmi.w	824e0 <_vfiprintf_r+0xb0c>
   81c2c:	9907      	ldr	r1, [sp, #28]
   81c2e:	06dd      	lsls	r5, r3, #27
   81c30:	460a      	mov	r2, r1
   81c32:	f100 83ef 	bmi.w	82414 <_vfiprintf_r+0xa40>
   81c36:	0658      	lsls	r0, r3, #25
   81c38:	f140 83ec 	bpl.w	82414 <_vfiprintf_r+0xa40>
   81c3c:	2700      	movs	r7, #0
   81c3e:	2201      	movs	r2, #1
   81c40:	880e      	ldrh	r6, [r1, #0]
   81c42:	3104      	adds	r1, #4
   81c44:	9107      	str	r1, [sp, #28]
   81c46:	f04f 0100 	mov.w	r1, #0
   81c4a:	2500      	movs	r5, #0
   81c4c:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
   81c50:	1c61      	adds	r1, r4, #1
   81c52:	f000 8117 	beq.w	81e84 <_vfiprintf_r+0x4b0>
   81c56:	f023 0180 	bic.w	r1, r3, #128	; 0x80
   81c5a:	9102      	str	r1, [sp, #8]
   81c5c:	ea56 0107 	orrs.w	r1, r6, r7
   81c60:	f040 8115 	bne.w	81e8e <_vfiprintf_r+0x4ba>
   81c64:	2c00      	cmp	r4, #0
   81c66:	f040 835b 	bne.w	82320 <_vfiprintf_r+0x94c>
   81c6a:	2a00      	cmp	r2, #0
   81c6c:	f040 83b6 	bne.w	823dc <_vfiprintf_r+0xa08>
   81c70:	f013 0301 	ands.w	r3, r3, #1
   81c74:	9305      	str	r3, [sp, #20]
   81c76:	f000 8455 	beq.w	82524 <_vfiprintf_r+0xb50>
   81c7a:	2330      	movs	r3, #48	; 0x30
   81c7c:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
   81c80:	f80b 3d41 	strb.w	r3, [fp, #-65]!
   81c84:	9b05      	ldr	r3, [sp, #20]
   81c86:	42a3      	cmp	r3, r4
   81c88:	bfb8      	it	lt
   81c8a:	4623      	movlt	r3, r4
   81c8c:	9301      	str	r3, [sp, #4]
   81c8e:	b10d      	cbz	r5, 81c94 <_vfiprintf_r+0x2c0>
   81c90:	3301      	adds	r3, #1
   81c92:	9301      	str	r3, [sp, #4]
   81c94:	9b02      	ldr	r3, [sp, #8]
   81c96:	f013 0302 	ands.w	r3, r3, #2
   81c9a:	9309      	str	r3, [sp, #36]	; 0x24
   81c9c:	d002      	beq.n	81ca4 <_vfiprintf_r+0x2d0>
   81c9e:	9b01      	ldr	r3, [sp, #4]
   81ca0:	3302      	adds	r3, #2
   81ca2:	9301      	str	r3, [sp, #4]
   81ca4:	9b02      	ldr	r3, [sp, #8]
   81ca6:	f013 0384 	ands.w	r3, r3, #132	; 0x84
   81caa:	930a      	str	r3, [sp, #40]	; 0x28
   81cac:	f040 8215 	bne.w	820da <_vfiprintf_r+0x706>
   81cb0:	9b08      	ldr	r3, [sp, #32]
   81cb2:	9a01      	ldr	r2, [sp, #4]
   81cb4:	1a9d      	subs	r5, r3, r2
   81cb6:	2d00      	cmp	r5, #0
   81cb8:	f340 820f 	ble.w	820da <_vfiprintf_r+0x706>
   81cbc:	2d10      	cmp	r5, #16
   81cbe:	f340 8484 	ble.w	825ca <_vfiprintf_r+0xbf6>
   81cc2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81cc4:	46ce      	mov	lr, r9
   81cc6:	2710      	movs	r7, #16
   81cc8:	46a1      	mov	r9, r4
   81cca:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81ccc:	4ec5      	ldr	r6, [pc, #788]	; (81fe4 <_vfiprintf_r+0x610>)
   81cce:	4619      	mov	r1, r3
   81cd0:	9c06      	ldr	r4, [sp, #24]
   81cd2:	e007      	b.n	81ce4 <_vfiprintf_r+0x310>
   81cd4:	f101 0c02 	add.w	ip, r1, #2
   81cd8:	4601      	mov	r1, r0
   81cda:	f10e 0e08 	add.w	lr, lr, #8
   81cde:	3d10      	subs	r5, #16
   81ce0:	2d10      	cmp	r5, #16
   81ce2:	dd11      	ble.n	81d08 <_vfiprintf_r+0x334>
   81ce4:	1c48      	adds	r0, r1, #1
   81ce6:	3210      	adds	r2, #16
   81ce8:	2807      	cmp	r0, #7
   81cea:	9211      	str	r2, [sp, #68]	; 0x44
   81cec:	e88e 00c0 	stmia.w	lr, {r6, r7}
   81cf0:	9010      	str	r0, [sp, #64]	; 0x40
   81cf2:	ddef      	ble.n	81cd4 <_vfiprintf_r+0x300>
   81cf4:	2a00      	cmp	r2, #0
   81cf6:	f040 81d9 	bne.w	820ac <_vfiprintf_r+0x6d8>
   81cfa:	3d10      	subs	r5, #16
   81cfc:	2d10      	cmp	r5, #16
   81cfe:	4611      	mov	r1, r2
   81d00:	f04f 0c01 	mov.w	ip, #1
   81d04:	46d6      	mov	lr, sl
   81d06:	dced      	bgt.n	81ce4 <_vfiprintf_r+0x310>
   81d08:	464c      	mov	r4, r9
   81d0a:	4661      	mov	r1, ip
   81d0c:	46f1      	mov	r9, lr
   81d0e:	442a      	add	r2, r5
   81d10:	2907      	cmp	r1, #7
   81d12:	9211      	str	r2, [sp, #68]	; 0x44
   81d14:	f8c9 6000 	str.w	r6, [r9]
   81d18:	f8c9 5004 	str.w	r5, [r9, #4]
   81d1c:	9110      	str	r1, [sp, #64]	; 0x40
   81d1e:	f300 82eb 	bgt.w	822f8 <_vfiprintf_r+0x924>
   81d22:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81d26:	f109 0908 	add.w	r9, r9, #8
   81d2a:	1c48      	adds	r0, r1, #1
   81d2c:	2d00      	cmp	r5, #0
   81d2e:	f040 81dc 	bne.w	820ea <_vfiprintf_r+0x716>
   81d32:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81d34:	2b00      	cmp	r3, #0
   81d36:	f000 81f6 	beq.w	82126 <_vfiprintf_r+0x752>
   81d3a:	2102      	movs	r1, #2
   81d3c:	ab0e      	add	r3, sp, #56	; 0x38
   81d3e:	440a      	add	r2, r1
   81d40:	2807      	cmp	r0, #7
   81d42:	9211      	str	r2, [sp, #68]	; 0x44
   81d44:	9010      	str	r0, [sp, #64]	; 0x40
   81d46:	f8c9 1004 	str.w	r1, [r9, #4]
   81d4a:	f8c9 3000 	str.w	r3, [r9]
   81d4e:	f340 81e6 	ble.w	8211e <_vfiprintf_r+0x74a>
   81d52:	2a00      	cmp	r2, #0
   81d54:	f040 8395 	bne.w	82482 <_vfiprintf_r+0xaae>
   81d58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81d5a:	2001      	movs	r0, #1
   81d5c:	2b80      	cmp	r3, #128	; 0x80
   81d5e:	4611      	mov	r1, r2
   81d60:	46d1      	mov	r9, sl
   81d62:	f040 81e4 	bne.w	8212e <_vfiprintf_r+0x75a>
   81d66:	9b08      	ldr	r3, [sp, #32]
   81d68:	9d01      	ldr	r5, [sp, #4]
   81d6a:	1b5e      	subs	r6, r3, r5
   81d6c:	2e00      	cmp	r6, #0
   81d6e:	f340 81de 	ble.w	8212e <_vfiprintf_r+0x75a>
   81d72:	2e10      	cmp	r6, #16
   81d74:	f340 843c 	ble.w	825f0 <_vfiprintf_r+0xc1c>
   81d78:	46cc      	mov	ip, r9
   81d7a:	2710      	movs	r7, #16
   81d7c:	46a1      	mov	r9, r4
   81d7e:	4d9a      	ldr	r5, [pc, #616]	; (81fe8 <_vfiprintf_r+0x614>)
   81d80:	9c06      	ldr	r4, [sp, #24]
   81d82:	e007      	b.n	81d94 <_vfiprintf_r+0x3c0>
   81d84:	f101 0e02 	add.w	lr, r1, #2
   81d88:	4601      	mov	r1, r0
   81d8a:	f10c 0c08 	add.w	ip, ip, #8
   81d8e:	3e10      	subs	r6, #16
   81d90:	2e10      	cmp	r6, #16
   81d92:	dd11      	ble.n	81db8 <_vfiprintf_r+0x3e4>
   81d94:	1c48      	adds	r0, r1, #1
   81d96:	3210      	adds	r2, #16
   81d98:	2807      	cmp	r0, #7
   81d9a:	9211      	str	r2, [sp, #68]	; 0x44
   81d9c:	e88c 00a0 	stmia.w	ip, {r5, r7}
   81da0:	9010      	str	r0, [sp, #64]	; 0x40
   81da2:	ddef      	ble.n	81d84 <_vfiprintf_r+0x3b0>
   81da4:	2a00      	cmp	r2, #0
   81da6:	f040 829b 	bne.w	822e0 <_vfiprintf_r+0x90c>
   81daa:	3e10      	subs	r6, #16
   81dac:	2e10      	cmp	r6, #16
   81dae:	f04f 0e01 	mov.w	lr, #1
   81db2:	4611      	mov	r1, r2
   81db4:	46d4      	mov	ip, sl
   81db6:	dced      	bgt.n	81d94 <_vfiprintf_r+0x3c0>
   81db8:	464c      	mov	r4, r9
   81dba:	46e1      	mov	r9, ip
   81dbc:	4432      	add	r2, r6
   81dbe:	f1be 0f07 	cmp.w	lr, #7
   81dc2:	9211      	str	r2, [sp, #68]	; 0x44
   81dc4:	e889 0060 	stmia.w	r9, {r5, r6}
   81dc8:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
   81dcc:	f300 8366 	bgt.w	8249c <_vfiprintf_r+0xac8>
   81dd0:	f109 0908 	add.w	r9, r9, #8
   81dd4:	f10e 0001 	add.w	r0, lr, #1
   81dd8:	4671      	mov	r1, lr
   81dda:	e1a8      	b.n	8212e <_vfiprintf_r+0x75a>
   81ddc:	9508      	str	r5, [sp, #32]
   81dde:	f013 0220 	ands.w	r2, r3, #32
   81de2:	f040 8389 	bne.w	824f8 <_vfiprintf_r+0xb24>
   81de6:	f013 0110 	ands.w	r1, r3, #16
   81dea:	f040 8319 	bne.w	82420 <_vfiprintf_r+0xa4c>
   81dee:	f013 0240 	ands.w	r2, r3, #64	; 0x40
   81df2:	f000 8315 	beq.w	82420 <_vfiprintf_r+0xa4c>
   81df6:	9807      	ldr	r0, [sp, #28]
   81df8:	460a      	mov	r2, r1
   81dfa:	4601      	mov	r1, r0
   81dfc:	3104      	adds	r1, #4
   81dfe:	8806      	ldrh	r6, [r0, #0]
   81e00:	2700      	movs	r7, #0
   81e02:	9107      	str	r1, [sp, #28]
   81e04:	e71f      	b.n	81c46 <_vfiprintf_r+0x272>
   81e06:	9508      	str	r5, [sp, #32]
   81e08:	f043 0310 	orr.w	r3, r3, #16
   81e0c:	e7e7      	b.n	81dde <_vfiprintf_r+0x40a>
   81e0e:	9508      	str	r5, [sp, #32]
   81e10:	f043 0310 	orr.w	r3, r3, #16
   81e14:	e707      	b.n	81c26 <_vfiprintf_r+0x252>
   81e16:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   81e1a:	f898 2000 	ldrb.w	r2, [r8]
   81e1e:	e64b      	b.n	81ab8 <_vfiprintf_r+0xe4>
   81e20:	2500      	movs	r5, #0
   81e22:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   81e26:	f818 2b01 	ldrb.w	r2, [r8], #1
   81e2a:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   81e2e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
   81e32:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   81e36:	2909      	cmp	r1, #9
   81e38:	d9f5      	bls.n	81e26 <_vfiprintf_r+0x452>
   81e3a:	e63f      	b.n	81abc <_vfiprintf_r+0xe8>
   81e3c:	9508      	str	r5, [sp, #32]
   81e3e:	2800      	cmp	r0, #0
   81e40:	f040 8402 	bne.w	82648 <_vfiprintf_r+0xc74>
   81e44:	f043 0310 	orr.w	r3, r3, #16
   81e48:	069e      	lsls	r6, r3, #26
   81e4a:	f100 833d 	bmi.w	824c8 <_vfiprintf_r+0xaf4>
   81e4e:	9907      	ldr	r1, [sp, #28]
   81e50:	06dd      	lsls	r5, r3, #27
   81e52:	460a      	mov	r2, r1
   81e54:	f100 82f0 	bmi.w	82438 <_vfiprintf_r+0xa64>
   81e58:	0658      	lsls	r0, r3, #25
   81e5a:	f140 82ed 	bpl.w	82438 <_vfiprintf_r+0xa64>
   81e5e:	f9b1 6000 	ldrsh.w	r6, [r1]
   81e62:	3204      	adds	r2, #4
   81e64:	17f7      	asrs	r7, r6, #31
   81e66:	4630      	mov	r0, r6
   81e68:	4639      	mov	r1, r7
   81e6a:	9207      	str	r2, [sp, #28]
   81e6c:	2800      	cmp	r0, #0
   81e6e:	f171 0200 	sbcs.w	r2, r1, #0
   81e72:	f2c0 835a 	blt.w	8252a <_vfiprintf_r+0xb56>
   81e76:	1c61      	adds	r1, r4, #1
   81e78:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81e7c:	f04f 0201 	mov.w	r2, #1
   81e80:	f47f aee9 	bne.w	81c56 <_vfiprintf_r+0x282>
   81e84:	ea56 0107 	orrs.w	r1, r6, r7
   81e88:	f000 824b 	beq.w	82322 <_vfiprintf_r+0x94e>
   81e8c:	9302      	str	r3, [sp, #8]
   81e8e:	2a01      	cmp	r2, #1
   81e90:	f000 828a 	beq.w	823a8 <_vfiprintf_r+0x9d4>
   81e94:	2a02      	cmp	r2, #2
   81e96:	f040 825a 	bne.w	8234e <_vfiprintf_r+0x97a>
   81e9a:	46d3      	mov	fp, sl
   81e9c:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81e9e:	0933      	lsrs	r3, r6, #4
   81ea0:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
   81ea4:	0939      	lsrs	r1, r7, #4
   81ea6:	f006 020f 	and.w	r2, r6, #15
   81eaa:	460f      	mov	r7, r1
   81eac:	461e      	mov	r6, r3
   81eae:	5c83      	ldrb	r3, [r0, r2]
   81eb0:	f80b 3d01 	strb.w	r3, [fp, #-1]!
   81eb4:	ea56 0307 	orrs.w	r3, r6, r7
   81eb8:	d1f1      	bne.n	81e9e <_vfiprintf_r+0x4ca>
   81eba:	ebaa 030b 	sub.w	r3, sl, fp
   81ebe:	9305      	str	r3, [sp, #20]
   81ec0:	e6e0      	b.n	81c84 <_vfiprintf_r+0x2b0>
   81ec2:	2800      	cmp	r0, #0
   81ec4:	f040 83bd 	bne.w	82642 <_vfiprintf_r+0xc6e>
   81ec8:	0699      	lsls	r1, r3, #26
   81eca:	f100 8359 	bmi.w	82580 <_vfiprintf_r+0xbac>
   81ece:	06da      	lsls	r2, r3, #27
   81ed0:	f100 80e5 	bmi.w	8209e <_vfiprintf_r+0x6ca>
   81ed4:	065b      	lsls	r3, r3, #25
   81ed6:	f140 80e2 	bpl.w	8209e <_vfiprintf_r+0x6ca>
   81eda:	9a07      	ldr	r2, [sp, #28]
   81edc:	6813      	ldr	r3, [r2, #0]
   81ede:	3204      	adds	r2, #4
   81ee0:	9207      	str	r2, [sp, #28]
   81ee2:	f8bd 200c 	ldrh.w	r2, [sp, #12]
   81ee6:	801a      	strh	r2, [r3, #0]
   81ee8:	e5b1      	b.n	81a4e <_vfiprintf_r+0x7a>
   81eea:	2278      	movs	r2, #120	; 0x78
   81eec:	2130      	movs	r1, #48	; 0x30
   81eee:	9508      	str	r5, [sp, #32]
   81ef0:	9d07      	ldr	r5, [sp, #28]
   81ef2:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
   81ef6:	1d2a      	adds	r2, r5, #4
   81ef8:	9207      	str	r2, [sp, #28]
   81efa:	4a3c      	ldr	r2, [pc, #240]	; (81fec <_vfiprintf_r+0x618>)
   81efc:	682e      	ldr	r6, [r5, #0]
   81efe:	920b      	str	r2, [sp, #44]	; 0x2c
   81f00:	f043 0302 	orr.w	r3, r3, #2
   81f04:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
   81f08:	2700      	movs	r7, #0
   81f0a:	2202      	movs	r2, #2
   81f0c:	e69b      	b.n	81c46 <_vfiprintf_r+0x272>
   81f0e:	9508      	str	r5, [sp, #32]
   81f10:	2800      	cmp	r0, #0
   81f12:	d099      	beq.n	81e48 <_vfiprintf_r+0x474>
   81f14:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   81f18:	e796      	b.n	81e48 <_vfiprintf_r+0x474>
   81f1a:	f898 2000 	ldrb.w	r2, [r8]
   81f1e:	2e00      	cmp	r6, #0
   81f20:	f47f adca 	bne.w	81ab8 <_vfiprintf_r+0xe4>
   81f24:	2001      	movs	r0, #1
   81f26:	2620      	movs	r6, #32
   81f28:	e5c6      	b.n	81ab8 <_vfiprintf_r+0xe4>
   81f2a:	f043 0301 	orr.w	r3, r3, #1
   81f2e:	f898 2000 	ldrb.w	r2, [r8]
   81f32:	e5c1      	b.n	81ab8 <_vfiprintf_r+0xe4>
   81f34:	9508      	str	r5, [sp, #32]
   81f36:	2800      	cmp	r0, #0
   81f38:	f040 8380 	bne.w	8263c <_vfiprintf_r+0xc68>
   81f3c:	492b      	ldr	r1, [pc, #172]	; (81fec <_vfiprintf_r+0x618>)
   81f3e:	910b      	str	r1, [sp, #44]	; 0x2c
   81f40:	069f      	lsls	r7, r3, #26
   81f42:	f100 82e5 	bmi.w	82510 <_vfiprintf_r+0xb3c>
   81f46:	9807      	ldr	r0, [sp, #28]
   81f48:	06de      	lsls	r6, r3, #27
   81f4a:	4601      	mov	r1, r0
   81f4c:	f100 826f 	bmi.w	8242e <_vfiprintf_r+0xa5a>
   81f50:	065d      	lsls	r5, r3, #25
   81f52:	f140 826c 	bpl.w	8242e <_vfiprintf_r+0xa5a>
   81f56:	2700      	movs	r7, #0
   81f58:	3104      	adds	r1, #4
   81f5a:	8806      	ldrh	r6, [r0, #0]
   81f5c:	9107      	str	r1, [sp, #28]
   81f5e:	07d8      	lsls	r0, r3, #31
   81f60:	f140 8220 	bpl.w	823a4 <_vfiprintf_r+0x9d0>
   81f64:	ea56 0107 	orrs.w	r1, r6, r7
   81f68:	f000 821c 	beq.w	823a4 <_vfiprintf_r+0x9d0>
   81f6c:	2130      	movs	r1, #48	; 0x30
   81f6e:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
   81f72:	f043 0302 	orr.w	r3, r3, #2
   81f76:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
   81f7a:	2202      	movs	r2, #2
   81f7c:	e663      	b.n	81c46 <_vfiprintf_r+0x272>
   81f7e:	9508      	str	r5, [sp, #32]
   81f80:	2800      	cmp	r0, #0
   81f82:	f040 8355 	bne.w	82630 <_vfiprintf_r+0xc5c>
   81f86:	491a      	ldr	r1, [pc, #104]	; (81ff0 <_vfiprintf_r+0x61c>)
   81f88:	910b      	str	r1, [sp, #44]	; 0x2c
   81f8a:	e7d9      	b.n	81f40 <_vfiprintf_r+0x56c>
   81f8c:	2201      	movs	r2, #1
   81f8e:	9807      	ldr	r0, [sp, #28]
   81f90:	4611      	mov	r1, r2
   81f92:	9201      	str	r2, [sp, #4]
   81f94:	6802      	ldr	r2, [r0, #0]
   81f96:	f04f 0400 	mov.w	r4, #0
   81f9a:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   81f9e:	4602      	mov	r2, r0
   81fa0:	3204      	adds	r2, #4
   81fa2:	9508      	str	r5, [sp, #32]
   81fa4:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
   81fa8:	9105      	str	r1, [sp, #20]
   81faa:	9207      	str	r2, [sp, #28]
   81fac:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
   81fb0:	9302      	str	r3, [sp, #8]
   81fb2:	2400      	movs	r4, #0
   81fb4:	e66e      	b.n	81c94 <_vfiprintf_r+0x2c0>
   81fb6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81fba:	f898 2000 	ldrb.w	r2, [r8]
   81fbe:	e57b      	b.n	81ab8 <_vfiprintf_r+0xe4>
   81fc0:	f898 2000 	ldrb.w	r2, [r8]
   81fc4:	2a6c      	cmp	r2, #108	; 0x6c
   81fc6:	bf03      	ittte	eq
   81fc8:	f898 2001 	ldrbeq.w	r2, [r8, #1]
   81fcc:	f043 0320 	orreq.w	r3, r3, #32
   81fd0:	f108 0801 	addeq.w	r8, r8, #1
   81fd4:	f043 0310 	orrne.w	r3, r3, #16
   81fd8:	e56e      	b.n	81ab8 <_vfiprintf_r+0xe4>
   81fda:	f898 2000 	ldrb.w	r2, [r8]
   81fde:	2001      	movs	r0, #1
   81fe0:	262b      	movs	r6, #43	; 0x2b
   81fe2:	e569      	b.n	81ab8 <_vfiprintf_r+0xe4>
   81fe4:	00084574 	.word	0x00084574
   81fe8:	00084584 	.word	0x00084584
   81fec:	00084558 	.word	0x00084558
   81ff0:	00084544 	.word	0x00084544
   81ff4:	f04f 0200 	mov.w	r2, #0
   81ff8:	9907      	ldr	r1, [sp, #28]
   81ffa:	9508      	str	r5, [sp, #32]
   81ffc:	f8d1 b000 	ldr.w	fp, [r1]
   82000:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   82004:	1d0d      	adds	r5, r1, #4
   82006:	f1bb 0f00 	cmp.w	fp, #0
   8200a:	f000 82e4 	beq.w	825d6 <_vfiprintf_r+0xc02>
   8200e:	1c67      	adds	r7, r4, #1
   82010:	f000 82c3 	beq.w	8259a <_vfiprintf_r+0xbc6>
   82014:	4622      	mov	r2, r4
   82016:	2100      	movs	r1, #0
   82018:	4658      	mov	r0, fp
   8201a:	9301      	str	r3, [sp, #4]
   8201c:	f001 fbc6 	bl	837ac <memchr>
   82020:	9b01      	ldr	r3, [sp, #4]
   82022:	2800      	cmp	r0, #0
   82024:	f000 82e8 	beq.w	825f8 <_vfiprintf_r+0xc24>
   82028:	eba0 020b 	sub.w	r2, r0, fp
   8202c:	9507      	str	r5, [sp, #28]
   8202e:	9205      	str	r2, [sp, #20]
   82030:	9302      	str	r3, [sp, #8]
   82032:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   82036:	2400      	movs	r4, #0
   82038:	e624      	b.n	81c84 <_vfiprintf_r+0x2b0>
   8203a:	f898 2000 	ldrb.w	r2, [r8]
   8203e:	f108 0701 	add.w	r7, r8, #1
   82042:	2a2a      	cmp	r2, #42	; 0x2a
   82044:	f000 82e9 	beq.w	8261a <_vfiprintf_r+0xc46>
   82048:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   8204c:	2909      	cmp	r1, #9
   8204e:	46b8      	mov	r8, r7
   82050:	f04f 0400 	mov.w	r4, #0
   82054:	f63f ad32 	bhi.w	81abc <_vfiprintf_r+0xe8>
   82058:	f818 2b01 	ldrb.w	r2, [r8], #1
   8205c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   82060:	eb01 0444 	add.w	r4, r1, r4, lsl #1
   82064:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   82068:	2909      	cmp	r1, #9
   8206a:	d9f5      	bls.n	82058 <_vfiprintf_r+0x684>
   8206c:	e526      	b.n	81abc <_vfiprintf_r+0xe8>
   8206e:	f043 0320 	orr.w	r3, r3, #32
   82072:	f898 2000 	ldrb.w	r2, [r8]
   82076:	e51f      	b.n	81ab8 <_vfiprintf_r+0xe4>
   82078:	9508      	str	r5, [sp, #32]
   8207a:	2800      	cmp	r0, #0
   8207c:	f040 82db 	bne.w	82636 <_vfiprintf_r+0xc62>
   82080:	2a00      	cmp	r2, #0
   82082:	f000 80f1 	beq.w	82268 <_vfiprintf_r+0x894>
   82086:	2101      	movs	r1, #1
   82088:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   8208c:	f04f 0200 	mov.w	r2, #0
   82090:	9101      	str	r1, [sp, #4]
   82092:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   82096:	9105      	str	r1, [sp, #20]
   82098:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
   8209c:	e788      	b.n	81fb0 <_vfiprintf_r+0x5dc>
   8209e:	9a07      	ldr	r2, [sp, #28]
   820a0:	6813      	ldr	r3, [r2, #0]
   820a2:	3204      	adds	r2, #4
   820a4:	9207      	str	r2, [sp, #28]
   820a6:	9a03      	ldr	r2, [sp, #12]
   820a8:	601a      	str	r2, [r3, #0]
   820aa:	e4d0      	b.n	81a4e <_vfiprintf_r+0x7a>
   820ac:	aa0f      	add	r2, sp, #60	; 0x3c
   820ae:	9904      	ldr	r1, [sp, #16]
   820b0:	4620      	mov	r0, r4
   820b2:	f7ff fc4f 	bl	81954 <__sprint_r.part.0>
   820b6:	2800      	cmp	r0, #0
   820b8:	f040 8143 	bne.w	82342 <_vfiprintf_r+0x96e>
   820bc:	9910      	ldr	r1, [sp, #64]	; 0x40
   820be:	46d6      	mov	lr, sl
   820c0:	9a11      	ldr	r2, [sp, #68]	; 0x44
   820c2:	f101 0c01 	add.w	ip, r1, #1
   820c6:	e60a      	b.n	81cde <_vfiprintf_r+0x30a>
   820c8:	aa0f      	add	r2, sp, #60	; 0x3c
   820ca:	9904      	ldr	r1, [sp, #16]
   820cc:	9806      	ldr	r0, [sp, #24]
   820ce:	f7ff fc41 	bl	81954 <__sprint_r.part.0>
   820d2:	2800      	cmp	r0, #0
   820d4:	f040 8135 	bne.w	82342 <_vfiprintf_r+0x96e>
   820d8:	46d1      	mov	r9, sl
   820da:	9910      	ldr	r1, [sp, #64]	; 0x40
   820dc:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   820e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
   820e2:	1c48      	adds	r0, r1, #1
   820e4:	2d00      	cmp	r5, #0
   820e6:	f43f ae24 	beq.w	81d32 <_vfiprintf_r+0x35e>
   820ea:	2101      	movs	r1, #1
   820ec:	f10d 0537 	add.w	r5, sp, #55	; 0x37
   820f0:	440a      	add	r2, r1
   820f2:	2807      	cmp	r0, #7
   820f4:	9211      	str	r2, [sp, #68]	; 0x44
   820f6:	9010      	str	r0, [sp, #64]	; 0x40
   820f8:	f8c9 1004 	str.w	r1, [r9, #4]
   820fc:	f8c9 5000 	str.w	r5, [r9]
   82100:	f340 8109 	ble.w	82316 <_vfiprintf_r+0x942>
   82104:	2a00      	cmp	r2, #0
   82106:	f040 81af 	bne.w	82468 <_vfiprintf_r+0xa94>
   8210a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8210c:	2b00      	cmp	r3, #0
   8210e:	f43f ae23 	beq.w	81d58 <_vfiprintf_r+0x384>
   82112:	2202      	movs	r2, #2
   82114:	4608      	mov	r0, r1
   82116:	46d1      	mov	r9, sl
   82118:	ab0e      	add	r3, sp, #56	; 0x38
   8211a:	921d      	str	r2, [sp, #116]	; 0x74
   8211c:	931c      	str	r3, [sp, #112]	; 0x70
   8211e:	4601      	mov	r1, r0
   82120:	f109 0908 	add.w	r9, r9, #8
   82124:	3001      	adds	r0, #1
   82126:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82128:	2b80      	cmp	r3, #128	; 0x80
   8212a:	f43f ae1c 	beq.w	81d66 <_vfiprintf_r+0x392>
   8212e:	9b05      	ldr	r3, [sp, #20]
   82130:	1ae4      	subs	r4, r4, r3
   82132:	2c00      	cmp	r4, #0
   82134:	dd2f      	ble.n	82196 <_vfiprintf_r+0x7c2>
   82136:	2c10      	cmp	r4, #16
   82138:	f340 8220 	ble.w	8257c <_vfiprintf_r+0xba8>
   8213c:	46ce      	mov	lr, r9
   8213e:	2610      	movs	r6, #16
   82140:	4db2      	ldr	r5, [pc, #712]	; (8240c <_vfiprintf_r+0xa38>)
   82142:	9f06      	ldr	r7, [sp, #24]
   82144:	f8dd 9010 	ldr.w	r9, [sp, #16]
   82148:	e006      	b.n	82158 <_vfiprintf_r+0x784>
   8214a:	1c88      	adds	r0, r1, #2
   8214c:	4619      	mov	r1, r3
   8214e:	f10e 0e08 	add.w	lr, lr, #8
   82152:	3c10      	subs	r4, #16
   82154:	2c10      	cmp	r4, #16
   82156:	dd10      	ble.n	8217a <_vfiprintf_r+0x7a6>
   82158:	1c4b      	adds	r3, r1, #1
   8215a:	3210      	adds	r2, #16
   8215c:	2b07      	cmp	r3, #7
   8215e:	9211      	str	r2, [sp, #68]	; 0x44
   82160:	e88e 0060 	stmia.w	lr, {r5, r6}
   82164:	9310      	str	r3, [sp, #64]	; 0x40
   82166:	ddf0      	ble.n	8214a <_vfiprintf_r+0x776>
   82168:	2a00      	cmp	r2, #0
   8216a:	d165      	bne.n	82238 <_vfiprintf_r+0x864>
   8216c:	3c10      	subs	r4, #16
   8216e:	2c10      	cmp	r4, #16
   82170:	f04f 0001 	mov.w	r0, #1
   82174:	4611      	mov	r1, r2
   82176:	46d6      	mov	lr, sl
   82178:	dcee      	bgt.n	82158 <_vfiprintf_r+0x784>
   8217a:	46f1      	mov	r9, lr
   8217c:	4422      	add	r2, r4
   8217e:	2807      	cmp	r0, #7
   82180:	9211      	str	r2, [sp, #68]	; 0x44
   82182:	f8c9 5000 	str.w	r5, [r9]
   82186:	f8c9 4004 	str.w	r4, [r9, #4]
   8218a:	9010      	str	r0, [sp, #64]	; 0x40
   8218c:	f300 8085 	bgt.w	8229a <_vfiprintf_r+0x8c6>
   82190:	f109 0908 	add.w	r9, r9, #8
   82194:	3001      	adds	r0, #1
   82196:	9905      	ldr	r1, [sp, #20]
   82198:	2807      	cmp	r0, #7
   8219a:	440a      	add	r2, r1
   8219c:	9211      	str	r2, [sp, #68]	; 0x44
   8219e:	f8c9 b000 	str.w	fp, [r9]
   821a2:	f8c9 1004 	str.w	r1, [r9, #4]
   821a6:	9010      	str	r0, [sp, #64]	; 0x40
   821a8:	f340 8082 	ble.w	822b0 <_vfiprintf_r+0x8dc>
   821ac:	2a00      	cmp	r2, #0
   821ae:	f040 8118 	bne.w	823e2 <_vfiprintf_r+0xa0e>
   821b2:	9b02      	ldr	r3, [sp, #8]
   821b4:	9210      	str	r2, [sp, #64]	; 0x40
   821b6:	0758      	lsls	r0, r3, #29
   821b8:	d535      	bpl.n	82226 <_vfiprintf_r+0x852>
   821ba:	9b08      	ldr	r3, [sp, #32]
   821bc:	9901      	ldr	r1, [sp, #4]
   821be:	1a5c      	subs	r4, r3, r1
   821c0:	2c00      	cmp	r4, #0
   821c2:	f340 80e7 	ble.w	82394 <_vfiprintf_r+0x9c0>
   821c6:	46d1      	mov	r9, sl
   821c8:	2c10      	cmp	r4, #16
   821ca:	f340 820d 	ble.w	825e8 <_vfiprintf_r+0xc14>
   821ce:	2510      	movs	r5, #16
   821d0:	9910      	ldr	r1, [sp, #64]	; 0x40
   821d2:	4e8f      	ldr	r6, [pc, #572]	; (82410 <_vfiprintf_r+0xa3c>)
   821d4:	9f06      	ldr	r7, [sp, #24]
   821d6:	f8dd b010 	ldr.w	fp, [sp, #16]
   821da:	e006      	b.n	821ea <_vfiprintf_r+0x816>
   821dc:	1c88      	adds	r0, r1, #2
   821de:	4619      	mov	r1, r3
   821e0:	f109 0908 	add.w	r9, r9, #8
   821e4:	3c10      	subs	r4, #16
   821e6:	2c10      	cmp	r4, #16
   821e8:	dd11      	ble.n	8220e <_vfiprintf_r+0x83a>
   821ea:	1c4b      	adds	r3, r1, #1
   821ec:	3210      	adds	r2, #16
   821ee:	2b07      	cmp	r3, #7
   821f0:	9211      	str	r2, [sp, #68]	; 0x44
   821f2:	f8c9 6000 	str.w	r6, [r9]
   821f6:	f8c9 5004 	str.w	r5, [r9, #4]
   821fa:	9310      	str	r3, [sp, #64]	; 0x40
   821fc:	ddee      	ble.n	821dc <_vfiprintf_r+0x808>
   821fe:	bb42      	cbnz	r2, 82252 <_vfiprintf_r+0x87e>
   82200:	3c10      	subs	r4, #16
   82202:	2c10      	cmp	r4, #16
   82204:	f04f 0001 	mov.w	r0, #1
   82208:	4611      	mov	r1, r2
   8220a:	46d1      	mov	r9, sl
   8220c:	dced      	bgt.n	821ea <_vfiprintf_r+0x816>
   8220e:	4422      	add	r2, r4
   82210:	2807      	cmp	r0, #7
   82212:	9211      	str	r2, [sp, #68]	; 0x44
   82214:	f8c9 6000 	str.w	r6, [r9]
   82218:	f8c9 4004 	str.w	r4, [r9, #4]
   8221c:	9010      	str	r0, [sp, #64]	; 0x40
   8221e:	dd51      	ble.n	822c4 <_vfiprintf_r+0x8f0>
   82220:	2a00      	cmp	r2, #0
   82222:	f040 819a 	bne.w	8255a <_vfiprintf_r+0xb86>
   82226:	9b03      	ldr	r3, [sp, #12]
   82228:	9a08      	ldr	r2, [sp, #32]
   8222a:	9901      	ldr	r1, [sp, #4]
   8222c:	428a      	cmp	r2, r1
   8222e:	bfac      	ite	ge
   82230:	189b      	addge	r3, r3, r2
   82232:	185b      	addlt	r3, r3, r1
   82234:	9303      	str	r3, [sp, #12]
   82236:	e04e      	b.n	822d6 <_vfiprintf_r+0x902>
   82238:	aa0f      	add	r2, sp, #60	; 0x3c
   8223a:	4649      	mov	r1, r9
   8223c:	4638      	mov	r0, r7
   8223e:	f7ff fb89 	bl	81954 <__sprint_r.part.0>
   82242:	2800      	cmp	r0, #0
   82244:	f040 813e 	bne.w	824c4 <_vfiprintf_r+0xaf0>
   82248:	9910      	ldr	r1, [sp, #64]	; 0x40
   8224a:	46d6      	mov	lr, sl
   8224c:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8224e:	1c48      	adds	r0, r1, #1
   82250:	e77f      	b.n	82152 <_vfiprintf_r+0x77e>
   82252:	aa0f      	add	r2, sp, #60	; 0x3c
   82254:	4659      	mov	r1, fp
   82256:	4638      	mov	r0, r7
   82258:	f7ff fb7c 	bl	81954 <__sprint_r.part.0>
   8225c:	b960      	cbnz	r0, 82278 <_vfiprintf_r+0x8a4>
   8225e:	9910      	ldr	r1, [sp, #64]	; 0x40
   82260:	46d1      	mov	r9, sl
   82262:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82264:	1c48      	adds	r0, r1, #1
   82266:	e7bd      	b.n	821e4 <_vfiprintf_r+0x810>
   82268:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8226a:	f8dd b010 	ldr.w	fp, [sp, #16]
   8226e:	2b00      	cmp	r3, #0
   82270:	f040 81ca 	bne.w	82608 <_vfiprintf_r+0xc34>
   82274:	2300      	movs	r3, #0
   82276:	9310      	str	r3, [sp, #64]	; 0x40
   82278:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   8227c:	f013 0f01 	tst.w	r3, #1
   82280:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   82284:	d102      	bne.n	8228c <_vfiprintf_r+0x8b8>
   82286:	059a      	lsls	r2, r3, #22
   82288:	f140 80dd 	bpl.w	82446 <_vfiprintf_r+0xa72>
   8228c:	065b      	lsls	r3, r3, #25
   8228e:	f53f acad 	bmi.w	81bec <_vfiprintf_r+0x218>
   82292:	9803      	ldr	r0, [sp, #12]
   82294:	b02d      	add	sp, #180	; 0xb4
   82296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8229a:	2a00      	cmp	r2, #0
   8229c:	f040 8105 	bne.w	824aa <_vfiprintf_r+0xad6>
   822a0:	2301      	movs	r3, #1
   822a2:	46d1      	mov	r9, sl
   822a4:	9a05      	ldr	r2, [sp, #20]
   822a6:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
   822aa:	921d      	str	r2, [sp, #116]	; 0x74
   822ac:	9211      	str	r2, [sp, #68]	; 0x44
   822ae:	9310      	str	r3, [sp, #64]	; 0x40
   822b0:	f109 0908 	add.w	r9, r9, #8
   822b4:	9b02      	ldr	r3, [sp, #8]
   822b6:	0759      	lsls	r1, r3, #29
   822b8:	d504      	bpl.n	822c4 <_vfiprintf_r+0x8f0>
   822ba:	9b08      	ldr	r3, [sp, #32]
   822bc:	9901      	ldr	r1, [sp, #4]
   822be:	1a5c      	subs	r4, r3, r1
   822c0:	2c00      	cmp	r4, #0
   822c2:	dc81      	bgt.n	821c8 <_vfiprintf_r+0x7f4>
   822c4:	9b03      	ldr	r3, [sp, #12]
   822c6:	9908      	ldr	r1, [sp, #32]
   822c8:	9801      	ldr	r0, [sp, #4]
   822ca:	4281      	cmp	r1, r0
   822cc:	bfac      	ite	ge
   822ce:	185b      	addge	r3, r3, r1
   822d0:	181b      	addlt	r3, r3, r0
   822d2:	9303      	str	r3, [sp, #12]
   822d4:	bb72      	cbnz	r2, 82334 <_vfiprintf_r+0x960>
   822d6:	2300      	movs	r3, #0
   822d8:	46d1      	mov	r9, sl
   822da:	9310      	str	r3, [sp, #64]	; 0x40
   822dc:	f7ff bbb7 	b.w	81a4e <_vfiprintf_r+0x7a>
   822e0:	aa0f      	add	r2, sp, #60	; 0x3c
   822e2:	9904      	ldr	r1, [sp, #16]
   822e4:	4620      	mov	r0, r4
   822e6:	f7ff fb35 	bl	81954 <__sprint_r.part.0>
   822ea:	bb50      	cbnz	r0, 82342 <_vfiprintf_r+0x96e>
   822ec:	9910      	ldr	r1, [sp, #64]	; 0x40
   822ee:	46d4      	mov	ip, sl
   822f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
   822f2:	f101 0e01 	add.w	lr, r1, #1
   822f6:	e54a      	b.n	81d8e <_vfiprintf_r+0x3ba>
   822f8:	2a00      	cmp	r2, #0
   822fa:	f47f aee5 	bne.w	820c8 <_vfiprintf_r+0x6f4>
   822fe:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
   82302:	2900      	cmp	r1, #0
   82304:	f000 811a 	beq.w	8253c <_vfiprintf_r+0xb68>
   82308:	2201      	movs	r2, #1
   8230a:	46d1      	mov	r9, sl
   8230c:	4610      	mov	r0, r2
   8230e:	f10d 0137 	add.w	r1, sp, #55	; 0x37
   82312:	921d      	str	r2, [sp, #116]	; 0x74
   82314:	911c      	str	r1, [sp, #112]	; 0x70
   82316:	4601      	mov	r1, r0
   82318:	f109 0908 	add.w	r9, r9, #8
   8231c:	3001      	adds	r0, #1
   8231e:	e508      	b.n	81d32 <_vfiprintf_r+0x35e>
   82320:	9b02      	ldr	r3, [sp, #8]
   82322:	2a01      	cmp	r2, #1
   82324:	f000 8097 	beq.w	82456 <_vfiprintf_r+0xa82>
   82328:	2a02      	cmp	r2, #2
   8232a:	d10d      	bne.n	82348 <_vfiprintf_r+0x974>
   8232c:	9302      	str	r3, [sp, #8]
   8232e:	2600      	movs	r6, #0
   82330:	2700      	movs	r7, #0
   82332:	e5b2      	b.n	81e9a <_vfiprintf_r+0x4c6>
   82334:	aa0f      	add	r2, sp, #60	; 0x3c
   82336:	9904      	ldr	r1, [sp, #16]
   82338:	9806      	ldr	r0, [sp, #24]
   8233a:	f7ff fb0b 	bl	81954 <__sprint_r.part.0>
   8233e:	2800      	cmp	r0, #0
   82340:	d0c9      	beq.n	822d6 <_vfiprintf_r+0x902>
   82342:	f8dd b010 	ldr.w	fp, [sp, #16]
   82346:	e797      	b.n	82278 <_vfiprintf_r+0x8a4>
   82348:	2600      	movs	r6, #0
   8234a:	2700      	movs	r7, #0
   8234c:	9302      	str	r3, [sp, #8]
   8234e:	4651      	mov	r1, sl
   82350:	e000      	b.n	82354 <_vfiprintf_r+0x980>
   82352:	4659      	mov	r1, fp
   82354:	08f2      	lsrs	r2, r6, #3
   82356:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
   8235a:	08f8      	lsrs	r0, r7, #3
   8235c:	f006 0307 	and.w	r3, r6, #7
   82360:	4607      	mov	r7, r0
   82362:	4616      	mov	r6, r2
   82364:	3330      	adds	r3, #48	; 0x30
   82366:	ea56 0207 	orrs.w	r2, r6, r7
   8236a:	f801 3c01 	strb.w	r3, [r1, #-1]
   8236e:	f101 3bff 	add.w	fp, r1, #4294967295
   82372:	d1ee      	bne.n	82352 <_vfiprintf_r+0x97e>
   82374:	9a02      	ldr	r2, [sp, #8]
   82376:	07d6      	lsls	r6, r2, #31
   82378:	f57f ad9f 	bpl.w	81eba <_vfiprintf_r+0x4e6>
   8237c:	2b30      	cmp	r3, #48	; 0x30
   8237e:	f43f ad9c 	beq.w	81eba <_vfiprintf_r+0x4e6>
   82382:	2330      	movs	r3, #48	; 0x30
   82384:	3902      	subs	r1, #2
   82386:	f80b 3c01 	strb.w	r3, [fp, #-1]
   8238a:	ebaa 0301 	sub.w	r3, sl, r1
   8238e:	9305      	str	r3, [sp, #20]
   82390:	468b      	mov	fp, r1
   82392:	e477      	b.n	81c84 <_vfiprintf_r+0x2b0>
   82394:	9b03      	ldr	r3, [sp, #12]
   82396:	9a08      	ldr	r2, [sp, #32]
   82398:	428a      	cmp	r2, r1
   8239a:	bfac      	ite	ge
   8239c:	189b      	addge	r3, r3, r2
   8239e:	185b      	addlt	r3, r3, r1
   823a0:	9303      	str	r3, [sp, #12]
   823a2:	e798      	b.n	822d6 <_vfiprintf_r+0x902>
   823a4:	2202      	movs	r2, #2
   823a6:	e44e      	b.n	81c46 <_vfiprintf_r+0x272>
   823a8:	2f00      	cmp	r7, #0
   823aa:	bf08      	it	eq
   823ac:	2e0a      	cmpeq	r6, #10
   823ae:	d351      	bcc.n	82454 <_vfiprintf_r+0xa80>
   823b0:	46d3      	mov	fp, sl
   823b2:	4630      	mov	r0, r6
   823b4:	4639      	mov	r1, r7
   823b6:	220a      	movs	r2, #10
   823b8:	2300      	movs	r3, #0
   823ba:	f001 ff29 	bl	84210 <__aeabi_uldivmod>
   823be:	3230      	adds	r2, #48	; 0x30
   823c0:	f80b 2d01 	strb.w	r2, [fp, #-1]!
   823c4:	4630      	mov	r0, r6
   823c6:	4639      	mov	r1, r7
   823c8:	2300      	movs	r3, #0
   823ca:	220a      	movs	r2, #10
   823cc:	f001 ff20 	bl	84210 <__aeabi_uldivmod>
   823d0:	4606      	mov	r6, r0
   823d2:	460f      	mov	r7, r1
   823d4:	ea56 0307 	orrs.w	r3, r6, r7
   823d8:	d1eb      	bne.n	823b2 <_vfiprintf_r+0x9de>
   823da:	e56e      	b.n	81eba <_vfiprintf_r+0x4e6>
   823dc:	9405      	str	r4, [sp, #20]
   823de:	46d3      	mov	fp, sl
   823e0:	e450      	b.n	81c84 <_vfiprintf_r+0x2b0>
   823e2:	aa0f      	add	r2, sp, #60	; 0x3c
   823e4:	9904      	ldr	r1, [sp, #16]
   823e6:	9806      	ldr	r0, [sp, #24]
   823e8:	f7ff fab4 	bl	81954 <__sprint_r.part.0>
   823ec:	2800      	cmp	r0, #0
   823ee:	d1a8      	bne.n	82342 <_vfiprintf_r+0x96e>
   823f0:	46d1      	mov	r9, sl
   823f2:	9a11      	ldr	r2, [sp, #68]	; 0x44
   823f4:	e75e      	b.n	822b4 <_vfiprintf_r+0x8e0>
   823f6:	aa0f      	add	r2, sp, #60	; 0x3c
   823f8:	9904      	ldr	r1, [sp, #16]
   823fa:	9806      	ldr	r0, [sp, #24]
   823fc:	f7ff faaa 	bl	81954 <__sprint_r.part.0>
   82400:	2800      	cmp	r0, #0
   82402:	d19e      	bne.n	82342 <_vfiprintf_r+0x96e>
   82404:	46d1      	mov	r9, sl
   82406:	f7ff bbbb 	b.w	81b80 <_vfiprintf_r+0x1ac>
   8240a:	bf00      	nop
   8240c:	00084584 	.word	0x00084584
   82410:	00084574 	.word	0x00084574
   82414:	3104      	adds	r1, #4
   82416:	6816      	ldr	r6, [r2, #0]
   82418:	2700      	movs	r7, #0
   8241a:	2201      	movs	r2, #1
   8241c:	9107      	str	r1, [sp, #28]
   8241e:	e412      	b.n	81c46 <_vfiprintf_r+0x272>
   82420:	9807      	ldr	r0, [sp, #28]
   82422:	2700      	movs	r7, #0
   82424:	4601      	mov	r1, r0
   82426:	3104      	adds	r1, #4
   82428:	6806      	ldr	r6, [r0, #0]
   8242a:	9107      	str	r1, [sp, #28]
   8242c:	e40b      	b.n	81c46 <_vfiprintf_r+0x272>
   8242e:	680e      	ldr	r6, [r1, #0]
   82430:	3104      	adds	r1, #4
   82432:	9107      	str	r1, [sp, #28]
   82434:	2700      	movs	r7, #0
   82436:	e592      	b.n	81f5e <_vfiprintf_r+0x58a>
   82438:	6816      	ldr	r6, [r2, #0]
   8243a:	3204      	adds	r2, #4
   8243c:	17f7      	asrs	r7, r6, #31
   8243e:	9207      	str	r2, [sp, #28]
   82440:	4630      	mov	r0, r6
   82442:	4639      	mov	r1, r7
   82444:	e512      	b.n	81e6c <_vfiprintf_r+0x498>
   82446:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   8244a:	f000 fe75 	bl	83138 <__retarget_lock_release_recursive>
   8244e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   82452:	e71b      	b.n	8228c <_vfiprintf_r+0x8b8>
   82454:	9b02      	ldr	r3, [sp, #8]
   82456:	9302      	str	r3, [sp, #8]
   82458:	2301      	movs	r3, #1
   8245a:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
   8245e:	3630      	adds	r6, #48	; 0x30
   82460:	f80b 6d41 	strb.w	r6, [fp, #-65]!
   82464:	9305      	str	r3, [sp, #20]
   82466:	e40d      	b.n	81c84 <_vfiprintf_r+0x2b0>
   82468:	aa0f      	add	r2, sp, #60	; 0x3c
   8246a:	9904      	ldr	r1, [sp, #16]
   8246c:	9806      	ldr	r0, [sp, #24]
   8246e:	f7ff fa71 	bl	81954 <__sprint_r.part.0>
   82472:	2800      	cmp	r0, #0
   82474:	f47f af65 	bne.w	82342 <_vfiprintf_r+0x96e>
   82478:	9910      	ldr	r1, [sp, #64]	; 0x40
   8247a:	46d1      	mov	r9, sl
   8247c:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8247e:	1c48      	adds	r0, r1, #1
   82480:	e457      	b.n	81d32 <_vfiprintf_r+0x35e>
   82482:	aa0f      	add	r2, sp, #60	; 0x3c
   82484:	9904      	ldr	r1, [sp, #16]
   82486:	9806      	ldr	r0, [sp, #24]
   82488:	f7ff fa64 	bl	81954 <__sprint_r.part.0>
   8248c:	2800      	cmp	r0, #0
   8248e:	f47f af58 	bne.w	82342 <_vfiprintf_r+0x96e>
   82492:	9910      	ldr	r1, [sp, #64]	; 0x40
   82494:	46d1      	mov	r9, sl
   82496:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82498:	1c48      	adds	r0, r1, #1
   8249a:	e644      	b.n	82126 <_vfiprintf_r+0x752>
   8249c:	2a00      	cmp	r2, #0
   8249e:	f040 8087 	bne.w	825b0 <_vfiprintf_r+0xbdc>
   824a2:	2001      	movs	r0, #1
   824a4:	4611      	mov	r1, r2
   824a6:	46d1      	mov	r9, sl
   824a8:	e641      	b.n	8212e <_vfiprintf_r+0x75a>
   824aa:	aa0f      	add	r2, sp, #60	; 0x3c
   824ac:	9904      	ldr	r1, [sp, #16]
   824ae:	9806      	ldr	r0, [sp, #24]
   824b0:	f7ff fa50 	bl	81954 <__sprint_r.part.0>
   824b4:	2800      	cmp	r0, #0
   824b6:	f47f af44 	bne.w	82342 <_vfiprintf_r+0x96e>
   824ba:	9810      	ldr	r0, [sp, #64]	; 0x40
   824bc:	46d1      	mov	r9, sl
   824be:	9a11      	ldr	r2, [sp, #68]	; 0x44
   824c0:	3001      	adds	r0, #1
   824c2:	e668      	b.n	82196 <_vfiprintf_r+0x7c2>
   824c4:	46cb      	mov	fp, r9
   824c6:	e6d7      	b.n	82278 <_vfiprintf_r+0x8a4>
   824c8:	9d07      	ldr	r5, [sp, #28]
   824ca:	3507      	adds	r5, #7
   824cc:	f025 0507 	bic.w	r5, r5, #7
   824d0:	f105 0208 	add.w	r2, r5, #8
   824d4:	e9d5 0100 	ldrd	r0, r1, [r5]
   824d8:	9207      	str	r2, [sp, #28]
   824da:	4606      	mov	r6, r0
   824dc:	460f      	mov	r7, r1
   824de:	e4c5      	b.n	81e6c <_vfiprintf_r+0x498>
   824e0:	9d07      	ldr	r5, [sp, #28]
   824e2:	3507      	adds	r5, #7
   824e4:	f025 0207 	bic.w	r2, r5, #7
   824e8:	f102 0108 	add.w	r1, r2, #8
   824ec:	e9d2 6700 	ldrd	r6, r7, [r2]
   824f0:	9107      	str	r1, [sp, #28]
   824f2:	2201      	movs	r2, #1
   824f4:	f7ff bba7 	b.w	81c46 <_vfiprintf_r+0x272>
   824f8:	9d07      	ldr	r5, [sp, #28]
   824fa:	3507      	adds	r5, #7
   824fc:	f025 0207 	bic.w	r2, r5, #7
   82500:	f102 0108 	add.w	r1, r2, #8
   82504:	e9d2 6700 	ldrd	r6, r7, [r2]
   82508:	9107      	str	r1, [sp, #28]
   8250a:	2200      	movs	r2, #0
   8250c:	f7ff bb9b 	b.w	81c46 <_vfiprintf_r+0x272>
   82510:	9d07      	ldr	r5, [sp, #28]
   82512:	3507      	adds	r5, #7
   82514:	f025 0107 	bic.w	r1, r5, #7
   82518:	f101 0008 	add.w	r0, r1, #8
   8251c:	9007      	str	r0, [sp, #28]
   8251e:	e9d1 6700 	ldrd	r6, r7, [r1]
   82522:	e51c      	b.n	81f5e <_vfiprintf_r+0x58a>
   82524:	46d3      	mov	fp, sl
   82526:	f7ff bbad 	b.w	81c84 <_vfiprintf_r+0x2b0>
   8252a:	252d      	movs	r5, #45	; 0x2d
   8252c:	4276      	negs	r6, r6
   8252e:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
   82532:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
   82536:	2201      	movs	r2, #1
   82538:	f7ff bb8a 	b.w	81c50 <_vfiprintf_r+0x27c>
   8253c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8253e:	b9b3      	cbnz	r3, 8256e <_vfiprintf_r+0xb9a>
   82540:	4611      	mov	r1, r2
   82542:	2001      	movs	r0, #1
   82544:	46d1      	mov	r9, sl
   82546:	e5f2      	b.n	8212e <_vfiprintf_r+0x75a>
   82548:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   8254c:	f000 fdf4 	bl	83138 <__retarget_lock_release_recursive>
   82550:	f04f 33ff 	mov.w	r3, #4294967295
   82554:	9303      	str	r3, [sp, #12]
   82556:	f7ff bb4c 	b.w	81bf2 <_vfiprintf_r+0x21e>
   8255a:	aa0f      	add	r2, sp, #60	; 0x3c
   8255c:	9904      	ldr	r1, [sp, #16]
   8255e:	9806      	ldr	r0, [sp, #24]
   82560:	f7ff f9f8 	bl	81954 <__sprint_r.part.0>
   82564:	2800      	cmp	r0, #0
   82566:	f47f aeec 	bne.w	82342 <_vfiprintf_r+0x96e>
   8256a:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8256c:	e6aa      	b.n	822c4 <_vfiprintf_r+0x8f0>
   8256e:	2202      	movs	r2, #2
   82570:	ab0e      	add	r3, sp, #56	; 0x38
   82572:	921d      	str	r2, [sp, #116]	; 0x74
   82574:	931c      	str	r3, [sp, #112]	; 0x70
   82576:	2001      	movs	r0, #1
   82578:	46d1      	mov	r9, sl
   8257a:	e5d0      	b.n	8211e <_vfiprintf_r+0x74a>
   8257c:	4d34      	ldr	r5, [pc, #208]	; (82650 <_vfiprintf_r+0xc7c>)
   8257e:	e5fd      	b.n	8217c <_vfiprintf_r+0x7a8>
   82580:	9a07      	ldr	r2, [sp, #28]
   82582:	4613      	mov	r3, r2
   82584:	3304      	adds	r3, #4
   82586:	9307      	str	r3, [sp, #28]
   82588:	9b03      	ldr	r3, [sp, #12]
   8258a:	6811      	ldr	r1, [r2, #0]
   8258c:	17dd      	asrs	r5, r3, #31
   8258e:	461a      	mov	r2, r3
   82590:	462b      	mov	r3, r5
   82592:	e9c1 2300 	strd	r2, r3, [r1]
   82596:	f7ff ba5a 	b.w	81a4e <_vfiprintf_r+0x7a>
   8259a:	4658      	mov	r0, fp
   8259c:	9507      	str	r5, [sp, #28]
   8259e:	9302      	str	r3, [sp, #8]
   825a0:	f001 fc3c 	bl	83e1c <strlen>
   825a4:	2400      	movs	r4, #0
   825a6:	9005      	str	r0, [sp, #20]
   825a8:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   825ac:	f7ff bb6a 	b.w	81c84 <_vfiprintf_r+0x2b0>
   825b0:	aa0f      	add	r2, sp, #60	; 0x3c
   825b2:	9904      	ldr	r1, [sp, #16]
   825b4:	9806      	ldr	r0, [sp, #24]
   825b6:	f7ff f9cd 	bl	81954 <__sprint_r.part.0>
   825ba:	2800      	cmp	r0, #0
   825bc:	f47f aec1 	bne.w	82342 <_vfiprintf_r+0x96e>
   825c0:	9910      	ldr	r1, [sp, #64]	; 0x40
   825c2:	46d1      	mov	r9, sl
   825c4:	9a11      	ldr	r2, [sp, #68]	; 0x44
   825c6:	1c48      	adds	r0, r1, #1
   825c8:	e5b1      	b.n	8212e <_vfiprintf_r+0x75a>
   825ca:	9910      	ldr	r1, [sp, #64]	; 0x40
   825cc:	9a11      	ldr	r2, [sp, #68]	; 0x44
   825ce:	3101      	adds	r1, #1
   825d0:	4e20      	ldr	r6, [pc, #128]	; (82654 <_vfiprintf_r+0xc80>)
   825d2:	f7ff bb9c 	b.w	81d0e <_vfiprintf_r+0x33a>
   825d6:	2c06      	cmp	r4, #6
   825d8:	bf28      	it	cs
   825da:	2406      	movcs	r4, #6
   825dc:	9507      	str	r5, [sp, #28]
   825de:	9405      	str	r4, [sp, #20]
   825e0:	9401      	str	r4, [sp, #4]
   825e2:	f8df b074 	ldr.w	fp, [pc, #116]	; 82658 <_vfiprintf_r+0xc84>
   825e6:	e4e3      	b.n	81fb0 <_vfiprintf_r+0x5dc>
   825e8:	9810      	ldr	r0, [sp, #64]	; 0x40
   825ea:	4e1a      	ldr	r6, [pc, #104]	; (82654 <_vfiprintf_r+0xc80>)
   825ec:	3001      	adds	r0, #1
   825ee:	e60e      	b.n	8220e <_vfiprintf_r+0x83a>
   825f0:	4686      	mov	lr, r0
   825f2:	4d17      	ldr	r5, [pc, #92]	; (82650 <_vfiprintf_r+0xc7c>)
   825f4:	f7ff bbe2 	b.w	81dbc <_vfiprintf_r+0x3e8>
   825f8:	9405      	str	r4, [sp, #20]
   825fa:	9507      	str	r5, [sp, #28]
   825fc:	9302      	str	r3, [sp, #8]
   825fe:	4604      	mov	r4, r0
   82600:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   82604:	f7ff bb3e 	b.w	81c84 <_vfiprintf_r+0x2b0>
   82608:	9806      	ldr	r0, [sp, #24]
   8260a:	aa0f      	add	r2, sp, #60	; 0x3c
   8260c:	4659      	mov	r1, fp
   8260e:	f7ff f9a1 	bl	81954 <__sprint_r.part.0>
   82612:	2800      	cmp	r0, #0
   82614:	f43f ae2e 	beq.w	82274 <_vfiprintf_r+0x8a0>
   82618:	e62e      	b.n	82278 <_vfiprintf_r+0x8a4>
   8261a:	9907      	ldr	r1, [sp, #28]
   8261c:	f898 2001 	ldrb.w	r2, [r8, #1]
   82620:	680c      	ldr	r4, [r1, #0]
   82622:	3104      	adds	r1, #4
   82624:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
   82628:	46b8      	mov	r8, r7
   8262a:	9107      	str	r1, [sp, #28]
   8262c:	f7ff ba44 	b.w	81ab8 <_vfiprintf_r+0xe4>
   82630:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   82634:	e4a7      	b.n	81f86 <_vfiprintf_r+0x5b2>
   82636:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   8263a:	e521      	b.n	82080 <_vfiprintf_r+0x6ac>
   8263c:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   82640:	e47c      	b.n	81f3c <_vfiprintf_r+0x568>
   82642:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   82646:	e43f      	b.n	81ec8 <_vfiprintf_r+0x4f4>
   82648:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   8264c:	f7ff bbfa 	b.w	81e44 <_vfiprintf_r+0x470>
   82650:	00084584 	.word	0x00084584
   82654:	00084574 	.word	0x00084574
   82658:	0008456c 	.word	0x0008456c

0008265c <__sbprintf>:
   8265c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82660:	460c      	mov	r4, r1
   82662:	f04f 0e00 	mov.w	lr, #0
   82666:	f44f 6580 	mov.w	r5, #1024	; 0x400
   8266a:	4606      	mov	r6, r0
   8266c:	4617      	mov	r7, r2
   8266e:	4698      	mov	r8, r3
   82670:	6e62      	ldr	r2, [r4, #100]	; 0x64
   82672:	89e3      	ldrh	r3, [r4, #14]
   82674:	8989      	ldrh	r1, [r1, #12]
   82676:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
   8267a:	f021 0102 	bic.w	r1, r1, #2
   8267e:	9219      	str	r2, [sp, #100]	; 0x64
   82680:	f8ad 300e 	strh.w	r3, [sp, #14]
   82684:	69e2      	ldr	r2, [r4, #28]
   82686:	6a63      	ldr	r3, [r4, #36]	; 0x24
   82688:	f8ad 100c 	strh.w	r1, [sp, #12]
   8268c:	a816      	add	r0, sp, #88	; 0x58
   8268e:	a91a      	add	r1, sp, #104	; 0x68
   82690:	f8cd e018 	str.w	lr, [sp, #24]
   82694:	9207      	str	r2, [sp, #28]
   82696:	9309      	str	r3, [sp, #36]	; 0x24
   82698:	9100      	str	r1, [sp, #0]
   8269a:	9104      	str	r1, [sp, #16]
   8269c:	9502      	str	r5, [sp, #8]
   8269e:	9505      	str	r5, [sp, #20]
   826a0:	f000 fd44 	bl	8312c <__retarget_lock_init_recursive>
   826a4:	4643      	mov	r3, r8
   826a6:	463a      	mov	r2, r7
   826a8:	4669      	mov	r1, sp
   826aa:	4630      	mov	r0, r6
   826ac:	f7ff f992 	bl	819d4 <_vfiprintf_r>
   826b0:	1e05      	subs	r5, r0, #0
   826b2:	db07      	blt.n	826c4 <__sbprintf+0x68>
   826b4:	4630      	mov	r0, r6
   826b6:	4669      	mov	r1, sp
   826b8:	f000 f924 	bl	82904 <_fflush_r>
   826bc:	2800      	cmp	r0, #0
   826be:	bf18      	it	ne
   826c0:	f04f 35ff 	movne.w	r5, #4294967295
   826c4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   826c8:	065b      	lsls	r3, r3, #25
   826ca:	d503      	bpl.n	826d4 <__sbprintf+0x78>
   826cc:	89a3      	ldrh	r3, [r4, #12]
   826ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   826d2:	81a3      	strh	r3, [r4, #12]
   826d4:	9816      	ldr	r0, [sp, #88]	; 0x58
   826d6:	f000 fd2b 	bl	83130 <__retarget_lock_close_recursive>
   826da:	4628      	mov	r0, r5
   826dc:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
   826e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000826e4 <__swsetup_r>:
   826e4:	b538      	push	{r3, r4, r5, lr}
   826e6:	4b30      	ldr	r3, [pc, #192]	; (827a8 <__swsetup_r+0xc4>)
   826e8:	4605      	mov	r5, r0
   826ea:	6818      	ldr	r0, [r3, #0]
   826ec:	460c      	mov	r4, r1
   826ee:	b110      	cbz	r0, 826f6 <__swsetup_r+0x12>
   826f0:	6b83      	ldr	r3, [r0, #56]	; 0x38
   826f2:	2b00      	cmp	r3, #0
   826f4:	d038      	beq.n	82768 <__swsetup_r+0x84>
   826f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   826fa:	b293      	uxth	r3, r2
   826fc:	0718      	lsls	r0, r3, #28
   826fe:	d50c      	bpl.n	8271a <__swsetup_r+0x36>
   82700:	6920      	ldr	r0, [r4, #16]
   82702:	b1a8      	cbz	r0, 82730 <__swsetup_r+0x4c>
   82704:	f013 0201 	ands.w	r2, r3, #1
   82708:	d01e      	beq.n	82748 <__swsetup_r+0x64>
   8270a:	2200      	movs	r2, #0
   8270c:	6963      	ldr	r3, [r4, #20]
   8270e:	60a2      	str	r2, [r4, #8]
   82710:	425b      	negs	r3, r3
   82712:	61a3      	str	r3, [r4, #24]
   82714:	b1f0      	cbz	r0, 82754 <__swsetup_r+0x70>
   82716:	2000      	movs	r0, #0
   82718:	bd38      	pop	{r3, r4, r5, pc}
   8271a:	06d9      	lsls	r1, r3, #27
   8271c:	d53b      	bpl.n	82796 <__swsetup_r+0xb2>
   8271e:	0758      	lsls	r0, r3, #29
   82720:	d425      	bmi.n	8276e <__swsetup_r+0x8a>
   82722:	6920      	ldr	r0, [r4, #16]
   82724:	f042 0308 	orr.w	r3, r2, #8
   82728:	81a3      	strh	r3, [r4, #12]
   8272a:	b29b      	uxth	r3, r3
   8272c:	2800      	cmp	r0, #0
   8272e:	d1e9      	bne.n	82704 <__swsetup_r+0x20>
   82730:	f403 7220 	and.w	r2, r3, #640	; 0x280
   82734:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   82738:	d0e4      	beq.n	82704 <__swsetup_r+0x20>
   8273a:	4628      	mov	r0, r5
   8273c:	4621      	mov	r1, r4
   8273e:	f000 fd2b 	bl	83198 <__smakebuf_r>
   82742:	89a3      	ldrh	r3, [r4, #12]
   82744:	6920      	ldr	r0, [r4, #16]
   82746:	e7dd      	b.n	82704 <__swsetup_r+0x20>
   82748:	0799      	lsls	r1, r3, #30
   8274a:	bf58      	it	pl
   8274c:	6962      	ldrpl	r2, [r4, #20]
   8274e:	60a2      	str	r2, [r4, #8]
   82750:	2800      	cmp	r0, #0
   82752:	d1e0      	bne.n	82716 <__swsetup_r+0x32>
   82754:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82758:	061a      	lsls	r2, r3, #24
   8275a:	d5dd      	bpl.n	82718 <__swsetup_r+0x34>
   8275c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82760:	81a3      	strh	r3, [r4, #12]
   82762:	f04f 30ff 	mov.w	r0, #4294967295
   82766:	bd38      	pop	{r3, r4, r5, pc}
   82768:	f000 f924 	bl	829b4 <__sinit>
   8276c:	e7c3      	b.n	826f6 <__swsetup_r+0x12>
   8276e:	6b21      	ldr	r1, [r4, #48]	; 0x30
   82770:	b151      	cbz	r1, 82788 <__swsetup_r+0xa4>
   82772:	f104 0340 	add.w	r3, r4, #64	; 0x40
   82776:	4299      	cmp	r1, r3
   82778:	d004      	beq.n	82784 <__swsetup_r+0xa0>
   8277a:	4628      	mov	r0, r5
   8277c:	f000 fa40 	bl	82c00 <_free_r>
   82780:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   82784:	2300      	movs	r3, #0
   82786:	6323      	str	r3, [r4, #48]	; 0x30
   82788:	2300      	movs	r3, #0
   8278a:	6920      	ldr	r0, [r4, #16]
   8278c:	f022 0224 	bic.w	r2, r2, #36	; 0x24
   82790:	e884 0009 	stmia.w	r4, {r0, r3}
   82794:	e7c6      	b.n	82724 <__swsetup_r+0x40>
   82796:	2309      	movs	r3, #9
   82798:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   8279c:	602b      	str	r3, [r5, #0]
   8279e:	f04f 30ff 	mov.w	r0, #4294967295
   827a2:	81a2      	strh	r2, [r4, #12]
   827a4:	bd38      	pop	{r3, r4, r5, pc}
   827a6:	bf00      	nop
   827a8:	20070140 	.word	0x20070140

000827ac <register_fini>:
   827ac:	4b02      	ldr	r3, [pc, #8]	; (827b8 <register_fini+0xc>)
   827ae:	b113      	cbz	r3, 827b6 <register_fini+0xa>
   827b0:	4802      	ldr	r0, [pc, #8]	; (827bc <register_fini+0x10>)
   827b2:	f000 b805 	b.w	827c0 <atexit>
   827b6:	4770      	bx	lr
   827b8:	00000000 	.word	0x00000000
   827bc:	00082a2d 	.word	0x00082a2d

000827c0 <atexit>:
   827c0:	2300      	movs	r3, #0
   827c2:	4601      	mov	r1, r0
   827c4:	461a      	mov	r2, r3
   827c6:	4618      	mov	r0, r3
   827c8:	f001 bbfa 	b.w	83fc0 <__register_exitproc>

000827cc <__sflush_r>:
   827cc:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
   827d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   827d4:	b29a      	uxth	r2, r3
   827d6:	460d      	mov	r5, r1
   827d8:	0711      	lsls	r1, r2, #28
   827da:	4680      	mov	r8, r0
   827dc:	d43a      	bmi.n	82854 <__sflush_r+0x88>
   827de:	686a      	ldr	r2, [r5, #4]
   827e0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   827e4:	2a00      	cmp	r2, #0
   827e6:	81ab      	strh	r3, [r5, #12]
   827e8:	dd70      	ble.n	828cc <__sflush_r+0x100>
   827ea:	6aac      	ldr	r4, [r5, #40]	; 0x28
   827ec:	2c00      	cmp	r4, #0
   827ee:	d04a      	beq.n	82886 <__sflush_r+0xba>
   827f0:	2200      	movs	r2, #0
   827f2:	b29b      	uxth	r3, r3
   827f4:	f8d8 6000 	ldr.w	r6, [r8]
   827f8:	f8c8 2000 	str.w	r2, [r8]
   827fc:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
   82800:	d068      	beq.n	828d4 <__sflush_r+0x108>
   82802:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   82804:	075f      	lsls	r7, r3, #29
   82806:	d505      	bpl.n	82814 <__sflush_r+0x48>
   82808:	6869      	ldr	r1, [r5, #4]
   8280a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   8280c:	1a52      	subs	r2, r2, r1
   8280e:	b10b      	cbz	r3, 82814 <__sflush_r+0x48>
   82810:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   82812:	1ad2      	subs	r2, r2, r3
   82814:	2300      	movs	r3, #0
   82816:	69e9      	ldr	r1, [r5, #28]
   82818:	4640      	mov	r0, r8
   8281a:	47a0      	blx	r4
   8281c:	1c44      	adds	r4, r0, #1
   8281e:	d03d      	beq.n	8289c <__sflush_r+0xd0>
   82820:	2100      	movs	r1, #0
   82822:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
   82826:	692a      	ldr	r2, [r5, #16]
   82828:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   8282c:	81ab      	strh	r3, [r5, #12]
   8282e:	04db      	lsls	r3, r3, #19
   82830:	6069      	str	r1, [r5, #4]
   82832:	602a      	str	r2, [r5, #0]
   82834:	d448      	bmi.n	828c8 <__sflush_r+0xfc>
   82836:	6b29      	ldr	r1, [r5, #48]	; 0x30
   82838:	f8c8 6000 	str.w	r6, [r8]
   8283c:	b319      	cbz	r1, 82886 <__sflush_r+0xba>
   8283e:	f105 0340 	add.w	r3, r5, #64	; 0x40
   82842:	4299      	cmp	r1, r3
   82844:	d002      	beq.n	8284c <__sflush_r+0x80>
   82846:	4640      	mov	r0, r8
   82848:	f000 f9da 	bl	82c00 <_free_r>
   8284c:	2000      	movs	r0, #0
   8284e:	6328      	str	r0, [r5, #48]	; 0x30
   82850:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82854:	692e      	ldr	r6, [r5, #16]
   82856:	b1b6      	cbz	r6, 82886 <__sflush_r+0xba>
   82858:	0791      	lsls	r1, r2, #30
   8285a:	bf18      	it	ne
   8285c:	2300      	movne	r3, #0
   8285e:	682c      	ldr	r4, [r5, #0]
   82860:	bf08      	it	eq
   82862:	696b      	ldreq	r3, [r5, #20]
   82864:	602e      	str	r6, [r5, #0]
   82866:	1ba4      	subs	r4, r4, r6
   82868:	60ab      	str	r3, [r5, #8]
   8286a:	e00a      	b.n	82882 <__sflush_r+0xb6>
   8286c:	4623      	mov	r3, r4
   8286e:	4632      	mov	r2, r6
   82870:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   82872:	69e9      	ldr	r1, [r5, #28]
   82874:	4640      	mov	r0, r8
   82876:	47b8      	blx	r7
   82878:	2800      	cmp	r0, #0
   8287a:	eba4 0400 	sub.w	r4, r4, r0
   8287e:	4406      	add	r6, r0
   82880:	dd04      	ble.n	8288c <__sflush_r+0xc0>
   82882:	2c00      	cmp	r4, #0
   82884:	dcf2      	bgt.n	8286c <__sflush_r+0xa0>
   82886:	2000      	movs	r0, #0
   82888:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8288c:	89ab      	ldrh	r3, [r5, #12]
   8288e:	f04f 30ff 	mov.w	r0, #4294967295
   82892:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82896:	81ab      	strh	r3, [r5, #12]
   82898:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8289c:	f8d8 4000 	ldr.w	r4, [r8]
   828a0:	2c1d      	cmp	r4, #29
   828a2:	d8f3      	bhi.n	8288c <__sflush_r+0xc0>
   828a4:	4b16      	ldr	r3, [pc, #88]	; (82900 <__sflush_r+0x134>)
   828a6:	40e3      	lsrs	r3, r4
   828a8:	43db      	mvns	r3, r3
   828aa:	f013 0301 	ands.w	r3, r3, #1
   828ae:	d1ed      	bne.n	8288c <__sflush_r+0xc0>
   828b0:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
   828b4:	6929      	ldr	r1, [r5, #16]
   828b6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   828ba:	81aa      	strh	r2, [r5, #12]
   828bc:	04d2      	lsls	r2, r2, #19
   828be:	606b      	str	r3, [r5, #4]
   828c0:	6029      	str	r1, [r5, #0]
   828c2:	d5b8      	bpl.n	82836 <__sflush_r+0x6a>
   828c4:	2c00      	cmp	r4, #0
   828c6:	d1b6      	bne.n	82836 <__sflush_r+0x6a>
   828c8:	6528      	str	r0, [r5, #80]	; 0x50
   828ca:	e7b4      	b.n	82836 <__sflush_r+0x6a>
   828cc:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   828ce:	2a00      	cmp	r2, #0
   828d0:	dc8b      	bgt.n	827ea <__sflush_r+0x1e>
   828d2:	e7d8      	b.n	82886 <__sflush_r+0xba>
   828d4:	2301      	movs	r3, #1
   828d6:	69e9      	ldr	r1, [r5, #28]
   828d8:	4640      	mov	r0, r8
   828da:	47a0      	blx	r4
   828dc:	1c43      	adds	r3, r0, #1
   828de:	4602      	mov	r2, r0
   828e0:	d002      	beq.n	828e8 <__sflush_r+0x11c>
   828e2:	89ab      	ldrh	r3, [r5, #12]
   828e4:	6aac      	ldr	r4, [r5, #40]	; 0x28
   828e6:	e78d      	b.n	82804 <__sflush_r+0x38>
   828e8:	f8d8 3000 	ldr.w	r3, [r8]
   828ec:	2b00      	cmp	r3, #0
   828ee:	d0f8      	beq.n	828e2 <__sflush_r+0x116>
   828f0:	2b1d      	cmp	r3, #29
   828f2:	d001      	beq.n	828f8 <__sflush_r+0x12c>
   828f4:	2b16      	cmp	r3, #22
   828f6:	d1c9      	bne.n	8288c <__sflush_r+0xc0>
   828f8:	f8c8 6000 	str.w	r6, [r8]
   828fc:	e7c3      	b.n	82886 <__sflush_r+0xba>
   828fe:	bf00      	nop
   82900:	20400001 	.word	0x20400001

00082904 <_fflush_r>:
   82904:	b538      	push	{r3, r4, r5, lr}
   82906:	460d      	mov	r5, r1
   82908:	4604      	mov	r4, r0
   8290a:	b108      	cbz	r0, 82910 <_fflush_r+0xc>
   8290c:	6b83      	ldr	r3, [r0, #56]	; 0x38
   8290e:	b1bb      	cbz	r3, 82940 <_fflush_r+0x3c>
   82910:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
   82914:	b188      	cbz	r0, 8293a <_fflush_r+0x36>
   82916:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   82918:	07db      	lsls	r3, r3, #31
   8291a:	d401      	bmi.n	82920 <_fflush_r+0x1c>
   8291c:	0581      	lsls	r1, r0, #22
   8291e:	d517      	bpl.n	82950 <_fflush_r+0x4c>
   82920:	4620      	mov	r0, r4
   82922:	4629      	mov	r1, r5
   82924:	f7ff ff52 	bl	827cc <__sflush_r>
   82928:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   8292a:	4604      	mov	r4, r0
   8292c:	07da      	lsls	r2, r3, #31
   8292e:	d402      	bmi.n	82936 <_fflush_r+0x32>
   82930:	89ab      	ldrh	r3, [r5, #12]
   82932:	059b      	lsls	r3, r3, #22
   82934:	d507      	bpl.n	82946 <_fflush_r+0x42>
   82936:	4620      	mov	r0, r4
   82938:	bd38      	pop	{r3, r4, r5, pc}
   8293a:	4604      	mov	r4, r0
   8293c:	4620      	mov	r0, r4
   8293e:	bd38      	pop	{r3, r4, r5, pc}
   82940:	f000 f838 	bl	829b4 <__sinit>
   82944:	e7e4      	b.n	82910 <_fflush_r+0xc>
   82946:	6da8      	ldr	r0, [r5, #88]	; 0x58
   82948:	f000 fbf6 	bl	83138 <__retarget_lock_release_recursive>
   8294c:	4620      	mov	r0, r4
   8294e:	bd38      	pop	{r3, r4, r5, pc}
   82950:	6da8      	ldr	r0, [r5, #88]	; 0x58
   82952:	f000 fbef 	bl	83134 <__retarget_lock_acquire_recursive>
   82956:	e7e3      	b.n	82920 <_fflush_r+0x1c>

00082958 <_cleanup_r>:
   82958:	4901      	ldr	r1, [pc, #4]	; (82960 <_cleanup_r+0x8>)
   8295a:	f000 bbb1 	b.w	830c0 <_fwalk_reent>
   8295e:	bf00      	nop
   82960:	000840a9 	.word	0x000840a9

00082964 <std.isra.0>:
   82964:	2300      	movs	r3, #0
   82966:	b510      	push	{r4, lr}
   82968:	4604      	mov	r4, r0
   8296a:	8181      	strh	r1, [r0, #12]
   8296c:	81c2      	strh	r2, [r0, #14]
   8296e:	6003      	str	r3, [r0, #0]
   82970:	6043      	str	r3, [r0, #4]
   82972:	6083      	str	r3, [r0, #8]
   82974:	6643      	str	r3, [r0, #100]	; 0x64
   82976:	6103      	str	r3, [r0, #16]
   82978:	6143      	str	r3, [r0, #20]
   8297a:	6183      	str	r3, [r0, #24]
   8297c:	4619      	mov	r1, r3
   8297e:	2208      	movs	r2, #8
   82980:	305c      	adds	r0, #92	; 0x5c
   82982:	f7fe fec9 	bl	81718 <memset>
   82986:	4807      	ldr	r0, [pc, #28]	; (829a4 <std.isra.0+0x40>)
   82988:	4907      	ldr	r1, [pc, #28]	; (829a8 <std.isra.0+0x44>)
   8298a:	4a08      	ldr	r2, [pc, #32]	; (829ac <std.isra.0+0x48>)
   8298c:	4b08      	ldr	r3, [pc, #32]	; (829b0 <std.isra.0+0x4c>)
   8298e:	6220      	str	r0, [r4, #32]
   82990:	61e4      	str	r4, [r4, #28]
   82992:	6261      	str	r1, [r4, #36]	; 0x24
   82994:	62a2      	str	r2, [r4, #40]	; 0x28
   82996:	62e3      	str	r3, [r4, #44]	; 0x2c
   82998:	f104 0058 	add.w	r0, r4, #88	; 0x58
   8299c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   829a0:	f000 bbc4 	b.w	8312c <__retarget_lock_init_recursive>
   829a4:	00083d95 	.word	0x00083d95
   829a8:	00083db9 	.word	0x00083db9
   829ac:	00083df5 	.word	0x00083df5
   829b0:	00083e15 	.word	0x00083e15

000829b4 <__sinit>:
   829b4:	b510      	push	{r4, lr}
   829b6:	4604      	mov	r4, r0
   829b8:	4814      	ldr	r0, [pc, #80]	; (82a0c <__sinit+0x58>)
   829ba:	f000 fbbb 	bl	83134 <__retarget_lock_acquire_recursive>
   829be:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   829c0:	b9fa      	cbnz	r2, 82a02 <__sinit+0x4e>
   829c2:	2003      	movs	r0, #3
   829c4:	4912      	ldr	r1, [pc, #72]	; (82a10 <__sinit+0x5c>)
   829c6:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
   829ca:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
   829ce:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
   829d2:	f8c4 02e4 	str.w	r0, [r4, #740]	; 0x2e4
   829d6:	63e1      	str	r1, [r4, #60]	; 0x3c
   829d8:	6860      	ldr	r0, [r4, #4]
   829da:	2104      	movs	r1, #4
   829dc:	f7ff ffc2 	bl	82964 <std.isra.0>
   829e0:	68a0      	ldr	r0, [r4, #8]
   829e2:	2201      	movs	r2, #1
   829e4:	2109      	movs	r1, #9
   829e6:	f7ff ffbd 	bl	82964 <std.isra.0>
   829ea:	68e0      	ldr	r0, [r4, #12]
   829ec:	2202      	movs	r2, #2
   829ee:	2112      	movs	r1, #18
   829f0:	f7ff ffb8 	bl	82964 <std.isra.0>
   829f4:	2301      	movs	r3, #1
   829f6:	4805      	ldr	r0, [pc, #20]	; (82a0c <__sinit+0x58>)
   829f8:	63a3      	str	r3, [r4, #56]	; 0x38
   829fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   829fe:	f000 bb9b 	b.w	83138 <__retarget_lock_release_recursive>
   82a02:	4802      	ldr	r0, [pc, #8]	; (82a0c <__sinit+0x58>)
   82a04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   82a08:	f000 bb96 	b.w	83138 <__retarget_lock_release_recursive>
   82a0c:	20070c6c 	.word	0x20070c6c
   82a10:	00082959 	.word	0x00082959

00082a14 <__sfp_lock_acquire>:
   82a14:	4801      	ldr	r0, [pc, #4]	; (82a1c <__sfp_lock_acquire+0x8>)
   82a16:	f000 bb8d 	b.w	83134 <__retarget_lock_acquire_recursive>
   82a1a:	bf00      	nop
   82a1c:	20070c80 	.word	0x20070c80

00082a20 <__sfp_lock_release>:
   82a20:	4801      	ldr	r0, [pc, #4]	; (82a28 <__sfp_lock_release+0x8>)
   82a22:	f000 bb89 	b.w	83138 <__retarget_lock_release_recursive>
   82a26:	bf00      	nop
   82a28:	20070c80 	.word	0x20070c80

00082a2c <__libc_fini_array>:
   82a2c:	b538      	push	{r3, r4, r5, lr}
   82a2e:	4c0a      	ldr	r4, [pc, #40]	; (82a58 <__libc_fini_array+0x2c>)
   82a30:	4d0a      	ldr	r5, [pc, #40]	; (82a5c <__libc_fini_array+0x30>)
   82a32:	1b64      	subs	r4, r4, r5
   82a34:	10a4      	asrs	r4, r4, #2
   82a36:	d00a      	beq.n	82a4e <__libc_fini_array+0x22>
   82a38:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   82a3c:	3b01      	subs	r3, #1
   82a3e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   82a42:	3c01      	subs	r4, #1
   82a44:	f855 3904 	ldr.w	r3, [r5], #-4
   82a48:	4798      	blx	r3
   82a4a:	2c00      	cmp	r4, #0
   82a4c:	d1f9      	bne.n	82a42 <__libc_fini_array+0x16>
   82a4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   82a52:	f001 be33 	b.w	846bc <_fini>
   82a56:	bf00      	nop
   82a58:	000846cc 	.word	0x000846cc
   82a5c:	000846c8 	.word	0x000846c8

00082a60 <__fputwc>:
   82a60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   82a64:	b083      	sub	sp, #12
   82a66:	4607      	mov	r7, r0
   82a68:	4688      	mov	r8, r1
   82a6a:	4614      	mov	r4, r2
   82a6c:	f000 fb50 	bl	83110 <__locale_mb_cur_max>
   82a70:	2801      	cmp	r0, #1
   82a72:	d033      	beq.n	82adc <__fputwc+0x7c>
   82a74:	4642      	mov	r2, r8
   82a76:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   82a7a:	a901      	add	r1, sp, #4
   82a7c:	4638      	mov	r0, r7
   82a7e:	f001 fa53 	bl	83f28 <_wcrtomb_r>
   82a82:	1c42      	adds	r2, r0, #1
   82a84:	4606      	mov	r6, r0
   82a86:	d022      	beq.n	82ace <__fputwc+0x6e>
   82a88:	b390      	cbz	r0, 82af0 <__fputwc+0x90>
   82a8a:	f89d 1004 	ldrb.w	r1, [sp, #4]
   82a8e:	2500      	movs	r5, #0
   82a90:	f10d 0904 	add.w	r9, sp, #4
   82a94:	e008      	b.n	82aa8 <__fputwc+0x48>
   82a96:	6823      	ldr	r3, [r4, #0]
   82a98:	1c5a      	adds	r2, r3, #1
   82a9a:	6022      	str	r2, [r4, #0]
   82a9c:	7019      	strb	r1, [r3, #0]
   82a9e:	3501      	adds	r5, #1
   82aa0:	42b5      	cmp	r5, r6
   82aa2:	d225      	bcs.n	82af0 <__fputwc+0x90>
   82aa4:	f815 1009 	ldrb.w	r1, [r5, r9]
   82aa8:	68a3      	ldr	r3, [r4, #8]
   82aaa:	3b01      	subs	r3, #1
   82aac:	2b00      	cmp	r3, #0
   82aae:	60a3      	str	r3, [r4, #8]
   82ab0:	daf1      	bge.n	82a96 <__fputwc+0x36>
   82ab2:	69a2      	ldr	r2, [r4, #24]
   82ab4:	4293      	cmp	r3, r2
   82ab6:	db01      	blt.n	82abc <__fputwc+0x5c>
   82ab8:	290a      	cmp	r1, #10
   82aba:	d1ec      	bne.n	82a96 <__fputwc+0x36>
   82abc:	4622      	mov	r2, r4
   82abe:	4638      	mov	r0, r7
   82ac0:	f001 f9da 	bl	83e78 <__swbuf_r>
   82ac4:	1c43      	adds	r3, r0, #1
   82ac6:	d1ea      	bne.n	82a9e <__fputwc+0x3e>
   82ac8:	b003      	add	sp, #12
   82aca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   82ace:	89a3      	ldrh	r3, [r4, #12]
   82ad0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82ad4:	81a3      	strh	r3, [r4, #12]
   82ad6:	b003      	add	sp, #12
   82ad8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   82adc:	f108 33ff 	add.w	r3, r8, #4294967295
   82ae0:	2bfe      	cmp	r3, #254	; 0xfe
   82ae2:	d8c7      	bhi.n	82a74 <__fputwc+0x14>
   82ae4:	fa5f f188 	uxtb.w	r1, r8
   82ae8:	4606      	mov	r6, r0
   82aea:	f88d 1004 	strb.w	r1, [sp, #4]
   82aee:	e7ce      	b.n	82a8e <__fputwc+0x2e>
   82af0:	4640      	mov	r0, r8
   82af2:	b003      	add	sp, #12
   82af4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00082af8 <_fputwc_r>:
   82af8:	b530      	push	{r4, r5, lr}
   82afa:	6e53      	ldr	r3, [r2, #100]	; 0x64
   82afc:	4614      	mov	r4, r2
   82afe:	f013 0f01 	tst.w	r3, #1
   82b02:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   82b06:	b083      	sub	sp, #12
   82b08:	4605      	mov	r5, r0
   82b0a:	b29a      	uxth	r2, r3
   82b0c:	d101      	bne.n	82b12 <_fputwc_r+0x1a>
   82b0e:	0590      	lsls	r0, r2, #22
   82b10:	d51c      	bpl.n	82b4c <_fputwc_r+0x54>
   82b12:	0490      	lsls	r0, r2, #18
   82b14:	d406      	bmi.n	82b24 <_fputwc_r+0x2c>
   82b16:	6e62      	ldr	r2, [r4, #100]	; 0x64
   82b18:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   82b1c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   82b20:	81a3      	strh	r3, [r4, #12]
   82b22:	6662      	str	r2, [r4, #100]	; 0x64
   82b24:	4628      	mov	r0, r5
   82b26:	4622      	mov	r2, r4
   82b28:	f7ff ff9a 	bl	82a60 <__fputwc>
   82b2c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   82b2e:	4605      	mov	r5, r0
   82b30:	07da      	lsls	r2, r3, #31
   82b32:	d402      	bmi.n	82b3a <_fputwc_r+0x42>
   82b34:	89a3      	ldrh	r3, [r4, #12]
   82b36:	059b      	lsls	r3, r3, #22
   82b38:	d502      	bpl.n	82b40 <_fputwc_r+0x48>
   82b3a:	4628      	mov	r0, r5
   82b3c:	b003      	add	sp, #12
   82b3e:	bd30      	pop	{r4, r5, pc}
   82b40:	6da0      	ldr	r0, [r4, #88]	; 0x58
   82b42:	f000 faf9 	bl	83138 <__retarget_lock_release_recursive>
   82b46:	4628      	mov	r0, r5
   82b48:	b003      	add	sp, #12
   82b4a:	bd30      	pop	{r4, r5, pc}
   82b4c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   82b4e:	9101      	str	r1, [sp, #4]
   82b50:	f000 faf0 	bl	83134 <__retarget_lock_acquire_recursive>
   82b54:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82b58:	9901      	ldr	r1, [sp, #4]
   82b5a:	b29a      	uxth	r2, r3
   82b5c:	e7d9      	b.n	82b12 <_fputwc_r+0x1a>
   82b5e:	bf00      	nop

00082b60 <_malloc_trim_r>:
   82b60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82b62:	460c      	mov	r4, r1
   82b64:	4f23      	ldr	r7, [pc, #140]	; (82bf4 <_malloc_trim_r+0x94>)
   82b66:	4606      	mov	r6, r0
   82b68:	f000 ff40 	bl	839ec <__malloc_lock>
   82b6c:	68bb      	ldr	r3, [r7, #8]
   82b6e:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   82b72:	685d      	ldr	r5, [r3, #4]
   82b74:	310f      	adds	r1, #15
   82b76:	f025 0503 	bic.w	r5, r5, #3
   82b7a:	4429      	add	r1, r5
   82b7c:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   82b80:	f021 010f 	bic.w	r1, r1, #15
   82b84:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   82b88:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   82b8c:	db07      	blt.n	82b9e <_malloc_trim_r+0x3e>
   82b8e:	2100      	movs	r1, #0
   82b90:	4630      	mov	r0, r6
   82b92:	f001 f8ed 	bl	83d70 <_sbrk_r>
   82b96:	68bb      	ldr	r3, [r7, #8]
   82b98:	442b      	add	r3, r5
   82b9a:	4298      	cmp	r0, r3
   82b9c:	d004      	beq.n	82ba8 <_malloc_trim_r+0x48>
   82b9e:	4630      	mov	r0, r6
   82ba0:	f000 ff2a 	bl	839f8 <__malloc_unlock>
   82ba4:	2000      	movs	r0, #0
   82ba6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82ba8:	4261      	negs	r1, r4
   82baa:	4630      	mov	r0, r6
   82bac:	f001 f8e0 	bl	83d70 <_sbrk_r>
   82bb0:	3001      	adds	r0, #1
   82bb2:	d00d      	beq.n	82bd0 <_malloc_trim_r+0x70>
   82bb4:	4b10      	ldr	r3, [pc, #64]	; (82bf8 <_malloc_trim_r+0x98>)
   82bb6:	68ba      	ldr	r2, [r7, #8]
   82bb8:	6819      	ldr	r1, [r3, #0]
   82bba:	1b2d      	subs	r5, r5, r4
   82bbc:	f045 0501 	orr.w	r5, r5, #1
   82bc0:	4630      	mov	r0, r6
   82bc2:	1b09      	subs	r1, r1, r4
   82bc4:	6055      	str	r5, [r2, #4]
   82bc6:	6019      	str	r1, [r3, #0]
   82bc8:	f000 ff16 	bl	839f8 <__malloc_unlock>
   82bcc:	2001      	movs	r0, #1
   82bce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82bd0:	2100      	movs	r1, #0
   82bd2:	4630      	mov	r0, r6
   82bd4:	f001 f8cc 	bl	83d70 <_sbrk_r>
   82bd8:	68ba      	ldr	r2, [r7, #8]
   82bda:	1a83      	subs	r3, r0, r2
   82bdc:	2b0f      	cmp	r3, #15
   82bde:	ddde      	ble.n	82b9e <_malloc_trim_r+0x3e>
   82be0:	4c06      	ldr	r4, [pc, #24]	; (82bfc <_malloc_trim_r+0x9c>)
   82be2:	4905      	ldr	r1, [pc, #20]	; (82bf8 <_malloc_trim_r+0x98>)
   82be4:	6824      	ldr	r4, [r4, #0]
   82be6:	f043 0301 	orr.w	r3, r3, #1
   82bea:	1b00      	subs	r0, r0, r4
   82bec:	6053      	str	r3, [r2, #4]
   82bee:	6008      	str	r0, [r1, #0]
   82bf0:	e7d5      	b.n	82b9e <_malloc_trim_r+0x3e>
   82bf2:	bf00      	nop
   82bf4:	200706e0 	.word	0x200706e0
   82bf8:	20070c20 	.word	0x20070c20
   82bfc:	20070ae8 	.word	0x20070ae8

00082c00 <_free_r>:
   82c00:	2900      	cmp	r1, #0
   82c02:	d044      	beq.n	82c8e <_free_r+0x8e>
   82c04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82c08:	460d      	mov	r5, r1
   82c0a:	4680      	mov	r8, r0
   82c0c:	f000 feee 	bl	839ec <__malloc_lock>
   82c10:	f855 7c04 	ldr.w	r7, [r5, #-4]
   82c14:	4969      	ldr	r1, [pc, #420]	; (82dbc <_free_r+0x1bc>)
   82c16:	f1a5 0408 	sub.w	r4, r5, #8
   82c1a:	f027 0301 	bic.w	r3, r7, #1
   82c1e:	18e2      	adds	r2, r4, r3
   82c20:	688e      	ldr	r6, [r1, #8]
   82c22:	6850      	ldr	r0, [r2, #4]
   82c24:	42b2      	cmp	r2, r6
   82c26:	f020 0003 	bic.w	r0, r0, #3
   82c2a:	d05e      	beq.n	82cea <_free_r+0xea>
   82c2c:	07fe      	lsls	r6, r7, #31
   82c2e:	6050      	str	r0, [r2, #4]
   82c30:	d40b      	bmi.n	82c4a <_free_r+0x4a>
   82c32:	f855 7c08 	ldr.w	r7, [r5, #-8]
   82c36:	f101 0e08 	add.w	lr, r1, #8
   82c3a:	1be4      	subs	r4, r4, r7
   82c3c:	68a5      	ldr	r5, [r4, #8]
   82c3e:	443b      	add	r3, r7
   82c40:	4575      	cmp	r5, lr
   82c42:	d06d      	beq.n	82d20 <_free_r+0x120>
   82c44:	68e7      	ldr	r7, [r4, #12]
   82c46:	60ef      	str	r7, [r5, #12]
   82c48:	60bd      	str	r5, [r7, #8]
   82c4a:	1815      	adds	r5, r2, r0
   82c4c:	686d      	ldr	r5, [r5, #4]
   82c4e:	07ed      	lsls	r5, r5, #31
   82c50:	d53e      	bpl.n	82cd0 <_free_r+0xd0>
   82c52:	f043 0201 	orr.w	r2, r3, #1
   82c56:	6062      	str	r2, [r4, #4]
   82c58:	50e3      	str	r3, [r4, r3]
   82c5a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   82c5e:	d217      	bcs.n	82c90 <_free_r+0x90>
   82c60:	2201      	movs	r2, #1
   82c62:	08db      	lsrs	r3, r3, #3
   82c64:	1098      	asrs	r0, r3, #2
   82c66:	684d      	ldr	r5, [r1, #4]
   82c68:	4413      	add	r3, r2
   82c6a:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   82c6e:	4082      	lsls	r2, r0
   82c70:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   82c74:	432a      	orrs	r2, r5
   82c76:	3808      	subs	r0, #8
   82c78:	60e0      	str	r0, [r4, #12]
   82c7a:	60a7      	str	r7, [r4, #8]
   82c7c:	604a      	str	r2, [r1, #4]
   82c7e:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   82c82:	60fc      	str	r4, [r7, #12]
   82c84:	4640      	mov	r0, r8
   82c86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   82c8a:	f000 beb5 	b.w	839f8 <__malloc_unlock>
   82c8e:	4770      	bx	lr
   82c90:	0a5a      	lsrs	r2, r3, #9
   82c92:	2a04      	cmp	r2, #4
   82c94:	d852      	bhi.n	82d3c <_free_r+0x13c>
   82c96:	099a      	lsrs	r2, r3, #6
   82c98:	f102 0739 	add.w	r7, r2, #57	; 0x39
   82c9c:	00ff      	lsls	r7, r7, #3
   82c9e:	f102 0538 	add.w	r5, r2, #56	; 0x38
   82ca2:	19c8      	adds	r0, r1, r7
   82ca4:	59ca      	ldr	r2, [r1, r7]
   82ca6:	3808      	subs	r0, #8
   82ca8:	4290      	cmp	r0, r2
   82caa:	d04f      	beq.n	82d4c <_free_r+0x14c>
   82cac:	6851      	ldr	r1, [r2, #4]
   82cae:	f021 0103 	bic.w	r1, r1, #3
   82cb2:	428b      	cmp	r3, r1
   82cb4:	d232      	bcs.n	82d1c <_free_r+0x11c>
   82cb6:	6892      	ldr	r2, [r2, #8]
   82cb8:	4290      	cmp	r0, r2
   82cba:	d1f7      	bne.n	82cac <_free_r+0xac>
   82cbc:	68c3      	ldr	r3, [r0, #12]
   82cbe:	60a0      	str	r0, [r4, #8]
   82cc0:	60e3      	str	r3, [r4, #12]
   82cc2:	609c      	str	r4, [r3, #8]
   82cc4:	60c4      	str	r4, [r0, #12]
   82cc6:	4640      	mov	r0, r8
   82cc8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   82ccc:	f000 be94 	b.w	839f8 <__malloc_unlock>
   82cd0:	6895      	ldr	r5, [r2, #8]
   82cd2:	4f3b      	ldr	r7, [pc, #236]	; (82dc0 <_free_r+0x1c0>)
   82cd4:	4403      	add	r3, r0
   82cd6:	42bd      	cmp	r5, r7
   82cd8:	d040      	beq.n	82d5c <_free_r+0x15c>
   82cda:	68d0      	ldr	r0, [r2, #12]
   82cdc:	f043 0201 	orr.w	r2, r3, #1
   82ce0:	60e8      	str	r0, [r5, #12]
   82ce2:	6085      	str	r5, [r0, #8]
   82ce4:	6062      	str	r2, [r4, #4]
   82ce6:	50e3      	str	r3, [r4, r3]
   82ce8:	e7b7      	b.n	82c5a <_free_r+0x5a>
   82cea:	07ff      	lsls	r7, r7, #31
   82cec:	4403      	add	r3, r0
   82cee:	d407      	bmi.n	82d00 <_free_r+0x100>
   82cf0:	f855 5c08 	ldr.w	r5, [r5, #-8]
   82cf4:	1b64      	subs	r4, r4, r5
   82cf6:	68e2      	ldr	r2, [r4, #12]
   82cf8:	68a0      	ldr	r0, [r4, #8]
   82cfa:	442b      	add	r3, r5
   82cfc:	60c2      	str	r2, [r0, #12]
   82cfe:	6090      	str	r0, [r2, #8]
   82d00:	4a30      	ldr	r2, [pc, #192]	; (82dc4 <_free_r+0x1c4>)
   82d02:	f043 0001 	orr.w	r0, r3, #1
   82d06:	6812      	ldr	r2, [r2, #0]
   82d08:	6060      	str	r0, [r4, #4]
   82d0a:	4293      	cmp	r3, r2
   82d0c:	608c      	str	r4, [r1, #8]
   82d0e:	d3b9      	bcc.n	82c84 <_free_r+0x84>
   82d10:	4b2d      	ldr	r3, [pc, #180]	; (82dc8 <_free_r+0x1c8>)
   82d12:	4640      	mov	r0, r8
   82d14:	6819      	ldr	r1, [r3, #0]
   82d16:	f7ff ff23 	bl	82b60 <_malloc_trim_r>
   82d1a:	e7b3      	b.n	82c84 <_free_r+0x84>
   82d1c:	4610      	mov	r0, r2
   82d1e:	e7cd      	b.n	82cbc <_free_r+0xbc>
   82d20:	1811      	adds	r1, r2, r0
   82d22:	6849      	ldr	r1, [r1, #4]
   82d24:	07c9      	lsls	r1, r1, #31
   82d26:	d444      	bmi.n	82db2 <_free_r+0x1b2>
   82d28:	6891      	ldr	r1, [r2, #8]
   82d2a:	4403      	add	r3, r0
   82d2c:	68d2      	ldr	r2, [r2, #12]
   82d2e:	f043 0001 	orr.w	r0, r3, #1
   82d32:	60ca      	str	r2, [r1, #12]
   82d34:	6091      	str	r1, [r2, #8]
   82d36:	6060      	str	r0, [r4, #4]
   82d38:	50e3      	str	r3, [r4, r3]
   82d3a:	e7a3      	b.n	82c84 <_free_r+0x84>
   82d3c:	2a14      	cmp	r2, #20
   82d3e:	d816      	bhi.n	82d6e <_free_r+0x16e>
   82d40:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   82d44:	00ff      	lsls	r7, r7, #3
   82d46:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   82d4a:	e7aa      	b.n	82ca2 <_free_r+0xa2>
   82d4c:	2301      	movs	r3, #1
   82d4e:	10aa      	asrs	r2, r5, #2
   82d50:	684d      	ldr	r5, [r1, #4]
   82d52:	4093      	lsls	r3, r2
   82d54:	432b      	orrs	r3, r5
   82d56:	604b      	str	r3, [r1, #4]
   82d58:	4603      	mov	r3, r0
   82d5a:	e7b0      	b.n	82cbe <_free_r+0xbe>
   82d5c:	f043 0201 	orr.w	r2, r3, #1
   82d60:	614c      	str	r4, [r1, #20]
   82d62:	610c      	str	r4, [r1, #16]
   82d64:	60e5      	str	r5, [r4, #12]
   82d66:	60a5      	str	r5, [r4, #8]
   82d68:	6062      	str	r2, [r4, #4]
   82d6a:	50e3      	str	r3, [r4, r3]
   82d6c:	e78a      	b.n	82c84 <_free_r+0x84>
   82d6e:	2a54      	cmp	r2, #84	; 0x54
   82d70:	d806      	bhi.n	82d80 <_free_r+0x180>
   82d72:	0b1a      	lsrs	r2, r3, #12
   82d74:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   82d78:	00ff      	lsls	r7, r7, #3
   82d7a:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   82d7e:	e790      	b.n	82ca2 <_free_r+0xa2>
   82d80:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   82d84:	d806      	bhi.n	82d94 <_free_r+0x194>
   82d86:	0bda      	lsrs	r2, r3, #15
   82d88:	f102 0778 	add.w	r7, r2, #120	; 0x78
   82d8c:	00ff      	lsls	r7, r7, #3
   82d8e:	f102 0577 	add.w	r5, r2, #119	; 0x77
   82d92:	e786      	b.n	82ca2 <_free_r+0xa2>
   82d94:	f240 5054 	movw	r0, #1364	; 0x554
   82d98:	4282      	cmp	r2, r0
   82d9a:	d806      	bhi.n	82daa <_free_r+0x1aa>
   82d9c:	0c9a      	lsrs	r2, r3, #18
   82d9e:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   82da2:	00ff      	lsls	r7, r7, #3
   82da4:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   82da8:	e77b      	b.n	82ca2 <_free_r+0xa2>
   82daa:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   82dae:	257e      	movs	r5, #126	; 0x7e
   82db0:	e777      	b.n	82ca2 <_free_r+0xa2>
   82db2:	f043 0101 	orr.w	r1, r3, #1
   82db6:	6061      	str	r1, [r4, #4]
   82db8:	6013      	str	r3, [r2, #0]
   82dba:	e763      	b.n	82c84 <_free_r+0x84>
   82dbc:	200706e0 	.word	0x200706e0
   82dc0:	200706e8 	.word	0x200706e8
   82dc4:	20070aec 	.word	0x20070aec
   82dc8:	20070c50 	.word	0x20070c50

00082dcc <__sfvwrite_r>:
   82dcc:	6893      	ldr	r3, [r2, #8]
   82dce:	2b00      	cmp	r3, #0
   82dd0:	d071      	beq.n	82eb6 <__sfvwrite_r+0xea>
   82dd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82dd6:	898b      	ldrh	r3, [r1, #12]
   82dd8:	b083      	sub	sp, #12
   82dda:	460c      	mov	r4, r1
   82ddc:	0719      	lsls	r1, r3, #28
   82dde:	9000      	str	r0, [sp, #0]
   82de0:	4616      	mov	r6, r2
   82de2:	d525      	bpl.n	82e30 <__sfvwrite_r+0x64>
   82de4:	6922      	ldr	r2, [r4, #16]
   82de6:	b31a      	cbz	r2, 82e30 <__sfvwrite_r+0x64>
   82de8:	f013 0002 	ands.w	r0, r3, #2
   82dec:	6835      	ldr	r5, [r6, #0]
   82dee:	d02b      	beq.n	82e48 <__sfvwrite_r+0x7c>
   82df0:	f04f 0900 	mov.w	r9, #0
   82df4:	46b0      	mov	r8, r6
   82df6:	464f      	mov	r7, r9
   82df8:	f8df a2c0 	ldr.w	sl, [pc, #704]	; 830bc <__sfvwrite_r+0x2f0>
   82dfc:	2f00      	cmp	r7, #0
   82dfe:	d055      	beq.n	82eac <__sfvwrite_r+0xe0>
   82e00:	4557      	cmp	r7, sl
   82e02:	463b      	mov	r3, r7
   82e04:	464a      	mov	r2, r9
   82e06:	bf28      	it	cs
   82e08:	4653      	movcs	r3, sl
   82e0a:	69e1      	ldr	r1, [r4, #28]
   82e0c:	9800      	ldr	r0, [sp, #0]
   82e0e:	6a66      	ldr	r6, [r4, #36]	; 0x24
   82e10:	47b0      	blx	r6
   82e12:	2800      	cmp	r0, #0
   82e14:	dd56      	ble.n	82ec4 <__sfvwrite_r+0xf8>
   82e16:	f8d8 3008 	ldr.w	r3, [r8, #8]
   82e1a:	4481      	add	r9, r0
   82e1c:	1a1b      	subs	r3, r3, r0
   82e1e:	1a3f      	subs	r7, r7, r0
   82e20:	f8c8 3008 	str.w	r3, [r8, #8]
   82e24:	2b00      	cmp	r3, #0
   82e26:	d1e9      	bne.n	82dfc <__sfvwrite_r+0x30>
   82e28:	2000      	movs	r0, #0
   82e2a:	b003      	add	sp, #12
   82e2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82e30:	4621      	mov	r1, r4
   82e32:	9800      	ldr	r0, [sp, #0]
   82e34:	f7ff fc56 	bl	826e4 <__swsetup_r>
   82e38:	2800      	cmp	r0, #0
   82e3a:	f040 8135 	bne.w	830a8 <__sfvwrite_r+0x2dc>
   82e3e:	89a3      	ldrh	r3, [r4, #12]
   82e40:	6835      	ldr	r5, [r6, #0]
   82e42:	f013 0002 	ands.w	r0, r3, #2
   82e46:	d1d3      	bne.n	82df0 <__sfvwrite_r+0x24>
   82e48:	f013 0901 	ands.w	r9, r3, #1
   82e4c:	d144      	bne.n	82ed8 <__sfvwrite_r+0x10c>
   82e4e:	464f      	mov	r7, r9
   82e50:	9601      	str	r6, [sp, #4]
   82e52:	b337      	cbz	r7, 82ea2 <__sfvwrite_r+0xd6>
   82e54:	059a      	lsls	r2, r3, #22
   82e56:	f8d4 8008 	ldr.w	r8, [r4, #8]
   82e5a:	f140 8085 	bpl.w	82f68 <__sfvwrite_r+0x19c>
   82e5e:	4547      	cmp	r7, r8
   82e60:	46c3      	mov	fp, r8
   82e62:	f0c0 80ad 	bcc.w	82fc0 <__sfvwrite_r+0x1f4>
   82e66:	f413 6f90 	tst.w	r3, #1152	; 0x480
   82e6a:	f040 80ae 	bne.w	82fca <__sfvwrite_r+0x1fe>
   82e6e:	46ba      	mov	sl, r7
   82e70:	6820      	ldr	r0, [r4, #0]
   82e72:	465a      	mov	r2, fp
   82e74:	4649      	mov	r1, r9
   82e76:	f000 fd55 	bl	83924 <memmove>
   82e7a:	68a2      	ldr	r2, [r4, #8]
   82e7c:	6823      	ldr	r3, [r4, #0]
   82e7e:	eba2 0208 	sub.w	r2, r2, r8
   82e82:	445b      	add	r3, fp
   82e84:	60a2      	str	r2, [r4, #8]
   82e86:	6023      	str	r3, [r4, #0]
   82e88:	9a01      	ldr	r2, [sp, #4]
   82e8a:	44d1      	add	r9, sl
   82e8c:	6893      	ldr	r3, [r2, #8]
   82e8e:	eba7 070a 	sub.w	r7, r7, sl
   82e92:	eba3 030a 	sub.w	r3, r3, sl
   82e96:	6093      	str	r3, [r2, #8]
   82e98:	2b00      	cmp	r3, #0
   82e9a:	d0c5      	beq.n	82e28 <__sfvwrite_r+0x5c>
   82e9c:	89a3      	ldrh	r3, [r4, #12]
   82e9e:	2f00      	cmp	r7, #0
   82ea0:	d1d8      	bne.n	82e54 <__sfvwrite_r+0x88>
   82ea2:	f8d5 9000 	ldr.w	r9, [r5]
   82ea6:	686f      	ldr	r7, [r5, #4]
   82ea8:	3508      	adds	r5, #8
   82eaa:	e7d2      	b.n	82e52 <__sfvwrite_r+0x86>
   82eac:	f8d5 9000 	ldr.w	r9, [r5]
   82eb0:	686f      	ldr	r7, [r5, #4]
   82eb2:	3508      	adds	r5, #8
   82eb4:	e7a2      	b.n	82dfc <__sfvwrite_r+0x30>
   82eb6:	2000      	movs	r0, #0
   82eb8:	4770      	bx	lr
   82eba:	4621      	mov	r1, r4
   82ebc:	9800      	ldr	r0, [sp, #0]
   82ebe:	f7ff fd21 	bl	82904 <_fflush_r>
   82ec2:	b378      	cbz	r0, 82f24 <__sfvwrite_r+0x158>
   82ec4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82ec8:	f04f 30ff 	mov.w	r0, #4294967295
   82ecc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82ed0:	81a3      	strh	r3, [r4, #12]
   82ed2:	b003      	add	sp, #12
   82ed4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82ed8:	4681      	mov	r9, r0
   82eda:	4633      	mov	r3, r6
   82edc:	464e      	mov	r6, r9
   82ede:	46a8      	mov	r8, r5
   82ee0:	469a      	mov	sl, r3
   82ee2:	464d      	mov	r5, r9
   82ee4:	b356      	cbz	r6, 82f3c <__sfvwrite_r+0x170>
   82ee6:	2800      	cmp	r0, #0
   82ee8:	d032      	beq.n	82f50 <__sfvwrite_r+0x184>
   82eea:	45b1      	cmp	r9, r6
   82eec:	46cb      	mov	fp, r9
   82eee:	bf28      	it	cs
   82ef0:	46b3      	movcs	fp, r6
   82ef2:	6820      	ldr	r0, [r4, #0]
   82ef4:	6923      	ldr	r3, [r4, #16]
   82ef6:	465f      	mov	r7, fp
   82ef8:	4298      	cmp	r0, r3
   82efa:	6962      	ldr	r2, [r4, #20]
   82efc:	d904      	bls.n	82f08 <__sfvwrite_r+0x13c>
   82efe:	68a3      	ldr	r3, [r4, #8]
   82f00:	4413      	add	r3, r2
   82f02:	459b      	cmp	fp, r3
   82f04:	f300 80a8 	bgt.w	83058 <__sfvwrite_r+0x28c>
   82f08:	4593      	cmp	fp, r2
   82f0a:	db4d      	blt.n	82fa8 <__sfvwrite_r+0x1dc>
   82f0c:	4613      	mov	r3, r2
   82f0e:	6a67      	ldr	r7, [r4, #36]	; 0x24
   82f10:	462a      	mov	r2, r5
   82f12:	69e1      	ldr	r1, [r4, #28]
   82f14:	9800      	ldr	r0, [sp, #0]
   82f16:	47b8      	blx	r7
   82f18:	1e07      	subs	r7, r0, #0
   82f1a:	ddd3      	ble.n	82ec4 <__sfvwrite_r+0xf8>
   82f1c:	ebb9 0907 	subs.w	r9, r9, r7
   82f20:	d0cb      	beq.n	82eba <__sfvwrite_r+0xee>
   82f22:	2001      	movs	r0, #1
   82f24:	f8da 3008 	ldr.w	r3, [sl, #8]
   82f28:	443d      	add	r5, r7
   82f2a:	1bdb      	subs	r3, r3, r7
   82f2c:	1bf6      	subs	r6, r6, r7
   82f2e:	f8ca 3008 	str.w	r3, [sl, #8]
   82f32:	2b00      	cmp	r3, #0
   82f34:	f43f af78 	beq.w	82e28 <__sfvwrite_r+0x5c>
   82f38:	2e00      	cmp	r6, #0
   82f3a:	d1d4      	bne.n	82ee6 <__sfvwrite_r+0x11a>
   82f3c:	f108 0308 	add.w	r3, r8, #8
   82f40:	f853 6c04 	ldr.w	r6, [r3, #-4]
   82f44:	4698      	mov	r8, r3
   82f46:	f853 5c08 	ldr.w	r5, [r3, #-8]
   82f4a:	3308      	adds	r3, #8
   82f4c:	2e00      	cmp	r6, #0
   82f4e:	d0f7      	beq.n	82f40 <__sfvwrite_r+0x174>
   82f50:	4632      	mov	r2, r6
   82f52:	210a      	movs	r1, #10
   82f54:	4628      	mov	r0, r5
   82f56:	f000 fc29 	bl	837ac <memchr>
   82f5a:	2800      	cmp	r0, #0
   82f5c:	f000 80a1 	beq.w	830a2 <__sfvwrite_r+0x2d6>
   82f60:	3001      	adds	r0, #1
   82f62:	eba0 0905 	sub.w	r9, r0, r5
   82f66:	e7c0      	b.n	82eea <__sfvwrite_r+0x11e>
   82f68:	6820      	ldr	r0, [r4, #0]
   82f6a:	6923      	ldr	r3, [r4, #16]
   82f6c:	4298      	cmp	r0, r3
   82f6e:	d802      	bhi.n	82f76 <__sfvwrite_r+0x1aa>
   82f70:	6963      	ldr	r3, [r4, #20]
   82f72:	429f      	cmp	r7, r3
   82f74:	d25d      	bcs.n	83032 <__sfvwrite_r+0x266>
   82f76:	45b8      	cmp	r8, r7
   82f78:	bf28      	it	cs
   82f7a:	46b8      	movcs	r8, r7
   82f7c:	4649      	mov	r1, r9
   82f7e:	4642      	mov	r2, r8
   82f80:	f000 fcd0 	bl	83924 <memmove>
   82f84:	68a3      	ldr	r3, [r4, #8]
   82f86:	6822      	ldr	r2, [r4, #0]
   82f88:	eba3 0308 	sub.w	r3, r3, r8
   82f8c:	4442      	add	r2, r8
   82f8e:	60a3      	str	r3, [r4, #8]
   82f90:	6022      	str	r2, [r4, #0]
   82f92:	b10b      	cbz	r3, 82f98 <__sfvwrite_r+0x1cc>
   82f94:	46c2      	mov	sl, r8
   82f96:	e777      	b.n	82e88 <__sfvwrite_r+0xbc>
   82f98:	4621      	mov	r1, r4
   82f9a:	9800      	ldr	r0, [sp, #0]
   82f9c:	f7ff fcb2 	bl	82904 <_fflush_r>
   82fa0:	2800      	cmp	r0, #0
   82fa2:	d18f      	bne.n	82ec4 <__sfvwrite_r+0xf8>
   82fa4:	46c2      	mov	sl, r8
   82fa6:	e76f      	b.n	82e88 <__sfvwrite_r+0xbc>
   82fa8:	465a      	mov	r2, fp
   82faa:	4629      	mov	r1, r5
   82fac:	f000 fcba 	bl	83924 <memmove>
   82fb0:	68a2      	ldr	r2, [r4, #8]
   82fb2:	6823      	ldr	r3, [r4, #0]
   82fb4:	eba2 020b 	sub.w	r2, r2, fp
   82fb8:	445b      	add	r3, fp
   82fba:	60a2      	str	r2, [r4, #8]
   82fbc:	6023      	str	r3, [r4, #0]
   82fbe:	e7ad      	b.n	82f1c <__sfvwrite_r+0x150>
   82fc0:	46b8      	mov	r8, r7
   82fc2:	46ba      	mov	sl, r7
   82fc4:	46bb      	mov	fp, r7
   82fc6:	6820      	ldr	r0, [r4, #0]
   82fc8:	e753      	b.n	82e72 <__sfvwrite_r+0xa6>
   82fca:	6962      	ldr	r2, [r4, #20]
   82fcc:	6820      	ldr	r0, [r4, #0]
   82fce:	6921      	ldr	r1, [r4, #16]
   82fd0:	eb02 0842 	add.w	r8, r2, r2, lsl #1
   82fd4:	eba0 0a01 	sub.w	sl, r0, r1
   82fd8:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
   82fdc:	f10a 0001 	add.w	r0, sl, #1
   82fe0:	ea4f 0868 	mov.w	r8, r8, asr #1
   82fe4:	4438      	add	r0, r7
   82fe6:	4540      	cmp	r0, r8
   82fe8:	4642      	mov	r2, r8
   82fea:	bf84      	itt	hi
   82fec:	4680      	movhi	r8, r0
   82fee:	4642      	movhi	r2, r8
   82ff0:	055b      	lsls	r3, r3, #21
   82ff2:	d544      	bpl.n	8307e <__sfvwrite_r+0x2b2>
   82ff4:	4611      	mov	r1, r2
   82ff6:	9800      	ldr	r0, [sp, #0]
   82ff8:	f000 f920 	bl	8323c <_malloc_r>
   82ffc:	4683      	mov	fp, r0
   82ffe:	2800      	cmp	r0, #0
   83000:	d055      	beq.n	830ae <__sfvwrite_r+0x2e2>
   83002:	4652      	mov	r2, sl
   83004:	6921      	ldr	r1, [r4, #16]
   83006:	f000 fc17 	bl	83838 <memcpy>
   8300a:	89a3      	ldrh	r3, [r4, #12]
   8300c:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   83010:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   83014:	81a3      	strh	r3, [r4, #12]
   83016:	eb0b 000a 	add.w	r0, fp, sl
   8301a:	eba8 030a 	sub.w	r3, r8, sl
   8301e:	f8c4 b010 	str.w	fp, [r4, #16]
   83022:	f8c4 8014 	str.w	r8, [r4, #20]
   83026:	6020      	str	r0, [r4, #0]
   83028:	60a3      	str	r3, [r4, #8]
   8302a:	46b8      	mov	r8, r7
   8302c:	46ba      	mov	sl, r7
   8302e:	46bb      	mov	fp, r7
   83030:	e71f      	b.n	82e72 <__sfvwrite_r+0xa6>
   83032:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
   83036:	42ba      	cmp	r2, r7
   83038:	bf28      	it	cs
   8303a:	463a      	movcs	r2, r7
   8303c:	fb92 f2f3 	sdiv	r2, r2, r3
   83040:	69e1      	ldr	r1, [r4, #28]
   83042:	fb03 f302 	mul.w	r3, r3, r2
   83046:	9800      	ldr	r0, [sp, #0]
   83048:	464a      	mov	r2, r9
   8304a:	6a66      	ldr	r6, [r4, #36]	; 0x24
   8304c:	47b0      	blx	r6
   8304e:	f1b0 0a00 	subs.w	sl, r0, #0
   83052:	f73f af19 	bgt.w	82e88 <__sfvwrite_r+0xbc>
   83056:	e735      	b.n	82ec4 <__sfvwrite_r+0xf8>
   83058:	461a      	mov	r2, r3
   8305a:	4629      	mov	r1, r5
   8305c:	9301      	str	r3, [sp, #4]
   8305e:	f000 fc61 	bl	83924 <memmove>
   83062:	6822      	ldr	r2, [r4, #0]
   83064:	9b01      	ldr	r3, [sp, #4]
   83066:	4621      	mov	r1, r4
   83068:	441a      	add	r2, r3
   8306a:	6022      	str	r2, [r4, #0]
   8306c:	9800      	ldr	r0, [sp, #0]
   8306e:	f7ff fc49 	bl	82904 <_fflush_r>
   83072:	9b01      	ldr	r3, [sp, #4]
   83074:	2800      	cmp	r0, #0
   83076:	f47f af25 	bne.w	82ec4 <__sfvwrite_r+0xf8>
   8307a:	461f      	mov	r7, r3
   8307c:	e74e      	b.n	82f1c <__sfvwrite_r+0x150>
   8307e:	9800      	ldr	r0, [sp, #0]
   83080:	f000 fcc0 	bl	83a04 <_realloc_r>
   83084:	4683      	mov	fp, r0
   83086:	2800      	cmp	r0, #0
   83088:	d1c5      	bne.n	83016 <__sfvwrite_r+0x24a>
   8308a:	9d00      	ldr	r5, [sp, #0]
   8308c:	6921      	ldr	r1, [r4, #16]
   8308e:	4628      	mov	r0, r5
   83090:	f7ff fdb6 	bl	82c00 <_free_r>
   83094:	220c      	movs	r2, #12
   83096:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8309a:	602a      	str	r2, [r5, #0]
   8309c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   830a0:	e712      	b.n	82ec8 <__sfvwrite_r+0xfc>
   830a2:	f106 0901 	add.w	r9, r6, #1
   830a6:	e720      	b.n	82eea <__sfvwrite_r+0x11e>
   830a8:	f04f 30ff 	mov.w	r0, #4294967295
   830ac:	e6bd      	b.n	82e2a <__sfvwrite_r+0x5e>
   830ae:	220c      	movs	r2, #12
   830b0:	9900      	ldr	r1, [sp, #0]
   830b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   830b6:	600a      	str	r2, [r1, #0]
   830b8:	e706      	b.n	82ec8 <__sfvwrite_r+0xfc>
   830ba:	bf00      	nop
   830bc:	7ffffc00 	.word	0x7ffffc00

000830c0 <_fwalk_reent>:
   830c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   830c4:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
   830c8:	d01e      	beq.n	83108 <_fwalk_reent+0x48>
   830ca:	4688      	mov	r8, r1
   830cc:	4607      	mov	r7, r0
   830ce:	f04f 0900 	mov.w	r9, #0
   830d2:	6875      	ldr	r5, [r6, #4]
   830d4:	68b4      	ldr	r4, [r6, #8]
   830d6:	3d01      	subs	r5, #1
   830d8:	d410      	bmi.n	830fc <_fwalk_reent+0x3c>
   830da:	89a3      	ldrh	r3, [r4, #12]
   830dc:	3d01      	subs	r5, #1
   830de:	2b01      	cmp	r3, #1
   830e0:	d908      	bls.n	830f4 <_fwalk_reent+0x34>
   830e2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   830e6:	3301      	adds	r3, #1
   830e8:	d004      	beq.n	830f4 <_fwalk_reent+0x34>
   830ea:	4621      	mov	r1, r4
   830ec:	4638      	mov	r0, r7
   830ee:	47c0      	blx	r8
   830f0:	ea49 0900 	orr.w	r9, r9, r0
   830f4:	1c6b      	adds	r3, r5, #1
   830f6:	f104 0468 	add.w	r4, r4, #104	; 0x68
   830fa:	d1ee      	bne.n	830da <_fwalk_reent+0x1a>
   830fc:	6836      	ldr	r6, [r6, #0]
   830fe:	2e00      	cmp	r6, #0
   83100:	d1e7      	bne.n	830d2 <_fwalk_reent+0x12>
   83102:	4648      	mov	r0, r9
   83104:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   83108:	46b1      	mov	r9, r6
   8310a:	4648      	mov	r0, r9
   8310c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00083110 <__locale_mb_cur_max>:
   83110:	4b04      	ldr	r3, [pc, #16]	; (83124 <__locale_mb_cur_max+0x14>)
   83112:	4a05      	ldr	r2, [pc, #20]	; (83128 <__locale_mb_cur_max+0x18>)
   83114:	681b      	ldr	r3, [r3, #0]
   83116:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   83118:	2b00      	cmp	r3, #0
   8311a:	bf08      	it	eq
   8311c:	4613      	moveq	r3, r2
   8311e:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
   83122:	4770      	bx	lr
   83124:	20070140 	.word	0x20070140
   83128:	20070574 	.word	0x20070574

0008312c <__retarget_lock_init_recursive>:
   8312c:	4770      	bx	lr
   8312e:	bf00      	nop

00083130 <__retarget_lock_close_recursive>:
   83130:	4770      	bx	lr
   83132:	bf00      	nop

00083134 <__retarget_lock_acquire_recursive>:
   83134:	4770      	bx	lr
   83136:	bf00      	nop

00083138 <__retarget_lock_release_recursive>:
   83138:	4770      	bx	lr
   8313a:	bf00      	nop

0008313c <__swhatbuf_r>:
   8313c:	b570      	push	{r4, r5, r6, lr}
   8313e:	460c      	mov	r4, r1
   83140:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83144:	b090      	sub	sp, #64	; 0x40
   83146:	2900      	cmp	r1, #0
   83148:	4615      	mov	r5, r2
   8314a:	461e      	mov	r6, r3
   8314c:	db14      	blt.n	83178 <__swhatbuf_r+0x3c>
   8314e:	aa01      	add	r2, sp, #4
   83150:	f001 f80c 	bl	8416c <_fstat_r>
   83154:	2800      	cmp	r0, #0
   83156:	db0f      	blt.n	83178 <__swhatbuf_r+0x3c>
   83158:	9a02      	ldr	r2, [sp, #8]
   8315a:	f44f 6380 	mov.w	r3, #1024	; 0x400
   8315e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   83162:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
   83166:	fab2 f282 	clz	r2, r2
   8316a:	f44f 6000 	mov.w	r0, #2048	; 0x800
   8316e:	0952      	lsrs	r2, r2, #5
   83170:	6032      	str	r2, [r6, #0]
   83172:	602b      	str	r3, [r5, #0]
   83174:	b010      	add	sp, #64	; 0x40
   83176:	bd70      	pop	{r4, r5, r6, pc}
   83178:	2300      	movs	r3, #0
   8317a:	89a2      	ldrh	r2, [r4, #12]
   8317c:	6033      	str	r3, [r6, #0]
   8317e:	f012 0080 	ands.w	r0, r2, #128	; 0x80
   83182:	d004      	beq.n	8318e <__swhatbuf_r+0x52>
   83184:	2240      	movs	r2, #64	; 0x40
   83186:	4618      	mov	r0, r3
   83188:	602a      	str	r2, [r5, #0]
   8318a:	b010      	add	sp, #64	; 0x40
   8318c:	bd70      	pop	{r4, r5, r6, pc}
   8318e:	f44f 6380 	mov.w	r3, #1024	; 0x400
   83192:	602b      	str	r3, [r5, #0]
   83194:	b010      	add	sp, #64	; 0x40
   83196:	bd70      	pop	{r4, r5, r6, pc}

00083198 <__smakebuf_r>:
   83198:	898a      	ldrh	r2, [r1, #12]
   8319a:	460b      	mov	r3, r1
   8319c:	0792      	lsls	r2, r2, #30
   8319e:	d506      	bpl.n	831ae <__smakebuf_r+0x16>
   831a0:	2101      	movs	r1, #1
   831a2:	f103 0243 	add.w	r2, r3, #67	; 0x43
   831a6:	6159      	str	r1, [r3, #20]
   831a8:	601a      	str	r2, [r3, #0]
   831aa:	611a      	str	r2, [r3, #16]
   831ac:	4770      	bx	lr
   831ae:	b5f0      	push	{r4, r5, r6, r7, lr}
   831b0:	b083      	sub	sp, #12
   831b2:	ab01      	add	r3, sp, #4
   831b4:	466a      	mov	r2, sp
   831b6:	460c      	mov	r4, r1
   831b8:	4606      	mov	r6, r0
   831ba:	f7ff ffbf 	bl	8313c <__swhatbuf_r>
   831be:	9900      	ldr	r1, [sp, #0]
   831c0:	4605      	mov	r5, r0
   831c2:	4630      	mov	r0, r6
   831c4:	f000 f83a 	bl	8323c <_malloc_r>
   831c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   831cc:	b1d8      	cbz	r0, 83206 <__smakebuf_r+0x6e>
   831ce:	e89d 0006 	ldmia.w	sp, {r1, r2}
   831d2:	4f15      	ldr	r7, [pc, #84]	; (83228 <__smakebuf_r+0x90>)
   831d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   831d8:	63f7      	str	r7, [r6, #60]	; 0x3c
   831da:	81a3      	strh	r3, [r4, #12]
   831dc:	6020      	str	r0, [r4, #0]
   831de:	6120      	str	r0, [r4, #16]
   831e0:	6161      	str	r1, [r4, #20]
   831e2:	b91a      	cbnz	r2, 831ec <__smakebuf_r+0x54>
   831e4:	432b      	orrs	r3, r5
   831e6:	81a3      	strh	r3, [r4, #12]
   831e8:	b003      	add	sp, #12
   831ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
   831ec:	4630      	mov	r0, r6
   831ee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   831f2:	f000 ffcf 	bl	84194 <_isatty_r>
   831f6:	b1a0      	cbz	r0, 83222 <__smakebuf_r+0x8a>
   831f8:	89a3      	ldrh	r3, [r4, #12]
   831fa:	f023 0303 	bic.w	r3, r3, #3
   831fe:	f043 0301 	orr.w	r3, r3, #1
   83202:	b21b      	sxth	r3, r3
   83204:	e7ee      	b.n	831e4 <__smakebuf_r+0x4c>
   83206:	059a      	lsls	r2, r3, #22
   83208:	d4ee      	bmi.n	831e8 <__smakebuf_r+0x50>
   8320a:	2101      	movs	r1, #1
   8320c:	f023 0303 	bic.w	r3, r3, #3
   83210:	f104 0243 	add.w	r2, r4, #67	; 0x43
   83214:	f043 0302 	orr.w	r3, r3, #2
   83218:	81a3      	strh	r3, [r4, #12]
   8321a:	6161      	str	r1, [r4, #20]
   8321c:	6022      	str	r2, [r4, #0]
   8321e:	6122      	str	r2, [r4, #16]
   83220:	e7e2      	b.n	831e8 <__smakebuf_r+0x50>
   83222:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83226:	e7dd      	b.n	831e4 <__smakebuf_r+0x4c>
   83228:	00082959 	.word	0x00082959

0008322c <malloc>:
   8322c:	4b02      	ldr	r3, [pc, #8]	; (83238 <malloc+0xc>)
   8322e:	4601      	mov	r1, r0
   83230:	6818      	ldr	r0, [r3, #0]
   83232:	f000 b803 	b.w	8323c <_malloc_r>
   83236:	bf00      	nop
   83238:	20070140 	.word	0x20070140

0008323c <_malloc_r>:
   8323c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83240:	f101 060b 	add.w	r6, r1, #11
   83244:	2e16      	cmp	r6, #22
   83246:	b083      	sub	sp, #12
   83248:	4605      	mov	r5, r0
   8324a:	f240 809e 	bls.w	8338a <_malloc_r+0x14e>
   8324e:	f036 0607 	bics.w	r6, r6, #7
   83252:	f100 80bd 	bmi.w	833d0 <_malloc_r+0x194>
   83256:	42b1      	cmp	r1, r6
   83258:	f200 80ba 	bhi.w	833d0 <_malloc_r+0x194>
   8325c:	f000 fbc6 	bl	839ec <__malloc_lock>
   83260:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   83264:	f0c0 8285 	bcc.w	83772 <_malloc_r+0x536>
   83268:	0a73      	lsrs	r3, r6, #9
   8326a:	f000 80b8 	beq.w	833de <_malloc_r+0x1a2>
   8326e:	2b04      	cmp	r3, #4
   83270:	f200 816c 	bhi.w	8354c <_malloc_r+0x310>
   83274:	09b3      	lsrs	r3, r6, #6
   83276:	f103 0039 	add.w	r0, r3, #57	; 0x39
   8327a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   8327e:	00c1      	lsls	r1, r0, #3
   83280:	4fb8      	ldr	r7, [pc, #736]	; (83564 <_malloc_r+0x328>)
   83282:	4439      	add	r1, r7
   83284:	684c      	ldr	r4, [r1, #4]
   83286:	3908      	subs	r1, #8
   83288:	42a1      	cmp	r1, r4
   8328a:	d106      	bne.n	8329a <_malloc_r+0x5e>
   8328c:	e00c      	b.n	832a8 <_malloc_r+0x6c>
   8328e:	2a00      	cmp	r2, #0
   83290:	f280 80ab 	bge.w	833ea <_malloc_r+0x1ae>
   83294:	68e4      	ldr	r4, [r4, #12]
   83296:	42a1      	cmp	r1, r4
   83298:	d006      	beq.n	832a8 <_malloc_r+0x6c>
   8329a:	6863      	ldr	r3, [r4, #4]
   8329c:	f023 0303 	bic.w	r3, r3, #3
   832a0:	1b9a      	subs	r2, r3, r6
   832a2:	2a0f      	cmp	r2, #15
   832a4:	ddf3      	ble.n	8328e <_malloc_r+0x52>
   832a6:	4670      	mov	r0, lr
   832a8:	693c      	ldr	r4, [r7, #16]
   832aa:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 83578 <_malloc_r+0x33c>
   832ae:	4574      	cmp	r4, lr
   832b0:	f000 819e 	beq.w	835f0 <_malloc_r+0x3b4>
   832b4:	6863      	ldr	r3, [r4, #4]
   832b6:	f023 0303 	bic.w	r3, r3, #3
   832ba:	1b9a      	subs	r2, r3, r6
   832bc:	2a0f      	cmp	r2, #15
   832be:	f300 8183 	bgt.w	835c8 <_malloc_r+0x38c>
   832c2:	2a00      	cmp	r2, #0
   832c4:	f8c7 e014 	str.w	lr, [r7, #20]
   832c8:	f8c7 e010 	str.w	lr, [r7, #16]
   832cc:	f280 8091 	bge.w	833f2 <_malloc_r+0x1b6>
   832d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   832d4:	f080 8154 	bcs.w	83580 <_malloc_r+0x344>
   832d8:	2201      	movs	r2, #1
   832da:	08db      	lsrs	r3, r3, #3
   832dc:	6879      	ldr	r1, [r7, #4]
   832de:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   832e2:	4413      	add	r3, r2
   832e4:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   832e8:	fa02 f20c 	lsl.w	r2, r2, ip
   832ec:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   832f0:	430a      	orrs	r2, r1
   832f2:	f1ac 0108 	sub.w	r1, ip, #8
   832f6:	60e1      	str	r1, [r4, #12]
   832f8:	f8c4 8008 	str.w	r8, [r4, #8]
   832fc:	607a      	str	r2, [r7, #4]
   832fe:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   83302:	f8c8 400c 	str.w	r4, [r8, #12]
   83306:	2401      	movs	r4, #1
   83308:	1083      	asrs	r3, r0, #2
   8330a:	409c      	lsls	r4, r3
   8330c:	4294      	cmp	r4, r2
   8330e:	d87d      	bhi.n	8340c <_malloc_r+0x1d0>
   83310:	4214      	tst	r4, r2
   83312:	d106      	bne.n	83322 <_malloc_r+0xe6>
   83314:	f020 0003 	bic.w	r0, r0, #3
   83318:	0064      	lsls	r4, r4, #1
   8331a:	4214      	tst	r4, r2
   8331c:	f100 0004 	add.w	r0, r0, #4
   83320:	d0fa      	beq.n	83318 <_malloc_r+0xdc>
   83322:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   83326:	46cc      	mov	ip, r9
   83328:	4680      	mov	r8, r0
   8332a:	f8dc 300c 	ldr.w	r3, [ip, #12]
   8332e:	459c      	cmp	ip, r3
   83330:	d107      	bne.n	83342 <_malloc_r+0x106>
   83332:	e15f      	b.n	835f4 <_malloc_r+0x3b8>
   83334:	2a00      	cmp	r2, #0
   83336:	f280 816d 	bge.w	83614 <_malloc_r+0x3d8>
   8333a:	68db      	ldr	r3, [r3, #12]
   8333c:	459c      	cmp	ip, r3
   8333e:	f000 8159 	beq.w	835f4 <_malloc_r+0x3b8>
   83342:	6859      	ldr	r1, [r3, #4]
   83344:	f021 0103 	bic.w	r1, r1, #3
   83348:	1b8a      	subs	r2, r1, r6
   8334a:	2a0f      	cmp	r2, #15
   8334c:	ddf2      	ble.n	83334 <_malloc_r+0xf8>
   8334e:	68dc      	ldr	r4, [r3, #12]
   83350:	f8d3 c008 	ldr.w	ip, [r3, #8]
   83354:	f046 0801 	orr.w	r8, r6, #1
   83358:	4628      	mov	r0, r5
   8335a:	441e      	add	r6, r3
   8335c:	f042 0501 	orr.w	r5, r2, #1
   83360:	f8c3 8004 	str.w	r8, [r3, #4]
   83364:	f8cc 400c 	str.w	r4, [ip, #12]
   83368:	f8c4 c008 	str.w	ip, [r4, #8]
   8336c:	617e      	str	r6, [r7, #20]
   8336e:	613e      	str	r6, [r7, #16]
   83370:	f8c6 e00c 	str.w	lr, [r6, #12]
   83374:	f8c6 e008 	str.w	lr, [r6, #8]
   83378:	6075      	str	r5, [r6, #4]
   8337a:	505a      	str	r2, [r3, r1]
   8337c:	9300      	str	r3, [sp, #0]
   8337e:	f000 fb3b 	bl	839f8 <__malloc_unlock>
   83382:	9b00      	ldr	r3, [sp, #0]
   83384:	f103 0408 	add.w	r4, r3, #8
   83388:	e01e      	b.n	833c8 <_malloc_r+0x18c>
   8338a:	2910      	cmp	r1, #16
   8338c:	d820      	bhi.n	833d0 <_malloc_r+0x194>
   8338e:	f000 fb2d 	bl	839ec <__malloc_lock>
   83392:	2610      	movs	r6, #16
   83394:	2318      	movs	r3, #24
   83396:	2002      	movs	r0, #2
   83398:	4f72      	ldr	r7, [pc, #456]	; (83564 <_malloc_r+0x328>)
   8339a:	443b      	add	r3, r7
   8339c:	685c      	ldr	r4, [r3, #4]
   8339e:	f1a3 0208 	sub.w	r2, r3, #8
   833a2:	4294      	cmp	r4, r2
   833a4:	f000 812f 	beq.w	83606 <_malloc_r+0x3ca>
   833a8:	6863      	ldr	r3, [r4, #4]
   833aa:	68e1      	ldr	r1, [r4, #12]
   833ac:	f023 0303 	bic.w	r3, r3, #3
   833b0:	4423      	add	r3, r4
   833b2:	685a      	ldr	r2, [r3, #4]
   833b4:	68a6      	ldr	r6, [r4, #8]
   833b6:	f042 0201 	orr.w	r2, r2, #1
   833ba:	60f1      	str	r1, [r6, #12]
   833bc:	4628      	mov	r0, r5
   833be:	608e      	str	r6, [r1, #8]
   833c0:	605a      	str	r2, [r3, #4]
   833c2:	f000 fb19 	bl	839f8 <__malloc_unlock>
   833c6:	3408      	adds	r4, #8
   833c8:	4620      	mov	r0, r4
   833ca:	b003      	add	sp, #12
   833cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   833d0:	2400      	movs	r4, #0
   833d2:	230c      	movs	r3, #12
   833d4:	4620      	mov	r0, r4
   833d6:	602b      	str	r3, [r5, #0]
   833d8:	b003      	add	sp, #12
   833da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   833de:	2040      	movs	r0, #64	; 0x40
   833e0:	f44f 7100 	mov.w	r1, #512	; 0x200
   833e4:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   833e8:	e74a      	b.n	83280 <_malloc_r+0x44>
   833ea:	4423      	add	r3, r4
   833ec:	685a      	ldr	r2, [r3, #4]
   833ee:	68e1      	ldr	r1, [r4, #12]
   833f0:	e7e0      	b.n	833b4 <_malloc_r+0x178>
   833f2:	4423      	add	r3, r4
   833f4:	685a      	ldr	r2, [r3, #4]
   833f6:	4628      	mov	r0, r5
   833f8:	f042 0201 	orr.w	r2, r2, #1
   833fc:	605a      	str	r2, [r3, #4]
   833fe:	3408      	adds	r4, #8
   83400:	f000 fafa 	bl	839f8 <__malloc_unlock>
   83404:	4620      	mov	r0, r4
   83406:	b003      	add	sp, #12
   83408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8340c:	68bc      	ldr	r4, [r7, #8]
   8340e:	6863      	ldr	r3, [r4, #4]
   83410:	f023 0803 	bic.w	r8, r3, #3
   83414:	45b0      	cmp	r8, r6
   83416:	d304      	bcc.n	83422 <_malloc_r+0x1e6>
   83418:	eba8 0306 	sub.w	r3, r8, r6
   8341c:	2b0f      	cmp	r3, #15
   8341e:	f300 8085 	bgt.w	8352c <_malloc_r+0x2f0>
   83422:	f8df 9158 	ldr.w	r9, [pc, #344]	; 8357c <_malloc_r+0x340>
   83426:	4b50      	ldr	r3, [pc, #320]	; (83568 <_malloc_r+0x32c>)
   83428:	f8d9 2000 	ldr.w	r2, [r9]
   8342c:	681b      	ldr	r3, [r3, #0]
   8342e:	3201      	adds	r2, #1
   83430:	4433      	add	r3, r6
   83432:	eb04 0a08 	add.w	sl, r4, r8
   83436:	f000 8154 	beq.w	836e2 <_malloc_r+0x4a6>
   8343a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   8343e:	330f      	adds	r3, #15
   83440:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   83444:	f02b 0b0f 	bic.w	fp, fp, #15
   83448:	4659      	mov	r1, fp
   8344a:	4628      	mov	r0, r5
   8344c:	f000 fc90 	bl	83d70 <_sbrk_r>
   83450:	1c41      	adds	r1, r0, #1
   83452:	4602      	mov	r2, r0
   83454:	f000 80fb 	beq.w	8364e <_malloc_r+0x412>
   83458:	4582      	cmp	sl, r0
   8345a:	f200 80f6 	bhi.w	8364a <_malloc_r+0x40e>
   8345e:	4b43      	ldr	r3, [pc, #268]	; (8356c <_malloc_r+0x330>)
   83460:	6819      	ldr	r1, [r3, #0]
   83462:	4459      	add	r1, fp
   83464:	6019      	str	r1, [r3, #0]
   83466:	f000 814c 	beq.w	83702 <_malloc_r+0x4c6>
   8346a:	f8d9 0000 	ldr.w	r0, [r9]
   8346e:	3001      	adds	r0, #1
   83470:	bf1b      	ittet	ne
   83472:	eba2 0a0a 	subne.w	sl, r2, sl
   83476:	4451      	addne	r1, sl
   83478:	f8c9 2000 	streq.w	r2, [r9]
   8347c:	6019      	strne	r1, [r3, #0]
   8347e:	f012 0107 	ands.w	r1, r2, #7
   83482:	f000 8114 	beq.w	836ae <_malloc_r+0x472>
   83486:	f1c1 0008 	rsb	r0, r1, #8
   8348a:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   8348e:	4402      	add	r2, r0
   83490:	3108      	adds	r1, #8
   83492:	eb02 090b 	add.w	r9, r2, fp
   83496:	f3c9 090b 	ubfx	r9, r9, #0, #12
   8349a:	eba1 0909 	sub.w	r9, r1, r9
   8349e:	4649      	mov	r1, r9
   834a0:	4628      	mov	r0, r5
   834a2:	9301      	str	r3, [sp, #4]
   834a4:	9200      	str	r2, [sp, #0]
   834a6:	f000 fc63 	bl	83d70 <_sbrk_r>
   834aa:	1c43      	adds	r3, r0, #1
   834ac:	e89d 000c 	ldmia.w	sp, {r2, r3}
   834b0:	f000 8142 	beq.w	83738 <_malloc_r+0x4fc>
   834b4:	1a80      	subs	r0, r0, r2
   834b6:	4448      	add	r0, r9
   834b8:	f040 0001 	orr.w	r0, r0, #1
   834bc:	6819      	ldr	r1, [r3, #0]
   834be:	42bc      	cmp	r4, r7
   834c0:	4449      	add	r1, r9
   834c2:	60ba      	str	r2, [r7, #8]
   834c4:	6019      	str	r1, [r3, #0]
   834c6:	6050      	str	r0, [r2, #4]
   834c8:	d017      	beq.n	834fa <_malloc_r+0x2be>
   834ca:	f1b8 0f0f 	cmp.w	r8, #15
   834ce:	f240 80fa 	bls.w	836c6 <_malloc_r+0x48a>
   834d2:	f04f 0c05 	mov.w	ip, #5
   834d6:	6862      	ldr	r2, [r4, #4]
   834d8:	f1a8 000c 	sub.w	r0, r8, #12
   834dc:	f020 0007 	bic.w	r0, r0, #7
   834e0:	f002 0201 	and.w	r2, r2, #1
   834e4:	eb04 0e00 	add.w	lr, r4, r0
   834e8:	4302      	orrs	r2, r0
   834ea:	280f      	cmp	r0, #15
   834ec:	6062      	str	r2, [r4, #4]
   834ee:	f8ce c004 	str.w	ip, [lr, #4]
   834f2:	f8ce c008 	str.w	ip, [lr, #8]
   834f6:	f200 8116 	bhi.w	83726 <_malloc_r+0x4ea>
   834fa:	4b1d      	ldr	r3, [pc, #116]	; (83570 <_malloc_r+0x334>)
   834fc:	68bc      	ldr	r4, [r7, #8]
   834fe:	681a      	ldr	r2, [r3, #0]
   83500:	4291      	cmp	r1, r2
   83502:	bf88      	it	hi
   83504:	6019      	strhi	r1, [r3, #0]
   83506:	4b1b      	ldr	r3, [pc, #108]	; (83574 <_malloc_r+0x338>)
   83508:	681a      	ldr	r2, [r3, #0]
   8350a:	4291      	cmp	r1, r2
   8350c:	6862      	ldr	r2, [r4, #4]
   8350e:	bf88      	it	hi
   83510:	6019      	strhi	r1, [r3, #0]
   83512:	f022 0203 	bic.w	r2, r2, #3
   83516:	4296      	cmp	r6, r2
   83518:	eba2 0306 	sub.w	r3, r2, r6
   8351c:	d801      	bhi.n	83522 <_malloc_r+0x2e6>
   8351e:	2b0f      	cmp	r3, #15
   83520:	dc04      	bgt.n	8352c <_malloc_r+0x2f0>
   83522:	4628      	mov	r0, r5
   83524:	f000 fa68 	bl	839f8 <__malloc_unlock>
   83528:	2400      	movs	r4, #0
   8352a:	e74d      	b.n	833c8 <_malloc_r+0x18c>
   8352c:	f046 0201 	orr.w	r2, r6, #1
   83530:	f043 0301 	orr.w	r3, r3, #1
   83534:	4426      	add	r6, r4
   83536:	6062      	str	r2, [r4, #4]
   83538:	4628      	mov	r0, r5
   8353a:	60be      	str	r6, [r7, #8]
   8353c:	3408      	adds	r4, #8
   8353e:	6073      	str	r3, [r6, #4]
   83540:	f000 fa5a 	bl	839f8 <__malloc_unlock>
   83544:	4620      	mov	r0, r4
   83546:	b003      	add	sp, #12
   83548:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8354c:	2b14      	cmp	r3, #20
   8354e:	d970      	bls.n	83632 <_malloc_r+0x3f6>
   83550:	2b54      	cmp	r3, #84	; 0x54
   83552:	f200 80a2 	bhi.w	8369a <_malloc_r+0x45e>
   83556:	0b33      	lsrs	r3, r6, #12
   83558:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   8355c:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   83560:	00c1      	lsls	r1, r0, #3
   83562:	e68d      	b.n	83280 <_malloc_r+0x44>
   83564:	200706e0 	.word	0x200706e0
   83568:	20070c50 	.word	0x20070c50
   8356c:	20070c20 	.word	0x20070c20
   83570:	20070c48 	.word	0x20070c48
   83574:	20070c4c 	.word	0x20070c4c
   83578:	200706e8 	.word	0x200706e8
   8357c:	20070ae8 	.word	0x20070ae8
   83580:	0a5a      	lsrs	r2, r3, #9
   83582:	2a04      	cmp	r2, #4
   83584:	d95b      	bls.n	8363e <_malloc_r+0x402>
   83586:	2a14      	cmp	r2, #20
   83588:	f200 80ae 	bhi.w	836e8 <_malloc_r+0x4ac>
   8358c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   83590:	00c9      	lsls	r1, r1, #3
   83592:	325b      	adds	r2, #91	; 0x5b
   83594:	eb07 0c01 	add.w	ip, r7, r1
   83598:	5879      	ldr	r1, [r7, r1]
   8359a:	f1ac 0c08 	sub.w	ip, ip, #8
   8359e:	458c      	cmp	ip, r1
   835a0:	f000 8088 	beq.w	836b4 <_malloc_r+0x478>
   835a4:	684a      	ldr	r2, [r1, #4]
   835a6:	f022 0203 	bic.w	r2, r2, #3
   835aa:	4293      	cmp	r3, r2
   835ac:	d273      	bcs.n	83696 <_malloc_r+0x45a>
   835ae:	6889      	ldr	r1, [r1, #8]
   835b0:	458c      	cmp	ip, r1
   835b2:	d1f7      	bne.n	835a4 <_malloc_r+0x368>
   835b4:	f8dc 300c 	ldr.w	r3, [ip, #12]
   835b8:	687a      	ldr	r2, [r7, #4]
   835ba:	60e3      	str	r3, [r4, #12]
   835bc:	f8c4 c008 	str.w	ip, [r4, #8]
   835c0:	609c      	str	r4, [r3, #8]
   835c2:	f8cc 400c 	str.w	r4, [ip, #12]
   835c6:	e69e      	b.n	83306 <_malloc_r+0xca>
   835c8:	f046 0c01 	orr.w	ip, r6, #1
   835cc:	f042 0101 	orr.w	r1, r2, #1
   835d0:	4426      	add	r6, r4
   835d2:	f8c4 c004 	str.w	ip, [r4, #4]
   835d6:	4628      	mov	r0, r5
   835d8:	617e      	str	r6, [r7, #20]
   835da:	613e      	str	r6, [r7, #16]
   835dc:	f8c6 e00c 	str.w	lr, [r6, #12]
   835e0:	f8c6 e008 	str.w	lr, [r6, #8]
   835e4:	6071      	str	r1, [r6, #4]
   835e6:	50e2      	str	r2, [r4, r3]
   835e8:	f000 fa06 	bl	839f8 <__malloc_unlock>
   835ec:	3408      	adds	r4, #8
   835ee:	e6eb      	b.n	833c8 <_malloc_r+0x18c>
   835f0:	687a      	ldr	r2, [r7, #4]
   835f2:	e688      	b.n	83306 <_malloc_r+0xca>
   835f4:	f108 0801 	add.w	r8, r8, #1
   835f8:	f018 0f03 	tst.w	r8, #3
   835fc:	f10c 0c08 	add.w	ip, ip, #8
   83600:	f47f ae93 	bne.w	8332a <_malloc_r+0xee>
   83604:	e02d      	b.n	83662 <_malloc_r+0x426>
   83606:	68dc      	ldr	r4, [r3, #12]
   83608:	42a3      	cmp	r3, r4
   8360a:	bf08      	it	eq
   8360c:	3002      	addeq	r0, #2
   8360e:	f43f ae4b 	beq.w	832a8 <_malloc_r+0x6c>
   83612:	e6c9      	b.n	833a8 <_malloc_r+0x16c>
   83614:	461c      	mov	r4, r3
   83616:	4419      	add	r1, r3
   83618:	684a      	ldr	r2, [r1, #4]
   8361a:	68db      	ldr	r3, [r3, #12]
   8361c:	f854 6f08 	ldr.w	r6, [r4, #8]!
   83620:	f042 0201 	orr.w	r2, r2, #1
   83624:	604a      	str	r2, [r1, #4]
   83626:	4628      	mov	r0, r5
   83628:	60f3      	str	r3, [r6, #12]
   8362a:	609e      	str	r6, [r3, #8]
   8362c:	f000 f9e4 	bl	839f8 <__malloc_unlock>
   83630:	e6ca      	b.n	833c8 <_malloc_r+0x18c>
   83632:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   83636:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   8363a:	00c1      	lsls	r1, r0, #3
   8363c:	e620      	b.n	83280 <_malloc_r+0x44>
   8363e:	099a      	lsrs	r2, r3, #6
   83640:	f102 0139 	add.w	r1, r2, #57	; 0x39
   83644:	00c9      	lsls	r1, r1, #3
   83646:	3238      	adds	r2, #56	; 0x38
   83648:	e7a4      	b.n	83594 <_malloc_r+0x358>
   8364a:	42bc      	cmp	r4, r7
   8364c:	d054      	beq.n	836f8 <_malloc_r+0x4bc>
   8364e:	68bc      	ldr	r4, [r7, #8]
   83650:	6862      	ldr	r2, [r4, #4]
   83652:	f022 0203 	bic.w	r2, r2, #3
   83656:	e75e      	b.n	83516 <_malloc_r+0x2da>
   83658:	f859 3908 	ldr.w	r3, [r9], #-8
   8365c:	4599      	cmp	r9, r3
   8365e:	f040 8086 	bne.w	8376e <_malloc_r+0x532>
   83662:	f010 0f03 	tst.w	r0, #3
   83666:	f100 30ff 	add.w	r0, r0, #4294967295
   8366a:	d1f5      	bne.n	83658 <_malloc_r+0x41c>
   8366c:	687b      	ldr	r3, [r7, #4]
   8366e:	ea23 0304 	bic.w	r3, r3, r4
   83672:	607b      	str	r3, [r7, #4]
   83674:	0064      	lsls	r4, r4, #1
   83676:	429c      	cmp	r4, r3
   83678:	f63f aec8 	bhi.w	8340c <_malloc_r+0x1d0>
   8367c:	2c00      	cmp	r4, #0
   8367e:	f43f aec5 	beq.w	8340c <_malloc_r+0x1d0>
   83682:	421c      	tst	r4, r3
   83684:	4640      	mov	r0, r8
   83686:	f47f ae4c 	bne.w	83322 <_malloc_r+0xe6>
   8368a:	0064      	lsls	r4, r4, #1
   8368c:	421c      	tst	r4, r3
   8368e:	f100 0004 	add.w	r0, r0, #4
   83692:	d0fa      	beq.n	8368a <_malloc_r+0x44e>
   83694:	e645      	b.n	83322 <_malloc_r+0xe6>
   83696:	468c      	mov	ip, r1
   83698:	e78c      	b.n	835b4 <_malloc_r+0x378>
   8369a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   8369e:	d815      	bhi.n	836cc <_malloc_r+0x490>
   836a0:	0bf3      	lsrs	r3, r6, #15
   836a2:	f103 0078 	add.w	r0, r3, #120	; 0x78
   836a6:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   836aa:	00c1      	lsls	r1, r0, #3
   836ac:	e5e8      	b.n	83280 <_malloc_r+0x44>
   836ae:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   836b2:	e6ee      	b.n	83492 <_malloc_r+0x256>
   836b4:	2101      	movs	r1, #1
   836b6:	687b      	ldr	r3, [r7, #4]
   836b8:	1092      	asrs	r2, r2, #2
   836ba:	fa01 f202 	lsl.w	r2, r1, r2
   836be:	431a      	orrs	r2, r3
   836c0:	607a      	str	r2, [r7, #4]
   836c2:	4663      	mov	r3, ip
   836c4:	e779      	b.n	835ba <_malloc_r+0x37e>
   836c6:	2301      	movs	r3, #1
   836c8:	6053      	str	r3, [r2, #4]
   836ca:	e72a      	b.n	83522 <_malloc_r+0x2e6>
   836cc:	f240 5254 	movw	r2, #1364	; 0x554
   836d0:	4293      	cmp	r3, r2
   836d2:	d822      	bhi.n	8371a <_malloc_r+0x4de>
   836d4:	0cb3      	lsrs	r3, r6, #18
   836d6:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   836da:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   836de:	00c1      	lsls	r1, r0, #3
   836e0:	e5ce      	b.n	83280 <_malloc_r+0x44>
   836e2:	f103 0b10 	add.w	fp, r3, #16
   836e6:	e6af      	b.n	83448 <_malloc_r+0x20c>
   836e8:	2a54      	cmp	r2, #84	; 0x54
   836ea:	d829      	bhi.n	83740 <_malloc_r+0x504>
   836ec:	0b1a      	lsrs	r2, r3, #12
   836ee:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   836f2:	00c9      	lsls	r1, r1, #3
   836f4:	326e      	adds	r2, #110	; 0x6e
   836f6:	e74d      	b.n	83594 <_malloc_r+0x358>
   836f8:	4b20      	ldr	r3, [pc, #128]	; (8377c <_malloc_r+0x540>)
   836fa:	6819      	ldr	r1, [r3, #0]
   836fc:	4459      	add	r1, fp
   836fe:	6019      	str	r1, [r3, #0]
   83700:	e6b3      	b.n	8346a <_malloc_r+0x22e>
   83702:	f3ca 000b 	ubfx	r0, sl, #0, #12
   83706:	2800      	cmp	r0, #0
   83708:	f47f aeaf 	bne.w	8346a <_malloc_r+0x22e>
   8370c:	eb08 030b 	add.w	r3, r8, fp
   83710:	68ba      	ldr	r2, [r7, #8]
   83712:	f043 0301 	orr.w	r3, r3, #1
   83716:	6053      	str	r3, [r2, #4]
   83718:	e6ef      	b.n	834fa <_malloc_r+0x2be>
   8371a:	207f      	movs	r0, #127	; 0x7f
   8371c:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   83720:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   83724:	e5ac      	b.n	83280 <_malloc_r+0x44>
   83726:	f104 0108 	add.w	r1, r4, #8
   8372a:	4628      	mov	r0, r5
   8372c:	9300      	str	r3, [sp, #0]
   8372e:	f7ff fa67 	bl	82c00 <_free_r>
   83732:	9b00      	ldr	r3, [sp, #0]
   83734:	6819      	ldr	r1, [r3, #0]
   83736:	e6e0      	b.n	834fa <_malloc_r+0x2be>
   83738:	2001      	movs	r0, #1
   8373a:	f04f 0900 	mov.w	r9, #0
   8373e:	e6bd      	b.n	834bc <_malloc_r+0x280>
   83740:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   83744:	d805      	bhi.n	83752 <_malloc_r+0x516>
   83746:	0bda      	lsrs	r2, r3, #15
   83748:	f102 0178 	add.w	r1, r2, #120	; 0x78
   8374c:	00c9      	lsls	r1, r1, #3
   8374e:	3277      	adds	r2, #119	; 0x77
   83750:	e720      	b.n	83594 <_malloc_r+0x358>
   83752:	f240 5154 	movw	r1, #1364	; 0x554
   83756:	428a      	cmp	r2, r1
   83758:	d805      	bhi.n	83766 <_malloc_r+0x52a>
   8375a:	0c9a      	lsrs	r2, r3, #18
   8375c:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   83760:	00c9      	lsls	r1, r1, #3
   83762:	327c      	adds	r2, #124	; 0x7c
   83764:	e716      	b.n	83594 <_malloc_r+0x358>
   83766:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   8376a:	227e      	movs	r2, #126	; 0x7e
   8376c:	e712      	b.n	83594 <_malloc_r+0x358>
   8376e:	687b      	ldr	r3, [r7, #4]
   83770:	e780      	b.n	83674 <_malloc_r+0x438>
   83772:	08f0      	lsrs	r0, r6, #3
   83774:	f106 0308 	add.w	r3, r6, #8
   83778:	e60e      	b.n	83398 <_malloc_r+0x15c>
   8377a:	bf00      	nop
   8377c:	20070c20 	.word	0x20070c20

00083780 <__ascii_mbtowc>:
   83780:	b082      	sub	sp, #8
   83782:	b149      	cbz	r1, 83798 <__ascii_mbtowc+0x18>
   83784:	b15a      	cbz	r2, 8379e <__ascii_mbtowc+0x1e>
   83786:	b16b      	cbz	r3, 837a4 <__ascii_mbtowc+0x24>
   83788:	7813      	ldrb	r3, [r2, #0]
   8378a:	600b      	str	r3, [r1, #0]
   8378c:	7812      	ldrb	r2, [r2, #0]
   8378e:	1c10      	adds	r0, r2, #0
   83790:	bf18      	it	ne
   83792:	2001      	movne	r0, #1
   83794:	b002      	add	sp, #8
   83796:	4770      	bx	lr
   83798:	a901      	add	r1, sp, #4
   8379a:	2a00      	cmp	r2, #0
   8379c:	d1f3      	bne.n	83786 <__ascii_mbtowc+0x6>
   8379e:	4610      	mov	r0, r2
   837a0:	b002      	add	sp, #8
   837a2:	4770      	bx	lr
   837a4:	f06f 0001 	mvn.w	r0, #1
   837a8:	e7f4      	b.n	83794 <__ascii_mbtowc+0x14>
   837aa:	bf00      	nop

000837ac <memchr>:
   837ac:	0783      	lsls	r3, r0, #30
   837ae:	b470      	push	{r4, r5, r6}
   837b0:	b2cd      	uxtb	r5, r1
   837b2:	d03d      	beq.n	83830 <memchr+0x84>
   837b4:	1e54      	subs	r4, r2, #1
   837b6:	b30a      	cbz	r2, 837fc <memchr+0x50>
   837b8:	7803      	ldrb	r3, [r0, #0]
   837ba:	42ab      	cmp	r3, r5
   837bc:	d01f      	beq.n	837fe <memchr+0x52>
   837be:	1c43      	adds	r3, r0, #1
   837c0:	e005      	b.n	837ce <memchr+0x22>
   837c2:	f114 34ff 	adds.w	r4, r4, #4294967295
   837c6:	d319      	bcc.n	837fc <memchr+0x50>
   837c8:	7802      	ldrb	r2, [r0, #0]
   837ca:	42aa      	cmp	r2, r5
   837cc:	d017      	beq.n	837fe <memchr+0x52>
   837ce:	f013 0f03 	tst.w	r3, #3
   837d2:	4618      	mov	r0, r3
   837d4:	f103 0301 	add.w	r3, r3, #1
   837d8:	d1f3      	bne.n	837c2 <memchr+0x16>
   837da:	2c03      	cmp	r4, #3
   837dc:	d811      	bhi.n	83802 <memchr+0x56>
   837de:	b34c      	cbz	r4, 83834 <memchr+0x88>
   837e0:	7803      	ldrb	r3, [r0, #0]
   837e2:	42ab      	cmp	r3, r5
   837e4:	d00b      	beq.n	837fe <memchr+0x52>
   837e6:	4404      	add	r4, r0
   837e8:	1c43      	adds	r3, r0, #1
   837ea:	e002      	b.n	837f2 <memchr+0x46>
   837ec:	7802      	ldrb	r2, [r0, #0]
   837ee:	42aa      	cmp	r2, r5
   837f0:	d005      	beq.n	837fe <memchr+0x52>
   837f2:	429c      	cmp	r4, r3
   837f4:	4618      	mov	r0, r3
   837f6:	f103 0301 	add.w	r3, r3, #1
   837fa:	d1f7      	bne.n	837ec <memchr+0x40>
   837fc:	2000      	movs	r0, #0
   837fe:	bc70      	pop	{r4, r5, r6}
   83800:	4770      	bx	lr
   83802:	0209      	lsls	r1, r1, #8
   83804:	b289      	uxth	r1, r1
   83806:	4329      	orrs	r1, r5
   83808:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   8380c:	6803      	ldr	r3, [r0, #0]
   8380e:	4606      	mov	r6, r0
   83810:	404b      	eors	r3, r1
   83812:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   83816:	ea22 0303 	bic.w	r3, r2, r3
   8381a:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   8381e:	f100 0004 	add.w	r0, r0, #4
   83822:	d103      	bne.n	8382c <memchr+0x80>
   83824:	3c04      	subs	r4, #4
   83826:	2c03      	cmp	r4, #3
   83828:	d8f0      	bhi.n	8380c <memchr+0x60>
   8382a:	e7d8      	b.n	837de <memchr+0x32>
   8382c:	4630      	mov	r0, r6
   8382e:	e7d7      	b.n	837e0 <memchr+0x34>
   83830:	4614      	mov	r4, r2
   83832:	e7d2      	b.n	837da <memchr+0x2e>
   83834:	4620      	mov	r0, r4
   83836:	e7e2      	b.n	837fe <memchr+0x52>

00083838 <memcpy>:
   83838:	4684      	mov	ip, r0
   8383a:	ea41 0300 	orr.w	r3, r1, r0
   8383e:	f013 0303 	ands.w	r3, r3, #3
   83842:	d149      	bne.n	838d8 <memcpy+0xa0>
   83844:	3a40      	subs	r2, #64	; 0x40
   83846:	d323      	bcc.n	83890 <memcpy+0x58>
   83848:	680b      	ldr	r3, [r1, #0]
   8384a:	6003      	str	r3, [r0, #0]
   8384c:	684b      	ldr	r3, [r1, #4]
   8384e:	6043      	str	r3, [r0, #4]
   83850:	688b      	ldr	r3, [r1, #8]
   83852:	6083      	str	r3, [r0, #8]
   83854:	68cb      	ldr	r3, [r1, #12]
   83856:	60c3      	str	r3, [r0, #12]
   83858:	690b      	ldr	r3, [r1, #16]
   8385a:	6103      	str	r3, [r0, #16]
   8385c:	694b      	ldr	r3, [r1, #20]
   8385e:	6143      	str	r3, [r0, #20]
   83860:	698b      	ldr	r3, [r1, #24]
   83862:	6183      	str	r3, [r0, #24]
   83864:	69cb      	ldr	r3, [r1, #28]
   83866:	61c3      	str	r3, [r0, #28]
   83868:	6a0b      	ldr	r3, [r1, #32]
   8386a:	6203      	str	r3, [r0, #32]
   8386c:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   8386e:	6243      	str	r3, [r0, #36]	; 0x24
   83870:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   83872:	6283      	str	r3, [r0, #40]	; 0x28
   83874:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   83876:	62c3      	str	r3, [r0, #44]	; 0x2c
   83878:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   8387a:	6303      	str	r3, [r0, #48]	; 0x30
   8387c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   8387e:	6343      	str	r3, [r0, #52]	; 0x34
   83880:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   83882:	6383      	str	r3, [r0, #56]	; 0x38
   83884:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   83886:	63c3      	str	r3, [r0, #60]	; 0x3c
   83888:	3040      	adds	r0, #64	; 0x40
   8388a:	3140      	adds	r1, #64	; 0x40
   8388c:	3a40      	subs	r2, #64	; 0x40
   8388e:	d2db      	bcs.n	83848 <memcpy+0x10>
   83890:	3230      	adds	r2, #48	; 0x30
   83892:	d30b      	bcc.n	838ac <memcpy+0x74>
   83894:	680b      	ldr	r3, [r1, #0]
   83896:	6003      	str	r3, [r0, #0]
   83898:	684b      	ldr	r3, [r1, #4]
   8389a:	6043      	str	r3, [r0, #4]
   8389c:	688b      	ldr	r3, [r1, #8]
   8389e:	6083      	str	r3, [r0, #8]
   838a0:	68cb      	ldr	r3, [r1, #12]
   838a2:	60c3      	str	r3, [r0, #12]
   838a4:	3010      	adds	r0, #16
   838a6:	3110      	adds	r1, #16
   838a8:	3a10      	subs	r2, #16
   838aa:	d2f3      	bcs.n	83894 <memcpy+0x5c>
   838ac:	320c      	adds	r2, #12
   838ae:	d305      	bcc.n	838bc <memcpy+0x84>
   838b0:	f851 3b04 	ldr.w	r3, [r1], #4
   838b4:	f840 3b04 	str.w	r3, [r0], #4
   838b8:	3a04      	subs	r2, #4
   838ba:	d2f9      	bcs.n	838b0 <memcpy+0x78>
   838bc:	3204      	adds	r2, #4
   838be:	d008      	beq.n	838d2 <memcpy+0x9a>
   838c0:	07d2      	lsls	r2, r2, #31
   838c2:	bf1c      	itt	ne
   838c4:	f811 3b01 	ldrbne.w	r3, [r1], #1
   838c8:	f800 3b01 	strbne.w	r3, [r0], #1
   838cc:	d301      	bcc.n	838d2 <memcpy+0x9a>
   838ce:	880b      	ldrh	r3, [r1, #0]
   838d0:	8003      	strh	r3, [r0, #0]
   838d2:	4660      	mov	r0, ip
   838d4:	4770      	bx	lr
   838d6:	bf00      	nop
   838d8:	2a08      	cmp	r2, #8
   838da:	d313      	bcc.n	83904 <memcpy+0xcc>
   838dc:	078b      	lsls	r3, r1, #30
   838de:	d0b1      	beq.n	83844 <memcpy+0xc>
   838e0:	f010 0303 	ands.w	r3, r0, #3
   838e4:	d0ae      	beq.n	83844 <memcpy+0xc>
   838e6:	f1c3 0304 	rsb	r3, r3, #4
   838ea:	1ad2      	subs	r2, r2, r3
   838ec:	07db      	lsls	r3, r3, #31
   838ee:	bf1c      	itt	ne
   838f0:	f811 3b01 	ldrbne.w	r3, [r1], #1
   838f4:	f800 3b01 	strbne.w	r3, [r0], #1
   838f8:	d3a4      	bcc.n	83844 <memcpy+0xc>
   838fa:	f831 3b02 	ldrh.w	r3, [r1], #2
   838fe:	f820 3b02 	strh.w	r3, [r0], #2
   83902:	e79f      	b.n	83844 <memcpy+0xc>
   83904:	3a04      	subs	r2, #4
   83906:	d3d9      	bcc.n	838bc <memcpy+0x84>
   83908:	3a01      	subs	r2, #1
   8390a:	f811 3b01 	ldrb.w	r3, [r1], #1
   8390e:	f800 3b01 	strb.w	r3, [r0], #1
   83912:	d2f9      	bcs.n	83908 <memcpy+0xd0>
   83914:	780b      	ldrb	r3, [r1, #0]
   83916:	7003      	strb	r3, [r0, #0]
   83918:	784b      	ldrb	r3, [r1, #1]
   8391a:	7043      	strb	r3, [r0, #1]
   8391c:	788b      	ldrb	r3, [r1, #2]
   8391e:	7083      	strb	r3, [r0, #2]
   83920:	4660      	mov	r0, ip
   83922:	4770      	bx	lr

00083924 <memmove>:
   83924:	4288      	cmp	r0, r1
   83926:	b5f0      	push	{r4, r5, r6, r7, lr}
   83928:	d90d      	bls.n	83946 <memmove+0x22>
   8392a:	188b      	adds	r3, r1, r2
   8392c:	4298      	cmp	r0, r3
   8392e:	d20a      	bcs.n	83946 <memmove+0x22>
   83930:	1884      	adds	r4, r0, r2
   83932:	2a00      	cmp	r2, #0
   83934:	d051      	beq.n	839da <memmove+0xb6>
   83936:	4622      	mov	r2, r4
   83938:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   8393c:	4299      	cmp	r1, r3
   8393e:	f802 4d01 	strb.w	r4, [r2, #-1]!
   83942:	d1f9      	bne.n	83938 <memmove+0x14>
   83944:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83946:	2a0f      	cmp	r2, #15
   83948:	d948      	bls.n	839dc <memmove+0xb8>
   8394a:	ea41 0300 	orr.w	r3, r1, r0
   8394e:	079b      	lsls	r3, r3, #30
   83950:	d146      	bne.n	839e0 <memmove+0xbc>
   83952:	4615      	mov	r5, r2
   83954:	f100 0410 	add.w	r4, r0, #16
   83958:	f101 0310 	add.w	r3, r1, #16
   8395c:	f853 6c10 	ldr.w	r6, [r3, #-16]
   83960:	3d10      	subs	r5, #16
   83962:	f844 6c10 	str.w	r6, [r4, #-16]
   83966:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   8396a:	2d0f      	cmp	r5, #15
   8396c:	f844 6c0c 	str.w	r6, [r4, #-12]
   83970:	f853 6c08 	ldr.w	r6, [r3, #-8]
   83974:	f104 0410 	add.w	r4, r4, #16
   83978:	f844 6c18 	str.w	r6, [r4, #-24]
   8397c:	f853 6c04 	ldr.w	r6, [r3, #-4]
   83980:	f103 0310 	add.w	r3, r3, #16
   83984:	f844 6c14 	str.w	r6, [r4, #-20]
   83988:	d8e8      	bhi.n	8395c <memmove+0x38>
   8398a:	f1a2 0310 	sub.w	r3, r2, #16
   8398e:	f023 030f 	bic.w	r3, r3, #15
   83992:	f002 0e0f 	and.w	lr, r2, #15
   83996:	3310      	adds	r3, #16
   83998:	f1be 0f03 	cmp.w	lr, #3
   8399c:	4419      	add	r1, r3
   8399e:	4403      	add	r3, r0
   839a0:	d921      	bls.n	839e6 <memmove+0xc2>
   839a2:	460e      	mov	r6, r1
   839a4:	4674      	mov	r4, lr
   839a6:	1f1d      	subs	r5, r3, #4
   839a8:	f856 7b04 	ldr.w	r7, [r6], #4
   839ac:	3c04      	subs	r4, #4
   839ae:	2c03      	cmp	r4, #3
   839b0:	f845 7f04 	str.w	r7, [r5, #4]!
   839b4:	d8f8      	bhi.n	839a8 <memmove+0x84>
   839b6:	f1ae 0404 	sub.w	r4, lr, #4
   839ba:	f024 0403 	bic.w	r4, r4, #3
   839be:	3404      	adds	r4, #4
   839c0:	4421      	add	r1, r4
   839c2:	4423      	add	r3, r4
   839c4:	f002 0203 	and.w	r2, r2, #3
   839c8:	b162      	cbz	r2, 839e4 <memmove+0xc0>
   839ca:	3b01      	subs	r3, #1
   839cc:	440a      	add	r2, r1
   839ce:	f811 4b01 	ldrb.w	r4, [r1], #1
   839d2:	428a      	cmp	r2, r1
   839d4:	f803 4f01 	strb.w	r4, [r3, #1]!
   839d8:	d1f9      	bne.n	839ce <memmove+0xaa>
   839da:	bdf0      	pop	{r4, r5, r6, r7, pc}
   839dc:	4603      	mov	r3, r0
   839de:	e7f3      	b.n	839c8 <memmove+0xa4>
   839e0:	4603      	mov	r3, r0
   839e2:	e7f2      	b.n	839ca <memmove+0xa6>
   839e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   839e6:	4672      	mov	r2, lr
   839e8:	e7ee      	b.n	839c8 <memmove+0xa4>
   839ea:	bf00      	nop

000839ec <__malloc_lock>:
   839ec:	4801      	ldr	r0, [pc, #4]	; (839f4 <__malloc_lock+0x8>)
   839ee:	f7ff bba1 	b.w	83134 <__retarget_lock_acquire_recursive>
   839f2:	bf00      	nop
   839f4:	20070c70 	.word	0x20070c70

000839f8 <__malloc_unlock>:
   839f8:	4801      	ldr	r0, [pc, #4]	; (83a00 <__malloc_unlock+0x8>)
   839fa:	f7ff bb9d 	b.w	83138 <__retarget_lock_release_recursive>
   839fe:	bf00      	nop
   83a00:	20070c70 	.word	0x20070c70

00083a04 <_realloc_r>:
   83a04:	2900      	cmp	r1, #0
   83a06:	f000 8094 	beq.w	83b32 <_realloc_r+0x12e>
   83a0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83a0e:	460c      	mov	r4, r1
   83a10:	4615      	mov	r5, r2
   83a12:	b083      	sub	sp, #12
   83a14:	4680      	mov	r8, r0
   83a16:	f105 060b 	add.w	r6, r5, #11
   83a1a:	f7ff ffe7 	bl	839ec <__malloc_lock>
   83a1e:	f854 ec04 	ldr.w	lr, [r4, #-4]
   83a22:	2e16      	cmp	r6, #22
   83a24:	f02e 0703 	bic.w	r7, lr, #3
   83a28:	f1a4 0908 	sub.w	r9, r4, #8
   83a2c:	d83c      	bhi.n	83aa8 <_realloc_r+0xa4>
   83a2e:	2210      	movs	r2, #16
   83a30:	4616      	mov	r6, r2
   83a32:	42b5      	cmp	r5, r6
   83a34:	d83d      	bhi.n	83ab2 <_realloc_r+0xae>
   83a36:	4297      	cmp	r7, r2
   83a38:	da43      	bge.n	83ac2 <_realloc_r+0xbe>
   83a3a:	4bc6      	ldr	r3, [pc, #792]	; (83d54 <_realloc_r+0x350>)
   83a3c:	eb09 0007 	add.w	r0, r9, r7
   83a40:	6899      	ldr	r1, [r3, #8]
   83a42:	4288      	cmp	r0, r1
   83a44:	f000 80c3 	beq.w	83bce <_realloc_r+0x1ca>
   83a48:	6843      	ldr	r3, [r0, #4]
   83a4a:	f023 0101 	bic.w	r1, r3, #1
   83a4e:	4401      	add	r1, r0
   83a50:	6849      	ldr	r1, [r1, #4]
   83a52:	07c9      	lsls	r1, r1, #31
   83a54:	d54d      	bpl.n	83af2 <_realloc_r+0xee>
   83a56:	f01e 0f01 	tst.w	lr, #1
   83a5a:	f000 809b 	beq.w	83b94 <_realloc_r+0x190>
   83a5e:	4629      	mov	r1, r5
   83a60:	4640      	mov	r0, r8
   83a62:	f7ff fbeb 	bl	8323c <_malloc_r>
   83a66:	4605      	mov	r5, r0
   83a68:	2800      	cmp	r0, #0
   83a6a:	d03b      	beq.n	83ae4 <_realloc_r+0xe0>
   83a6c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83a70:	f1a0 0208 	sub.w	r2, r0, #8
   83a74:	f023 0301 	bic.w	r3, r3, #1
   83a78:	444b      	add	r3, r9
   83a7a:	429a      	cmp	r2, r3
   83a7c:	f000 812b 	beq.w	83cd6 <_realloc_r+0x2d2>
   83a80:	1f3a      	subs	r2, r7, #4
   83a82:	2a24      	cmp	r2, #36	; 0x24
   83a84:	f200 8118 	bhi.w	83cb8 <_realloc_r+0x2b4>
   83a88:	2a13      	cmp	r2, #19
   83a8a:	f200 80eb 	bhi.w	83c64 <_realloc_r+0x260>
   83a8e:	4603      	mov	r3, r0
   83a90:	4622      	mov	r2, r4
   83a92:	6811      	ldr	r1, [r2, #0]
   83a94:	6019      	str	r1, [r3, #0]
   83a96:	6851      	ldr	r1, [r2, #4]
   83a98:	6059      	str	r1, [r3, #4]
   83a9a:	6892      	ldr	r2, [r2, #8]
   83a9c:	609a      	str	r2, [r3, #8]
   83a9e:	4621      	mov	r1, r4
   83aa0:	4640      	mov	r0, r8
   83aa2:	f7ff f8ad 	bl	82c00 <_free_r>
   83aa6:	e01d      	b.n	83ae4 <_realloc_r+0xe0>
   83aa8:	f026 0607 	bic.w	r6, r6, #7
   83aac:	2e00      	cmp	r6, #0
   83aae:	4632      	mov	r2, r6
   83ab0:	dabf      	bge.n	83a32 <_realloc_r+0x2e>
   83ab2:	2500      	movs	r5, #0
   83ab4:	230c      	movs	r3, #12
   83ab6:	4628      	mov	r0, r5
   83ab8:	f8c8 3000 	str.w	r3, [r8]
   83abc:	b003      	add	sp, #12
   83abe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83ac2:	4625      	mov	r5, r4
   83ac4:	1bbb      	subs	r3, r7, r6
   83ac6:	2b0f      	cmp	r3, #15
   83ac8:	f8d9 2004 	ldr.w	r2, [r9, #4]
   83acc:	d81d      	bhi.n	83b0a <_realloc_r+0x106>
   83ace:	f002 0201 	and.w	r2, r2, #1
   83ad2:	433a      	orrs	r2, r7
   83ad4:	eb09 0107 	add.w	r1, r9, r7
   83ad8:	f8c9 2004 	str.w	r2, [r9, #4]
   83adc:	684b      	ldr	r3, [r1, #4]
   83ade:	f043 0301 	orr.w	r3, r3, #1
   83ae2:	604b      	str	r3, [r1, #4]
   83ae4:	4640      	mov	r0, r8
   83ae6:	f7ff ff87 	bl	839f8 <__malloc_unlock>
   83aea:	4628      	mov	r0, r5
   83aec:	b003      	add	sp, #12
   83aee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83af2:	f023 0303 	bic.w	r3, r3, #3
   83af6:	18f9      	adds	r1, r7, r3
   83af8:	4291      	cmp	r1, r2
   83afa:	db1d      	blt.n	83b38 <_realloc_r+0x134>
   83afc:	68c3      	ldr	r3, [r0, #12]
   83afe:	6882      	ldr	r2, [r0, #8]
   83b00:	4625      	mov	r5, r4
   83b02:	60d3      	str	r3, [r2, #12]
   83b04:	460f      	mov	r7, r1
   83b06:	609a      	str	r2, [r3, #8]
   83b08:	e7dc      	b.n	83ac4 <_realloc_r+0xc0>
   83b0a:	f002 0201 	and.w	r2, r2, #1
   83b0e:	eb09 0106 	add.w	r1, r9, r6
   83b12:	f043 0301 	orr.w	r3, r3, #1
   83b16:	4332      	orrs	r2, r6
   83b18:	f8c9 2004 	str.w	r2, [r9, #4]
   83b1c:	444f      	add	r7, r9
   83b1e:	604b      	str	r3, [r1, #4]
   83b20:	687b      	ldr	r3, [r7, #4]
   83b22:	3108      	adds	r1, #8
   83b24:	f043 0301 	orr.w	r3, r3, #1
   83b28:	607b      	str	r3, [r7, #4]
   83b2a:	4640      	mov	r0, r8
   83b2c:	f7ff f868 	bl	82c00 <_free_r>
   83b30:	e7d8      	b.n	83ae4 <_realloc_r+0xe0>
   83b32:	4611      	mov	r1, r2
   83b34:	f7ff bb82 	b.w	8323c <_malloc_r>
   83b38:	f01e 0f01 	tst.w	lr, #1
   83b3c:	d18f      	bne.n	83a5e <_realloc_r+0x5a>
   83b3e:	f854 1c08 	ldr.w	r1, [r4, #-8]
   83b42:	eba9 0a01 	sub.w	sl, r9, r1
   83b46:	f8da 1004 	ldr.w	r1, [sl, #4]
   83b4a:	f021 0103 	bic.w	r1, r1, #3
   83b4e:	440b      	add	r3, r1
   83b50:	443b      	add	r3, r7
   83b52:	4293      	cmp	r3, r2
   83b54:	db26      	blt.n	83ba4 <_realloc_r+0x1a0>
   83b56:	4655      	mov	r5, sl
   83b58:	68c1      	ldr	r1, [r0, #12]
   83b5a:	6880      	ldr	r0, [r0, #8]
   83b5c:	1f3a      	subs	r2, r7, #4
   83b5e:	60c1      	str	r1, [r0, #12]
   83b60:	6088      	str	r0, [r1, #8]
   83b62:	f855 0f08 	ldr.w	r0, [r5, #8]!
   83b66:	f8da 100c 	ldr.w	r1, [sl, #12]
   83b6a:	2a24      	cmp	r2, #36	; 0x24
   83b6c:	60c1      	str	r1, [r0, #12]
   83b6e:	6088      	str	r0, [r1, #8]
   83b70:	d826      	bhi.n	83bc0 <_realloc_r+0x1bc>
   83b72:	2a13      	cmp	r2, #19
   83b74:	f240 8081 	bls.w	83c7a <_realloc_r+0x276>
   83b78:	6821      	ldr	r1, [r4, #0]
   83b7a:	2a1b      	cmp	r2, #27
   83b7c:	f8ca 1008 	str.w	r1, [sl, #8]
   83b80:	6861      	ldr	r1, [r4, #4]
   83b82:	f8ca 100c 	str.w	r1, [sl, #12]
   83b86:	f200 80ad 	bhi.w	83ce4 <_realloc_r+0x2e0>
   83b8a:	f104 0008 	add.w	r0, r4, #8
   83b8e:	f10a 0210 	add.w	r2, sl, #16
   83b92:	e074      	b.n	83c7e <_realloc_r+0x27a>
   83b94:	f854 3c08 	ldr.w	r3, [r4, #-8]
   83b98:	eba9 0a03 	sub.w	sl, r9, r3
   83b9c:	f8da 1004 	ldr.w	r1, [sl, #4]
   83ba0:	f021 0103 	bic.w	r1, r1, #3
   83ba4:	187b      	adds	r3, r7, r1
   83ba6:	4293      	cmp	r3, r2
   83ba8:	f6ff af59 	blt.w	83a5e <_realloc_r+0x5a>
   83bac:	4655      	mov	r5, sl
   83bae:	f8da 100c 	ldr.w	r1, [sl, #12]
   83bb2:	f855 0f08 	ldr.w	r0, [r5, #8]!
   83bb6:	1f3a      	subs	r2, r7, #4
   83bb8:	2a24      	cmp	r2, #36	; 0x24
   83bba:	60c1      	str	r1, [r0, #12]
   83bbc:	6088      	str	r0, [r1, #8]
   83bbe:	d9d8      	bls.n	83b72 <_realloc_r+0x16e>
   83bc0:	4621      	mov	r1, r4
   83bc2:	4628      	mov	r0, r5
   83bc4:	461f      	mov	r7, r3
   83bc6:	46d1      	mov	r9, sl
   83bc8:	f7ff feac 	bl	83924 <memmove>
   83bcc:	e77a      	b.n	83ac4 <_realloc_r+0xc0>
   83bce:	6841      	ldr	r1, [r0, #4]
   83bd0:	f106 0010 	add.w	r0, r6, #16
   83bd4:	f021 0b03 	bic.w	fp, r1, #3
   83bd8:	44bb      	add	fp, r7
   83bda:	4583      	cmp	fp, r0
   83bdc:	da58      	bge.n	83c90 <_realloc_r+0x28c>
   83bde:	f01e 0f01 	tst.w	lr, #1
   83be2:	f47f af3c 	bne.w	83a5e <_realloc_r+0x5a>
   83be6:	f854 1c08 	ldr.w	r1, [r4, #-8]
   83bea:	eba9 0a01 	sub.w	sl, r9, r1
   83bee:	f8da 1004 	ldr.w	r1, [sl, #4]
   83bf2:	f021 0103 	bic.w	r1, r1, #3
   83bf6:	448b      	add	fp, r1
   83bf8:	4558      	cmp	r0, fp
   83bfa:	dcd3      	bgt.n	83ba4 <_realloc_r+0x1a0>
   83bfc:	4655      	mov	r5, sl
   83bfe:	f8da 100c 	ldr.w	r1, [sl, #12]
   83c02:	f855 0f08 	ldr.w	r0, [r5, #8]!
   83c06:	1f3a      	subs	r2, r7, #4
   83c08:	2a24      	cmp	r2, #36	; 0x24
   83c0a:	60c1      	str	r1, [r0, #12]
   83c0c:	6088      	str	r0, [r1, #8]
   83c0e:	f200 808d 	bhi.w	83d2c <_realloc_r+0x328>
   83c12:	2a13      	cmp	r2, #19
   83c14:	f240 8087 	bls.w	83d26 <_realloc_r+0x322>
   83c18:	6821      	ldr	r1, [r4, #0]
   83c1a:	2a1b      	cmp	r2, #27
   83c1c:	f8ca 1008 	str.w	r1, [sl, #8]
   83c20:	6861      	ldr	r1, [r4, #4]
   83c22:	f8ca 100c 	str.w	r1, [sl, #12]
   83c26:	f200 8088 	bhi.w	83d3a <_realloc_r+0x336>
   83c2a:	f104 0108 	add.w	r1, r4, #8
   83c2e:	f10a 0210 	add.w	r2, sl, #16
   83c32:	6808      	ldr	r0, [r1, #0]
   83c34:	6010      	str	r0, [r2, #0]
   83c36:	6848      	ldr	r0, [r1, #4]
   83c38:	6050      	str	r0, [r2, #4]
   83c3a:	6889      	ldr	r1, [r1, #8]
   83c3c:	6091      	str	r1, [r2, #8]
   83c3e:	ebab 0206 	sub.w	r2, fp, r6
   83c42:	eb0a 0106 	add.w	r1, sl, r6
   83c46:	f042 0201 	orr.w	r2, r2, #1
   83c4a:	6099      	str	r1, [r3, #8]
   83c4c:	604a      	str	r2, [r1, #4]
   83c4e:	f8da 3004 	ldr.w	r3, [sl, #4]
   83c52:	4640      	mov	r0, r8
   83c54:	f003 0301 	and.w	r3, r3, #1
   83c58:	431e      	orrs	r6, r3
   83c5a:	f8ca 6004 	str.w	r6, [sl, #4]
   83c5e:	f7ff fecb 	bl	839f8 <__malloc_unlock>
   83c62:	e742      	b.n	83aea <_realloc_r+0xe6>
   83c64:	6823      	ldr	r3, [r4, #0]
   83c66:	2a1b      	cmp	r2, #27
   83c68:	6003      	str	r3, [r0, #0]
   83c6a:	6863      	ldr	r3, [r4, #4]
   83c6c:	6043      	str	r3, [r0, #4]
   83c6e:	d827      	bhi.n	83cc0 <_realloc_r+0x2bc>
   83c70:	f100 0308 	add.w	r3, r0, #8
   83c74:	f104 0208 	add.w	r2, r4, #8
   83c78:	e70b      	b.n	83a92 <_realloc_r+0x8e>
   83c7a:	4620      	mov	r0, r4
   83c7c:	462a      	mov	r2, r5
   83c7e:	6801      	ldr	r1, [r0, #0]
   83c80:	461f      	mov	r7, r3
   83c82:	6011      	str	r1, [r2, #0]
   83c84:	6841      	ldr	r1, [r0, #4]
   83c86:	46d1      	mov	r9, sl
   83c88:	6051      	str	r1, [r2, #4]
   83c8a:	6883      	ldr	r3, [r0, #8]
   83c8c:	6093      	str	r3, [r2, #8]
   83c8e:	e719      	b.n	83ac4 <_realloc_r+0xc0>
   83c90:	ebab 0b06 	sub.w	fp, fp, r6
   83c94:	eb09 0106 	add.w	r1, r9, r6
   83c98:	f04b 0201 	orr.w	r2, fp, #1
   83c9c:	6099      	str	r1, [r3, #8]
   83c9e:	604a      	str	r2, [r1, #4]
   83ca0:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83ca4:	4640      	mov	r0, r8
   83ca6:	f003 0301 	and.w	r3, r3, #1
   83caa:	431e      	orrs	r6, r3
   83cac:	f844 6c04 	str.w	r6, [r4, #-4]
   83cb0:	f7ff fea2 	bl	839f8 <__malloc_unlock>
   83cb4:	4625      	mov	r5, r4
   83cb6:	e718      	b.n	83aea <_realloc_r+0xe6>
   83cb8:	4621      	mov	r1, r4
   83cba:	f7ff fe33 	bl	83924 <memmove>
   83cbe:	e6ee      	b.n	83a9e <_realloc_r+0x9a>
   83cc0:	68a3      	ldr	r3, [r4, #8]
   83cc2:	2a24      	cmp	r2, #36	; 0x24
   83cc4:	6083      	str	r3, [r0, #8]
   83cc6:	68e3      	ldr	r3, [r4, #12]
   83cc8:	60c3      	str	r3, [r0, #12]
   83cca:	d018      	beq.n	83cfe <_realloc_r+0x2fa>
   83ccc:	f100 0310 	add.w	r3, r0, #16
   83cd0:	f104 0210 	add.w	r2, r4, #16
   83cd4:	e6dd      	b.n	83a92 <_realloc_r+0x8e>
   83cd6:	f850 3c04 	ldr.w	r3, [r0, #-4]
   83cda:	4625      	mov	r5, r4
   83cdc:	f023 0303 	bic.w	r3, r3, #3
   83ce0:	441f      	add	r7, r3
   83ce2:	e6ef      	b.n	83ac4 <_realloc_r+0xc0>
   83ce4:	68a1      	ldr	r1, [r4, #8]
   83ce6:	2a24      	cmp	r2, #36	; 0x24
   83ce8:	f8ca 1010 	str.w	r1, [sl, #16]
   83cec:	68e1      	ldr	r1, [r4, #12]
   83cee:	f8ca 1014 	str.w	r1, [sl, #20]
   83cf2:	d00d      	beq.n	83d10 <_realloc_r+0x30c>
   83cf4:	f104 0010 	add.w	r0, r4, #16
   83cf8:	f10a 0218 	add.w	r2, sl, #24
   83cfc:	e7bf      	b.n	83c7e <_realloc_r+0x27a>
   83cfe:	6922      	ldr	r2, [r4, #16]
   83d00:	f100 0318 	add.w	r3, r0, #24
   83d04:	6102      	str	r2, [r0, #16]
   83d06:	6961      	ldr	r1, [r4, #20]
   83d08:	f104 0218 	add.w	r2, r4, #24
   83d0c:	6141      	str	r1, [r0, #20]
   83d0e:	e6c0      	b.n	83a92 <_realloc_r+0x8e>
   83d10:	6922      	ldr	r2, [r4, #16]
   83d12:	f104 0018 	add.w	r0, r4, #24
   83d16:	f8ca 2018 	str.w	r2, [sl, #24]
   83d1a:	6961      	ldr	r1, [r4, #20]
   83d1c:	f10a 0220 	add.w	r2, sl, #32
   83d20:	f8ca 101c 	str.w	r1, [sl, #28]
   83d24:	e7ab      	b.n	83c7e <_realloc_r+0x27a>
   83d26:	4621      	mov	r1, r4
   83d28:	462a      	mov	r2, r5
   83d2a:	e782      	b.n	83c32 <_realloc_r+0x22e>
   83d2c:	4621      	mov	r1, r4
   83d2e:	4628      	mov	r0, r5
   83d30:	9301      	str	r3, [sp, #4]
   83d32:	f7ff fdf7 	bl	83924 <memmove>
   83d36:	9b01      	ldr	r3, [sp, #4]
   83d38:	e781      	b.n	83c3e <_realloc_r+0x23a>
   83d3a:	68a1      	ldr	r1, [r4, #8]
   83d3c:	2a24      	cmp	r2, #36	; 0x24
   83d3e:	f8ca 1010 	str.w	r1, [sl, #16]
   83d42:	68e1      	ldr	r1, [r4, #12]
   83d44:	f8ca 1014 	str.w	r1, [sl, #20]
   83d48:	d006      	beq.n	83d58 <_realloc_r+0x354>
   83d4a:	f104 0110 	add.w	r1, r4, #16
   83d4e:	f10a 0218 	add.w	r2, sl, #24
   83d52:	e76e      	b.n	83c32 <_realloc_r+0x22e>
   83d54:	200706e0 	.word	0x200706e0
   83d58:	6922      	ldr	r2, [r4, #16]
   83d5a:	f104 0118 	add.w	r1, r4, #24
   83d5e:	f8ca 2018 	str.w	r2, [sl, #24]
   83d62:	6960      	ldr	r0, [r4, #20]
   83d64:	f10a 0220 	add.w	r2, sl, #32
   83d68:	f8ca 001c 	str.w	r0, [sl, #28]
   83d6c:	e761      	b.n	83c32 <_realloc_r+0x22e>
   83d6e:	bf00      	nop

00083d70 <_sbrk_r>:
   83d70:	b538      	push	{r3, r4, r5, lr}
   83d72:	2300      	movs	r3, #0
   83d74:	4c06      	ldr	r4, [pc, #24]	; (83d90 <_sbrk_r+0x20>)
   83d76:	4605      	mov	r5, r0
   83d78:	4608      	mov	r0, r1
   83d7a:	6023      	str	r3, [r4, #0]
   83d7c:	f7fc ff80 	bl	80c80 <_sbrk>
   83d80:	1c43      	adds	r3, r0, #1
   83d82:	d000      	beq.n	83d86 <_sbrk_r+0x16>
   83d84:	bd38      	pop	{r3, r4, r5, pc}
   83d86:	6823      	ldr	r3, [r4, #0]
   83d88:	2b00      	cmp	r3, #0
   83d8a:	d0fb      	beq.n	83d84 <_sbrk_r+0x14>
   83d8c:	602b      	str	r3, [r5, #0]
   83d8e:	bd38      	pop	{r3, r4, r5, pc}
   83d90:	20070c84 	.word	0x20070c84

00083d94 <__sread>:
   83d94:	b510      	push	{r4, lr}
   83d96:	460c      	mov	r4, r1
   83d98:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83d9c:	f000 fa22 	bl	841e4 <_read_r>
   83da0:	2800      	cmp	r0, #0
   83da2:	db03      	blt.n	83dac <__sread+0x18>
   83da4:	6d23      	ldr	r3, [r4, #80]	; 0x50
   83da6:	4403      	add	r3, r0
   83da8:	6523      	str	r3, [r4, #80]	; 0x50
   83daa:	bd10      	pop	{r4, pc}
   83dac:	89a3      	ldrh	r3, [r4, #12]
   83dae:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   83db2:	81a3      	strh	r3, [r4, #12]
   83db4:	bd10      	pop	{r4, pc}
   83db6:	bf00      	nop

00083db8 <__swrite>:
   83db8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83dbc:	460c      	mov	r4, r1
   83dbe:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   83dc2:	461f      	mov	r7, r3
   83dc4:	05cb      	lsls	r3, r1, #23
   83dc6:	4616      	mov	r6, r2
   83dc8:	4605      	mov	r5, r0
   83dca:	d507      	bpl.n	83ddc <__swrite+0x24>
   83dcc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83dd0:	2302      	movs	r3, #2
   83dd2:	2200      	movs	r2, #0
   83dd4:	f000 f9f0 	bl	841b8 <_lseek_r>
   83dd8:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   83ddc:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   83de0:	81a1      	strh	r1, [r4, #12]
   83de2:	463b      	mov	r3, r7
   83de4:	4632      	mov	r2, r6
   83de6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83dea:	4628      	mov	r0, r5
   83dec:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   83df0:	f000 b8d0 	b.w	83f94 <_write_r>

00083df4 <__sseek>:
   83df4:	b510      	push	{r4, lr}
   83df6:	460c      	mov	r4, r1
   83df8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83dfc:	f000 f9dc 	bl	841b8 <_lseek_r>
   83e00:	89a3      	ldrh	r3, [r4, #12]
   83e02:	1c42      	adds	r2, r0, #1
   83e04:	bf0e      	itee	eq
   83e06:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   83e0a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   83e0e:	6520      	strne	r0, [r4, #80]	; 0x50
   83e10:	81a3      	strh	r3, [r4, #12]
   83e12:	bd10      	pop	{r4, pc}

00083e14 <__sclose>:
   83e14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83e18:	f000 b934 	b.w	84084 <_close_r>

00083e1c <strlen>:
   83e1c:	f020 0103 	bic.w	r1, r0, #3
   83e20:	f010 0003 	ands.w	r0, r0, #3
   83e24:	f1c0 0000 	rsb	r0, r0, #0
   83e28:	f851 3b04 	ldr.w	r3, [r1], #4
   83e2c:	f100 0c04 	add.w	ip, r0, #4
   83e30:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   83e34:	f06f 0200 	mvn.w	r2, #0
   83e38:	bf1c      	itt	ne
   83e3a:	fa22 f20c 	lsrne.w	r2, r2, ip
   83e3e:	4313      	orrne	r3, r2
   83e40:	f04f 0c01 	mov.w	ip, #1
   83e44:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   83e48:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   83e4c:	eba3 020c 	sub.w	r2, r3, ip
   83e50:	ea22 0203 	bic.w	r2, r2, r3
   83e54:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   83e58:	bf04      	itt	eq
   83e5a:	f851 3b04 	ldreq.w	r3, [r1], #4
   83e5e:	3004      	addeq	r0, #4
   83e60:	d0f4      	beq.n	83e4c <strlen+0x30>
   83e62:	f1c2 0100 	rsb	r1, r2, #0
   83e66:	ea02 0201 	and.w	r2, r2, r1
   83e6a:	fab2 f282 	clz	r2, r2
   83e6e:	f1c2 021f 	rsb	r2, r2, #31
   83e72:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   83e76:	4770      	bx	lr

00083e78 <__swbuf_r>:
   83e78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83e7a:	460d      	mov	r5, r1
   83e7c:	4614      	mov	r4, r2
   83e7e:	4606      	mov	r6, r0
   83e80:	b110      	cbz	r0, 83e88 <__swbuf_r+0x10>
   83e82:	6b83      	ldr	r3, [r0, #56]	; 0x38
   83e84:	2b00      	cmp	r3, #0
   83e86:	d04b      	beq.n	83f20 <__swbuf_r+0xa8>
   83e88:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   83e8c:	69a3      	ldr	r3, [r4, #24]
   83e8e:	b291      	uxth	r1, r2
   83e90:	0708      	lsls	r0, r1, #28
   83e92:	60a3      	str	r3, [r4, #8]
   83e94:	d539      	bpl.n	83f0a <__swbuf_r+0x92>
   83e96:	6923      	ldr	r3, [r4, #16]
   83e98:	2b00      	cmp	r3, #0
   83e9a:	d036      	beq.n	83f0a <__swbuf_r+0x92>
   83e9c:	b2ed      	uxtb	r5, r5
   83e9e:	0489      	lsls	r1, r1, #18
   83ea0:	462f      	mov	r7, r5
   83ea2:	d515      	bpl.n	83ed0 <__swbuf_r+0x58>
   83ea4:	6822      	ldr	r2, [r4, #0]
   83ea6:	6961      	ldr	r1, [r4, #20]
   83ea8:	1ad3      	subs	r3, r2, r3
   83eaa:	428b      	cmp	r3, r1
   83eac:	da1c      	bge.n	83ee8 <__swbuf_r+0x70>
   83eae:	3301      	adds	r3, #1
   83eb0:	68a1      	ldr	r1, [r4, #8]
   83eb2:	1c50      	adds	r0, r2, #1
   83eb4:	3901      	subs	r1, #1
   83eb6:	60a1      	str	r1, [r4, #8]
   83eb8:	6020      	str	r0, [r4, #0]
   83eba:	7015      	strb	r5, [r2, #0]
   83ebc:	6962      	ldr	r2, [r4, #20]
   83ebe:	429a      	cmp	r2, r3
   83ec0:	d01a      	beq.n	83ef8 <__swbuf_r+0x80>
   83ec2:	89a3      	ldrh	r3, [r4, #12]
   83ec4:	07db      	lsls	r3, r3, #31
   83ec6:	d501      	bpl.n	83ecc <__swbuf_r+0x54>
   83ec8:	2d0a      	cmp	r5, #10
   83eca:	d015      	beq.n	83ef8 <__swbuf_r+0x80>
   83ecc:	4638      	mov	r0, r7
   83ece:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83ed0:	6e61      	ldr	r1, [r4, #100]	; 0x64
   83ed2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   83ed6:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
   83eda:	81a2      	strh	r2, [r4, #12]
   83edc:	6822      	ldr	r2, [r4, #0]
   83ede:	6661      	str	r1, [r4, #100]	; 0x64
   83ee0:	6961      	ldr	r1, [r4, #20]
   83ee2:	1ad3      	subs	r3, r2, r3
   83ee4:	428b      	cmp	r3, r1
   83ee6:	dbe2      	blt.n	83eae <__swbuf_r+0x36>
   83ee8:	4621      	mov	r1, r4
   83eea:	4630      	mov	r0, r6
   83eec:	f7fe fd0a 	bl	82904 <_fflush_r>
   83ef0:	b940      	cbnz	r0, 83f04 <__swbuf_r+0x8c>
   83ef2:	2301      	movs	r3, #1
   83ef4:	6822      	ldr	r2, [r4, #0]
   83ef6:	e7db      	b.n	83eb0 <__swbuf_r+0x38>
   83ef8:	4621      	mov	r1, r4
   83efa:	4630      	mov	r0, r6
   83efc:	f7fe fd02 	bl	82904 <_fflush_r>
   83f00:	2800      	cmp	r0, #0
   83f02:	d0e3      	beq.n	83ecc <__swbuf_r+0x54>
   83f04:	f04f 37ff 	mov.w	r7, #4294967295
   83f08:	e7e0      	b.n	83ecc <__swbuf_r+0x54>
   83f0a:	4621      	mov	r1, r4
   83f0c:	4630      	mov	r0, r6
   83f0e:	f7fe fbe9 	bl	826e4 <__swsetup_r>
   83f12:	2800      	cmp	r0, #0
   83f14:	d1f6      	bne.n	83f04 <__swbuf_r+0x8c>
   83f16:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   83f1a:	6923      	ldr	r3, [r4, #16]
   83f1c:	b291      	uxth	r1, r2
   83f1e:	e7bd      	b.n	83e9c <__swbuf_r+0x24>
   83f20:	f7fe fd48 	bl	829b4 <__sinit>
   83f24:	e7b0      	b.n	83e88 <__swbuf_r+0x10>
   83f26:	bf00      	nop

00083f28 <_wcrtomb_r>:
   83f28:	b5f0      	push	{r4, r5, r6, r7, lr}
   83f2a:	4606      	mov	r6, r0
   83f2c:	b085      	sub	sp, #20
   83f2e:	461f      	mov	r7, r3
   83f30:	b189      	cbz	r1, 83f56 <_wcrtomb_r+0x2e>
   83f32:	4c10      	ldr	r4, [pc, #64]	; (83f74 <_wcrtomb_r+0x4c>)
   83f34:	4d10      	ldr	r5, [pc, #64]	; (83f78 <_wcrtomb_r+0x50>)
   83f36:	6824      	ldr	r4, [r4, #0]
   83f38:	6b64      	ldr	r4, [r4, #52]	; 0x34
   83f3a:	2c00      	cmp	r4, #0
   83f3c:	bf08      	it	eq
   83f3e:	462c      	moveq	r4, r5
   83f40:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   83f44:	47a0      	blx	r4
   83f46:	1c43      	adds	r3, r0, #1
   83f48:	d103      	bne.n	83f52 <_wcrtomb_r+0x2a>
   83f4a:	2200      	movs	r2, #0
   83f4c:	238a      	movs	r3, #138	; 0x8a
   83f4e:	603a      	str	r2, [r7, #0]
   83f50:	6033      	str	r3, [r6, #0]
   83f52:	b005      	add	sp, #20
   83f54:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83f56:	460c      	mov	r4, r1
   83f58:	4a06      	ldr	r2, [pc, #24]	; (83f74 <_wcrtomb_r+0x4c>)
   83f5a:	4d07      	ldr	r5, [pc, #28]	; (83f78 <_wcrtomb_r+0x50>)
   83f5c:	6811      	ldr	r1, [r2, #0]
   83f5e:	4622      	mov	r2, r4
   83f60:	6b4c      	ldr	r4, [r1, #52]	; 0x34
   83f62:	a901      	add	r1, sp, #4
   83f64:	2c00      	cmp	r4, #0
   83f66:	bf08      	it	eq
   83f68:	462c      	moveq	r4, r5
   83f6a:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   83f6e:	47a0      	blx	r4
   83f70:	e7e9      	b.n	83f46 <_wcrtomb_r+0x1e>
   83f72:	bf00      	nop
   83f74:	20070140 	.word	0x20070140
   83f78:	20070574 	.word	0x20070574

00083f7c <__ascii_wctomb>:
   83f7c:	b119      	cbz	r1, 83f86 <__ascii_wctomb+0xa>
   83f7e:	2aff      	cmp	r2, #255	; 0xff
   83f80:	d803      	bhi.n	83f8a <__ascii_wctomb+0xe>
   83f82:	700a      	strb	r2, [r1, #0]
   83f84:	2101      	movs	r1, #1
   83f86:	4608      	mov	r0, r1
   83f88:	4770      	bx	lr
   83f8a:	238a      	movs	r3, #138	; 0x8a
   83f8c:	f04f 31ff 	mov.w	r1, #4294967295
   83f90:	6003      	str	r3, [r0, #0]
   83f92:	e7f8      	b.n	83f86 <__ascii_wctomb+0xa>

00083f94 <_write_r>:
   83f94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83f96:	460e      	mov	r6, r1
   83f98:	2500      	movs	r5, #0
   83f9a:	4c08      	ldr	r4, [pc, #32]	; (83fbc <_write_r+0x28>)
   83f9c:	4611      	mov	r1, r2
   83f9e:	4607      	mov	r7, r0
   83fa0:	461a      	mov	r2, r3
   83fa2:	4630      	mov	r0, r6
   83fa4:	6025      	str	r5, [r4, #0]
   83fa6:	f7fc fa49 	bl	8043c <_write>
   83faa:	1c43      	adds	r3, r0, #1
   83fac:	d000      	beq.n	83fb0 <_write_r+0x1c>
   83fae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83fb0:	6823      	ldr	r3, [r4, #0]
   83fb2:	2b00      	cmp	r3, #0
   83fb4:	d0fb      	beq.n	83fae <_write_r+0x1a>
   83fb6:	603b      	str	r3, [r7, #0]
   83fb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83fba:	bf00      	nop
   83fbc:	20070c84 	.word	0x20070c84

00083fc0 <__register_exitproc>:
   83fc0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   83fc4:	4d2c      	ldr	r5, [pc, #176]	; (84078 <__register_exitproc+0xb8>)
   83fc6:	4606      	mov	r6, r0
   83fc8:	6828      	ldr	r0, [r5, #0]
   83fca:	4698      	mov	r8, r3
   83fcc:	460f      	mov	r7, r1
   83fce:	4691      	mov	r9, r2
   83fd0:	f7ff f8b0 	bl	83134 <__retarget_lock_acquire_recursive>
   83fd4:	4b29      	ldr	r3, [pc, #164]	; (8407c <__register_exitproc+0xbc>)
   83fd6:	681c      	ldr	r4, [r3, #0]
   83fd8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   83fdc:	2b00      	cmp	r3, #0
   83fde:	d03e      	beq.n	8405e <__register_exitproc+0x9e>
   83fe0:	685a      	ldr	r2, [r3, #4]
   83fe2:	2a1f      	cmp	r2, #31
   83fe4:	dc1c      	bgt.n	84020 <__register_exitproc+0x60>
   83fe6:	f102 0e01 	add.w	lr, r2, #1
   83fea:	b176      	cbz	r6, 8400a <__register_exitproc+0x4a>
   83fec:	2101      	movs	r1, #1
   83fee:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   83ff2:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   83ff6:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   83ffa:	4091      	lsls	r1, r2
   83ffc:	4308      	orrs	r0, r1
   83ffe:	2e02      	cmp	r6, #2
   84000:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   84004:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   84008:	d023      	beq.n	84052 <__register_exitproc+0x92>
   8400a:	3202      	adds	r2, #2
   8400c:	f8c3 e004 	str.w	lr, [r3, #4]
   84010:	6828      	ldr	r0, [r5, #0]
   84012:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   84016:	f7ff f88f 	bl	83138 <__retarget_lock_release_recursive>
   8401a:	2000      	movs	r0, #0
   8401c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   84020:	4b17      	ldr	r3, [pc, #92]	; (84080 <__register_exitproc+0xc0>)
   84022:	b30b      	cbz	r3, 84068 <__register_exitproc+0xa8>
   84024:	f44f 70c8 	mov.w	r0, #400	; 0x190
   84028:	f7ff f900 	bl	8322c <malloc>
   8402c:	4603      	mov	r3, r0
   8402e:	b1d8      	cbz	r0, 84068 <__register_exitproc+0xa8>
   84030:	2000      	movs	r0, #0
   84032:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   84036:	f04f 0e01 	mov.w	lr, #1
   8403a:	6058      	str	r0, [r3, #4]
   8403c:	6019      	str	r1, [r3, #0]
   8403e:	4602      	mov	r2, r0
   84040:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   84044:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   84048:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   8404c:	2e00      	cmp	r6, #0
   8404e:	d0dc      	beq.n	8400a <__register_exitproc+0x4a>
   84050:	e7cc      	b.n	83fec <__register_exitproc+0x2c>
   84052:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   84056:	4301      	orrs	r1, r0
   84058:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   8405c:	e7d5      	b.n	8400a <__register_exitproc+0x4a>
   8405e:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   84062:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   84066:	e7bb      	b.n	83fe0 <__register_exitproc+0x20>
   84068:	6828      	ldr	r0, [r5, #0]
   8406a:	f7ff f865 	bl	83138 <__retarget_lock_release_recursive>
   8406e:	f04f 30ff 	mov.w	r0, #4294967295
   84072:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   84076:	bf00      	nop
   84078:	20070570 	.word	0x20070570
   8407c:	00084540 	.word	0x00084540
   84080:	0008322d 	.word	0x0008322d

00084084 <_close_r>:
   84084:	b538      	push	{r3, r4, r5, lr}
   84086:	2300      	movs	r3, #0
   84088:	4c06      	ldr	r4, [pc, #24]	; (840a4 <_close_r+0x20>)
   8408a:	4605      	mov	r5, r0
   8408c:	4608      	mov	r0, r1
   8408e:	6023      	str	r3, [r4, #0]
   84090:	f7fc fe12 	bl	80cb8 <_close>
   84094:	1c43      	adds	r3, r0, #1
   84096:	d000      	beq.n	8409a <_close_r+0x16>
   84098:	bd38      	pop	{r3, r4, r5, pc}
   8409a:	6823      	ldr	r3, [r4, #0]
   8409c:	2b00      	cmp	r3, #0
   8409e:	d0fb      	beq.n	84098 <_close_r+0x14>
   840a0:	602b      	str	r3, [r5, #0]
   840a2:	bd38      	pop	{r3, r4, r5, pc}
   840a4:	20070c84 	.word	0x20070c84

000840a8 <_fclose_r>:
   840a8:	b570      	push	{r4, r5, r6, lr}
   840aa:	b159      	cbz	r1, 840c4 <_fclose_r+0x1c>
   840ac:	4605      	mov	r5, r0
   840ae:	460c      	mov	r4, r1
   840b0:	b110      	cbz	r0, 840b8 <_fclose_r+0x10>
   840b2:	6b83      	ldr	r3, [r0, #56]	; 0x38
   840b4:	2b00      	cmp	r3, #0
   840b6:	d03c      	beq.n	84132 <_fclose_r+0x8a>
   840b8:	6e63      	ldr	r3, [r4, #100]	; 0x64
   840ba:	07d8      	lsls	r0, r3, #31
   840bc:	d505      	bpl.n	840ca <_fclose_r+0x22>
   840be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   840c2:	b92b      	cbnz	r3, 840d0 <_fclose_r+0x28>
   840c4:	2600      	movs	r6, #0
   840c6:	4630      	mov	r0, r6
   840c8:	bd70      	pop	{r4, r5, r6, pc}
   840ca:	89a3      	ldrh	r3, [r4, #12]
   840cc:	0599      	lsls	r1, r3, #22
   840ce:	d53c      	bpl.n	8414a <_fclose_r+0xa2>
   840d0:	4621      	mov	r1, r4
   840d2:	4628      	mov	r0, r5
   840d4:	f7fe fb7a 	bl	827cc <__sflush_r>
   840d8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   840da:	4606      	mov	r6, r0
   840dc:	b133      	cbz	r3, 840ec <_fclose_r+0x44>
   840de:	69e1      	ldr	r1, [r4, #28]
   840e0:	4628      	mov	r0, r5
   840e2:	4798      	blx	r3
   840e4:	2800      	cmp	r0, #0
   840e6:	bfb8      	it	lt
   840e8:	f04f 36ff 	movlt.w	r6, #4294967295
   840ec:	89a3      	ldrh	r3, [r4, #12]
   840ee:	061a      	lsls	r2, r3, #24
   840f0:	d422      	bmi.n	84138 <_fclose_r+0x90>
   840f2:	6b21      	ldr	r1, [r4, #48]	; 0x30
   840f4:	b141      	cbz	r1, 84108 <_fclose_r+0x60>
   840f6:	f104 0340 	add.w	r3, r4, #64	; 0x40
   840fa:	4299      	cmp	r1, r3
   840fc:	d002      	beq.n	84104 <_fclose_r+0x5c>
   840fe:	4628      	mov	r0, r5
   84100:	f7fe fd7e 	bl	82c00 <_free_r>
   84104:	2300      	movs	r3, #0
   84106:	6323      	str	r3, [r4, #48]	; 0x30
   84108:	6c61      	ldr	r1, [r4, #68]	; 0x44
   8410a:	b121      	cbz	r1, 84116 <_fclose_r+0x6e>
   8410c:	4628      	mov	r0, r5
   8410e:	f7fe fd77 	bl	82c00 <_free_r>
   84112:	2300      	movs	r3, #0
   84114:	6463      	str	r3, [r4, #68]	; 0x44
   84116:	f7fe fc7d 	bl	82a14 <__sfp_lock_acquire>
   8411a:	2200      	movs	r2, #0
   8411c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   8411e:	81a2      	strh	r2, [r4, #12]
   84120:	07db      	lsls	r3, r3, #31
   84122:	d50e      	bpl.n	84142 <_fclose_r+0x9a>
   84124:	6da0      	ldr	r0, [r4, #88]	; 0x58
   84126:	f7ff f803 	bl	83130 <__retarget_lock_close_recursive>
   8412a:	f7fe fc79 	bl	82a20 <__sfp_lock_release>
   8412e:	4630      	mov	r0, r6
   84130:	bd70      	pop	{r4, r5, r6, pc}
   84132:	f7fe fc3f 	bl	829b4 <__sinit>
   84136:	e7bf      	b.n	840b8 <_fclose_r+0x10>
   84138:	6921      	ldr	r1, [r4, #16]
   8413a:	4628      	mov	r0, r5
   8413c:	f7fe fd60 	bl	82c00 <_free_r>
   84140:	e7d7      	b.n	840f2 <_fclose_r+0x4a>
   84142:	6da0      	ldr	r0, [r4, #88]	; 0x58
   84144:	f7fe fff8 	bl	83138 <__retarget_lock_release_recursive>
   84148:	e7ec      	b.n	84124 <_fclose_r+0x7c>
   8414a:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8414c:	f7fe fff2 	bl	83134 <__retarget_lock_acquire_recursive>
   84150:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   84154:	2b00      	cmp	r3, #0
   84156:	d1bb      	bne.n	840d0 <_fclose_r+0x28>
   84158:	6e66      	ldr	r6, [r4, #100]	; 0x64
   8415a:	f016 0601 	ands.w	r6, r6, #1
   8415e:	d1b1      	bne.n	840c4 <_fclose_r+0x1c>
   84160:	6da0      	ldr	r0, [r4, #88]	; 0x58
   84162:	f7fe ffe9 	bl	83138 <__retarget_lock_release_recursive>
   84166:	4630      	mov	r0, r6
   84168:	bd70      	pop	{r4, r5, r6, pc}
   8416a:	bf00      	nop

0008416c <_fstat_r>:
   8416c:	b570      	push	{r4, r5, r6, lr}
   8416e:	460d      	mov	r5, r1
   84170:	2300      	movs	r3, #0
   84172:	4c07      	ldr	r4, [pc, #28]	; (84190 <_fstat_r+0x24>)
   84174:	4606      	mov	r6, r0
   84176:	4611      	mov	r1, r2
   84178:	4628      	mov	r0, r5
   8417a:	6023      	str	r3, [r4, #0]
   8417c:	f7fc fd9f 	bl	80cbe <_fstat>
   84180:	1c43      	adds	r3, r0, #1
   84182:	d000      	beq.n	84186 <_fstat_r+0x1a>
   84184:	bd70      	pop	{r4, r5, r6, pc}
   84186:	6823      	ldr	r3, [r4, #0]
   84188:	2b00      	cmp	r3, #0
   8418a:	d0fb      	beq.n	84184 <_fstat_r+0x18>
   8418c:	6033      	str	r3, [r6, #0]
   8418e:	bd70      	pop	{r4, r5, r6, pc}
   84190:	20070c84 	.word	0x20070c84

00084194 <_isatty_r>:
   84194:	b538      	push	{r3, r4, r5, lr}
   84196:	2300      	movs	r3, #0
   84198:	4c06      	ldr	r4, [pc, #24]	; (841b4 <_isatty_r+0x20>)
   8419a:	4605      	mov	r5, r0
   8419c:	4608      	mov	r0, r1
   8419e:	6023      	str	r3, [r4, #0]
   841a0:	f7fc fd92 	bl	80cc8 <_isatty>
   841a4:	1c43      	adds	r3, r0, #1
   841a6:	d000      	beq.n	841aa <_isatty_r+0x16>
   841a8:	bd38      	pop	{r3, r4, r5, pc}
   841aa:	6823      	ldr	r3, [r4, #0]
   841ac:	2b00      	cmp	r3, #0
   841ae:	d0fb      	beq.n	841a8 <_isatty_r+0x14>
   841b0:	602b      	str	r3, [r5, #0]
   841b2:	bd38      	pop	{r3, r4, r5, pc}
   841b4:	20070c84 	.word	0x20070c84

000841b8 <_lseek_r>:
   841b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   841ba:	460e      	mov	r6, r1
   841bc:	2500      	movs	r5, #0
   841be:	4c08      	ldr	r4, [pc, #32]	; (841e0 <_lseek_r+0x28>)
   841c0:	4611      	mov	r1, r2
   841c2:	4607      	mov	r7, r0
   841c4:	461a      	mov	r2, r3
   841c6:	4630      	mov	r0, r6
   841c8:	6025      	str	r5, [r4, #0]
   841ca:	f7fc fd7f 	bl	80ccc <_lseek>
   841ce:	1c43      	adds	r3, r0, #1
   841d0:	d000      	beq.n	841d4 <_lseek_r+0x1c>
   841d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   841d4:	6823      	ldr	r3, [r4, #0]
   841d6:	2b00      	cmp	r3, #0
   841d8:	d0fb      	beq.n	841d2 <_lseek_r+0x1a>
   841da:	603b      	str	r3, [r7, #0]
   841dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   841de:	bf00      	nop
   841e0:	20070c84 	.word	0x20070c84

000841e4 <_read_r>:
   841e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   841e6:	460e      	mov	r6, r1
   841e8:	2500      	movs	r5, #0
   841ea:	4c08      	ldr	r4, [pc, #32]	; (8420c <_read_r+0x28>)
   841ec:	4611      	mov	r1, r2
   841ee:	4607      	mov	r7, r0
   841f0:	461a      	mov	r2, r3
   841f2:	4630      	mov	r0, r6
   841f4:	6025      	str	r5, [r4, #0]
   841f6:	f7fc f8bd 	bl	80374 <_read>
   841fa:	1c43      	adds	r3, r0, #1
   841fc:	d000      	beq.n	84200 <_read_r+0x1c>
   841fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84200:	6823      	ldr	r3, [r4, #0]
   84202:	2b00      	cmp	r3, #0
   84204:	d0fb      	beq.n	841fe <_read_r+0x1a>
   84206:	603b      	str	r3, [r7, #0]
   84208:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8420a:	bf00      	nop
   8420c:	20070c84 	.word	0x20070c84

00084210 <__aeabi_uldivmod>:
   84210:	b953      	cbnz	r3, 84228 <__aeabi_uldivmod+0x18>
   84212:	b94a      	cbnz	r2, 84228 <__aeabi_uldivmod+0x18>
   84214:	2900      	cmp	r1, #0
   84216:	bf08      	it	eq
   84218:	2800      	cmpeq	r0, #0
   8421a:	bf1c      	itt	ne
   8421c:	f04f 31ff 	movne.w	r1, #4294967295
   84220:	f04f 30ff 	movne.w	r0, #4294967295
   84224:	f000 b97a 	b.w	8451c <__aeabi_idiv0>
   84228:	f1ad 0c08 	sub.w	ip, sp, #8
   8422c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   84230:	f000 f806 	bl	84240 <__udivmoddi4>
   84234:	f8dd e004 	ldr.w	lr, [sp, #4]
   84238:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   8423c:	b004      	add	sp, #16
   8423e:	4770      	bx	lr

00084240 <__udivmoddi4>:
   84240:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   84244:	468c      	mov	ip, r1
   84246:	460e      	mov	r6, r1
   84248:	4604      	mov	r4, r0
   8424a:	9d08      	ldr	r5, [sp, #32]
   8424c:	2b00      	cmp	r3, #0
   8424e:	d150      	bne.n	842f2 <__udivmoddi4+0xb2>
   84250:	428a      	cmp	r2, r1
   84252:	4617      	mov	r7, r2
   84254:	d96c      	bls.n	84330 <__udivmoddi4+0xf0>
   84256:	fab2 fe82 	clz	lr, r2
   8425a:	f1be 0f00 	cmp.w	lr, #0
   8425e:	d00b      	beq.n	84278 <__udivmoddi4+0x38>
   84260:	f1ce 0c20 	rsb	ip, lr, #32
   84264:	fa01 f60e 	lsl.w	r6, r1, lr
   84268:	fa20 fc0c 	lsr.w	ip, r0, ip
   8426c:	fa02 f70e 	lsl.w	r7, r2, lr
   84270:	ea4c 0c06 	orr.w	ip, ip, r6
   84274:	fa00 f40e 	lsl.w	r4, r0, lr
   84278:	0c3a      	lsrs	r2, r7, #16
   8427a:	fbbc f9f2 	udiv	r9, ip, r2
   8427e:	b2bb      	uxth	r3, r7
   84280:	fb02 cc19 	mls	ip, r2, r9, ip
   84284:	fb09 fa03 	mul.w	sl, r9, r3
   84288:	ea4f 4814 	mov.w	r8, r4, lsr #16
   8428c:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   84290:	45b2      	cmp	sl, r6
   84292:	d90a      	bls.n	842aa <__udivmoddi4+0x6a>
   84294:	19f6      	adds	r6, r6, r7
   84296:	f109 31ff 	add.w	r1, r9, #4294967295
   8429a:	f080 8125 	bcs.w	844e8 <__udivmoddi4+0x2a8>
   8429e:	45b2      	cmp	sl, r6
   842a0:	f240 8122 	bls.w	844e8 <__udivmoddi4+0x2a8>
   842a4:	f1a9 0902 	sub.w	r9, r9, #2
   842a8:	443e      	add	r6, r7
   842aa:	eba6 060a 	sub.w	r6, r6, sl
   842ae:	fbb6 f0f2 	udiv	r0, r6, r2
   842b2:	fb02 6610 	mls	r6, r2, r0, r6
   842b6:	fb00 f303 	mul.w	r3, r0, r3
   842ba:	b2a4      	uxth	r4, r4
   842bc:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   842c0:	42a3      	cmp	r3, r4
   842c2:	d909      	bls.n	842d8 <__udivmoddi4+0x98>
   842c4:	19e4      	adds	r4, r4, r7
   842c6:	f100 32ff 	add.w	r2, r0, #4294967295
   842ca:	f080 810b 	bcs.w	844e4 <__udivmoddi4+0x2a4>
   842ce:	42a3      	cmp	r3, r4
   842d0:	f240 8108 	bls.w	844e4 <__udivmoddi4+0x2a4>
   842d4:	3802      	subs	r0, #2
   842d6:	443c      	add	r4, r7
   842d8:	2100      	movs	r1, #0
   842da:	1ae4      	subs	r4, r4, r3
   842dc:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   842e0:	2d00      	cmp	r5, #0
   842e2:	d062      	beq.n	843aa <__udivmoddi4+0x16a>
   842e4:	2300      	movs	r3, #0
   842e6:	fa24 f40e 	lsr.w	r4, r4, lr
   842ea:	602c      	str	r4, [r5, #0]
   842ec:	606b      	str	r3, [r5, #4]
   842ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   842f2:	428b      	cmp	r3, r1
   842f4:	d907      	bls.n	84306 <__udivmoddi4+0xc6>
   842f6:	2d00      	cmp	r5, #0
   842f8:	d055      	beq.n	843a6 <__udivmoddi4+0x166>
   842fa:	2100      	movs	r1, #0
   842fc:	e885 0041 	stmia.w	r5, {r0, r6}
   84300:	4608      	mov	r0, r1
   84302:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84306:	fab3 f183 	clz	r1, r3
   8430a:	2900      	cmp	r1, #0
   8430c:	f040 808f 	bne.w	8442e <__udivmoddi4+0x1ee>
   84310:	42b3      	cmp	r3, r6
   84312:	d302      	bcc.n	8431a <__udivmoddi4+0xda>
   84314:	4282      	cmp	r2, r0
   84316:	f200 80fc 	bhi.w	84512 <__udivmoddi4+0x2d2>
   8431a:	1a84      	subs	r4, r0, r2
   8431c:	eb66 0603 	sbc.w	r6, r6, r3
   84320:	2001      	movs	r0, #1
   84322:	46b4      	mov	ip, r6
   84324:	2d00      	cmp	r5, #0
   84326:	d040      	beq.n	843aa <__udivmoddi4+0x16a>
   84328:	e885 1010 	stmia.w	r5, {r4, ip}
   8432c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84330:	b912      	cbnz	r2, 84338 <__udivmoddi4+0xf8>
   84332:	2701      	movs	r7, #1
   84334:	fbb7 f7f2 	udiv	r7, r7, r2
   84338:	fab7 fe87 	clz	lr, r7
   8433c:	f1be 0f00 	cmp.w	lr, #0
   84340:	d135      	bne.n	843ae <__udivmoddi4+0x16e>
   84342:	2101      	movs	r1, #1
   84344:	1bf6      	subs	r6, r6, r7
   84346:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   8434a:	fa1f f887 	uxth.w	r8, r7
   8434e:	fbb6 f2fc 	udiv	r2, r6, ip
   84352:	fb0c 6612 	mls	r6, ip, r2, r6
   84356:	fb08 f002 	mul.w	r0, r8, r2
   8435a:	0c23      	lsrs	r3, r4, #16
   8435c:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   84360:	42b0      	cmp	r0, r6
   84362:	d907      	bls.n	84374 <__udivmoddi4+0x134>
   84364:	19f6      	adds	r6, r6, r7
   84366:	f102 33ff 	add.w	r3, r2, #4294967295
   8436a:	d202      	bcs.n	84372 <__udivmoddi4+0x132>
   8436c:	42b0      	cmp	r0, r6
   8436e:	f200 80d2 	bhi.w	84516 <__udivmoddi4+0x2d6>
   84372:	461a      	mov	r2, r3
   84374:	1a36      	subs	r6, r6, r0
   84376:	fbb6 f0fc 	udiv	r0, r6, ip
   8437a:	fb0c 6610 	mls	r6, ip, r0, r6
   8437e:	fb08 f800 	mul.w	r8, r8, r0
   84382:	b2a3      	uxth	r3, r4
   84384:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   84388:	45a0      	cmp	r8, r4
   8438a:	d907      	bls.n	8439c <__udivmoddi4+0x15c>
   8438c:	19e4      	adds	r4, r4, r7
   8438e:	f100 33ff 	add.w	r3, r0, #4294967295
   84392:	d202      	bcs.n	8439a <__udivmoddi4+0x15a>
   84394:	45a0      	cmp	r8, r4
   84396:	f200 80b9 	bhi.w	8450c <__udivmoddi4+0x2cc>
   8439a:	4618      	mov	r0, r3
   8439c:	eba4 0408 	sub.w	r4, r4, r8
   843a0:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   843a4:	e79c      	b.n	842e0 <__udivmoddi4+0xa0>
   843a6:	4629      	mov	r1, r5
   843a8:	4628      	mov	r0, r5
   843aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   843ae:	fa07 f70e 	lsl.w	r7, r7, lr
   843b2:	f1ce 0320 	rsb	r3, lr, #32
   843b6:	fa26 f203 	lsr.w	r2, r6, r3
   843ba:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   843be:	fbb2 f1fc 	udiv	r1, r2, ip
   843c2:	fa1f f887 	uxth.w	r8, r7
   843c6:	fb0c 2211 	mls	r2, ip, r1, r2
   843ca:	fa06 f60e 	lsl.w	r6, r6, lr
   843ce:	fa20 f303 	lsr.w	r3, r0, r3
   843d2:	fb01 f908 	mul.w	r9, r1, r8
   843d6:	4333      	orrs	r3, r6
   843d8:	0c1e      	lsrs	r6, r3, #16
   843da:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   843de:	45b1      	cmp	r9, r6
   843e0:	fa00 f40e 	lsl.w	r4, r0, lr
   843e4:	d909      	bls.n	843fa <__udivmoddi4+0x1ba>
   843e6:	19f6      	adds	r6, r6, r7
   843e8:	f101 32ff 	add.w	r2, r1, #4294967295
   843ec:	f080 808c 	bcs.w	84508 <__udivmoddi4+0x2c8>
   843f0:	45b1      	cmp	r9, r6
   843f2:	f240 8089 	bls.w	84508 <__udivmoddi4+0x2c8>
   843f6:	3902      	subs	r1, #2
   843f8:	443e      	add	r6, r7
   843fa:	eba6 0609 	sub.w	r6, r6, r9
   843fe:	fbb6 f0fc 	udiv	r0, r6, ip
   84402:	fb0c 6210 	mls	r2, ip, r0, r6
   84406:	fb00 f908 	mul.w	r9, r0, r8
   8440a:	b29e      	uxth	r6, r3
   8440c:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   84410:	45b1      	cmp	r9, r6
   84412:	d907      	bls.n	84424 <__udivmoddi4+0x1e4>
   84414:	19f6      	adds	r6, r6, r7
   84416:	f100 33ff 	add.w	r3, r0, #4294967295
   8441a:	d271      	bcs.n	84500 <__udivmoddi4+0x2c0>
   8441c:	45b1      	cmp	r9, r6
   8441e:	d96f      	bls.n	84500 <__udivmoddi4+0x2c0>
   84420:	3802      	subs	r0, #2
   84422:	443e      	add	r6, r7
   84424:	eba6 0609 	sub.w	r6, r6, r9
   84428:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   8442c:	e78f      	b.n	8434e <__udivmoddi4+0x10e>
   8442e:	f1c1 0720 	rsb	r7, r1, #32
   84432:	fa22 f807 	lsr.w	r8, r2, r7
   84436:	408b      	lsls	r3, r1
   84438:	ea48 0303 	orr.w	r3, r8, r3
   8443c:	fa26 f407 	lsr.w	r4, r6, r7
   84440:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   84444:	fbb4 f9fe 	udiv	r9, r4, lr
   84448:	fa1f fc83 	uxth.w	ip, r3
   8444c:	fb0e 4419 	mls	r4, lr, r9, r4
   84450:	408e      	lsls	r6, r1
   84452:	fa20 f807 	lsr.w	r8, r0, r7
   84456:	fb09 fa0c 	mul.w	sl, r9, ip
   8445a:	ea48 0806 	orr.w	r8, r8, r6
   8445e:	ea4f 4618 	mov.w	r6, r8, lsr #16
   84462:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   84466:	45a2      	cmp	sl, r4
   84468:	fa02 f201 	lsl.w	r2, r2, r1
   8446c:	fa00 f601 	lsl.w	r6, r0, r1
   84470:	d908      	bls.n	84484 <__udivmoddi4+0x244>
   84472:	18e4      	adds	r4, r4, r3
   84474:	f109 30ff 	add.w	r0, r9, #4294967295
   84478:	d244      	bcs.n	84504 <__udivmoddi4+0x2c4>
   8447a:	45a2      	cmp	sl, r4
   8447c:	d942      	bls.n	84504 <__udivmoddi4+0x2c4>
   8447e:	f1a9 0902 	sub.w	r9, r9, #2
   84482:	441c      	add	r4, r3
   84484:	eba4 040a 	sub.w	r4, r4, sl
   84488:	fbb4 f0fe 	udiv	r0, r4, lr
   8448c:	fb0e 4410 	mls	r4, lr, r0, r4
   84490:	fb00 fc0c 	mul.w	ip, r0, ip
   84494:	fa1f f888 	uxth.w	r8, r8
   84498:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   8449c:	45a4      	cmp	ip, r4
   8449e:	d907      	bls.n	844b0 <__udivmoddi4+0x270>
   844a0:	18e4      	adds	r4, r4, r3
   844a2:	f100 3eff 	add.w	lr, r0, #4294967295
   844a6:	d229      	bcs.n	844fc <__udivmoddi4+0x2bc>
   844a8:	45a4      	cmp	ip, r4
   844aa:	d927      	bls.n	844fc <__udivmoddi4+0x2bc>
   844ac:	3802      	subs	r0, #2
   844ae:	441c      	add	r4, r3
   844b0:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   844b4:	fba0 8902 	umull	r8, r9, r0, r2
   844b8:	eba4 0c0c 	sub.w	ip, r4, ip
   844bc:	45cc      	cmp	ip, r9
   844be:	46c2      	mov	sl, r8
   844c0:	46ce      	mov	lr, r9
   844c2:	d315      	bcc.n	844f0 <__udivmoddi4+0x2b0>
   844c4:	d012      	beq.n	844ec <__udivmoddi4+0x2ac>
   844c6:	b155      	cbz	r5, 844de <__udivmoddi4+0x29e>
   844c8:	ebb6 030a 	subs.w	r3, r6, sl
   844cc:	eb6c 060e 	sbc.w	r6, ip, lr
   844d0:	fa06 f707 	lsl.w	r7, r6, r7
   844d4:	40cb      	lsrs	r3, r1
   844d6:	431f      	orrs	r7, r3
   844d8:	40ce      	lsrs	r6, r1
   844da:	602f      	str	r7, [r5, #0]
   844dc:	606e      	str	r6, [r5, #4]
   844de:	2100      	movs	r1, #0
   844e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   844e4:	4610      	mov	r0, r2
   844e6:	e6f7      	b.n	842d8 <__udivmoddi4+0x98>
   844e8:	4689      	mov	r9, r1
   844ea:	e6de      	b.n	842aa <__udivmoddi4+0x6a>
   844ec:	4546      	cmp	r6, r8
   844ee:	d2ea      	bcs.n	844c6 <__udivmoddi4+0x286>
   844f0:	ebb8 0a02 	subs.w	sl, r8, r2
   844f4:	eb69 0e03 	sbc.w	lr, r9, r3
   844f8:	3801      	subs	r0, #1
   844fa:	e7e4      	b.n	844c6 <__udivmoddi4+0x286>
   844fc:	4670      	mov	r0, lr
   844fe:	e7d7      	b.n	844b0 <__udivmoddi4+0x270>
   84500:	4618      	mov	r0, r3
   84502:	e78f      	b.n	84424 <__udivmoddi4+0x1e4>
   84504:	4681      	mov	r9, r0
   84506:	e7bd      	b.n	84484 <__udivmoddi4+0x244>
   84508:	4611      	mov	r1, r2
   8450a:	e776      	b.n	843fa <__udivmoddi4+0x1ba>
   8450c:	3802      	subs	r0, #2
   8450e:	443c      	add	r4, r7
   84510:	e744      	b.n	8439c <__udivmoddi4+0x15c>
   84512:	4608      	mov	r0, r1
   84514:	e706      	b.n	84324 <__udivmoddi4+0xe4>
   84516:	3a02      	subs	r2, #2
   84518:	443e      	add	r6, r7
   8451a:	e72b      	b.n	84374 <__udivmoddi4+0x134>

0008451c <__aeabi_idiv0>:
   8451c:	4770      	bx	lr
   8451e:	bf00      	nop
   84520:	736e6f43 	.word	0x736e6f43
   84524:	20656c6f 	.word	0x20656c6f
   84528:	64616572 	.word	0x64616572
   8452c:	00000a79 	.word	0x00000a79
   84530:	3d3d3d3d 	.word	0x3d3d3d3d
   84534:	3d3d3d3d 	.word	0x3d3d3d3d
   84538:	3d3d3d3d 	.word	0x3d3d3d3d
   8453c:	00000a3d 	.word	0x00000a3d

00084540 <_global_impure_ptr>:
   84540:	20070148 33323130 37363534 42413938     H.. 0123456789AB
   84550:	46454443 00000000 33323130 37363534     CDEF....01234567
   84560:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   84570:	0000296c                                l)..

00084574 <blanks.7217>:
   84574:	20202020 20202020 20202020 20202020                     

00084584 <zeroes.7218>:
   84584:	30303030 30303030 30303030 30303030     0000000000000000
   84594:	00000043 49534f50 00000058 0000002e     C...POSIX.......

000845a4 <_ctype_>:
   845a4:	20202000 20202020 28282020 20282828     .         ((((( 
   845b4:	20202020 20202020 20202020 20202020                     
   845c4:	10108820 10101010 10101010 10101010      ...............
   845d4:	04040410 04040404 10040404 10101010     ................
   845e4:	41411010 41414141 01010101 01010101     ..AAAAAA........
   845f4:	01010101 01010101 01010101 10101010     ................
   84604:	42421010 42424242 02020202 02020202     ..BBBBBB........
   84614:	02020202 02020202 02020202 10101010     ................
   84624:	00000020 00000000 00000000 00000000      ...............
	...

000846a8 <_init>:
   846a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   846aa:	bf00      	nop
   846ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
   846ae:	bc08      	pop	{r3}
   846b0:	469e      	mov	lr, r3
   846b2:	4770      	bx	lr

000846b4 <__init_array_start>:
   846b4:	000827ad 	.word	0x000827ad

000846b8 <__frame_dummy_init_array_entry>:
   846b8:	00080119                                ....

000846bc <_fini>:
   846bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   846be:	bf00      	nop
   846c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
   846c2:	bc08      	pop	{r3}
   846c4:	469e      	mov	lr, r3
   846c6:	4770      	bx	lr

000846c8 <__fini_array_start>:
   846c8:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
	...

2007000c <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4a14      	ldr	r2, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b13      	ldr	r3, [r2, #48]	; 0x30
20070048:	f023 0303 	bic.w	r3, r3, #3
2007004c:	f043 0301 	orr.w	r3, r3, #1
20070050:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070054:	f013 0f08 	tst.w	r3, #8
20070058:	d0fb      	beq.n	20070052 <SystemInit+0x46>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005a:	4a12      	ldr	r2, [pc, #72]	; (200700a4 <SystemInit+0x98>)
2007005c:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
2007005e:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070060:	461a      	mov	r2, r3
20070062:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070064:	f013 0f02 	tst.w	r3, #2
20070068:	d0fb      	beq.n	20070062 <SystemInit+0x56>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006a:	2211      	movs	r2, #17
2007006c:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
2007006e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070070:	461a      	mov	r2, r3
20070072:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070074:	f013 0f08 	tst.w	r3, #8
20070078:	d0fb      	beq.n	20070072 <SystemInit+0x66>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007a:	2212      	movs	r2, #18
2007007c:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070080:	461a      	mov	r2, r3
20070082:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070084:	f013 0f08 	tst.w	r3, #8
20070088:	d0fb      	beq.n	20070082 <SystemInit+0x76>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008a:	4a07      	ldr	r2, [pc, #28]	; (200700a8 <SystemInit+0x9c>)
2007008c:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
2007008e:	601a      	str	r2, [r3, #0]
20070090:	4770      	bx	lr
20070092:	bf00      	nop
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	2007013c 	.word	0x2007013c

200700b0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d915      	bls.n	200700e2 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b6:	4b1b      	ldr	r3, [pc, #108]	; (20070124 <system_init_flash+0x74>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d919      	bls.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700bc:	4b1a      	ldr	r3, [pc, #104]	; (20070128 <system_init_flash+0x78>)
200700be:	4298      	cmp	r0, r3
200700c0:	d91e      	bls.n	20070100 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700c2:	4b1a      	ldr	r3, [pc, #104]	; (2007012c <system_init_flash+0x7c>)
200700c4:	4298      	cmp	r0, r3
200700c6:	d923      	bls.n	20070110 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700c8:	4b19      	ldr	r3, [pc, #100]	; (20070130 <system_init_flash+0x80>)
200700ca:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700cc:	bf94      	ite	ls
200700ce:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700d2:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700d6:	4a17      	ldr	r2, [pc, #92]	; (20070134 <system_init_flash+0x84>)
200700d8:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700da:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700de:	6013      	str	r3, [r2, #0]
200700e0:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700e2:	2300      	movs	r3, #0
200700e4:	4a13      	ldr	r2, [pc, #76]	; (20070134 <system_init_flash+0x84>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700f0:	f44f 7380 	mov.w	r3, #256	; 0x100
200700f4:	4a0f      	ldr	r2, [pc, #60]	; (20070134 <system_init_flash+0x84>)
200700f6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700f8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700fc:	6013      	str	r3, [r2, #0]
200700fe:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20070100:	f44f 7300 	mov.w	r3, #512	; 0x200
20070104:	4a0b      	ldr	r2, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070106:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20070108:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007010c:	6013      	str	r3, [r2, #0]
2007010e:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070110:	f44f 7340 	mov.w	r3, #768	; 0x300
20070114:	4a07      	ldr	r2, [pc, #28]	; (20070134 <system_init_flash+0x84>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0121eabf 	.word	0x0121eabf
20070124:	02faf07f 	.word	0x02faf07f
20070128:	03d08fff 	.word	0x03d08fff
2007012c:	04c4b3ff 	.word	0x04c4b3ff
20070130:	055d4a7f 	.word	0x055d4a7f
20070134:	400e0a00 	.word	0x400e0a00

20070138 <g_interrupt_enabled>:
20070138:	00000001                                ....

2007013c <SystemCoreClock>:
2007013c:	003d0900                                ..=.

20070140 <_impure_ptr>:
20070140:	20070148 00000000                       H.. ....

20070148 <impure_data>:
20070148:	00000000 20070434 2007049c 20070504     ....4.. ... ... 
	...
200701f0:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070200:	0005deec 0000000b 00000000 00000000     ................
	...

20070570 <__atexit_recursive_mutex>:
20070570:	20070c60                                `.. 

20070574 <__global_locale>:
20070574:	00000043 00000000 00000000 00000000     C...............
	...
20070594:	00000043 00000000 00000000 00000000     C...............
	...
200705b4:	00000043 00000000 00000000 00000000     C...............
	...
200705d4:	00000043 00000000 00000000 00000000     C...............
	...
200705f4:	00000043 00000000 00000000 00000000     C...............
	...
20070614:	00000043 00000000 00000000 00000000     C...............
	...
20070634:	00000043 00000000 00000000 00000000     C...............
	...
20070654:	00083f7d 00083781 00000000 000845a4     }?...7.......E..
20070664:	000845a0 00084554 00084554 00084554     .E..TE..TE..TE..
20070674:	00084554 00084554 00084554 00084554     TE..TE..TE..TE..
20070684:	00084554 00084554 ffffffff ffffffff     TE..TE..........
20070694:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
200706bc:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

200706e0 <__malloc_av_>:
	...
200706e8:	200706e0 200706e0 200706e8 200706e8     ... ... ... ... 
200706f8:	200706f0 200706f0 200706f8 200706f8     ... ... ... ... 
20070708:	20070700 20070700 20070708 20070708     ... ... ... ... 
20070718:	20070710 20070710 20070718 20070718     ... ... ... ... 
20070728:	20070720 20070720 20070728 20070728      ..  .. (.. (.. 
20070738:	20070730 20070730 20070738 20070738     0.. 0.. 8.. 8.. 
20070748:	20070740 20070740 20070748 20070748     @.. @.. H.. H.. 
20070758:	20070750 20070750 20070758 20070758     P.. P.. X.. X.. 
20070768:	20070760 20070760 20070768 20070768     `.. `.. h.. h.. 
20070778:	20070770 20070770 20070778 20070778     p.. p.. x.. x.. 
20070788:	20070780 20070780 20070788 20070788     ... ... ... ... 
20070798:	20070790 20070790 20070798 20070798     ... ... ... ... 
200707a8:	200707a0 200707a0 200707a8 200707a8     ... ... ... ... 
200707b8:	200707b0 200707b0 200707b8 200707b8     ... ... ... ... 
200707c8:	200707c0 200707c0 200707c8 200707c8     ... ... ... ... 
200707d8:	200707d0 200707d0 200707d8 200707d8     ... ... ... ... 
200707e8:	200707e0 200707e0 200707e8 200707e8     ... ... ... ... 
200707f8:	200707f0 200707f0 200707f8 200707f8     ... ... ... ... 
20070808:	20070800 20070800 20070808 20070808     ... ... ... ... 
20070818:	20070810 20070810 20070818 20070818     ... ... ... ... 
20070828:	20070820 20070820 20070828 20070828      ..  .. (.. (.. 
20070838:	20070830 20070830 20070838 20070838     0.. 0.. 8.. 8.. 
20070848:	20070840 20070840 20070848 20070848     @.. @.. H.. H.. 
20070858:	20070850 20070850 20070858 20070858     P.. P.. X.. X.. 
20070868:	20070860 20070860 20070868 20070868     `.. `.. h.. h.. 
20070878:	20070870 20070870 20070878 20070878     p.. p.. x.. x.. 
20070888:	20070880 20070880 20070888 20070888     ... ... ... ... 
20070898:	20070890 20070890 20070898 20070898     ... ... ... ... 
200708a8:	200708a0 200708a0 200708a8 200708a8     ... ... ... ... 
200708b8:	200708b0 200708b0 200708b8 200708b8     ... ... ... ... 
200708c8:	200708c0 200708c0 200708c8 200708c8     ... ... ... ... 
200708d8:	200708d0 200708d0 200708d8 200708d8     ... ... ... ... 
200708e8:	200708e0 200708e0 200708e8 200708e8     ... ... ... ... 
200708f8:	200708f0 200708f0 200708f8 200708f8     ... ... ... ... 
20070908:	20070900 20070900 20070908 20070908     ... ... ... ... 
20070918:	20070910 20070910 20070918 20070918     ... ... ... ... 
20070928:	20070920 20070920 20070928 20070928      ..  .. (.. (.. 
20070938:	20070930 20070930 20070938 20070938     0.. 0.. 8.. 8.. 
20070948:	20070940 20070940 20070948 20070948     @.. @.. H.. H.. 
20070958:	20070950 20070950 20070958 20070958     P.. P.. X.. X.. 
20070968:	20070960 20070960 20070968 20070968     `.. `.. h.. h.. 
20070978:	20070970 20070970 20070978 20070978     p.. p.. x.. x.. 
20070988:	20070980 20070980 20070988 20070988     ... ... ... ... 
20070998:	20070990 20070990 20070998 20070998     ... ... ... ... 
200709a8:	200709a0 200709a0 200709a8 200709a8     ... ... ... ... 
200709b8:	200709b0 200709b0 200709b8 200709b8     ... ... ... ... 
200709c8:	200709c0 200709c0 200709c8 200709c8     ... ... ... ... 
200709d8:	200709d0 200709d0 200709d8 200709d8     ... ... ... ... 
200709e8:	200709e0 200709e0 200709e8 200709e8     ... ... ... ... 
200709f8:	200709f0 200709f0 200709f8 200709f8     ... ... ... ... 
20070a08:	20070a00 20070a00 20070a08 20070a08     ... ... ... ... 
20070a18:	20070a10 20070a10 20070a18 20070a18     ... ... ... ... 
20070a28:	20070a20 20070a20 20070a28 20070a28      ..  .. (.. (.. 
20070a38:	20070a30 20070a30 20070a38 20070a38     0.. 0.. 8.. 8.. 
20070a48:	20070a40 20070a40 20070a48 20070a48     @.. @.. H.. H.. 
20070a58:	20070a50 20070a50 20070a58 20070a58     P.. P.. X.. X.. 
20070a68:	20070a60 20070a60 20070a68 20070a68     `.. `.. h.. h.. 
20070a78:	20070a70 20070a70 20070a78 20070a78     p.. p.. x.. x.. 
20070a88:	20070a80 20070a80 20070a88 20070a88     ... ... ... ... 
20070a98:	20070a90 20070a90 20070a98 20070a98     ... ... ... ... 
20070aa8:	20070aa0 20070aa0 20070aa8 20070aa8     ... ... ... ... 
20070ab8:	20070ab0 20070ab0 20070ab8 20070ab8     ... ... ... ... 
20070ac8:	20070ac0 20070ac0 20070ac8 20070ac8     ... ... ... ... 
20070ad8:	20070ad0 20070ad0 20070ad8 20070ad8     ... ... ... ... 

20070ae8 <__malloc_sbrk_base>:
20070ae8:	ffffffff                                ....

20070aec <__malloc_trim_threshold>:
20070aec:	00020000                                ....
