
ElectricAutomobile.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004694  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00084694  00084694  00014694  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000af0  20070000  0008469c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000198  20070af0  0008518c  00020af0  2**2
                  ALLOC
  4 .stack        00002000  20070c88  00085324  00020af0  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020af0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020b19  2**0
                  CONTENTS, READONLY
  7 .debug_info   00016f53  00000000  00000000  00020b72  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003567  00000000  00000000  00037ac5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000aa0  00000000  00000000  0003b02c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000009c0  00000000  00000000  0003bacc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000192a6  00000000  00000000  0003c48c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0001034d  00000000  00000000  00055732  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000657b7  00000000  00000000  00065a7f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000024ac  00000000  00000000  000cb238  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    000046b5  00000000  00000000  000cd6e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	88 2c 07 20 39 0a 08 00 35 0a 08 00 35 0a 08 00     .,. 9...5...5...
   80010:	35 0a 08 00 35 0a 08 00 35 0a 08 00 00 00 00 00     5...5...5.......
	...
   8002c:	35 0a 08 00 35 0a 08 00 00 00 00 00 35 0a 08 00     5...5.......5...
   8003c:	35 0a 08 00 35 0a 08 00 35 0a 08 00 35 0a 08 00     5...5...5...5...
   8004c:	35 0a 08 00 35 0a 08 00 35 0a 08 00 35 0a 08 00     5...5...5...5...
   8005c:	35 0a 08 00 35 0a 08 00 35 0a 08 00 00 00 00 00     5...5...5.......
   8006c:	85 08 08 00 99 08 08 00 ad 08 08 00 c1 08 08 00     ................
	...
   80084:	e5 04 08 00 35 0a 08 00 35 0a 08 00 35 0a 08 00     ....5...5...5...
   80094:	35 0a 08 00 35 0a 08 00 35 0a 08 00 35 0a 08 00     5...5...5...5...
   800a4:	00 00 00 00 35 0a 08 00 35 0a 08 00 35 0a 08 00     ....5...5...5...
   800b4:	35 0a 08 00 35 0a 08 00 35 0a 08 00 35 0a 08 00     5...5...5...5...
   800c4:	35 0a 08 00 35 0a 08 00 35 0a 08 00 35 0a 08 00     5...5...5...5...
   800d4:	35 0a 08 00 35 0a 08 00 35 0a 08 00 35 0a 08 00     5...5...5...5...
   800e4:	35 0a 08 00 35 0a 08 00 35 0a 08 00 35 0a 08 00     5...5...5...5...

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070af0 	.word	0x20070af0
   80110:	00000000 	.word	0x00000000
   80114:	0008469c 	.word	0x0008469c

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	0008469c 	.word	0x0008469c
   80154:	20070af4 	.word	0x20070af4
   80158:	0008469c 	.word	0x0008469c
   8015c:	00000000 	.word	0x00000000

00080160 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80160:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80162:	0189      	lsls	r1, r1, #6
   80164:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   80166:	2402      	movs	r4, #2
   80168:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   8016a:	f04f 31ff 	mov.w	r1, #4294967295
   8016e:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   80170:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   80172:	605a      	str	r2, [r3, #4]
}
   80174:	bc10      	pop	{r4}
   80176:	4770      	bx	lr

00080178 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   80178:	0189      	lsls	r1, r1, #6
   8017a:	2305      	movs	r3, #5
   8017c:	5043      	str	r3, [r0, r1]
   8017e:	4770      	bx	lr

00080180 <tc_read_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_RA;
   80180:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80184:	6948      	ldr	r0, [r1, #20]
}
   80186:	4770      	bx	lr

00080188 <tc_read_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_RC;
   80188:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   8018c:	69c8      	ldr	r0, [r1, #28]
}
   8018e:	4770      	bx	lr

00080190 <tc_write_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RA = ul_value;
   80190:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80194:	614a      	str	r2, [r1, #20]
   80196:	4770      	bx	lr

00080198 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   80198:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   8019c:	61ca      	str	r2, [r1, #28]
   8019e:	4770      	bx	lr

000801a0 <pulse_set_duty_cycle>:
		tc_start(TC2, TC_WAVE_CHANNEL_1);
	}
 }
 
 void pulse_set_duty_cycle(int pin, double duty_cycle)
 {
   801a0:	b538      	push	{r3, r4, r5, lr}
   801a2:	4604      	mov	r4, r0
   801a4:	4610      	mov	r0, r2
   801a6:	4619      	mov	r1, r3
	 double ra = 0;
	 ra = rc * (1 - duty_cycle/100);
   801a8:	2200      	movs	r2, #0
   801aa:	4b1b      	ldr	r3, [pc, #108]	; (80218 <pulse_set_duty_cycle+0x78>)
   801ac:	4d1b      	ldr	r5, [pc, #108]	; (8021c <pulse_set_duty_cycle+0x7c>)
   801ae:	47a8      	blx	r5
   801b0:	4602      	mov	r2, r0
   801b2:	460b      	mov	r3, r1
   801b4:	2000      	movs	r0, #0
   801b6:	491a      	ldr	r1, [pc, #104]	; (80220 <pulse_set_duty_cycle+0x80>)
   801b8:	4d1a      	ldr	r5, [pc, #104]	; (80224 <pulse_set_duty_cycle+0x84>)
   801ba:	47a8      	blx	r5
   801bc:	a314      	add	r3, pc, #80	; (adr r3, 80210 <pulse_set_duty_cycle+0x70>)
   801be:	e9d3 2300 	ldrd	r2, r3, [r3]
   801c2:	4d19      	ldr	r5, [pc, #100]	; (80228 <pulse_set_duty_cycle+0x88>)
   801c4:	47a8      	blx	r5
	 
	 /*
	  * RA Compare is used to control the TIOA output. The value of RA will regulate the
	  * duty cycle. The signal will go high on RA compare and get cleared on RC compare.
	  */	
	 if (pin == EnA)
   801c6:	2c39      	cmp	r4, #57	; 0x39
   801c8:	d002      	beq.n	801d0 <pulse_set_duty_cycle+0x30>
	 {
		 tc_write_ra(TC0, TC_WAVE_CHANNEL_0, (uint32_t) ra);
		 tc_write_rc(TC0, TC_WAVE_CHANNEL_0, (uint32_t) rc);
	 }
	 if (pin == EnB)
   801ca:	2c5c      	cmp	r4, #92	; 0x5c
   801cc:	d00f      	beq.n	801ee <pulse_set_duty_cycle+0x4e>
   801ce:	bd38      	pop	{r3, r4, r5, pc}
		 tc_write_ra(TC0, TC_WAVE_CHANNEL_0, (uint32_t) ra);
   801d0:	4b16      	ldr	r3, [pc, #88]	; (8022c <pulse_set_duty_cycle+0x8c>)
   801d2:	4798      	blx	r3
   801d4:	4c16      	ldr	r4, [pc, #88]	; (80230 <pulse_set_duty_cycle+0x90>)
   801d6:	4602      	mov	r2, r0
   801d8:	2100      	movs	r1, #0
   801da:	4620      	mov	r0, r4
   801dc:	4b15      	ldr	r3, [pc, #84]	; (80234 <pulse_set_duty_cycle+0x94>)
   801de:	4798      	blx	r3
		 tc_write_rc(TC0, TC_WAVE_CHANNEL_0, (uint32_t) rc);
   801e0:	f240 1217 	movw	r2, #279	; 0x117
   801e4:	2100      	movs	r1, #0
   801e6:	4620      	mov	r0, r4
   801e8:	4b13      	ldr	r3, [pc, #76]	; (80238 <pulse_set_duty_cycle+0x98>)
   801ea:	4798      	blx	r3
   801ec:	bd38      	pop	{r3, r4, r5, pc}
	 {
		 tc_write_ra(TC2, TC_WAVE_CHANNEL_1, (uint32_t) ra);
   801ee:	4b0f      	ldr	r3, [pc, #60]	; (8022c <pulse_set_duty_cycle+0x8c>)
   801f0:	4798      	blx	r3
   801f2:	4c12      	ldr	r4, [pc, #72]	; (8023c <pulse_set_duty_cycle+0x9c>)
   801f4:	4602      	mov	r2, r0
   801f6:	2101      	movs	r1, #1
   801f8:	4620      	mov	r0, r4
   801fa:	4b0e      	ldr	r3, [pc, #56]	; (80234 <pulse_set_duty_cycle+0x94>)
   801fc:	4798      	blx	r3
		 tc_write_rc(TC2, TC_WAVE_CHANNEL_1, (uint32_t) rc);
   801fe:	f240 1217 	movw	r2, #279	; 0x117
   80202:	2101      	movs	r1, #1
   80204:	4620      	mov	r0, r4
   80206:	4b0c      	ldr	r3, [pc, #48]	; (80238 <pulse_set_duty_cycle+0x98>)
   80208:	4798      	blx	r3
	 }
 }
   8020a:	e7e0      	b.n	801ce <pulse_set_duty_cycle+0x2e>
   8020c:	f3af 8000 	nop.w
   80210:	00000000 	.word	0x00000000
   80214:	40717000 	.word	0x40717000
   80218:	40590000 	.word	0x40590000
   8021c:	00081435 	.word	0x00081435
   80220:	3ff00000 	.word	0x3ff00000
   80224:	00080e79 	.word	0x00080e79
   80228:	000811e1 	.word	0x000811e1
   8022c:	00081605 	.word	0x00081605
   80230:	40080000 	.word	0x40080000
   80234:	00080191 	.word	0x00080191
   80238:	00080199 	.word	0x00080199
   8023c:	40088000 	.word	0x40088000

00080240 <pulse_start>:
 {
   80240:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   80244:	4605      	mov	r5, r0
   80246:	4690      	mov	r8, r2
   80248:	4699      	mov	r9, r3
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8024a:	200b      	movs	r0, #11
   8024c:	4c26      	ldr	r4, [pc, #152]	; (802e8 <pulse_start+0xa8>)
   8024e:	47a0      	blx	r4
   80250:	200c      	movs	r0, #12
   80252:	47a0      	blx	r4
   80254:	200d      	movs	r0, #13
   80256:	47a0      	blx	r4
   80258:	200e      	movs	r0, #14
   8025a:	47a0      	blx	r4
		ioport_port_mask_t mask, ioport_mode_t mode)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
   8025c:	4b23      	ldr	r3, [pc, #140]	; (802ec <pulse_start+0xac>)
   8025e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   80262:	665a      	str	r2, [r3, #100]	; 0x64
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   80264:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   80266:	625a      	str	r2, [r3, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   80268:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
#endif
	}

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
   8026c:	6f19      	ldr	r1, [r3, #112]	; 0x70
   8026e:	4311      	orrs	r1, r2
   80270:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   80272:	605a      	str	r2, [r3, #4]
		base->PIO_PUER = mask;
   80274:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80278:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   8027c:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_MDDR = mask;
   8027e:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
   80280:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_SCIFSR = mask;
   80282:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABSR |= mask;
   80286:	6f19      	ldr	r1, [r3, #112]	; 0x70
   80288:	4311      	orrs	r1, r2
   8028a:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   8028c:	605a      	str	r2, [r3, #4]
	 pmc_set_writeprotect(false);
   8028e:	2000      	movs	r0, #0
   80290:	4b17      	ldr	r3, [pc, #92]	; (802f0 <pulse_start+0xb0>)
   80292:	4798      	blx	r3
	 pmc_enable_periph_clk(ID_TC0); // PMC ID of TC0 ch0 = ID_TC0
   80294:	201b      	movs	r0, #27
   80296:	47a0      	blx	r4
	 pmc_enable_periph_clk(ID_TC7); // PMC ID of TC2 ch1 = ID_TC7
   80298:	2022      	movs	r0, #34	; 0x22
   8029a:	47a0      	blx	r4
	 tc_init(TC0, TC_WAVE_CHANNEL_0, TC_CMR_TCCLKS_TIMER_CLOCK4 
   8029c:	4e15      	ldr	r6, [pc, #84]	; (802f4 <pulse_start+0xb4>)
   8029e:	4632      	mov	r2, r6
   802a0:	2100      	movs	r1, #0
   802a2:	4815      	ldr	r0, [pc, #84]	; (802f8 <pulse_start+0xb8>)
   802a4:	4c15      	ldr	r4, [pc, #84]	; (802fc <pulse_start+0xbc>)
   802a6:	47a0      	blx	r4
	tc_init(TC2, TC_WAVE_CHANNEL_1, TC_CMR_TCCLKS_TIMER_CLOCK4 
   802a8:	4632      	mov	r2, r6
   802aa:	2101      	movs	r1, #1
   802ac:	4814      	ldr	r0, [pc, #80]	; (80300 <pulse_start+0xc0>)
   802ae:	47a0      	blx	r4
	if (pin == EnA)
   802b0:	2d39      	cmp	r5, #57	; 0x39
   802b2:	d003      	beq.n	802bc <pulse_start+0x7c>
	if (pin == EnB)
   802b4:	2d5c      	cmp	r5, #92	; 0x5c
   802b6:	d00c      	beq.n	802d2 <pulse_start+0x92>
   802b8:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
		pulse_set_duty_cycle(EnA, duty_cycle);
   802bc:	4642      	mov	r2, r8
   802be:	464b      	mov	r3, r9
   802c0:	2039      	movs	r0, #57	; 0x39
   802c2:	4910      	ldr	r1, [pc, #64]	; (80304 <pulse_start+0xc4>)
   802c4:	4788      	blx	r1
		tc_start(TC0, TC_WAVE_CHANNEL_0);
   802c6:	2100      	movs	r1, #0
   802c8:	480b      	ldr	r0, [pc, #44]	; (802f8 <pulse_start+0xb8>)
   802ca:	4b0f      	ldr	r3, [pc, #60]	; (80308 <pulse_start+0xc8>)
   802cc:	4798      	blx	r3
   802ce:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
		pulse_set_duty_cycle(EnB, duty_cycle);
   802d2:	4642      	mov	r2, r8
   802d4:	464b      	mov	r3, r9
   802d6:	205c      	movs	r0, #92	; 0x5c
   802d8:	490a      	ldr	r1, [pc, #40]	; (80304 <pulse_start+0xc4>)
   802da:	4788      	blx	r1
		tc_start(TC2, TC_WAVE_CHANNEL_1);
   802dc:	2101      	movs	r1, #1
   802de:	4808      	ldr	r0, [pc, #32]	; (80300 <pulse_start+0xc0>)
   802e0:	4b09      	ldr	r3, [pc, #36]	; (80308 <pulse_start+0xc8>)
   802e2:	4798      	blx	r3
 }
   802e4:	e7e8      	b.n	802b8 <pulse_start+0x78>
   802e6:	bf00      	nop
   802e8:	000809bd 	.word	0x000809bd
   802ec:	400e1000 	.word	0x400e1000
   802f0:	00080a11 	.word	0x00080a11
   802f4:	0009c003 	.word	0x0009c003
   802f8:	40080000 	.word	0x40080000
   802fc:	00080161 	.word	0x00080161
   80300:	40088000 	.word	0x40088000
   80304:	000801a1 	.word	0x000801a1
   80308:	00080179 	.word	0x00080179

0008030c <usart_serial_read_packet>:
 *
 */
status_code_t usart_serial_read_packet(usart_if usart, uint8_t *data,
		size_t len)
{
	while (len) {
   8030c:	2a00      	cmp	r2, #0
   8030e:	d051      	beq.n	803b4 <usart_serial_read_packet+0xa8>
{
   80310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   80314:	b083      	sub	sp, #12
   80316:	4605      	mov	r5, r0
   80318:	460c      	mov	r4, r1
   8031a:	4692      	mov	sl, r2
   8031c:	448a      	add	sl, r1

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   8031e:	4f26      	ldr	r7, [pc, #152]	; (803b8 <usart_serial_read_packet+0xac>)
		while (uart_read((Uart*)p_usart, data));
   80320:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 803cc <usart_serial_read_packet+0xc0>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   80324:	4e25      	ldr	r6, [pc, #148]	; (803bc <usart_serial_read_packet+0xb0>)
   80326:	e01d      	b.n	80364 <usart_serial_read_packet+0x58>
		while (uart_read((Uart*)p_usart, data));
   80328:	4621      	mov	r1, r4
   8032a:	4638      	mov	r0, r7
   8032c:	47c8      	blx	r9
   8032e:	2800      	cmp	r0, #0
   80330:	d1fa      	bne.n	80328 <usart_serial_read_packet+0x1c>
   80332:	e021      	b.n	80378 <usart_serial_read_packet+0x6c>
		while (usart_read(p_usart, &val));
   80334:	469b      	mov	fp, r3
   80336:	f8df 8098 	ldr.w	r8, [pc, #152]	; 803d0 <usart_serial_read_packet+0xc4>
   8033a:	a901      	add	r1, sp, #4
   8033c:	4658      	mov	r0, fp
   8033e:	47c0      	blx	r8
   80340:	2800      	cmp	r0, #0
   80342:	d1fa      	bne.n	8033a <usart_serial_read_packet+0x2e>
		*data = (uint8_t)(val & 0xFF);
   80344:	9b01      	ldr	r3, [sp, #4]
   80346:	7023      	strb	r3, [r4, #0]
   80348:	e019      	b.n	8037e <usart_serial_read_packet+0x72>
		while (usart_read(p_usart, &val));
   8034a:	469b      	mov	fp, r3
   8034c:	f8df 8080 	ldr.w	r8, [pc, #128]	; 803d0 <usart_serial_read_packet+0xc4>
   80350:	a901      	add	r1, sp, #4
   80352:	4658      	mov	r0, fp
   80354:	47c0      	blx	r8
   80356:	2800      	cmp	r0, #0
   80358:	d1fa      	bne.n	80350 <usart_serial_read_packet+0x44>
		*data = (uint8_t)(val & 0xFF);
   8035a:	9b01      	ldr	r3, [sp, #4]
   8035c:	7023      	strb	r3, [r4, #0]
		usart_serial_getchar(usart, data);
		len--;
		data++;
   8035e:	3401      	adds	r4, #1
	while (len) {
   80360:	4554      	cmp	r4, sl
   80362:	d023      	beq.n	803ac <usart_serial_read_packet+0xa0>
	uint32_t val = 0;
   80364:	2300      	movs	r3, #0
   80366:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
   80368:	42bd      	cmp	r5, r7
   8036a:	d0dd      	beq.n	80328 <usart_serial_read_packet+0x1c>
	if (USART0 == p_usart) {
   8036c:	4b14      	ldr	r3, [pc, #80]	; (803c0 <usart_serial_read_packet+0xb4>)
   8036e:	429d      	cmp	r5, r3
   80370:	d0e0      	beq.n	80334 <usart_serial_read_packet+0x28>
	if (USART1 == p_usart) {
   80372:	4b14      	ldr	r3, [pc, #80]	; (803c4 <usart_serial_read_packet+0xb8>)
   80374:	429d      	cmp	r5, r3
   80376:	d0e8      	beq.n	8034a <usart_serial_read_packet+0x3e>
	if (USART2 == p_usart) {
   80378:	4b13      	ldr	r3, [pc, #76]	; (803c8 <usart_serial_read_packet+0xbc>)
   8037a:	429d      	cmp	r5, r3
   8037c:	d00b      	beq.n	80396 <usart_serial_read_packet+0x8a>
	if (USART3 == p_usart) {
   8037e:	42b5      	cmp	r5, r6
   80380:	d1ed      	bne.n	8035e <usart_serial_read_packet+0x52>
		while (usart_read(p_usart, &val));
   80382:	f8df 804c 	ldr.w	r8, [pc, #76]	; 803d0 <usart_serial_read_packet+0xc4>
   80386:	a901      	add	r1, sp, #4
   80388:	4630      	mov	r0, r6
   8038a:	47c0      	blx	r8
   8038c:	2800      	cmp	r0, #0
   8038e:	d1fa      	bne.n	80386 <usart_serial_read_packet+0x7a>
		*data = (uint8_t)(val & 0xFF);
   80390:	9b01      	ldr	r3, [sp, #4]
   80392:	7023      	strb	r3, [r4, #0]
   80394:	e7e3      	b.n	8035e <usart_serial_read_packet+0x52>
		while (usart_read(p_usart, &val));
   80396:	469b      	mov	fp, r3
   80398:	f8df 8034 	ldr.w	r8, [pc, #52]	; 803d0 <usart_serial_read_packet+0xc4>
   8039c:	a901      	add	r1, sp, #4
   8039e:	4658      	mov	r0, fp
   803a0:	47c0      	blx	r8
   803a2:	2800      	cmp	r0, #0
   803a4:	d1fa      	bne.n	8039c <usart_serial_read_packet+0x90>
		*data = (uint8_t)(val & 0xFF);
   803a6:	9b01      	ldr	r3, [sp, #4]
   803a8:	7023      	strb	r3, [r4, #0]
   803aa:	e7d8      	b.n	8035e <usart_serial_read_packet+0x52>
	}
	return STATUS_OK;
}
   803ac:	2000      	movs	r0, #0
   803ae:	b003      	add	sp, #12
   803b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   803b4:	2000      	movs	r0, #0
   803b6:	4770      	bx	lr
   803b8:	400e0800 	.word	0x400e0800
   803bc:	400a4000 	.word	0x400a4000
   803c0:	40098000 	.word	0x40098000
   803c4:	4009c000 	.word	0x4009c000
   803c8:	400a0000 	.word	0x400a0000
   803cc:	000804a7 	.word	0x000804a7
   803d0:	000804cd 	.word	0x000804cd

000803d4 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
   803d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
   803d8:	b980      	cbnz	r0, 803fc <_read+0x28>
   803da:	460c      	mov	r4, r1
   803dc:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
   803de:	2a00      	cmp	r2, #0
   803e0:	dd0f      	ble.n	80402 <_read+0x2e>
   803e2:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
   803e4:	4e08      	ldr	r6, [pc, #32]	; (80408 <_read+0x34>)
   803e6:	4d09      	ldr	r5, [pc, #36]	; (8040c <_read+0x38>)
   803e8:	6830      	ldr	r0, [r6, #0]
   803ea:	4621      	mov	r1, r4
   803ec:	682b      	ldr	r3, [r5, #0]
   803ee:	4798      	blx	r3
		ptr++;
   803f0:	3401      	adds	r4, #1
	for (; len > 0; --len) {
   803f2:	42bc      	cmp	r4, r7
   803f4:	d1f8      	bne.n	803e8 <_read+0x14>
		nChars++;
	}
	return nChars;
}
   803f6:	4640      	mov	r0, r8
   803f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   803fc:	f04f 38ff 	mov.w	r8, #4294967295
   80400:	e7f9      	b.n	803f6 <_read+0x22>
	for (; len > 0; --len) {
   80402:	4680      	mov	r8, r0
   80404:	e7f7      	b.n	803f6 <_read+0x22>
   80406:	bf00      	nop
   80408:	20070c5c 	.word	0x20070c5c
   8040c:	20070c54 	.word	0x20070c54

00080410 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
   80410:	3801      	subs	r0, #1
   80412:	2802      	cmp	r0, #2
   80414:	d815      	bhi.n	80442 <_write+0x32>
{
   80416:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8041a:	460e      	mov	r6, r1
   8041c:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
   8041e:	b19a      	cbz	r2, 80448 <_write+0x38>
   80420:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
   80422:	f8df 8038 	ldr.w	r8, [pc, #56]	; 8045c <_write+0x4c>
   80426:	4f0c      	ldr	r7, [pc, #48]	; (80458 <_write+0x48>)
   80428:	f8d8 0000 	ldr.w	r0, [r8]
   8042c:	f815 1b01 	ldrb.w	r1, [r5], #1
   80430:	683b      	ldr	r3, [r7, #0]
   80432:	4798      	blx	r3
   80434:	2800      	cmp	r0, #0
   80436:	db0a      	blt.n	8044e <_write+0x3e>
   80438:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
   8043a:	3c01      	subs	r4, #1
   8043c:	d1f4      	bne.n	80428 <_write+0x18>
   8043e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   80442:	f04f 30ff 	mov.w	r0, #4294967295
   80446:	4770      	bx	lr
	for (; len != 0; --len) {
   80448:	4610      	mov	r0, r2
   8044a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
   8044e:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
   80452:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80456:	bf00      	nop
   80458:	20070c58 	.word	0x20070c58
   8045c:	20070c5c 	.word	0x20070c5c

00080460 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
   80460:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   80462:	23ac      	movs	r3, #172	; 0xac
   80464:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   80466:	680b      	ldr	r3, [r1, #0]
   80468:	684a      	ldr	r2, [r1, #4]
   8046a:	fbb3 f3f2 	udiv	r3, r3, r2
   8046e:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   80470:	1e5c      	subs	r4, r3, #1
   80472:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   80476:	4294      	cmp	r4, r2
   80478:	d80b      	bhi.n	80492 <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
   8047a:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
   8047c:	688b      	ldr	r3, [r1, #8]
   8047e:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   80480:	f240 2302 	movw	r3, #514	; 0x202
   80484:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   80488:	2350      	movs	r3, #80	; 0x50
   8048a:	6003      	str	r3, [r0, #0]

	return 0;
   8048c:	2000      	movs	r0, #0
}
   8048e:	bc10      	pop	{r4}
   80490:	4770      	bx	lr
		return 1;
   80492:	2001      	movs	r0, #1
   80494:	e7fb      	b.n	8048e <uart_init+0x2e>

00080496 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
   80496:	6943      	ldr	r3, [r0, #20]
   80498:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
   8049c:	bf1a      	itte	ne
   8049e:	61c1      	strne	r1, [r0, #28]
	return 0;
   804a0:	2000      	movne	r0, #0
		return 1;
   804a2:	2001      	moveq	r0, #1
}
   804a4:	4770      	bx	lr

000804a6 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
   804a6:	6943      	ldr	r3, [r0, #20]
   804a8:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
   804ac:	bf1d      	ittte	ne
   804ae:	6983      	ldrne	r3, [r0, #24]
   804b0:	700b      	strbne	r3, [r1, #0]
	return 0;
   804b2:	2000      	movne	r0, #0
		return 1;
   804b4:	2001      	moveq	r0, #1
}
   804b6:	4770      	bx	lr

000804b8 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
   804b8:	6943      	ldr	r3, [r0, #20]
   804ba:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
   804be:	bf1d      	ittte	ne
   804c0:	f3c1 0108 	ubfxne	r1, r1, #0, #9
   804c4:	61c1      	strne	r1, [r0, #28]
	return 0;
   804c6:	2000      	movne	r0, #0
		return 1;
   804c8:	2001      	moveq	r0, #1
}
   804ca:	4770      	bx	lr

000804cc <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
   804cc:	6943      	ldr	r3, [r0, #20]
   804ce:	f013 0f01 	tst.w	r3, #1
   804d2:	d005      	beq.n	804e0 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   804d4:	6983      	ldr	r3, [r0, #24]
   804d6:	f3c3 0308 	ubfx	r3, r3, #0, #9
   804da:	600b      	str	r3, [r1, #0]

	return 0;
   804dc:	2000      	movs	r0, #0
   804de:	4770      	bx	lr
		return 1;
   804e0:	2001      	movs	r0, #1
}
   804e2:	4770      	bx	lr

000804e4 <USART0_Handler>:
#if SAMD || SAMR21 || SAML21 || SAMR30
void USART_HOST_ISR_VECT(uint8_t instance)
#else
USART_HOST_ISR_VECT()
#endif
{
   804e4:	b500      	push	{lr}
   804e6:	b083      	sub	sp, #12
#if SAMD || SAMR21 || SAML21 || SAMR30
	usart_serial_read_packet(&host_uart_module, &temp, 1);
#elif SAM4E || SAM4S
	usart_serial_read_packet((Usart *)USART_HOST, &temp, 1);
#else
    usart_serial_read_packet(USART_HOST, &temp, 1);
   804e8:	2201      	movs	r2, #1
   804ea:	f10d 0107 	add.w	r1, sp, #7
   804ee:	4810      	ldr	r0, [pc, #64]	; (80530 <USART0_Handler+0x4c>)
   804f0:	4b10      	ldr	r3, [pc, #64]	; (80534 <USART0_Handler+0x50>)
   804f2:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   804f4:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   804f6:	f3bf 8f5f 	dmb	sy
#endif

	/* Introducing critical section to avoid buffer corruption. */
	cpu_irq_disable();
   804fa:	2200      	movs	r2, #0
   804fc:	4b0e      	ldr	r3, [pc, #56]	; (80538 <USART0_Handler+0x54>)
   804fe:	701a      	strb	r2, [r3, #0]

	/* The number of data in the receive buffer is incremented and the
	 * buffer is updated. */

	serial_rx_buf[serial_rx_buf_tail] = temp;
   80500:	4b0e      	ldr	r3, [pc, #56]	; (8053c <USART0_Handler+0x58>)
   80502:	781b      	ldrb	r3, [r3, #0]
   80504:	f89d 1007 	ldrb.w	r1, [sp, #7]
   80508:	4a0d      	ldr	r2, [pc, #52]	; (80540 <USART0_Handler+0x5c>)
   8050a:	54d1      	strb	r1, [r2, r3]

	if ((SERIAL_RX_BUF_SIZE_HOST - 1) == serial_rx_buf_tail) {
   8050c:	2b9b      	cmp	r3, #155	; 0x9b
   8050e:	d00b      	beq.n	80528 <USART0_Handler+0x44>
		/* Reached the end of buffer, revert back to beginning of
		 * buffer. */
		serial_rx_buf_tail = 0x00;
	} else {
		serial_rx_buf_tail++;
   80510:	3301      	adds	r3, #1
   80512:	4a0a      	ldr	r2, [pc, #40]	; (8053c <USART0_Handler+0x58>)
   80514:	7013      	strb	r3, [r2, #0]
	}

	cpu_irq_enable();
   80516:	2201      	movs	r2, #1
   80518:	4b07      	ldr	r3, [pc, #28]	; (80538 <USART0_Handler+0x54>)
   8051a:	701a      	strb	r2, [r3, #0]
   8051c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80520:	b662      	cpsie	i
}
   80522:	b003      	add	sp, #12
   80524:	f85d fb04 	ldr.w	pc, [sp], #4
		serial_rx_buf_tail = 0x00;
   80528:	2200      	movs	r2, #0
   8052a:	4b04      	ldr	r3, [pc, #16]	; (8053c <USART0_Handler+0x58>)
   8052c:	701a      	strb	r2, [r3, #0]
   8052e:	e7f2      	b.n	80516 <USART0_Handler+0x32>
   80530:	40098000 	.word	0x40098000
   80534:	0008030d 	.word	0x0008030d
   80538:	20070138 	.word	0x20070138
   8053c:	20070ba8 	.word	0x20070ba8
   80540:	20070b0c 	.word	0x20070b0c

00080544 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   80544:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   80546:	480e      	ldr	r0, [pc, #56]	; (80580 <sysclk_init+0x3c>)
   80548:	4b0e      	ldr	r3, [pc, #56]	; (80584 <sysclk_init+0x40>)
   8054a:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   8054c:	213e      	movs	r1, #62	; 0x3e
   8054e:	2000      	movs	r0, #0
   80550:	4b0d      	ldr	r3, [pc, #52]	; (80588 <sysclk_init+0x44>)
   80552:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   80554:	4c0d      	ldr	r4, [pc, #52]	; (8058c <sysclk_init+0x48>)
   80556:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   80558:	2800      	cmp	r0, #0
   8055a:	d0fc      	beq.n	80556 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   8055c:	4b0c      	ldr	r3, [pc, #48]	; (80590 <sysclk_init+0x4c>)
   8055e:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   80560:	4a0c      	ldr	r2, [pc, #48]	; (80594 <sysclk_init+0x50>)
   80562:	4b0d      	ldr	r3, [pc, #52]	; (80598 <sysclk_init+0x54>)
   80564:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   80566:	4c0d      	ldr	r4, [pc, #52]	; (8059c <sysclk_init+0x58>)
   80568:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   8056a:	2800      	cmp	r0, #0
   8056c:	d0fc      	beq.n	80568 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   8056e:	2010      	movs	r0, #16
   80570:	4b0b      	ldr	r3, [pc, #44]	; (805a0 <sysclk_init+0x5c>)
   80572:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   80574:	4b0b      	ldr	r3, [pc, #44]	; (805a4 <sysclk_init+0x60>)
   80576:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   80578:	4801      	ldr	r0, [pc, #4]	; (80580 <sysclk_init+0x3c>)
   8057a:	4b02      	ldr	r3, [pc, #8]	; (80584 <sysclk_init+0x40>)
   8057c:	4798      	blx	r3
   8057e:	bd10      	pop	{r4, pc}
   80580:	0501bd00 	.word	0x0501bd00
   80584:	200700b1 	.word	0x200700b1
   80588:	00080939 	.word	0x00080939
   8058c:	0008098d 	.word	0x0008098d
   80590:	0008099d 	.word	0x0008099d
   80594:	200d3f01 	.word	0x200d3f01
   80598:	400e0600 	.word	0x400e0600
   8059c:	000809ad 	.word	0x000809ad
   805a0:	000808d5 	.word	0x000808d5
   805a4:	00080ad1 	.word	0x00080ad1

000805a8 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   805a8:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   805aa:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   805ae:	4b16      	ldr	r3, [pc, #88]	; (80608 <board_init+0x60>)
   805b0:	605a      	str	r2, [r3, #4]
   805b2:	200b      	movs	r0, #11
   805b4:	4c15      	ldr	r4, [pc, #84]	; (8060c <board_init+0x64>)
   805b6:	47a0      	blx	r4
   805b8:	200c      	movs	r0, #12
   805ba:	47a0      	blx	r4
   805bc:	200d      	movs	r0, #13
   805be:	47a0      	blx	r4
   805c0:	200e      	movs	r0, #14
   805c2:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   805c4:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   805c8:	203b      	movs	r0, #59	; 0x3b
   805ca:	4c11      	ldr	r4, [pc, #68]	; (80610 <board_init+0x68>)
   805cc:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   805ce:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   805d2:	2055      	movs	r0, #85	; 0x55
   805d4:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   805d6:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   805da:	2056      	movs	r0, #86	; 0x56
   805dc:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   805de:	490d      	ldr	r1, [pc, #52]	; (80614 <board_init+0x6c>)
   805e0:	2068      	movs	r0, #104	; 0x68
   805e2:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   805e4:	490c      	ldr	r1, [pc, #48]	; (80618 <board_init+0x70>)
   805e6:	205c      	movs	r0, #92	; 0x5c
   805e8:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   805ea:	4a0c      	ldr	r2, [pc, #48]	; (8061c <board_init+0x74>)
   805ec:	f44f 7140 	mov.w	r1, #768	; 0x300
   805f0:	480b      	ldr	r0, [pc, #44]	; (80620 <board_init+0x78>)
   805f2:	4b0c      	ldr	r3, [pc, #48]	; (80624 <board_init+0x7c>)
   805f4:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   805f6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   805fa:	202b      	movs	r0, #43	; 0x2b
   805fc:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   805fe:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80602:	202a      	movs	r0, #42	; 0x2a
   80604:	47a0      	blx	r4
   80606:	bd10      	pop	{r4, pc}
   80608:	400e1a50 	.word	0x400e1a50
   8060c:	000809bd 	.word	0x000809bd
   80610:	000806c9 	.word	0x000806c9
   80614:	28000079 	.word	0x28000079
   80618:	28000001 	.word	0x28000001
   8061c:	08000001 	.word	0x08000001
   80620:	400e0e00 	.word	0x400e0e00
   80624:	00080799 	.word	0x00080799

00080628 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   80628:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   8062a:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   8062e:	d016      	beq.n	8065e <pio_set_peripheral+0x36>
   80630:	d80b      	bhi.n	8064a <pio_set_peripheral+0x22>
   80632:	b149      	cbz	r1, 80648 <pio_set_peripheral+0x20>
   80634:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   80638:	d105      	bne.n	80646 <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   8063a:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   8063c:	6f01      	ldr	r1, [r0, #112]	; 0x70
   8063e:	400b      	ands	r3, r1
   80640:	ea23 0302 	bic.w	r3, r3, r2
   80644:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   80646:	6042      	str	r2, [r0, #4]
   80648:	4770      	bx	lr
	switch (ul_type) {
   8064a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   8064e:	d0fb      	beq.n	80648 <pio_set_peripheral+0x20>
   80650:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   80654:	d0f8      	beq.n	80648 <pio_set_peripheral+0x20>
   80656:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   8065a:	d1f4      	bne.n	80646 <pio_set_peripheral+0x1e>
   8065c:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   8065e:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   80660:	4313      	orrs	r3, r2
   80662:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   80664:	e7ef      	b.n	80646 <pio_set_peripheral+0x1e>

00080666 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80666:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80668:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   8066c:	bf14      	ite	ne
   8066e:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80670:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   80672:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80676:	bf14      	ite	ne
   80678:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   8067a:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   8067c:	f012 0f02 	tst.w	r2, #2
   80680:	d107      	bne.n	80692 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   80682:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80686:	bf18      	it	ne
   80688:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   8068c:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   8068e:	6001      	str	r1, [r0, #0]
   80690:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   80692:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80696:	e7f9      	b.n	8068c <pio_set_input+0x26>

00080698 <pio_set_output>:
{
   80698:	b410      	push	{r4}
   8069a:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   8069c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   8069e:	b944      	cbnz	r4, 806b2 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   806a0:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   806a2:	b143      	cbz	r3, 806b6 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   806a4:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   806a6:	b942      	cbnz	r2, 806ba <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   806a8:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   806aa:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   806ac:	6001      	str	r1, [r0, #0]
}
   806ae:	bc10      	pop	{r4}
   806b0:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   806b2:	6641      	str	r1, [r0, #100]	; 0x64
   806b4:	e7f5      	b.n	806a2 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   806b6:	6541      	str	r1, [r0, #84]	; 0x54
   806b8:	e7f5      	b.n	806a6 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   806ba:	6301      	str	r1, [r0, #48]	; 0x30
   806bc:	e7f5      	b.n	806aa <pio_set_output+0x12>

000806be <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   806be:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   806c0:	4770      	bx	lr

000806c2 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   806c2:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   806c4:	4770      	bx	lr
	...

000806c8 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   806c8:	b570      	push	{r4, r5, r6, lr}
   806ca:	b082      	sub	sp, #8
   806cc:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   806ce:	0943      	lsrs	r3, r0, #5
   806d0:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   806d4:	f203 7307 	addw	r3, r3, #1799	; 0x707
   806d8:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   806da:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   806de:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   806e2:	d031      	beq.n	80748 <pio_configure_pin+0x80>
   806e4:	d816      	bhi.n	80714 <pio_configure_pin+0x4c>
   806e6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   806ea:	d01b      	beq.n	80724 <pio_configure_pin+0x5c>
   806ec:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   806f0:	d116      	bne.n	80720 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   806f2:	f000 001f 	and.w	r0, r0, #31
   806f6:	2601      	movs	r6, #1
   806f8:	4086      	lsls	r6, r0
   806fa:	4632      	mov	r2, r6
   806fc:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80700:	4620      	mov	r0, r4
   80702:	4b22      	ldr	r3, [pc, #136]	; (8078c <pio_configure_pin+0xc4>)
   80704:	4798      	blx	r3
	if (ul_pull_up_enable) {
   80706:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   8070a:	bf14      	ite	ne
   8070c:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   8070e:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   80710:	2001      	movs	r0, #1
   80712:	e017      	b.n	80744 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   80714:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   80718:	d021      	beq.n	8075e <pio_configure_pin+0x96>
   8071a:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   8071e:	d01e      	beq.n	8075e <pio_configure_pin+0x96>
		return 0;
   80720:	2000      	movs	r0, #0
   80722:	e00f      	b.n	80744 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   80724:	f000 001f 	and.w	r0, r0, #31
   80728:	2601      	movs	r6, #1
   8072a:	4086      	lsls	r6, r0
   8072c:	4632      	mov	r2, r6
   8072e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80732:	4620      	mov	r0, r4
   80734:	4b15      	ldr	r3, [pc, #84]	; (8078c <pio_configure_pin+0xc4>)
   80736:	4798      	blx	r3
	if (ul_pull_up_enable) {
   80738:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   8073c:	bf14      	ite	ne
   8073e:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80740:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   80742:	2001      	movs	r0, #1
}
   80744:	b002      	add	sp, #8
   80746:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   80748:	f000 011f 	and.w	r1, r0, #31
   8074c:	2601      	movs	r6, #1
   8074e:	462a      	mov	r2, r5
   80750:	fa06 f101 	lsl.w	r1, r6, r1
   80754:	4620      	mov	r0, r4
   80756:	4b0e      	ldr	r3, [pc, #56]	; (80790 <pio_configure_pin+0xc8>)
   80758:	4798      	blx	r3
	return 1;
   8075a:	4630      	mov	r0, r6
		break;
   8075c:	e7f2      	b.n	80744 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   8075e:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80762:	f000 011f 	and.w	r1, r0, #31
   80766:	2601      	movs	r6, #1
   80768:	ea05 0306 	and.w	r3, r5, r6
   8076c:	9300      	str	r3, [sp, #0]
   8076e:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80772:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80776:	bf14      	ite	ne
   80778:	2200      	movne	r2, #0
   8077a:	2201      	moveq	r2, #1
   8077c:	fa06 f101 	lsl.w	r1, r6, r1
   80780:	4620      	mov	r0, r4
   80782:	4c04      	ldr	r4, [pc, #16]	; (80794 <pio_configure_pin+0xcc>)
   80784:	47a0      	blx	r4
	return 1;
   80786:	4630      	mov	r0, r6
		break;
   80788:	e7dc      	b.n	80744 <pio_configure_pin+0x7c>
   8078a:	bf00      	nop
   8078c:	00080629 	.word	0x00080629
   80790:	00080667 	.word	0x00080667
   80794:	00080699 	.word	0x00080699

00080798 <pio_configure_pin_group>:
{
   80798:	b570      	push	{r4, r5, r6, lr}
   8079a:	b082      	sub	sp, #8
   8079c:	4605      	mov	r5, r0
   8079e:	460e      	mov	r6, r1
   807a0:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
   807a2:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   807a6:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   807aa:	d027      	beq.n	807fc <pio_configure_pin_group+0x64>
   807ac:	d811      	bhi.n	807d2 <pio_configure_pin_group+0x3a>
   807ae:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   807b2:	d016      	beq.n	807e2 <pio_configure_pin_group+0x4a>
   807b4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   807b8:	d111      	bne.n	807de <pio_configure_pin_group+0x46>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   807ba:	460a      	mov	r2, r1
   807bc:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   807c0:	4b19      	ldr	r3, [pc, #100]	; (80828 <pio_configure_pin_group+0x90>)
   807c2:	4798      	blx	r3
	if (ul_pull_up_enable) {
   807c4:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   807c8:	bf14      	ite	ne
   807ca:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   807cc:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   807ce:	2001      	movs	r0, #1
   807d0:	e012      	b.n	807f8 <pio_configure_pin_group+0x60>
	switch (ul_flags & PIO_TYPE_Msk) {
   807d2:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   807d6:	d015      	beq.n	80804 <pio_configure_pin_group+0x6c>
   807d8:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   807dc:	d012      	beq.n	80804 <pio_configure_pin_group+0x6c>
		return 0;
   807de:	2000      	movs	r0, #0
   807e0:	e00a      	b.n	807f8 <pio_configure_pin_group+0x60>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   807e2:	460a      	mov	r2, r1
   807e4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   807e8:	4b0f      	ldr	r3, [pc, #60]	; (80828 <pio_configure_pin_group+0x90>)
   807ea:	4798      	blx	r3
	if (ul_pull_up_enable) {
   807ec:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   807f0:	bf14      	ite	ne
   807f2:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   807f4:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   807f6:	2001      	movs	r0, #1
}
   807f8:	b002      	add	sp, #8
   807fa:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, ul_mask, ul_flags);
   807fc:	4b0b      	ldr	r3, [pc, #44]	; (8082c <pio_configure_pin_group+0x94>)
   807fe:	4798      	blx	r3
	return 1;
   80800:	2001      	movs	r0, #1
		break;
   80802:	e7f9      	b.n	807f8 <pio_configure_pin_group+0x60>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80804:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   80808:	f004 0301 	and.w	r3, r4, #1
   8080c:	9300      	str	r3, [sp, #0]
   8080e:	f3c4 0380 	ubfx	r3, r4, #2, #1
   80812:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80816:	bf14      	ite	ne
   80818:	2200      	movne	r2, #0
   8081a:	2201      	moveq	r2, #1
   8081c:	4631      	mov	r1, r6
   8081e:	4628      	mov	r0, r5
   80820:	4c03      	ldr	r4, [pc, #12]	; (80830 <pio_configure_pin_group+0x98>)
   80822:	47a0      	blx	r4
	return 1;
   80824:	2001      	movs	r0, #1
		break;
   80826:	e7e7      	b.n	807f8 <pio_configure_pin_group+0x60>
   80828:	00080629 	.word	0x00080629
   8082c:	00080667 	.word	0x00080667
   80830:	00080699 	.word	0x00080699

00080834 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80834:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80838:	4604      	mov	r4, r0
   8083a:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   8083c:	4b0e      	ldr	r3, [pc, #56]	; (80878 <pio_handler_process+0x44>)
   8083e:	4798      	blx	r3
   80840:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80842:	4620      	mov	r0, r4
   80844:	4b0d      	ldr	r3, [pc, #52]	; (8087c <pio_handler_process+0x48>)
   80846:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80848:	4005      	ands	r5, r0
   8084a:	d013      	beq.n	80874 <pio_handler_process+0x40>
   8084c:	4c0c      	ldr	r4, [pc, #48]	; (80880 <pio_handler_process+0x4c>)
   8084e:	f104 0660 	add.w	r6, r4, #96	; 0x60
   80852:	e003      	b.n	8085c <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80854:	42b4      	cmp	r4, r6
   80856:	d00d      	beq.n	80874 <pio_handler_process+0x40>
   80858:	3410      	adds	r4, #16
		while (status != 0) {
   8085a:	b15d      	cbz	r5, 80874 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   8085c:	6820      	ldr	r0, [r4, #0]
   8085e:	4540      	cmp	r0, r8
   80860:	d1f8      	bne.n	80854 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80862:	6861      	ldr	r1, [r4, #4]
   80864:	4229      	tst	r1, r5
   80866:	d0f5      	beq.n	80854 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80868:	68e3      	ldr	r3, [r4, #12]
   8086a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   8086c:	6863      	ldr	r3, [r4, #4]
   8086e:	ea25 0503 	bic.w	r5, r5, r3
   80872:	e7ef      	b.n	80854 <pio_handler_process+0x20>
   80874:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80878:	000806bf 	.word	0x000806bf
   8087c:	000806c3 	.word	0x000806c3
   80880:	20070bac 	.word	0x20070bac

00080884 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80884:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80886:	210b      	movs	r1, #11
   80888:	4801      	ldr	r0, [pc, #4]	; (80890 <PIOA_Handler+0xc>)
   8088a:	4b02      	ldr	r3, [pc, #8]	; (80894 <PIOA_Handler+0x10>)
   8088c:	4798      	blx	r3
   8088e:	bd08      	pop	{r3, pc}
   80890:	400e0e00 	.word	0x400e0e00
   80894:	00080835 	.word	0x00080835

00080898 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80898:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   8089a:	210c      	movs	r1, #12
   8089c:	4801      	ldr	r0, [pc, #4]	; (808a4 <PIOB_Handler+0xc>)
   8089e:	4b02      	ldr	r3, [pc, #8]	; (808a8 <PIOB_Handler+0x10>)
   808a0:	4798      	blx	r3
   808a2:	bd08      	pop	{r3, pc}
   808a4:	400e1000 	.word	0x400e1000
   808a8:	00080835 	.word	0x00080835

000808ac <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   808ac:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   808ae:	210d      	movs	r1, #13
   808b0:	4801      	ldr	r0, [pc, #4]	; (808b8 <PIOC_Handler+0xc>)
   808b2:	4b02      	ldr	r3, [pc, #8]	; (808bc <PIOC_Handler+0x10>)
   808b4:	4798      	blx	r3
   808b6:	bd08      	pop	{r3, pc}
   808b8:	400e1200 	.word	0x400e1200
   808bc:	00080835 	.word	0x00080835

000808c0 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   808c0:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   808c2:	210e      	movs	r1, #14
   808c4:	4801      	ldr	r0, [pc, #4]	; (808cc <PIOD_Handler+0xc>)
   808c6:	4b02      	ldr	r3, [pc, #8]	; (808d0 <PIOD_Handler+0x10>)
   808c8:	4798      	blx	r3
   808ca:	bd08      	pop	{r3, pc}
   808cc:	400e1400 	.word	0x400e1400
   808d0:	00080835 	.word	0x00080835

000808d4 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   808d4:	4a17      	ldr	r2, [pc, #92]	; (80934 <pmc_switch_mck_to_pllack+0x60>)
   808d6:	6b13      	ldr	r3, [r2, #48]	; 0x30
   808d8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   808dc:	4318      	orrs	r0, r3
   808de:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   808e0:	6e93      	ldr	r3, [r2, #104]	; 0x68
   808e2:	f013 0f08 	tst.w	r3, #8
   808e6:	d10a      	bne.n	808fe <pmc_switch_mck_to_pllack+0x2a>
   808e8:	f44f 6300 	mov.w	r3, #2048	; 0x800
   808ec:	4911      	ldr	r1, [pc, #68]	; (80934 <pmc_switch_mck_to_pllack+0x60>)
   808ee:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   808f0:	f012 0f08 	tst.w	r2, #8
   808f4:	d103      	bne.n	808fe <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   808f6:	3b01      	subs	r3, #1
   808f8:	d1f9      	bne.n	808ee <pmc_switch_mck_to_pllack+0x1a>
			return 1;
   808fa:	2001      	movs	r0, #1
   808fc:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   808fe:	4a0d      	ldr	r2, [pc, #52]	; (80934 <pmc_switch_mck_to_pllack+0x60>)
   80900:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80902:	f023 0303 	bic.w	r3, r3, #3
   80906:	f043 0302 	orr.w	r3, r3, #2
   8090a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8090c:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8090e:	f013 0f08 	tst.w	r3, #8
   80912:	d10a      	bne.n	8092a <pmc_switch_mck_to_pllack+0x56>
   80914:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80918:	4906      	ldr	r1, [pc, #24]	; (80934 <pmc_switch_mck_to_pllack+0x60>)
   8091a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   8091c:	f012 0f08 	tst.w	r2, #8
   80920:	d105      	bne.n	8092e <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80922:	3b01      	subs	r3, #1
   80924:	d1f9      	bne.n	8091a <pmc_switch_mck_to_pllack+0x46>
			return 1;
   80926:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   80928:	4770      	bx	lr
	return 0;
   8092a:	2000      	movs	r0, #0
   8092c:	4770      	bx	lr
   8092e:	2000      	movs	r0, #0
   80930:	4770      	bx	lr
   80932:	bf00      	nop
   80934:	400e0600 	.word	0x400e0600

00080938 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   80938:	b9c8      	cbnz	r0, 8096e <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   8093a:	4a11      	ldr	r2, [pc, #68]	; (80980 <pmc_switch_mainck_to_xtal+0x48>)
   8093c:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   8093e:	0209      	lsls	r1, r1, #8
   80940:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80942:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   80946:	f023 0303 	bic.w	r3, r3, #3
   8094a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   8094e:	f043 0301 	orr.w	r3, r3, #1
   80952:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80954:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   80956:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80958:	f013 0f01 	tst.w	r3, #1
   8095c:	d0fb      	beq.n	80956 <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   8095e:	4a08      	ldr	r2, [pc, #32]	; (80980 <pmc_switch_mainck_to_xtal+0x48>)
   80960:	6a13      	ldr	r3, [r2, #32]
   80962:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   80966:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   8096a:	6213      	str	r3, [r2, #32]
   8096c:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   8096e:	4904      	ldr	r1, [pc, #16]	; (80980 <pmc_switch_mainck_to_xtal+0x48>)
   80970:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   80972:	4a04      	ldr	r2, [pc, #16]	; (80984 <pmc_switch_mainck_to_xtal+0x4c>)
   80974:	401a      	ands	r2, r3
   80976:	4b04      	ldr	r3, [pc, #16]	; (80988 <pmc_switch_mainck_to_xtal+0x50>)
   80978:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   8097a:	620b      	str	r3, [r1, #32]
   8097c:	4770      	bx	lr
   8097e:	bf00      	nop
   80980:	400e0600 	.word	0x400e0600
   80984:	fec8fffc 	.word	0xfec8fffc
   80988:	01370002 	.word	0x01370002

0008098c <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   8098c:	4b02      	ldr	r3, [pc, #8]	; (80998 <pmc_osc_is_ready_mainck+0xc>)
   8098e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80990:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80994:	4770      	bx	lr
   80996:	bf00      	nop
   80998:	400e0600 	.word	0x400e0600

0008099c <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   8099c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   809a0:	4b01      	ldr	r3, [pc, #4]	; (809a8 <pmc_disable_pllack+0xc>)
   809a2:	629a      	str	r2, [r3, #40]	; 0x28
   809a4:	4770      	bx	lr
   809a6:	bf00      	nop
   809a8:	400e0600 	.word	0x400e0600

000809ac <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   809ac:	4b02      	ldr	r3, [pc, #8]	; (809b8 <pmc_is_locked_pllack+0xc>)
   809ae:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   809b0:	f000 0002 	and.w	r0, r0, #2
   809b4:	4770      	bx	lr
   809b6:	bf00      	nop
   809b8:	400e0600 	.word	0x400e0600

000809bc <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   809bc:	282c      	cmp	r0, #44	; 0x2c
   809be:	d81e      	bhi.n	809fe <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
   809c0:	281f      	cmp	r0, #31
   809c2:	d80c      	bhi.n	809de <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   809c4:	4b11      	ldr	r3, [pc, #68]	; (80a0c <pmc_enable_periph_clk+0x50>)
   809c6:	699a      	ldr	r2, [r3, #24]
   809c8:	2301      	movs	r3, #1
   809ca:	4083      	lsls	r3, r0
   809cc:	4393      	bics	r3, r2
   809ce:	d018      	beq.n	80a02 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
   809d0:	2301      	movs	r3, #1
   809d2:	fa03 f000 	lsl.w	r0, r3, r0
   809d6:	4b0d      	ldr	r3, [pc, #52]	; (80a0c <pmc_enable_periph_clk+0x50>)
   809d8:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   809da:	2000      	movs	r0, #0
   809dc:	4770      	bx	lr
		ul_id -= 32;
   809de:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   809e0:	4b0a      	ldr	r3, [pc, #40]	; (80a0c <pmc_enable_periph_clk+0x50>)
   809e2:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   809e6:	2301      	movs	r3, #1
   809e8:	4083      	lsls	r3, r0
   809ea:	4393      	bics	r3, r2
   809ec:	d00b      	beq.n	80a06 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
   809ee:	2301      	movs	r3, #1
   809f0:	fa03 f000 	lsl.w	r0, r3, r0
   809f4:	4b05      	ldr	r3, [pc, #20]	; (80a0c <pmc_enable_periph_clk+0x50>)
   809f6:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
   809fa:	2000      	movs	r0, #0
   809fc:	4770      	bx	lr
		return 1;
   809fe:	2001      	movs	r0, #1
   80a00:	4770      	bx	lr
	return 0;
   80a02:	2000      	movs	r0, #0
   80a04:	4770      	bx	lr
   80a06:	2000      	movs	r0, #0
}
   80a08:	4770      	bx	lr
   80a0a:	bf00      	nop
   80a0c:	400e0600 	.word	0x400e0600

00080a10 <pmc_set_writeprotect>:
 *
 * \param ul_enable 1 to enable, 0 to disable.
 */
void pmc_set_writeprotect(uint32_t ul_enable)
{
	if (ul_enable) {
   80a10:	b920      	cbnz	r0, 80a1c <pmc_set_writeprotect+0xc>
		PMC->PMC_WPMR = PMC_WPMR_WPKEY_PASSWD | PMC_WPMR_WPEN;
	} else {
		PMC->PMC_WPMR = PMC_WPMR_WPKEY_PASSWD;
   80a12:	4a05      	ldr	r2, [pc, #20]	; (80a28 <pmc_set_writeprotect+0x18>)
   80a14:	4b05      	ldr	r3, [pc, #20]	; (80a2c <pmc_set_writeprotect+0x1c>)
   80a16:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
   80a1a:	4770      	bx	lr
		PMC->PMC_WPMR = PMC_WPMR_WPKEY_PASSWD | PMC_WPMR_WPEN;
   80a1c:	4a04      	ldr	r2, [pc, #16]	; (80a30 <pmc_set_writeprotect+0x20>)
   80a1e:	4b03      	ldr	r3, [pc, #12]	; (80a2c <pmc_set_writeprotect+0x1c>)
   80a20:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
   80a24:	4770      	bx	lr
   80a26:	bf00      	nop
   80a28:	504d4300 	.word	0x504d4300
   80a2c:	400e0600 	.word	0x400e0600
   80a30:	504d4301 	.word	0x504d4301

00080a34 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80a34:	e7fe      	b.n	80a34 <Dummy_Handler>
	...

00080a38 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80a38:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80a3a:	4b1c      	ldr	r3, [pc, #112]	; (80aac <Reset_Handler+0x74>)
   80a3c:	4a1c      	ldr	r2, [pc, #112]	; (80ab0 <Reset_Handler+0x78>)
   80a3e:	429a      	cmp	r2, r3
   80a40:	d010      	beq.n	80a64 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   80a42:	4b1c      	ldr	r3, [pc, #112]	; (80ab4 <Reset_Handler+0x7c>)
   80a44:	4a19      	ldr	r2, [pc, #100]	; (80aac <Reset_Handler+0x74>)
   80a46:	429a      	cmp	r2, r3
   80a48:	d20c      	bcs.n	80a64 <Reset_Handler+0x2c>
   80a4a:	3b01      	subs	r3, #1
   80a4c:	1a9b      	subs	r3, r3, r2
   80a4e:	f023 0303 	bic.w	r3, r3, #3
   80a52:	3304      	adds	r3, #4
   80a54:	4413      	add	r3, r2
   80a56:	4916      	ldr	r1, [pc, #88]	; (80ab0 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   80a58:	f851 0b04 	ldr.w	r0, [r1], #4
   80a5c:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   80a60:	429a      	cmp	r2, r3
   80a62:	d1f9      	bne.n	80a58 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80a64:	4b14      	ldr	r3, [pc, #80]	; (80ab8 <Reset_Handler+0x80>)
   80a66:	4a15      	ldr	r2, [pc, #84]	; (80abc <Reset_Handler+0x84>)
   80a68:	429a      	cmp	r2, r3
   80a6a:	d20a      	bcs.n	80a82 <Reset_Handler+0x4a>
   80a6c:	3b01      	subs	r3, #1
   80a6e:	1a9b      	subs	r3, r3, r2
   80a70:	f023 0303 	bic.w	r3, r3, #3
   80a74:	3304      	adds	r3, #4
   80a76:	4413      	add	r3, r2
		*pDest++ = 0;
   80a78:	2100      	movs	r1, #0
   80a7a:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   80a7e:	4293      	cmp	r3, r2
   80a80:	d1fb      	bne.n	80a7a <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80a82:	4b0f      	ldr	r3, [pc, #60]	; (80ac0 <Reset_Handler+0x88>)
   80a84:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   80a88:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   80a8c:	490d      	ldr	r1, [pc, #52]	; (80ac4 <Reset_Handler+0x8c>)
   80a8e:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80a90:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   80a94:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   80a98:	d203      	bcs.n	80aa2 <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80a9a:	688b      	ldr	r3, [r1, #8]
   80a9c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   80aa0:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80aa2:	4b09      	ldr	r3, [pc, #36]	; (80ac8 <Reset_Handler+0x90>)
   80aa4:	4798      	blx	r3

	/* Branch to main function */
	main();
   80aa6:	4b09      	ldr	r3, [pc, #36]	; (80acc <Reset_Handler+0x94>)
   80aa8:	4798      	blx	r3
   80aaa:	e7fe      	b.n	80aaa <Reset_Handler+0x72>
   80aac:	20070000 	.word	0x20070000
   80ab0:	0008469c 	.word	0x0008469c
   80ab4:	20070af0 	.word	0x20070af0
   80ab8:	20070c88 	.word	0x20070c88
   80abc:	20070af0 	.word	0x20070af0
   80ac0:	00080000 	.word	0x00080000
   80ac4:	e000ed00 	.word	0xe000ed00
   80ac8:	00081645 	.word	0x00081645
   80acc:	00080d81 	.word	0x00080d81

00080ad0 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80ad0:	4b3d      	ldr	r3, [pc, #244]	; (80bc8 <SystemCoreClockUpdate+0xf8>)
   80ad2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80ad4:	f003 0303 	and.w	r3, r3, #3
   80ad8:	2b03      	cmp	r3, #3
   80ada:	d80e      	bhi.n	80afa <SystemCoreClockUpdate+0x2a>
   80adc:	e8df f003 	tbb	[pc, r3]
   80ae0:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80ae4:	4b39      	ldr	r3, [pc, #228]	; (80bcc <SystemCoreClockUpdate+0xfc>)
   80ae6:	695b      	ldr	r3, [r3, #20]
   80ae8:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80aec:	bf14      	ite	ne
   80aee:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80af2:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80af6:	4b36      	ldr	r3, [pc, #216]	; (80bd0 <SystemCoreClockUpdate+0x100>)
   80af8:	601a      	str	r2, [r3, #0]
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80afa:	4b33      	ldr	r3, [pc, #204]	; (80bc8 <SystemCoreClockUpdate+0xf8>)
   80afc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80afe:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80b02:	2b70      	cmp	r3, #112	; 0x70
   80b04:	d057      	beq.n	80bb6 <SystemCoreClockUpdate+0xe6>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   80b06:	4b30      	ldr	r3, [pc, #192]	; (80bc8 <SystemCoreClockUpdate+0xf8>)
   80b08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80b0a:	4931      	ldr	r1, [pc, #196]	; (80bd0 <SystemCoreClockUpdate+0x100>)
   80b0c:	f3c2 1202 	ubfx	r2, r2, #4, #3
   80b10:	680b      	ldr	r3, [r1, #0]
   80b12:	40d3      	lsrs	r3, r2
   80b14:	600b      	str	r3, [r1, #0]
   80b16:	4770      	bx	lr
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80b18:	4b2b      	ldr	r3, [pc, #172]	; (80bc8 <SystemCoreClockUpdate+0xf8>)
   80b1a:	6a1b      	ldr	r3, [r3, #32]
   80b1c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80b20:	d003      	beq.n	80b2a <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80b22:	4a2c      	ldr	r2, [pc, #176]	; (80bd4 <SystemCoreClockUpdate+0x104>)
   80b24:	4b2a      	ldr	r3, [pc, #168]	; (80bd0 <SystemCoreClockUpdate+0x100>)
   80b26:	601a      	str	r2, [r3, #0]
   80b28:	e7e7      	b.n	80afa <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80b2a:	4a2b      	ldr	r2, [pc, #172]	; (80bd8 <SystemCoreClockUpdate+0x108>)
   80b2c:	4b28      	ldr	r3, [pc, #160]	; (80bd0 <SystemCoreClockUpdate+0x100>)
   80b2e:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80b30:	4b25      	ldr	r3, [pc, #148]	; (80bc8 <SystemCoreClockUpdate+0xf8>)
   80b32:	6a1b      	ldr	r3, [r3, #32]
   80b34:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80b38:	2b10      	cmp	r3, #16
   80b3a:	d005      	beq.n	80b48 <SystemCoreClockUpdate+0x78>
   80b3c:	2b20      	cmp	r3, #32
   80b3e:	d1dc      	bne.n	80afa <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 3U;
   80b40:	4a24      	ldr	r2, [pc, #144]	; (80bd4 <SystemCoreClockUpdate+0x104>)
   80b42:	4b23      	ldr	r3, [pc, #140]	; (80bd0 <SystemCoreClockUpdate+0x100>)
   80b44:	601a      	str	r2, [r3, #0]
				break;
   80b46:	e7d8      	b.n	80afa <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 2U;
   80b48:	4a24      	ldr	r2, [pc, #144]	; (80bdc <SystemCoreClockUpdate+0x10c>)
   80b4a:	4b21      	ldr	r3, [pc, #132]	; (80bd0 <SystemCoreClockUpdate+0x100>)
   80b4c:	601a      	str	r2, [r3, #0]
				break;
   80b4e:	e7d4      	b.n	80afa <SystemCoreClockUpdate+0x2a>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80b50:	4b1d      	ldr	r3, [pc, #116]	; (80bc8 <SystemCoreClockUpdate+0xf8>)
   80b52:	6a1b      	ldr	r3, [r3, #32]
   80b54:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80b58:	d00c      	beq.n	80b74 <SystemCoreClockUpdate+0xa4>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80b5a:	4a1e      	ldr	r2, [pc, #120]	; (80bd4 <SystemCoreClockUpdate+0x104>)
   80b5c:	4b1c      	ldr	r3, [pc, #112]	; (80bd0 <SystemCoreClockUpdate+0x100>)
   80b5e:	601a      	str	r2, [r3, #0]
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80b60:	4b19      	ldr	r3, [pc, #100]	; (80bc8 <SystemCoreClockUpdate+0xf8>)
   80b62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80b64:	f003 0303 	and.w	r3, r3, #3
   80b68:	2b02      	cmp	r3, #2
   80b6a:	d016      	beq.n	80b9a <SystemCoreClockUpdate+0xca>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   80b6c:	4a1c      	ldr	r2, [pc, #112]	; (80be0 <SystemCoreClockUpdate+0x110>)
   80b6e:	4b18      	ldr	r3, [pc, #96]	; (80bd0 <SystemCoreClockUpdate+0x100>)
   80b70:	601a      	str	r2, [r3, #0]
   80b72:	e7c2      	b.n	80afa <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80b74:	4a18      	ldr	r2, [pc, #96]	; (80bd8 <SystemCoreClockUpdate+0x108>)
   80b76:	4b16      	ldr	r3, [pc, #88]	; (80bd0 <SystemCoreClockUpdate+0x100>)
   80b78:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80b7a:	4b13      	ldr	r3, [pc, #76]	; (80bc8 <SystemCoreClockUpdate+0xf8>)
   80b7c:	6a1b      	ldr	r3, [r3, #32]
   80b7e:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80b82:	2b10      	cmp	r3, #16
   80b84:	d005      	beq.n	80b92 <SystemCoreClockUpdate+0xc2>
   80b86:	2b20      	cmp	r3, #32
   80b88:	d1ea      	bne.n	80b60 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
   80b8a:	4a12      	ldr	r2, [pc, #72]	; (80bd4 <SystemCoreClockUpdate+0x104>)
   80b8c:	4b10      	ldr	r3, [pc, #64]	; (80bd0 <SystemCoreClockUpdate+0x100>)
   80b8e:	601a      	str	r2, [r3, #0]
				break;
   80b90:	e7e6      	b.n	80b60 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
   80b92:	4a12      	ldr	r2, [pc, #72]	; (80bdc <SystemCoreClockUpdate+0x10c>)
   80b94:	4b0e      	ldr	r3, [pc, #56]	; (80bd0 <SystemCoreClockUpdate+0x100>)
   80b96:	601a      	str	r2, [r3, #0]
				break;
   80b98:	e7e2      	b.n	80b60 <SystemCoreClockUpdate+0x90>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80b9a:	4a0b      	ldr	r2, [pc, #44]	; (80bc8 <SystemCoreClockUpdate+0xf8>)
   80b9c:	6a91      	ldr	r1, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80b9e:	6a92      	ldr	r2, [r2, #40]	; 0x28
   80ba0:	480b      	ldr	r0, [pc, #44]	; (80bd0 <SystemCoreClockUpdate+0x100>)
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80ba2:	f3c1 410a 	ubfx	r1, r1, #16, #11
   80ba6:	6803      	ldr	r3, [r0, #0]
   80ba8:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80bac:	b2d2      	uxtb	r2, r2
   80bae:	fbb3 f3f2 	udiv	r3, r3, r2
   80bb2:	6003      	str	r3, [r0, #0]
   80bb4:	e7a1      	b.n	80afa <SystemCoreClockUpdate+0x2a>
		SystemCoreClock /= 3U;
   80bb6:	4a06      	ldr	r2, [pc, #24]	; (80bd0 <SystemCoreClockUpdate+0x100>)
   80bb8:	6813      	ldr	r3, [r2, #0]
   80bba:	490a      	ldr	r1, [pc, #40]	; (80be4 <SystemCoreClockUpdate+0x114>)
   80bbc:	fba1 1303 	umull	r1, r3, r1, r3
   80bc0:	085b      	lsrs	r3, r3, #1
   80bc2:	6013      	str	r3, [r2, #0]
   80bc4:	4770      	bx	lr
   80bc6:	bf00      	nop
   80bc8:	400e0600 	.word	0x400e0600
   80bcc:	400e1a10 	.word	0x400e1a10
   80bd0:	2007013c 	.word	0x2007013c
   80bd4:	00b71b00 	.word	0x00b71b00
   80bd8:	003d0900 	.word	0x003d0900
   80bdc:	007a1200 	.word	0x007a1200
   80be0:	0e4e1c00 	.word	0x0e4e1c00
   80be4:	aaaaaaab 	.word	0xaaaaaaab

00080be8 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80be8:	4b0a      	ldr	r3, [pc, #40]	; (80c14 <_sbrk+0x2c>)
   80bea:	681b      	ldr	r3, [r3, #0]
   80bec:	b153      	cbz	r3, 80c04 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   80bee:	4b09      	ldr	r3, [pc, #36]	; (80c14 <_sbrk+0x2c>)
   80bf0:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80bf2:	181a      	adds	r2, r3, r0
   80bf4:	4908      	ldr	r1, [pc, #32]	; (80c18 <_sbrk+0x30>)
   80bf6:	4291      	cmp	r1, r2
   80bf8:	db08      	blt.n	80c0c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   80bfa:	4610      	mov	r0, r2
   80bfc:	4a05      	ldr	r2, [pc, #20]	; (80c14 <_sbrk+0x2c>)
   80bfe:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80c00:	4618      	mov	r0, r3
   80c02:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   80c04:	4a05      	ldr	r2, [pc, #20]	; (80c1c <_sbrk+0x34>)
   80c06:	4b03      	ldr	r3, [pc, #12]	; (80c14 <_sbrk+0x2c>)
   80c08:	601a      	str	r2, [r3, #0]
   80c0a:	e7f0      	b.n	80bee <_sbrk+0x6>
		return (caddr_t) -1;	
   80c0c:	f04f 30ff 	mov.w	r0, #4294967295
}
   80c10:	4770      	bx	lr
   80c12:	bf00      	nop
   80c14:	20070c1c 	.word	0x20070c1c
   80c18:	20087ffc 	.word	0x20087ffc
   80c1c:	20072c88 	.word	0x20072c88

00080c20 <_close>:
}

extern int _close(int file)
{
	return -1;
}
   80c20:	f04f 30ff 	mov.w	r0, #4294967295
   80c24:	4770      	bx	lr

00080c26 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   80c26:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   80c2a:	604b      	str	r3, [r1, #4]

	return 0;
}
   80c2c:	2000      	movs	r0, #0
   80c2e:	4770      	bx	lr

00080c30 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   80c30:	2001      	movs	r0, #1
   80c32:	4770      	bx	lr

00080c34 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   80c34:	2000      	movs	r0, #0
   80c36:	4770      	bx	lr

00080c38 <usart_serial_getchar>:
{
   80c38:	b5f0      	push	{r4, r5, r6, r7, lr}
   80c3a:	b083      	sub	sp, #12
   80c3c:	4604      	mov	r4, r0
   80c3e:	460d      	mov	r5, r1
	uint32_t val = 0;
   80c40:	2300      	movs	r3, #0
   80c42:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
   80c44:	4b20      	ldr	r3, [pc, #128]	; (80cc8 <usart_serial_getchar+0x90>)
   80c46:	4298      	cmp	r0, r3
   80c48:	d00d      	beq.n	80c66 <usart_serial_getchar+0x2e>
	if (USART0 == p_usart) {
   80c4a:	4b20      	ldr	r3, [pc, #128]	; (80ccc <usart_serial_getchar+0x94>)
   80c4c:	4298      	cmp	r0, r3
   80c4e:	d012      	beq.n	80c76 <usart_serial_getchar+0x3e>
	if (USART1 == p_usart) {
   80c50:	4b1f      	ldr	r3, [pc, #124]	; (80cd0 <usart_serial_getchar+0x98>)
   80c52:	4298      	cmp	r0, r3
   80c54:	d019      	beq.n	80c8a <usart_serial_getchar+0x52>
	if (USART2 == p_usart) {
   80c56:	4b1f      	ldr	r3, [pc, #124]	; (80cd4 <usart_serial_getchar+0x9c>)
   80c58:	429c      	cmp	r4, r3
   80c5a:	d020      	beq.n	80c9e <usart_serial_getchar+0x66>
	if (USART3 == p_usart) {
   80c5c:	4b1e      	ldr	r3, [pc, #120]	; (80cd8 <usart_serial_getchar+0xa0>)
   80c5e:	429c      	cmp	r4, r3
   80c60:	d027      	beq.n	80cb2 <usart_serial_getchar+0x7a>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   80c62:	b003      	add	sp, #12
   80c64:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
   80c66:	461f      	mov	r7, r3
   80c68:	4e1c      	ldr	r6, [pc, #112]	; (80cdc <usart_serial_getchar+0xa4>)
   80c6a:	4629      	mov	r1, r5
   80c6c:	4638      	mov	r0, r7
   80c6e:	47b0      	blx	r6
   80c70:	2800      	cmp	r0, #0
   80c72:	d1fa      	bne.n	80c6a <usart_serial_getchar+0x32>
   80c74:	e7ef      	b.n	80c56 <usart_serial_getchar+0x1e>
		while (usart_read(p_usart, &val));
   80c76:	461f      	mov	r7, r3
   80c78:	4e19      	ldr	r6, [pc, #100]	; (80ce0 <usart_serial_getchar+0xa8>)
   80c7a:	a901      	add	r1, sp, #4
   80c7c:	4638      	mov	r0, r7
   80c7e:	47b0      	blx	r6
   80c80:	2800      	cmp	r0, #0
   80c82:	d1fa      	bne.n	80c7a <usart_serial_getchar+0x42>
		*data = (uint8_t)(val & 0xFF);
   80c84:	9b01      	ldr	r3, [sp, #4]
   80c86:	702b      	strb	r3, [r5, #0]
   80c88:	e7e8      	b.n	80c5c <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
   80c8a:	461e      	mov	r6, r3
   80c8c:	4c14      	ldr	r4, [pc, #80]	; (80ce0 <usart_serial_getchar+0xa8>)
   80c8e:	a901      	add	r1, sp, #4
   80c90:	4630      	mov	r0, r6
   80c92:	47a0      	blx	r4
   80c94:	2800      	cmp	r0, #0
   80c96:	d1fa      	bne.n	80c8e <usart_serial_getchar+0x56>
		*data = (uint8_t)(val & 0xFF);
   80c98:	9b01      	ldr	r3, [sp, #4]
   80c9a:	702b      	strb	r3, [r5, #0]
   80c9c:	e7e1      	b.n	80c62 <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   80c9e:	461e      	mov	r6, r3
   80ca0:	4c0f      	ldr	r4, [pc, #60]	; (80ce0 <usart_serial_getchar+0xa8>)
   80ca2:	a901      	add	r1, sp, #4
   80ca4:	4630      	mov	r0, r6
   80ca6:	47a0      	blx	r4
   80ca8:	2800      	cmp	r0, #0
   80caa:	d1fa      	bne.n	80ca2 <usart_serial_getchar+0x6a>
		*data = (uint8_t)(val & 0xFF);
   80cac:	9b01      	ldr	r3, [sp, #4]
   80cae:	702b      	strb	r3, [r5, #0]
   80cb0:	e7d7      	b.n	80c62 <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   80cb2:	461e      	mov	r6, r3
   80cb4:	4c0a      	ldr	r4, [pc, #40]	; (80ce0 <usart_serial_getchar+0xa8>)
   80cb6:	a901      	add	r1, sp, #4
   80cb8:	4630      	mov	r0, r6
   80cba:	47a0      	blx	r4
   80cbc:	2800      	cmp	r0, #0
   80cbe:	d1fa      	bne.n	80cb6 <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
   80cc0:	9b01      	ldr	r3, [sp, #4]
   80cc2:	702b      	strb	r3, [r5, #0]
}
   80cc4:	e7cd      	b.n	80c62 <usart_serial_getchar+0x2a>
   80cc6:	bf00      	nop
   80cc8:	400e0800 	.word	0x400e0800
   80ccc:	40098000 	.word	0x40098000
   80cd0:	4009c000 	.word	0x4009c000
   80cd4:	400a0000 	.word	0x400a0000
   80cd8:	400a4000 	.word	0x400a4000
   80cdc:	000804a7 	.word	0x000804a7
   80ce0:	000804cd 	.word	0x000804cd

00080ce4 <usart_serial_putchar>:
{
   80ce4:	b570      	push	{r4, r5, r6, lr}
   80ce6:	460c      	mov	r4, r1
	if (UART == (Uart*)p_usart) {
   80ce8:	4b1e      	ldr	r3, [pc, #120]	; (80d64 <usart_serial_putchar+0x80>)
   80cea:	4298      	cmp	r0, r3
   80cec:	d00d      	beq.n	80d0a <usart_serial_putchar+0x26>
	if (USART0 == p_usart) {
   80cee:	4b1e      	ldr	r3, [pc, #120]	; (80d68 <usart_serial_putchar+0x84>)
   80cf0:	4298      	cmp	r0, r3
   80cf2:	d013      	beq.n	80d1c <usart_serial_putchar+0x38>
	if (USART1 == p_usart) {
   80cf4:	4b1d      	ldr	r3, [pc, #116]	; (80d6c <usart_serial_putchar+0x88>)
   80cf6:	4298      	cmp	r0, r3
   80cf8:	d019      	beq.n	80d2e <usart_serial_putchar+0x4a>
	if (USART2 == p_usart) {
   80cfa:	4b1d      	ldr	r3, [pc, #116]	; (80d70 <usart_serial_putchar+0x8c>)
   80cfc:	4298      	cmp	r0, r3
   80cfe:	d01f      	beq.n	80d40 <usart_serial_putchar+0x5c>
	if (USART3 == p_usart) {
   80d00:	4b1c      	ldr	r3, [pc, #112]	; (80d74 <usart_serial_putchar+0x90>)
   80d02:	4298      	cmp	r0, r3
   80d04:	d025      	beq.n	80d52 <usart_serial_putchar+0x6e>
	return 0;
   80d06:	2000      	movs	r0, #0
}
   80d08:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
   80d0a:	461e      	mov	r6, r3
   80d0c:	4d1a      	ldr	r5, [pc, #104]	; (80d78 <usart_serial_putchar+0x94>)
   80d0e:	4621      	mov	r1, r4
   80d10:	4630      	mov	r0, r6
   80d12:	47a8      	blx	r5
   80d14:	2800      	cmp	r0, #0
   80d16:	d1fa      	bne.n	80d0e <usart_serial_putchar+0x2a>
		return 1;
   80d18:	2001      	movs	r0, #1
   80d1a:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80d1c:	461e      	mov	r6, r3
   80d1e:	4d17      	ldr	r5, [pc, #92]	; (80d7c <usart_serial_putchar+0x98>)
   80d20:	4621      	mov	r1, r4
   80d22:	4630      	mov	r0, r6
   80d24:	47a8      	blx	r5
   80d26:	2800      	cmp	r0, #0
   80d28:	d1fa      	bne.n	80d20 <usart_serial_putchar+0x3c>
		return 1;
   80d2a:	2001      	movs	r0, #1
   80d2c:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80d2e:	461e      	mov	r6, r3
   80d30:	4d12      	ldr	r5, [pc, #72]	; (80d7c <usart_serial_putchar+0x98>)
   80d32:	4621      	mov	r1, r4
   80d34:	4630      	mov	r0, r6
   80d36:	47a8      	blx	r5
   80d38:	2800      	cmp	r0, #0
   80d3a:	d1fa      	bne.n	80d32 <usart_serial_putchar+0x4e>
		return 1;
   80d3c:	2001      	movs	r0, #1
   80d3e:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80d40:	461e      	mov	r6, r3
   80d42:	4d0e      	ldr	r5, [pc, #56]	; (80d7c <usart_serial_putchar+0x98>)
   80d44:	4621      	mov	r1, r4
   80d46:	4630      	mov	r0, r6
   80d48:	47a8      	blx	r5
   80d4a:	2800      	cmp	r0, #0
   80d4c:	d1fa      	bne.n	80d44 <usart_serial_putchar+0x60>
		return 1;
   80d4e:	2001      	movs	r0, #1
   80d50:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80d52:	461e      	mov	r6, r3
   80d54:	4d09      	ldr	r5, [pc, #36]	; (80d7c <usart_serial_putchar+0x98>)
   80d56:	4621      	mov	r1, r4
   80d58:	4630      	mov	r0, r6
   80d5a:	47a8      	blx	r5
   80d5c:	2800      	cmp	r0, #0
   80d5e:	d1fa      	bne.n	80d56 <usart_serial_putchar+0x72>
		return 1;
   80d60:	2001      	movs	r0, #1
   80d62:	bd70      	pop	{r4, r5, r6, pc}
   80d64:	400e0800 	.word	0x400e0800
   80d68:	40098000 	.word	0x40098000
   80d6c:	4009c000 	.word	0x4009c000
   80d70:	400a0000 	.word	0x400a0000
   80d74:	400a4000 	.word	0x400a4000
   80d78:	00080497 	.word	0x00080497
   80d7c:	000804b9 	.word	0x000804b9

00080d80 <main>:
	printf("Console ready\n");
	printf("=============\n");
}

int main (void)
{
   80d80:	b580      	push	{r7, lr}
   80d82:	b084      	sub	sp, #16
	sysclk_init();
   80d84:	4b22      	ldr	r3, [pc, #136]	; (80e10 <main+0x90>)
   80d86:	4798      	blx	r3
	board_init();
   80d88:	4b22      	ldr	r3, [pc, #136]	; (80e14 <main+0x94>)
   80d8a:	4798      	blx	r3
   80d8c:	2008      	movs	r0, #8
   80d8e:	4d22      	ldr	r5, [pc, #136]	; (80e18 <main+0x98>)
   80d90:	47a8      	blx	r5
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
   80d92:	4c22      	ldr	r4, [pc, #136]	; (80e1c <main+0x9c>)
   80d94:	4b22      	ldr	r3, [pc, #136]	; (80e20 <main+0xa0>)
   80d96:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   80d98:	4a22      	ldr	r2, [pc, #136]	; (80e24 <main+0xa4>)
   80d9a:	4b23      	ldr	r3, [pc, #140]	; (80e28 <main+0xa8>)
   80d9c:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   80d9e:	4a23      	ldr	r2, [pc, #140]	; (80e2c <main+0xac>)
   80da0:	4b23      	ldr	r3, [pc, #140]	; (80e30 <main+0xb0>)
   80da2:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   80da4:	4b23      	ldr	r3, [pc, #140]	; (80e34 <main+0xb4>)
   80da6:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
   80da8:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   80dac:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
   80dae:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80db2:	9303      	str	r3, [sp, #12]
   80db4:	2008      	movs	r0, #8
   80db6:	47a8      	blx	r5
		uart_init((Uart*)p_usart, &uart_settings);
   80db8:	a901      	add	r1, sp, #4
   80dba:	4620      	mov	r0, r4
   80dbc:	4b1e      	ldr	r3, [pc, #120]	; (80e38 <main+0xb8>)
   80dbe:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   80dc0:	4d1e      	ldr	r5, [pc, #120]	; (80e3c <main+0xbc>)
   80dc2:	682b      	ldr	r3, [r5, #0]
   80dc4:	2100      	movs	r1, #0
   80dc6:	6898      	ldr	r0, [r3, #8]
   80dc8:	4c1d      	ldr	r4, [pc, #116]	; (80e40 <main+0xc0>)
   80dca:	47a0      	blx	r4
	setbuf(stdin, NULL);
   80dcc:	682b      	ldr	r3, [r5, #0]
   80dce:	2100      	movs	r1, #0
   80dd0:	6858      	ldr	r0, [r3, #4]
   80dd2:	47a0      	blx	r4
	printf("Console ready\n");
   80dd4:	481b      	ldr	r0, [pc, #108]	; (80e44 <main+0xc4>)
   80dd6:	4c1c      	ldr	r4, [pc, #112]	; (80e48 <main+0xc8>)
   80dd8:	47a0      	blx	r4
	printf("=============\n");
   80dda:	481c      	ldr	r0, [pc, #112]	; (80e4c <main+0xcc>)
   80ddc:	47a0      	blx	r4
	pulse_start(EnA, pwm_value);
   80dde:	2200      	movs	r2, #0
   80de0:	4b1b      	ldr	r3, [pc, #108]	; (80e50 <main+0xd0>)
   80de2:	2039      	movs	r0, #57	; 0x39
   80de4:	491b      	ldr	r1, [pc, #108]	; (80e54 <main+0xd4>)
   80de6:	4788      	blx	r1
		uint32_t ra_val = tc_read_ra(TC0, TC_WAVE_CHANNEL_0);
   80de8:	4d1b      	ldr	r5, [pc, #108]	; (80e58 <main+0xd8>)
   80dea:	2400      	movs	r4, #0
   80dec:	4f1b      	ldr	r7, [pc, #108]	; (80e5c <main+0xdc>)
   80dee:	4621      	mov	r1, r4
   80df0:	4628      	mov	r0, r5
   80df2:	47b8      	blx	r7
   80df4:	4606      	mov	r6, r0
		uint32_t rc_val = tc_read_rc(TC0, TC_WAVE_CHANNEL_0);
   80df6:	4621      	mov	r1, r4
   80df8:	4628      	mov	r0, r5
   80dfa:	4b19      	ldr	r3, [pc, #100]	; (80e60 <main+0xe0>)
   80dfc:	4798      	blx	r3
		printf("RA-value: %lu ----- RC-value: %lu\n", ra_val, rc_val);
   80dfe:	4602      	mov	r2, r0
   80e00:	4631      	mov	r1, r6
   80e02:	4818      	ldr	r0, [pc, #96]	; (80e64 <main+0xe4>)
   80e04:	4b10      	ldr	r3, [pc, #64]	; (80e48 <main+0xc8>)
   80e06:	4798      	blx	r3
		delay_ms(100);
   80e08:	4817      	ldr	r0, [pc, #92]	; (80e68 <main+0xe8>)
   80e0a:	4b18      	ldr	r3, [pc, #96]	; (80e6c <main+0xec>)
   80e0c:	4798      	blx	r3
   80e0e:	e7ee      	b.n	80dee <main+0x6e>
   80e10:	00080545 	.word	0x00080545
   80e14:	000805a9 	.word	0x000805a9
   80e18:	000809bd 	.word	0x000809bd
   80e1c:	400e0800 	.word	0x400e0800
   80e20:	20070c5c 	.word	0x20070c5c
   80e24:	00080ce5 	.word	0x00080ce5
   80e28:	20070c58 	.word	0x20070c58
   80e2c:	00080c39 	.word	0x00080c39
   80e30:	20070c54 	.word	0x20070c54
   80e34:	0501bd00 	.word	0x0501bd00
   80e38:	00080461 	.word	0x00080461
   80e3c:	20070140 	.word	0x20070140
   80e40:	00081759 	.word	0x00081759
   80e44:	000844c4 	.word	0x000844c4
   80e48:	00081695 	.word	0x00081695
   80e4c:	000844d4 	.word	0x000844d4
   80e50:	40390000 	.word	0x40390000
   80e54:	00080241 	.word	0x00080241
   80e58:	40080000 	.word	0x40080000
   80e5c:	00080181 	.word	0x00080181
   80e60:	00080189 	.word	0x00080189
   80e64:	000844e4 	.word	0x000844e4
   80e68:	000927c0 	.word	0x000927c0
   80e6c:	20070001 	.word	0x20070001

00080e70 <__aeabi_drsub>:
   80e70:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   80e74:	e002      	b.n	80e7c <__adddf3>
   80e76:	bf00      	nop

00080e78 <__aeabi_dsub>:
   80e78:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00080e7c <__adddf3>:
   80e7c:	b530      	push	{r4, r5, lr}
   80e7e:	ea4f 0441 	mov.w	r4, r1, lsl #1
   80e82:	ea4f 0543 	mov.w	r5, r3, lsl #1
   80e86:	ea94 0f05 	teq	r4, r5
   80e8a:	bf08      	it	eq
   80e8c:	ea90 0f02 	teqeq	r0, r2
   80e90:	bf1f      	itttt	ne
   80e92:	ea54 0c00 	orrsne.w	ip, r4, r0
   80e96:	ea55 0c02 	orrsne.w	ip, r5, r2
   80e9a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   80e9e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   80ea2:	f000 80e2 	beq.w	8106a <__adddf3+0x1ee>
   80ea6:	ea4f 5454 	mov.w	r4, r4, lsr #21
   80eaa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   80eae:	bfb8      	it	lt
   80eb0:	426d      	neglt	r5, r5
   80eb2:	dd0c      	ble.n	80ece <__adddf3+0x52>
   80eb4:	442c      	add	r4, r5
   80eb6:	ea80 0202 	eor.w	r2, r0, r2
   80eba:	ea81 0303 	eor.w	r3, r1, r3
   80ebe:	ea82 0000 	eor.w	r0, r2, r0
   80ec2:	ea83 0101 	eor.w	r1, r3, r1
   80ec6:	ea80 0202 	eor.w	r2, r0, r2
   80eca:	ea81 0303 	eor.w	r3, r1, r3
   80ece:	2d36      	cmp	r5, #54	; 0x36
   80ed0:	bf88      	it	hi
   80ed2:	bd30      	pophi	{r4, r5, pc}
   80ed4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   80ed8:	ea4f 3101 	mov.w	r1, r1, lsl #12
   80edc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   80ee0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   80ee4:	d002      	beq.n	80eec <__adddf3+0x70>
   80ee6:	4240      	negs	r0, r0
   80ee8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80eec:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   80ef0:	ea4f 3303 	mov.w	r3, r3, lsl #12
   80ef4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   80ef8:	d002      	beq.n	80f00 <__adddf3+0x84>
   80efa:	4252      	negs	r2, r2
   80efc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   80f00:	ea94 0f05 	teq	r4, r5
   80f04:	f000 80a7 	beq.w	81056 <__adddf3+0x1da>
   80f08:	f1a4 0401 	sub.w	r4, r4, #1
   80f0c:	f1d5 0e20 	rsbs	lr, r5, #32
   80f10:	db0d      	blt.n	80f2e <__adddf3+0xb2>
   80f12:	fa02 fc0e 	lsl.w	ip, r2, lr
   80f16:	fa22 f205 	lsr.w	r2, r2, r5
   80f1a:	1880      	adds	r0, r0, r2
   80f1c:	f141 0100 	adc.w	r1, r1, #0
   80f20:	fa03 f20e 	lsl.w	r2, r3, lr
   80f24:	1880      	adds	r0, r0, r2
   80f26:	fa43 f305 	asr.w	r3, r3, r5
   80f2a:	4159      	adcs	r1, r3
   80f2c:	e00e      	b.n	80f4c <__adddf3+0xd0>
   80f2e:	f1a5 0520 	sub.w	r5, r5, #32
   80f32:	f10e 0e20 	add.w	lr, lr, #32
   80f36:	2a01      	cmp	r2, #1
   80f38:	fa03 fc0e 	lsl.w	ip, r3, lr
   80f3c:	bf28      	it	cs
   80f3e:	f04c 0c02 	orrcs.w	ip, ip, #2
   80f42:	fa43 f305 	asr.w	r3, r3, r5
   80f46:	18c0      	adds	r0, r0, r3
   80f48:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   80f4c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80f50:	d507      	bpl.n	80f62 <__adddf3+0xe6>
   80f52:	f04f 0e00 	mov.w	lr, #0
   80f56:	f1dc 0c00 	rsbs	ip, ip, #0
   80f5a:	eb7e 0000 	sbcs.w	r0, lr, r0
   80f5e:	eb6e 0101 	sbc.w	r1, lr, r1
   80f62:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   80f66:	d31b      	bcc.n	80fa0 <__adddf3+0x124>
   80f68:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   80f6c:	d30c      	bcc.n	80f88 <__adddf3+0x10c>
   80f6e:	0849      	lsrs	r1, r1, #1
   80f70:	ea5f 0030 	movs.w	r0, r0, rrx
   80f74:	ea4f 0c3c 	mov.w	ip, ip, rrx
   80f78:	f104 0401 	add.w	r4, r4, #1
   80f7c:	ea4f 5244 	mov.w	r2, r4, lsl #21
   80f80:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   80f84:	f080 809a 	bcs.w	810bc <__adddf3+0x240>
   80f88:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   80f8c:	bf08      	it	eq
   80f8e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   80f92:	f150 0000 	adcs.w	r0, r0, #0
   80f96:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   80f9a:	ea41 0105 	orr.w	r1, r1, r5
   80f9e:	bd30      	pop	{r4, r5, pc}
   80fa0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   80fa4:	4140      	adcs	r0, r0
   80fa6:	eb41 0101 	adc.w	r1, r1, r1
   80faa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   80fae:	f1a4 0401 	sub.w	r4, r4, #1
   80fb2:	d1e9      	bne.n	80f88 <__adddf3+0x10c>
   80fb4:	f091 0f00 	teq	r1, #0
   80fb8:	bf04      	itt	eq
   80fba:	4601      	moveq	r1, r0
   80fbc:	2000      	moveq	r0, #0
   80fbe:	fab1 f381 	clz	r3, r1
   80fc2:	bf08      	it	eq
   80fc4:	3320      	addeq	r3, #32
   80fc6:	f1a3 030b 	sub.w	r3, r3, #11
   80fca:	f1b3 0220 	subs.w	r2, r3, #32
   80fce:	da0c      	bge.n	80fea <__adddf3+0x16e>
   80fd0:	320c      	adds	r2, #12
   80fd2:	dd08      	ble.n	80fe6 <__adddf3+0x16a>
   80fd4:	f102 0c14 	add.w	ip, r2, #20
   80fd8:	f1c2 020c 	rsb	r2, r2, #12
   80fdc:	fa01 f00c 	lsl.w	r0, r1, ip
   80fe0:	fa21 f102 	lsr.w	r1, r1, r2
   80fe4:	e00c      	b.n	81000 <__adddf3+0x184>
   80fe6:	f102 0214 	add.w	r2, r2, #20
   80fea:	bfd8      	it	le
   80fec:	f1c2 0c20 	rsble	ip, r2, #32
   80ff0:	fa01 f102 	lsl.w	r1, r1, r2
   80ff4:	fa20 fc0c 	lsr.w	ip, r0, ip
   80ff8:	bfdc      	itt	le
   80ffa:	ea41 010c 	orrle.w	r1, r1, ip
   80ffe:	4090      	lslle	r0, r2
   81000:	1ae4      	subs	r4, r4, r3
   81002:	bfa2      	ittt	ge
   81004:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   81008:	4329      	orrge	r1, r5
   8100a:	bd30      	popge	{r4, r5, pc}
   8100c:	ea6f 0404 	mvn.w	r4, r4
   81010:	3c1f      	subs	r4, #31
   81012:	da1c      	bge.n	8104e <__adddf3+0x1d2>
   81014:	340c      	adds	r4, #12
   81016:	dc0e      	bgt.n	81036 <__adddf3+0x1ba>
   81018:	f104 0414 	add.w	r4, r4, #20
   8101c:	f1c4 0220 	rsb	r2, r4, #32
   81020:	fa20 f004 	lsr.w	r0, r0, r4
   81024:	fa01 f302 	lsl.w	r3, r1, r2
   81028:	ea40 0003 	orr.w	r0, r0, r3
   8102c:	fa21 f304 	lsr.w	r3, r1, r4
   81030:	ea45 0103 	orr.w	r1, r5, r3
   81034:	bd30      	pop	{r4, r5, pc}
   81036:	f1c4 040c 	rsb	r4, r4, #12
   8103a:	f1c4 0220 	rsb	r2, r4, #32
   8103e:	fa20 f002 	lsr.w	r0, r0, r2
   81042:	fa01 f304 	lsl.w	r3, r1, r4
   81046:	ea40 0003 	orr.w	r0, r0, r3
   8104a:	4629      	mov	r1, r5
   8104c:	bd30      	pop	{r4, r5, pc}
   8104e:	fa21 f004 	lsr.w	r0, r1, r4
   81052:	4629      	mov	r1, r5
   81054:	bd30      	pop	{r4, r5, pc}
   81056:	f094 0f00 	teq	r4, #0
   8105a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   8105e:	bf06      	itte	eq
   81060:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   81064:	3401      	addeq	r4, #1
   81066:	3d01      	subne	r5, #1
   81068:	e74e      	b.n	80f08 <__adddf3+0x8c>
   8106a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   8106e:	bf18      	it	ne
   81070:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   81074:	d029      	beq.n	810ca <__adddf3+0x24e>
   81076:	ea94 0f05 	teq	r4, r5
   8107a:	bf08      	it	eq
   8107c:	ea90 0f02 	teqeq	r0, r2
   81080:	d005      	beq.n	8108e <__adddf3+0x212>
   81082:	ea54 0c00 	orrs.w	ip, r4, r0
   81086:	bf04      	itt	eq
   81088:	4619      	moveq	r1, r3
   8108a:	4610      	moveq	r0, r2
   8108c:	bd30      	pop	{r4, r5, pc}
   8108e:	ea91 0f03 	teq	r1, r3
   81092:	bf1e      	ittt	ne
   81094:	2100      	movne	r1, #0
   81096:	2000      	movne	r0, #0
   81098:	bd30      	popne	{r4, r5, pc}
   8109a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   8109e:	d105      	bne.n	810ac <__adddf3+0x230>
   810a0:	0040      	lsls	r0, r0, #1
   810a2:	4149      	adcs	r1, r1
   810a4:	bf28      	it	cs
   810a6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   810aa:	bd30      	pop	{r4, r5, pc}
   810ac:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   810b0:	bf3c      	itt	cc
   810b2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   810b6:	bd30      	popcc	{r4, r5, pc}
   810b8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   810bc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   810c0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   810c4:	f04f 0000 	mov.w	r0, #0
   810c8:	bd30      	pop	{r4, r5, pc}
   810ca:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   810ce:	bf1a      	itte	ne
   810d0:	4619      	movne	r1, r3
   810d2:	4610      	movne	r0, r2
   810d4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   810d8:	bf1c      	itt	ne
   810da:	460b      	movne	r3, r1
   810dc:	4602      	movne	r2, r0
   810de:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   810e2:	bf06      	itte	eq
   810e4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   810e8:	ea91 0f03 	teqeq	r1, r3
   810ec:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   810f0:	bd30      	pop	{r4, r5, pc}
   810f2:	bf00      	nop

000810f4 <__aeabi_ui2d>:
   810f4:	f090 0f00 	teq	r0, #0
   810f8:	bf04      	itt	eq
   810fa:	2100      	moveq	r1, #0
   810fc:	4770      	bxeq	lr
   810fe:	b530      	push	{r4, r5, lr}
   81100:	f44f 6480 	mov.w	r4, #1024	; 0x400
   81104:	f104 0432 	add.w	r4, r4, #50	; 0x32
   81108:	f04f 0500 	mov.w	r5, #0
   8110c:	f04f 0100 	mov.w	r1, #0
   81110:	e750      	b.n	80fb4 <__adddf3+0x138>
   81112:	bf00      	nop

00081114 <__aeabi_i2d>:
   81114:	f090 0f00 	teq	r0, #0
   81118:	bf04      	itt	eq
   8111a:	2100      	moveq	r1, #0
   8111c:	4770      	bxeq	lr
   8111e:	b530      	push	{r4, r5, lr}
   81120:	f44f 6480 	mov.w	r4, #1024	; 0x400
   81124:	f104 0432 	add.w	r4, r4, #50	; 0x32
   81128:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   8112c:	bf48      	it	mi
   8112e:	4240      	negmi	r0, r0
   81130:	f04f 0100 	mov.w	r1, #0
   81134:	e73e      	b.n	80fb4 <__adddf3+0x138>
   81136:	bf00      	nop

00081138 <__aeabi_f2d>:
   81138:	0042      	lsls	r2, r0, #1
   8113a:	ea4f 01e2 	mov.w	r1, r2, asr #3
   8113e:	ea4f 0131 	mov.w	r1, r1, rrx
   81142:	ea4f 7002 	mov.w	r0, r2, lsl #28
   81146:	bf1f      	itttt	ne
   81148:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   8114c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   81150:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   81154:	4770      	bxne	lr
   81156:	f092 0f00 	teq	r2, #0
   8115a:	bf14      	ite	ne
   8115c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   81160:	4770      	bxeq	lr
   81162:	b530      	push	{r4, r5, lr}
   81164:	f44f 7460 	mov.w	r4, #896	; 0x380
   81168:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   8116c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   81170:	e720      	b.n	80fb4 <__adddf3+0x138>
   81172:	bf00      	nop

00081174 <__aeabi_ul2d>:
   81174:	ea50 0201 	orrs.w	r2, r0, r1
   81178:	bf08      	it	eq
   8117a:	4770      	bxeq	lr
   8117c:	b530      	push	{r4, r5, lr}
   8117e:	f04f 0500 	mov.w	r5, #0
   81182:	e00a      	b.n	8119a <__aeabi_l2d+0x16>

00081184 <__aeabi_l2d>:
   81184:	ea50 0201 	orrs.w	r2, r0, r1
   81188:	bf08      	it	eq
   8118a:	4770      	bxeq	lr
   8118c:	b530      	push	{r4, r5, lr}
   8118e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   81192:	d502      	bpl.n	8119a <__aeabi_l2d+0x16>
   81194:	4240      	negs	r0, r0
   81196:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   8119a:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8119e:	f104 0432 	add.w	r4, r4, #50	; 0x32
   811a2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   811a6:	f43f aedc 	beq.w	80f62 <__adddf3+0xe6>
   811aa:	f04f 0203 	mov.w	r2, #3
   811ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   811b2:	bf18      	it	ne
   811b4:	3203      	addne	r2, #3
   811b6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   811ba:	bf18      	it	ne
   811bc:	3203      	addne	r2, #3
   811be:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   811c2:	f1c2 0320 	rsb	r3, r2, #32
   811c6:	fa00 fc03 	lsl.w	ip, r0, r3
   811ca:	fa20 f002 	lsr.w	r0, r0, r2
   811ce:	fa01 fe03 	lsl.w	lr, r1, r3
   811d2:	ea40 000e 	orr.w	r0, r0, lr
   811d6:	fa21 f102 	lsr.w	r1, r1, r2
   811da:	4414      	add	r4, r2
   811dc:	e6c1      	b.n	80f62 <__adddf3+0xe6>
   811de:	bf00      	nop

000811e0 <__aeabi_dmul>:
   811e0:	b570      	push	{r4, r5, r6, lr}
   811e2:	f04f 0cff 	mov.w	ip, #255	; 0xff
   811e6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   811ea:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   811ee:	bf1d      	ittte	ne
   811f0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   811f4:	ea94 0f0c 	teqne	r4, ip
   811f8:	ea95 0f0c 	teqne	r5, ip
   811fc:	f000 f8de 	bleq	813bc <__aeabi_dmul+0x1dc>
   81200:	442c      	add	r4, r5
   81202:	ea81 0603 	eor.w	r6, r1, r3
   81206:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   8120a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   8120e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   81212:	bf18      	it	ne
   81214:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   81218:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   8121c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   81220:	d038      	beq.n	81294 <__aeabi_dmul+0xb4>
   81222:	fba0 ce02 	umull	ip, lr, r0, r2
   81226:	f04f 0500 	mov.w	r5, #0
   8122a:	fbe1 e502 	umlal	lr, r5, r1, r2
   8122e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   81232:	fbe0 e503 	umlal	lr, r5, r0, r3
   81236:	f04f 0600 	mov.w	r6, #0
   8123a:	fbe1 5603 	umlal	r5, r6, r1, r3
   8123e:	f09c 0f00 	teq	ip, #0
   81242:	bf18      	it	ne
   81244:	f04e 0e01 	orrne.w	lr, lr, #1
   81248:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   8124c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   81250:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   81254:	d204      	bcs.n	81260 <__aeabi_dmul+0x80>
   81256:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   8125a:	416d      	adcs	r5, r5
   8125c:	eb46 0606 	adc.w	r6, r6, r6
   81260:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   81264:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   81268:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   8126c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   81270:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   81274:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   81278:	bf88      	it	hi
   8127a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   8127e:	d81e      	bhi.n	812be <__aeabi_dmul+0xde>
   81280:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   81284:	bf08      	it	eq
   81286:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   8128a:	f150 0000 	adcs.w	r0, r0, #0
   8128e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   81292:	bd70      	pop	{r4, r5, r6, pc}
   81294:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   81298:	ea46 0101 	orr.w	r1, r6, r1
   8129c:	ea40 0002 	orr.w	r0, r0, r2
   812a0:	ea81 0103 	eor.w	r1, r1, r3
   812a4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   812a8:	bfc2      	ittt	gt
   812aa:	ebd4 050c 	rsbsgt	r5, r4, ip
   812ae:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   812b2:	bd70      	popgt	{r4, r5, r6, pc}
   812b4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   812b8:	f04f 0e00 	mov.w	lr, #0
   812bc:	3c01      	subs	r4, #1
   812be:	f300 80ab 	bgt.w	81418 <__aeabi_dmul+0x238>
   812c2:	f114 0f36 	cmn.w	r4, #54	; 0x36
   812c6:	bfde      	ittt	le
   812c8:	2000      	movle	r0, #0
   812ca:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   812ce:	bd70      	pople	{r4, r5, r6, pc}
   812d0:	f1c4 0400 	rsb	r4, r4, #0
   812d4:	3c20      	subs	r4, #32
   812d6:	da35      	bge.n	81344 <__aeabi_dmul+0x164>
   812d8:	340c      	adds	r4, #12
   812da:	dc1b      	bgt.n	81314 <__aeabi_dmul+0x134>
   812dc:	f104 0414 	add.w	r4, r4, #20
   812e0:	f1c4 0520 	rsb	r5, r4, #32
   812e4:	fa00 f305 	lsl.w	r3, r0, r5
   812e8:	fa20 f004 	lsr.w	r0, r0, r4
   812ec:	fa01 f205 	lsl.w	r2, r1, r5
   812f0:	ea40 0002 	orr.w	r0, r0, r2
   812f4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   812f8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   812fc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   81300:	fa21 f604 	lsr.w	r6, r1, r4
   81304:	eb42 0106 	adc.w	r1, r2, r6
   81308:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8130c:	bf08      	it	eq
   8130e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   81312:	bd70      	pop	{r4, r5, r6, pc}
   81314:	f1c4 040c 	rsb	r4, r4, #12
   81318:	f1c4 0520 	rsb	r5, r4, #32
   8131c:	fa00 f304 	lsl.w	r3, r0, r4
   81320:	fa20 f005 	lsr.w	r0, r0, r5
   81324:	fa01 f204 	lsl.w	r2, r1, r4
   81328:	ea40 0002 	orr.w	r0, r0, r2
   8132c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81330:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   81334:	f141 0100 	adc.w	r1, r1, #0
   81338:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8133c:	bf08      	it	eq
   8133e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   81342:	bd70      	pop	{r4, r5, r6, pc}
   81344:	f1c4 0520 	rsb	r5, r4, #32
   81348:	fa00 f205 	lsl.w	r2, r0, r5
   8134c:	ea4e 0e02 	orr.w	lr, lr, r2
   81350:	fa20 f304 	lsr.w	r3, r0, r4
   81354:	fa01 f205 	lsl.w	r2, r1, r5
   81358:	ea43 0302 	orr.w	r3, r3, r2
   8135c:	fa21 f004 	lsr.w	r0, r1, r4
   81360:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81364:	fa21 f204 	lsr.w	r2, r1, r4
   81368:	ea20 0002 	bic.w	r0, r0, r2
   8136c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   81370:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   81374:	bf08      	it	eq
   81376:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8137a:	bd70      	pop	{r4, r5, r6, pc}
   8137c:	f094 0f00 	teq	r4, #0
   81380:	d10f      	bne.n	813a2 <__aeabi_dmul+0x1c2>
   81382:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   81386:	0040      	lsls	r0, r0, #1
   81388:	eb41 0101 	adc.w	r1, r1, r1
   8138c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81390:	bf08      	it	eq
   81392:	3c01      	subeq	r4, #1
   81394:	d0f7      	beq.n	81386 <__aeabi_dmul+0x1a6>
   81396:	ea41 0106 	orr.w	r1, r1, r6
   8139a:	f095 0f00 	teq	r5, #0
   8139e:	bf18      	it	ne
   813a0:	4770      	bxne	lr
   813a2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   813a6:	0052      	lsls	r2, r2, #1
   813a8:	eb43 0303 	adc.w	r3, r3, r3
   813ac:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   813b0:	bf08      	it	eq
   813b2:	3d01      	subeq	r5, #1
   813b4:	d0f7      	beq.n	813a6 <__aeabi_dmul+0x1c6>
   813b6:	ea43 0306 	orr.w	r3, r3, r6
   813ba:	4770      	bx	lr
   813bc:	ea94 0f0c 	teq	r4, ip
   813c0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   813c4:	bf18      	it	ne
   813c6:	ea95 0f0c 	teqne	r5, ip
   813ca:	d00c      	beq.n	813e6 <__aeabi_dmul+0x206>
   813cc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   813d0:	bf18      	it	ne
   813d2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   813d6:	d1d1      	bne.n	8137c <__aeabi_dmul+0x19c>
   813d8:	ea81 0103 	eor.w	r1, r1, r3
   813dc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   813e0:	f04f 0000 	mov.w	r0, #0
   813e4:	bd70      	pop	{r4, r5, r6, pc}
   813e6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   813ea:	bf06      	itte	eq
   813ec:	4610      	moveq	r0, r2
   813ee:	4619      	moveq	r1, r3
   813f0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   813f4:	d019      	beq.n	8142a <__aeabi_dmul+0x24a>
   813f6:	ea94 0f0c 	teq	r4, ip
   813fa:	d102      	bne.n	81402 <__aeabi_dmul+0x222>
   813fc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   81400:	d113      	bne.n	8142a <__aeabi_dmul+0x24a>
   81402:	ea95 0f0c 	teq	r5, ip
   81406:	d105      	bne.n	81414 <__aeabi_dmul+0x234>
   81408:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   8140c:	bf1c      	itt	ne
   8140e:	4610      	movne	r0, r2
   81410:	4619      	movne	r1, r3
   81412:	d10a      	bne.n	8142a <__aeabi_dmul+0x24a>
   81414:	ea81 0103 	eor.w	r1, r1, r3
   81418:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8141c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   81420:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   81424:	f04f 0000 	mov.w	r0, #0
   81428:	bd70      	pop	{r4, r5, r6, pc}
   8142a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8142e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   81432:	bd70      	pop	{r4, r5, r6, pc}

00081434 <__aeabi_ddiv>:
   81434:	b570      	push	{r4, r5, r6, lr}
   81436:	f04f 0cff 	mov.w	ip, #255	; 0xff
   8143a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   8143e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   81442:	bf1d      	ittte	ne
   81444:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   81448:	ea94 0f0c 	teqne	r4, ip
   8144c:	ea95 0f0c 	teqne	r5, ip
   81450:	f000 f8a7 	bleq	815a2 <__aeabi_ddiv+0x16e>
   81454:	eba4 0405 	sub.w	r4, r4, r5
   81458:	ea81 0e03 	eor.w	lr, r1, r3
   8145c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   81460:	ea4f 3101 	mov.w	r1, r1, lsl #12
   81464:	f000 8088 	beq.w	81578 <__aeabi_ddiv+0x144>
   81468:	ea4f 3303 	mov.w	r3, r3, lsl #12
   8146c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   81470:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   81474:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   81478:	ea4f 2202 	mov.w	r2, r2, lsl #8
   8147c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   81480:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   81484:	ea4f 2600 	mov.w	r6, r0, lsl #8
   81488:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   8148c:	429d      	cmp	r5, r3
   8148e:	bf08      	it	eq
   81490:	4296      	cmpeq	r6, r2
   81492:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   81496:	f504 7440 	add.w	r4, r4, #768	; 0x300
   8149a:	d202      	bcs.n	814a2 <__aeabi_ddiv+0x6e>
   8149c:	085b      	lsrs	r3, r3, #1
   8149e:	ea4f 0232 	mov.w	r2, r2, rrx
   814a2:	1ab6      	subs	r6, r6, r2
   814a4:	eb65 0503 	sbc.w	r5, r5, r3
   814a8:	085b      	lsrs	r3, r3, #1
   814aa:	ea4f 0232 	mov.w	r2, r2, rrx
   814ae:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   814b2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   814b6:	ebb6 0e02 	subs.w	lr, r6, r2
   814ba:	eb75 0e03 	sbcs.w	lr, r5, r3
   814be:	bf22      	ittt	cs
   814c0:	1ab6      	subcs	r6, r6, r2
   814c2:	4675      	movcs	r5, lr
   814c4:	ea40 000c 	orrcs.w	r0, r0, ip
   814c8:	085b      	lsrs	r3, r3, #1
   814ca:	ea4f 0232 	mov.w	r2, r2, rrx
   814ce:	ebb6 0e02 	subs.w	lr, r6, r2
   814d2:	eb75 0e03 	sbcs.w	lr, r5, r3
   814d6:	bf22      	ittt	cs
   814d8:	1ab6      	subcs	r6, r6, r2
   814da:	4675      	movcs	r5, lr
   814dc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   814e0:	085b      	lsrs	r3, r3, #1
   814e2:	ea4f 0232 	mov.w	r2, r2, rrx
   814e6:	ebb6 0e02 	subs.w	lr, r6, r2
   814ea:	eb75 0e03 	sbcs.w	lr, r5, r3
   814ee:	bf22      	ittt	cs
   814f0:	1ab6      	subcs	r6, r6, r2
   814f2:	4675      	movcs	r5, lr
   814f4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   814f8:	085b      	lsrs	r3, r3, #1
   814fa:	ea4f 0232 	mov.w	r2, r2, rrx
   814fe:	ebb6 0e02 	subs.w	lr, r6, r2
   81502:	eb75 0e03 	sbcs.w	lr, r5, r3
   81506:	bf22      	ittt	cs
   81508:	1ab6      	subcs	r6, r6, r2
   8150a:	4675      	movcs	r5, lr
   8150c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   81510:	ea55 0e06 	orrs.w	lr, r5, r6
   81514:	d018      	beq.n	81548 <__aeabi_ddiv+0x114>
   81516:	ea4f 1505 	mov.w	r5, r5, lsl #4
   8151a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   8151e:	ea4f 1606 	mov.w	r6, r6, lsl #4
   81522:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   81526:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   8152a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   8152e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   81532:	d1c0      	bne.n	814b6 <__aeabi_ddiv+0x82>
   81534:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81538:	d10b      	bne.n	81552 <__aeabi_ddiv+0x11e>
   8153a:	ea41 0100 	orr.w	r1, r1, r0
   8153e:	f04f 0000 	mov.w	r0, #0
   81542:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   81546:	e7b6      	b.n	814b6 <__aeabi_ddiv+0x82>
   81548:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8154c:	bf04      	itt	eq
   8154e:	4301      	orreq	r1, r0
   81550:	2000      	moveq	r0, #0
   81552:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   81556:	bf88      	it	hi
   81558:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   8155c:	f63f aeaf 	bhi.w	812be <__aeabi_dmul+0xde>
   81560:	ebb5 0c03 	subs.w	ip, r5, r3
   81564:	bf04      	itt	eq
   81566:	ebb6 0c02 	subseq.w	ip, r6, r2
   8156a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8156e:	f150 0000 	adcs.w	r0, r0, #0
   81572:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   81576:	bd70      	pop	{r4, r5, r6, pc}
   81578:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   8157c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   81580:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   81584:	bfc2      	ittt	gt
   81586:	ebd4 050c 	rsbsgt	r5, r4, ip
   8158a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8158e:	bd70      	popgt	{r4, r5, r6, pc}
   81590:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81594:	f04f 0e00 	mov.w	lr, #0
   81598:	3c01      	subs	r4, #1
   8159a:	e690      	b.n	812be <__aeabi_dmul+0xde>
   8159c:	ea45 0e06 	orr.w	lr, r5, r6
   815a0:	e68d      	b.n	812be <__aeabi_dmul+0xde>
   815a2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   815a6:	ea94 0f0c 	teq	r4, ip
   815aa:	bf08      	it	eq
   815ac:	ea95 0f0c 	teqeq	r5, ip
   815b0:	f43f af3b 	beq.w	8142a <__aeabi_dmul+0x24a>
   815b4:	ea94 0f0c 	teq	r4, ip
   815b8:	d10a      	bne.n	815d0 <__aeabi_ddiv+0x19c>
   815ba:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   815be:	f47f af34 	bne.w	8142a <__aeabi_dmul+0x24a>
   815c2:	ea95 0f0c 	teq	r5, ip
   815c6:	f47f af25 	bne.w	81414 <__aeabi_dmul+0x234>
   815ca:	4610      	mov	r0, r2
   815cc:	4619      	mov	r1, r3
   815ce:	e72c      	b.n	8142a <__aeabi_dmul+0x24a>
   815d0:	ea95 0f0c 	teq	r5, ip
   815d4:	d106      	bne.n	815e4 <__aeabi_ddiv+0x1b0>
   815d6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   815da:	f43f aefd 	beq.w	813d8 <__aeabi_dmul+0x1f8>
   815de:	4610      	mov	r0, r2
   815e0:	4619      	mov	r1, r3
   815e2:	e722      	b.n	8142a <__aeabi_dmul+0x24a>
   815e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   815e8:	bf18      	it	ne
   815ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   815ee:	f47f aec5 	bne.w	8137c <__aeabi_dmul+0x19c>
   815f2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   815f6:	f47f af0d 	bne.w	81414 <__aeabi_dmul+0x234>
   815fa:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   815fe:	f47f aeeb 	bne.w	813d8 <__aeabi_dmul+0x1f8>
   81602:	e712      	b.n	8142a <__aeabi_dmul+0x24a>

00081604 <__aeabi_d2uiz>:
   81604:	004a      	lsls	r2, r1, #1
   81606:	d211      	bcs.n	8162c <__aeabi_d2uiz+0x28>
   81608:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   8160c:	d211      	bcs.n	81632 <__aeabi_d2uiz+0x2e>
   8160e:	d50d      	bpl.n	8162c <__aeabi_d2uiz+0x28>
   81610:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   81614:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   81618:	d40e      	bmi.n	81638 <__aeabi_d2uiz+0x34>
   8161a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   8161e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   81622:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   81626:	fa23 f002 	lsr.w	r0, r3, r2
   8162a:	4770      	bx	lr
   8162c:	f04f 0000 	mov.w	r0, #0
   81630:	4770      	bx	lr
   81632:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   81636:	d102      	bne.n	8163e <__aeabi_d2uiz+0x3a>
   81638:	f04f 30ff 	mov.w	r0, #4294967295
   8163c:	4770      	bx	lr
   8163e:	f04f 0000 	mov.w	r0, #0
   81642:	4770      	bx	lr

00081644 <__libc_init_array>:
   81644:	b570      	push	{r4, r5, r6, lr}
   81646:	4e0f      	ldr	r6, [pc, #60]	; (81684 <__libc_init_array+0x40>)
   81648:	4d0f      	ldr	r5, [pc, #60]	; (81688 <__libc_init_array+0x44>)
   8164a:	1b76      	subs	r6, r6, r5
   8164c:	10b6      	asrs	r6, r6, #2
   8164e:	bf18      	it	ne
   81650:	2400      	movne	r4, #0
   81652:	d005      	beq.n	81660 <__libc_init_array+0x1c>
   81654:	3401      	adds	r4, #1
   81656:	f855 3b04 	ldr.w	r3, [r5], #4
   8165a:	4798      	blx	r3
   8165c:	42a6      	cmp	r6, r4
   8165e:	d1f9      	bne.n	81654 <__libc_init_array+0x10>
   81660:	4e0a      	ldr	r6, [pc, #40]	; (8168c <__libc_init_array+0x48>)
   81662:	4d0b      	ldr	r5, [pc, #44]	; (81690 <__libc_init_array+0x4c>)
   81664:	f003 f804 	bl	84670 <_init>
   81668:	1b76      	subs	r6, r6, r5
   8166a:	10b6      	asrs	r6, r6, #2
   8166c:	bf18      	it	ne
   8166e:	2400      	movne	r4, #0
   81670:	d006      	beq.n	81680 <__libc_init_array+0x3c>
   81672:	3401      	adds	r4, #1
   81674:	f855 3b04 	ldr.w	r3, [r5], #4
   81678:	4798      	blx	r3
   8167a:	42a6      	cmp	r6, r4
   8167c:	d1f9      	bne.n	81672 <__libc_init_array+0x2e>
   8167e:	bd70      	pop	{r4, r5, r6, pc}
   81680:	bd70      	pop	{r4, r5, r6, pc}
   81682:	bf00      	nop
   81684:	0008467c 	.word	0x0008467c
   81688:	0008467c 	.word	0x0008467c
   8168c:	00084684 	.word	0x00084684
   81690:	0008467c 	.word	0x0008467c

00081694 <iprintf>:
   81694:	b40f      	push	{r0, r1, r2, r3}
   81696:	b510      	push	{r4, lr}
   81698:	4b07      	ldr	r3, [pc, #28]	; (816b8 <iprintf+0x24>)
   8169a:	b082      	sub	sp, #8
   8169c:	ac04      	add	r4, sp, #16
   8169e:	f854 2b04 	ldr.w	r2, [r4], #4
   816a2:	6818      	ldr	r0, [r3, #0]
   816a4:	4623      	mov	r3, r4
   816a6:	6881      	ldr	r1, [r0, #8]
   816a8:	9401      	str	r4, [sp, #4]
   816aa:	f000 f965 	bl	81978 <_vfiprintf_r>
   816ae:	b002      	add	sp, #8
   816b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   816b4:	b004      	add	sp, #16
   816b6:	4770      	bx	lr
   816b8:	20070140 	.word	0x20070140

000816bc <memset>:
   816bc:	b470      	push	{r4, r5, r6}
   816be:	0786      	lsls	r6, r0, #30
   816c0:	d046      	beq.n	81750 <memset+0x94>
   816c2:	1e54      	subs	r4, r2, #1
   816c4:	2a00      	cmp	r2, #0
   816c6:	d041      	beq.n	8174c <memset+0x90>
   816c8:	b2ca      	uxtb	r2, r1
   816ca:	4603      	mov	r3, r0
   816cc:	e002      	b.n	816d4 <memset+0x18>
   816ce:	f114 34ff 	adds.w	r4, r4, #4294967295
   816d2:	d33b      	bcc.n	8174c <memset+0x90>
   816d4:	f803 2b01 	strb.w	r2, [r3], #1
   816d8:	079d      	lsls	r5, r3, #30
   816da:	d1f8      	bne.n	816ce <memset+0x12>
   816dc:	2c03      	cmp	r4, #3
   816de:	d92e      	bls.n	8173e <memset+0x82>
   816e0:	b2cd      	uxtb	r5, r1
   816e2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   816e6:	2c0f      	cmp	r4, #15
   816e8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   816ec:	d919      	bls.n	81722 <memset+0x66>
   816ee:	4626      	mov	r6, r4
   816f0:	f103 0210 	add.w	r2, r3, #16
   816f4:	3e10      	subs	r6, #16
   816f6:	2e0f      	cmp	r6, #15
   816f8:	f842 5c10 	str.w	r5, [r2, #-16]
   816fc:	f842 5c0c 	str.w	r5, [r2, #-12]
   81700:	f842 5c08 	str.w	r5, [r2, #-8]
   81704:	f842 5c04 	str.w	r5, [r2, #-4]
   81708:	f102 0210 	add.w	r2, r2, #16
   8170c:	d8f2      	bhi.n	816f4 <memset+0x38>
   8170e:	f1a4 0210 	sub.w	r2, r4, #16
   81712:	f022 020f 	bic.w	r2, r2, #15
   81716:	f004 040f 	and.w	r4, r4, #15
   8171a:	3210      	adds	r2, #16
   8171c:	2c03      	cmp	r4, #3
   8171e:	4413      	add	r3, r2
   81720:	d90d      	bls.n	8173e <memset+0x82>
   81722:	461e      	mov	r6, r3
   81724:	4622      	mov	r2, r4
   81726:	3a04      	subs	r2, #4
   81728:	2a03      	cmp	r2, #3
   8172a:	f846 5b04 	str.w	r5, [r6], #4
   8172e:	d8fa      	bhi.n	81726 <memset+0x6a>
   81730:	1f22      	subs	r2, r4, #4
   81732:	f022 0203 	bic.w	r2, r2, #3
   81736:	3204      	adds	r2, #4
   81738:	4413      	add	r3, r2
   8173a:	f004 0403 	and.w	r4, r4, #3
   8173e:	b12c      	cbz	r4, 8174c <memset+0x90>
   81740:	b2c9      	uxtb	r1, r1
   81742:	441c      	add	r4, r3
   81744:	f803 1b01 	strb.w	r1, [r3], #1
   81748:	429c      	cmp	r4, r3
   8174a:	d1fb      	bne.n	81744 <memset+0x88>
   8174c:	bc70      	pop	{r4, r5, r6}
   8174e:	4770      	bx	lr
   81750:	4614      	mov	r4, r2
   81752:	4603      	mov	r3, r0
   81754:	e7c2      	b.n	816dc <memset+0x20>
   81756:	bf00      	nop

00081758 <setbuf>:
   81758:	2900      	cmp	r1, #0
   8175a:	bf0c      	ite	eq
   8175c:	2202      	moveq	r2, #2
   8175e:	2200      	movne	r2, #0
   81760:	f44f 6380 	mov.w	r3, #1024	; 0x400
   81764:	f000 b800 	b.w	81768 <setvbuf>

00081768 <setvbuf>:
   81768:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   8176c:	4d61      	ldr	r5, [pc, #388]	; (818f4 <setvbuf+0x18c>)
   8176e:	b083      	sub	sp, #12
   81770:	682d      	ldr	r5, [r5, #0]
   81772:	4604      	mov	r4, r0
   81774:	460f      	mov	r7, r1
   81776:	4690      	mov	r8, r2
   81778:	461e      	mov	r6, r3
   8177a:	b115      	cbz	r5, 81782 <setvbuf+0x1a>
   8177c:	6bab      	ldr	r3, [r5, #56]	; 0x38
   8177e:	2b00      	cmp	r3, #0
   81780:	d064      	beq.n	8184c <setvbuf+0xe4>
   81782:	f1b8 0f02 	cmp.w	r8, #2
   81786:	d006      	beq.n	81796 <setvbuf+0x2e>
   81788:	f1b8 0f01 	cmp.w	r8, #1
   8178c:	f200 809f 	bhi.w	818ce <setvbuf+0x166>
   81790:	2e00      	cmp	r6, #0
   81792:	f2c0 809c 	blt.w	818ce <setvbuf+0x166>
   81796:	6e63      	ldr	r3, [r4, #100]	; 0x64
   81798:	07d8      	lsls	r0, r3, #31
   8179a:	d534      	bpl.n	81806 <setvbuf+0x9e>
   8179c:	4621      	mov	r1, r4
   8179e:	4628      	mov	r0, r5
   817a0:	f001 f882 	bl	828a8 <_fflush_r>
   817a4:	6b21      	ldr	r1, [r4, #48]	; 0x30
   817a6:	b141      	cbz	r1, 817ba <setvbuf+0x52>
   817a8:	f104 0340 	add.w	r3, r4, #64	; 0x40
   817ac:	4299      	cmp	r1, r3
   817ae:	d002      	beq.n	817b6 <setvbuf+0x4e>
   817b0:	4628      	mov	r0, r5
   817b2:	f001 f9f7 	bl	82ba4 <_free_r>
   817b6:	2300      	movs	r3, #0
   817b8:	6323      	str	r3, [r4, #48]	; 0x30
   817ba:	2200      	movs	r2, #0
   817bc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   817c0:	61a2      	str	r2, [r4, #24]
   817c2:	6062      	str	r2, [r4, #4]
   817c4:	061a      	lsls	r2, r3, #24
   817c6:	d43a      	bmi.n	8183e <setvbuf+0xd6>
   817c8:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   817cc:	f023 0303 	bic.w	r3, r3, #3
   817d0:	f1b8 0f02 	cmp.w	r8, #2
   817d4:	81a3      	strh	r3, [r4, #12]
   817d6:	d01d      	beq.n	81814 <setvbuf+0xac>
   817d8:	ab01      	add	r3, sp, #4
   817da:	466a      	mov	r2, sp
   817dc:	4621      	mov	r1, r4
   817de:	4628      	mov	r0, r5
   817e0:	f001 fc7e 	bl	830e0 <__swhatbuf_r>
   817e4:	89a3      	ldrh	r3, [r4, #12]
   817e6:	4318      	orrs	r0, r3
   817e8:	81a0      	strh	r0, [r4, #12]
   817ea:	2e00      	cmp	r6, #0
   817ec:	d132      	bne.n	81854 <setvbuf+0xec>
   817ee:	9e00      	ldr	r6, [sp, #0]
   817f0:	4630      	mov	r0, r6
   817f2:	f001 fced 	bl	831d0 <malloc>
   817f6:	4607      	mov	r7, r0
   817f8:	2800      	cmp	r0, #0
   817fa:	d06b      	beq.n	818d4 <setvbuf+0x16c>
   817fc:	89a3      	ldrh	r3, [r4, #12]
   817fe:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   81802:	81a3      	strh	r3, [r4, #12]
   81804:	e028      	b.n	81858 <setvbuf+0xf0>
   81806:	89a3      	ldrh	r3, [r4, #12]
   81808:	0599      	lsls	r1, r3, #22
   8180a:	d4c7      	bmi.n	8179c <setvbuf+0x34>
   8180c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8180e:	f001 fc63 	bl	830d8 <__retarget_lock_acquire_recursive>
   81812:	e7c3      	b.n	8179c <setvbuf+0x34>
   81814:	2500      	movs	r5, #0
   81816:	2600      	movs	r6, #0
   81818:	2001      	movs	r0, #1
   8181a:	6e61      	ldr	r1, [r4, #100]	; 0x64
   8181c:	f104 0243 	add.w	r2, r4, #67	; 0x43
   81820:	f043 0302 	orr.w	r3, r3, #2
   81824:	60a6      	str	r6, [r4, #8]
   81826:	07ce      	lsls	r6, r1, #31
   81828:	81a3      	strh	r3, [r4, #12]
   8182a:	6160      	str	r0, [r4, #20]
   8182c:	6022      	str	r2, [r4, #0]
   8182e:	6122      	str	r2, [r4, #16]
   81830:	d401      	bmi.n	81836 <setvbuf+0xce>
   81832:	0598      	lsls	r0, r3, #22
   81834:	d53e      	bpl.n	818b4 <setvbuf+0x14c>
   81836:	4628      	mov	r0, r5
   81838:	b003      	add	sp, #12
   8183a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8183e:	6921      	ldr	r1, [r4, #16]
   81840:	4628      	mov	r0, r5
   81842:	f001 f9af 	bl	82ba4 <_free_r>
   81846:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8184a:	e7bd      	b.n	817c8 <setvbuf+0x60>
   8184c:	4628      	mov	r0, r5
   8184e:	f001 f883 	bl	82958 <__sinit>
   81852:	e796      	b.n	81782 <setvbuf+0x1a>
   81854:	2f00      	cmp	r7, #0
   81856:	d0cb      	beq.n	817f0 <setvbuf+0x88>
   81858:	6bab      	ldr	r3, [r5, #56]	; 0x38
   8185a:	2b00      	cmp	r3, #0
   8185c:	d033      	beq.n	818c6 <setvbuf+0x15e>
   8185e:	9b00      	ldr	r3, [sp, #0]
   81860:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   81864:	429e      	cmp	r6, r3
   81866:	bf1c      	itt	ne
   81868:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
   8186c:	81a2      	strhne	r2, [r4, #12]
   8186e:	f1b8 0f01 	cmp.w	r8, #1
   81872:	bf04      	itt	eq
   81874:	f042 0201 	orreq.w	r2, r2, #1
   81878:	81a2      	strheq	r2, [r4, #12]
   8187a:	b292      	uxth	r2, r2
   8187c:	f012 0308 	ands.w	r3, r2, #8
   81880:	6027      	str	r7, [r4, #0]
   81882:	6127      	str	r7, [r4, #16]
   81884:	6166      	str	r6, [r4, #20]
   81886:	d00e      	beq.n	818a6 <setvbuf+0x13e>
   81888:	07d1      	lsls	r1, r2, #31
   8188a:	d51a      	bpl.n	818c2 <setvbuf+0x15a>
   8188c:	2300      	movs	r3, #0
   8188e:	6e65      	ldr	r5, [r4, #100]	; 0x64
   81890:	4276      	negs	r6, r6
   81892:	f015 0501 	ands.w	r5, r5, #1
   81896:	61a6      	str	r6, [r4, #24]
   81898:	60a3      	str	r3, [r4, #8]
   8189a:	d009      	beq.n	818b0 <setvbuf+0x148>
   8189c:	2500      	movs	r5, #0
   8189e:	4628      	mov	r0, r5
   818a0:	b003      	add	sp, #12
   818a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   818a6:	60a3      	str	r3, [r4, #8]
   818a8:	6e65      	ldr	r5, [r4, #100]	; 0x64
   818aa:	f015 0501 	ands.w	r5, r5, #1
   818ae:	d1f5      	bne.n	8189c <setvbuf+0x134>
   818b0:	0593      	lsls	r3, r2, #22
   818b2:	d4c0      	bmi.n	81836 <setvbuf+0xce>
   818b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
   818b6:	f001 fc11 	bl	830dc <__retarget_lock_release_recursive>
   818ba:	4628      	mov	r0, r5
   818bc:	b003      	add	sp, #12
   818be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   818c2:	60a6      	str	r6, [r4, #8]
   818c4:	e7f0      	b.n	818a8 <setvbuf+0x140>
   818c6:	4628      	mov	r0, r5
   818c8:	f001 f846 	bl	82958 <__sinit>
   818cc:	e7c7      	b.n	8185e <setvbuf+0xf6>
   818ce:	f04f 35ff 	mov.w	r5, #4294967295
   818d2:	e7b0      	b.n	81836 <setvbuf+0xce>
   818d4:	f8dd 9000 	ldr.w	r9, [sp]
   818d8:	45b1      	cmp	r9, r6
   818da:	d004      	beq.n	818e6 <setvbuf+0x17e>
   818dc:	4648      	mov	r0, r9
   818de:	f001 fc77 	bl	831d0 <malloc>
   818e2:	4607      	mov	r7, r0
   818e4:	b920      	cbnz	r0, 818f0 <setvbuf+0x188>
   818e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   818ea:	f04f 35ff 	mov.w	r5, #4294967295
   818ee:	e792      	b.n	81816 <setvbuf+0xae>
   818f0:	464e      	mov	r6, r9
   818f2:	e783      	b.n	817fc <setvbuf+0x94>
   818f4:	20070140 	.word	0x20070140

000818f8 <__sprint_r.part.0>:
   818f8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   818fc:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   818fe:	4693      	mov	fp, r2
   81900:	049c      	lsls	r4, r3, #18
   81902:	d52f      	bpl.n	81964 <__sprint_r.part.0+0x6c>
   81904:	6893      	ldr	r3, [r2, #8]
   81906:	6812      	ldr	r2, [r2, #0]
   81908:	b353      	cbz	r3, 81960 <__sprint_r.part.0+0x68>
   8190a:	460e      	mov	r6, r1
   8190c:	4607      	mov	r7, r0
   8190e:	f102 0908 	add.w	r9, r2, #8
   81912:	e919 0420 	ldmdb	r9, {r5, sl}
   81916:	ea5f 089a 	movs.w	r8, sl, lsr #2
   8191a:	d017      	beq.n	8194c <__sprint_r.part.0+0x54>
   8191c:	2400      	movs	r4, #0
   8191e:	3d04      	subs	r5, #4
   81920:	e001      	b.n	81926 <__sprint_r.part.0+0x2e>
   81922:	45a0      	cmp	r8, r4
   81924:	d010      	beq.n	81948 <__sprint_r.part.0+0x50>
   81926:	4632      	mov	r2, r6
   81928:	f855 1f04 	ldr.w	r1, [r5, #4]!
   8192c:	4638      	mov	r0, r7
   8192e:	f001 f8b5 	bl	82a9c <_fputwc_r>
   81932:	1c43      	adds	r3, r0, #1
   81934:	f104 0401 	add.w	r4, r4, #1
   81938:	d1f3      	bne.n	81922 <__sprint_r.part.0+0x2a>
   8193a:	2300      	movs	r3, #0
   8193c:	f8cb 3008 	str.w	r3, [fp, #8]
   81940:	f8cb 3004 	str.w	r3, [fp, #4]
   81944:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81948:	f8db 3008 	ldr.w	r3, [fp, #8]
   8194c:	f02a 0a03 	bic.w	sl, sl, #3
   81950:	eba3 030a 	sub.w	r3, r3, sl
   81954:	f8cb 3008 	str.w	r3, [fp, #8]
   81958:	f109 0908 	add.w	r9, r9, #8
   8195c:	2b00      	cmp	r3, #0
   8195e:	d1d8      	bne.n	81912 <__sprint_r.part.0+0x1a>
   81960:	2000      	movs	r0, #0
   81962:	e7ea      	b.n	8193a <__sprint_r.part.0+0x42>
   81964:	f001 fa04 	bl	82d70 <__sfvwrite_r>
   81968:	2300      	movs	r3, #0
   8196a:	f8cb 3008 	str.w	r3, [fp, #8]
   8196e:	f8cb 3004 	str.w	r3, [fp, #4]
   81972:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81976:	bf00      	nop

00081978 <_vfiprintf_r>:
   81978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8197c:	b0ad      	sub	sp, #180	; 0xb4
   8197e:	461d      	mov	r5, r3
   81980:	468b      	mov	fp, r1
   81982:	4690      	mov	r8, r2
   81984:	9307      	str	r3, [sp, #28]
   81986:	9006      	str	r0, [sp, #24]
   81988:	b118      	cbz	r0, 81992 <_vfiprintf_r+0x1a>
   8198a:	6b83      	ldr	r3, [r0, #56]	; 0x38
   8198c:	2b00      	cmp	r3, #0
   8198e:	f000 80f3 	beq.w	81b78 <_vfiprintf_r+0x200>
   81992:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   81996:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
   8199a:	07df      	lsls	r7, r3, #31
   8199c:	b281      	uxth	r1, r0
   8199e:	d402      	bmi.n	819a6 <_vfiprintf_r+0x2e>
   819a0:	058e      	lsls	r6, r1, #22
   819a2:	f140 80fc 	bpl.w	81b9e <_vfiprintf_r+0x226>
   819a6:	048c      	lsls	r4, r1, #18
   819a8:	d40a      	bmi.n	819c0 <_vfiprintf_r+0x48>
   819aa:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   819ae:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
   819b2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   819b6:	f8ab 100c 	strh.w	r1, [fp, #12]
   819ba:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
   819be:	b289      	uxth	r1, r1
   819c0:	0708      	lsls	r0, r1, #28
   819c2:	f140 80b3 	bpl.w	81b2c <_vfiprintf_r+0x1b4>
   819c6:	f8db 3010 	ldr.w	r3, [fp, #16]
   819ca:	2b00      	cmp	r3, #0
   819cc:	f000 80ae 	beq.w	81b2c <_vfiprintf_r+0x1b4>
   819d0:	f001 031a 	and.w	r3, r1, #26
   819d4:	2b0a      	cmp	r3, #10
   819d6:	f000 80b5 	beq.w	81b44 <_vfiprintf_r+0x1cc>
   819da:	2300      	movs	r3, #0
   819dc:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
   819e0:	46d1      	mov	r9, sl
   819e2:	930b      	str	r3, [sp, #44]	; 0x2c
   819e4:	9303      	str	r3, [sp, #12]
   819e6:	9311      	str	r3, [sp, #68]	; 0x44
   819e8:	9310      	str	r3, [sp, #64]	; 0x40
   819ea:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
   819ee:	f8cd b010 	str.w	fp, [sp, #16]
   819f2:	f898 3000 	ldrb.w	r3, [r8]
   819f6:	4644      	mov	r4, r8
   819f8:	b1fb      	cbz	r3, 81a3a <_vfiprintf_r+0xc2>
   819fa:	2b25      	cmp	r3, #37	; 0x25
   819fc:	d102      	bne.n	81a04 <_vfiprintf_r+0x8c>
   819fe:	e01c      	b.n	81a3a <_vfiprintf_r+0xc2>
   81a00:	2b25      	cmp	r3, #37	; 0x25
   81a02:	d003      	beq.n	81a0c <_vfiprintf_r+0x94>
   81a04:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   81a08:	2b00      	cmp	r3, #0
   81a0a:	d1f9      	bne.n	81a00 <_vfiprintf_r+0x88>
   81a0c:	eba4 0508 	sub.w	r5, r4, r8
   81a10:	b19d      	cbz	r5, 81a3a <_vfiprintf_r+0xc2>
   81a12:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81a14:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81a16:	3301      	adds	r3, #1
   81a18:	442a      	add	r2, r5
   81a1a:	2b07      	cmp	r3, #7
   81a1c:	f8c9 8000 	str.w	r8, [r9]
   81a20:	f8c9 5004 	str.w	r5, [r9, #4]
   81a24:	9211      	str	r2, [sp, #68]	; 0x44
   81a26:	9310      	str	r3, [sp, #64]	; 0x40
   81a28:	dd7a      	ble.n	81b20 <_vfiprintf_r+0x1a8>
   81a2a:	2a00      	cmp	r2, #0
   81a2c:	f040 84b5 	bne.w	8239a <_vfiprintf_r+0xa22>
   81a30:	46d1      	mov	r9, sl
   81a32:	9b03      	ldr	r3, [sp, #12]
   81a34:	9210      	str	r2, [sp, #64]	; 0x40
   81a36:	442b      	add	r3, r5
   81a38:	9303      	str	r3, [sp, #12]
   81a3a:	7823      	ldrb	r3, [r4, #0]
   81a3c:	2b00      	cmp	r3, #0
   81a3e:	f000 83e5 	beq.w	8220c <_vfiprintf_r+0x894>
   81a42:	2000      	movs	r0, #0
   81a44:	f04f 0300 	mov.w	r3, #0
   81a48:	f104 0801 	add.w	r8, r4, #1
   81a4c:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   81a50:	7862      	ldrb	r2, [r4, #1]
   81a52:	4606      	mov	r6, r0
   81a54:	4605      	mov	r5, r0
   81a56:	4603      	mov	r3, r0
   81a58:	f04f 34ff 	mov.w	r4, #4294967295
   81a5c:	f108 0801 	add.w	r8, r8, #1
   81a60:	f1a2 0120 	sub.w	r1, r2, #32
   81a64:	2958      	cmp	r1, #88	; 0x58
   81a66:	f200 82d9 	bhi.w	8201c <_vfiprintf_r+0x6a4>
   81a6a:	e8df f011 	tbh	[pc, r1, lsl #1]
   81a6e:	0228      	.short	0x0228
   81a70:	02d702d7 	.word	0x02d702d7
   81a74:	02d70230 	.word	0x02d70230
   81a78:	02d702d7 	.word	0x02d702d7
   81a7c:	02d702d7 	.word	0x02d702d7
   81a80:	00a002d7 	.word	0x00a002d7
   81a84:	02d70288 	.word	0x02d70288
   81a88:	02b800a8 	.word	0x02b800a8
   81a8c:	01a602d7 	.word	0x01a602d7
   81a90:	01ab01ab 	.word	0x01ab01ab
   81a94:	01ab01ab 	.word	0x01ab01ab
   81a98:	01ab01ab 	.word	0x01ab01ab
   81a9c:	01ab01ab 	.word	0x01ab01ab
   81aa0:	02d701ab 	.word	0x02d701ab
   81aa4:	02d702d7 	.word	0x02d702d7
   81aa8:	02d702d7 	.word	0x02d702d7
   81aac:	02d702d7 	.word	0x02d702d7
   81ab0:	02d702d7 	.word	0x02d702d7
   81ab4:	01b902d7 	.word	0x01b902d7
   81ab8:	02d702d7 	.word	0x02d702d7
   81abc:	02d702d7 	.word	0x02d702d7
   81ac0:	02d702d7 	.word	0x02d702d7
   81ac4:	02d702d7 	.word	0x02d702d7
   81ac8:	02d702d7 	.word	0x02d702d7
   81acc:	02d7019e 	.word	0x02d7019e
   81ad0:	02d702d7 	.word	0x02d702d7
   81ad4:	02d702d7 	.word	0x02d702d7
   81ad8:	02d701a2 	.word	0x02d701a2
   81adc:	025a02d7 	.word	0x025a02d7
   81ae0:	02d702d7 	.word	0x02d702d7
   81ae4:	02d702d7 	.word	0x02d702d7
   81ae8:	02d702d7 	.word	0x02d702d7
   81aec:	02d702d7 	.word	0x02d702d7
   81af0:	02d702d7 	.word	0x02d702d7
   81af4:	02220261 	.word	0x02220261
   81af8:	02d702d7 	.word	0x02d702d7
   81afc:	027602d7 	.word	0x027602d7
   81b00:	02d70222 	.word	0x02d70222
   81b04:	027b02d7 	.word	0x027b02d7
   81b08:	01fc02d7 	.word	0x01fc02d7
   81b0c:	02100189 	.word	0x02100189
   81b10:	02d702d2 	.word	0x02d702d2
   81b14:	02d70295 	.word	0x02d70295
   81b18:	02d700ad 	.word	0x02d700ad
   81b1c:	023502d7 	.word	0x023502d7
   81b20:	f109 0908 	add.w	r9, r9, #8
   81b24:	9b03      	ldr	r3, [sp, #12]
   81b26:	442b      	add	r3, r5
   81b28:	9303      	str	r3, [sp, #12]
   81b2a:	e786      	b.n	81a3a <_vfiprintf_r+0xc2>
   81b2c:	4659      	mov	r1, fp
   81b2e:	9806      	ldr	r0, [sp, #24]
   81b30:	f000 fdaa 	bl	82688 <__swsetup_r>
   81b34:	bb18      	cbnz	r0, 81b7e <_vfiprintf_r+0x206>
   81b36:	f8bb 100c 	ldrh.w	r1, [fp, #12]
   81b3a:	f001 031a 	and.w	r3, r1, #26
   81b3e:	2b0a      	cmp	r3, #10
   81b40:	f47f af4b 	bne.w	819da <_vfiprintf_r+0x62>
   81b44:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
   81b48:	2b00      	cmp	r3, #0
   81b4a:	f6ff af46 	blt.w	819da <_vfiprintf_r+0x62>
   81b4e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   81b52:	07db      	lsls	r3, r3, #31
   81b54:	d405      	bmi.n	81b62 <_vfiprintf_r+0x1ea>
   81b56:	058f      	lsls	r7, r1, #22
   81b58:	d403      	bmi.n	81b62 <_vfiprintf_r+0x1ea>
   81b5a:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   81b5e:	f001 fabd 	bl	830dc <__retarget_lock_release_recursive>
   81b62:	462b      	mov	r3, r5
   81b64:	4642      	mov	r2, r8
   81b66:	4659      	mov	r1, fp
   81b68:	9806      	ldr	r0, [sp, #24]
   81b6a:	f000 fd49 	bl	82600 <__sbprintf>
   81b6e:	9003      	str	r0, [sp, #12]
   81b70:	9803      	ldr	r0, [sp, #12]
   81b72:	b02d      	add	sp, #180	; 0xb4
   81b74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81b78:	f000 feee 	bl	82958 <__sinit>
   81b7c:	e709      	b.n	81992 <_vfiprintf_r+0x1a>
   81b7e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   81b82:	07d9      	lsls	r1, r3, #31
   81b84:	d404      	bmi.n	81b90 <_vfiprintf_r+0x218>
   81b86:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   81b8a:	059a      	lsls	r2, r3, #22
   81b8c:	f140 84ae 	bpl.w	824ec <_vfiprintf_r+0xb74>
   81b90:	f04f 33ff 	mov.w	r3, #4294967295
   81b94:	9303      	str	r3, [sp, #12]
   81b96:	9803      	ldr	r0, [sp, #12]
   81b98:	b02d      	add	sp, #180	; 0xb4
   81b9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81b9e:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   81ba2:	f001 fa99 	bl	830d8 <__retarget_lock_acquire_recursive>
   81ba6:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
   81baa:	b281      	uxth	r1, r0
   81bac:	e6fb      	b.n	819a6 <_vfiprintf_r+0x2e>
   81bae:	9907      	ldr	r1, [sp, #28]
   81bb0:	460a      	mov	r2, r1
   81bb2:	680d      	ldr	r5, [r1, #0]
   81bb4:	3204      	adds	r2, #4
   81bb6:	2d00      	cmp	r5, #0
   81bb8:	9207      	str	r2, [sp, #28]
   81bba:	da02      	bge.n	81bc2 <_vfiprintf_r+0x24a>
   81bbc:	426d      	negs	r5, r5
   81bbe:	f043 0304 	orr.w	r3, r3, #4
   81bc2:	f898 2000 	ldrb.w	r2, [r8]
   81bc6:	e749      	b.n	81a5c <_vfiprintf_r+0xe4>
   81bc8:	9508      	str	r5, [sp, #32]
   81bca:	069e      	lsls	r6, r3, #26
   81bcc:	f100 845a 	bmi.w	82484 <_vfiprintf_r+0xb0c>
   81bd0:	9907      	ldr	r1, [sp, #28]
   81bd2:	06dd      	lsls	r5, r3, #27
   81bd4:	460a      	mov	r2, r1
   81bd6:	f100 83ef 	bmi.w	823b8 <_vfiprintf_r+0xa40>
   81bda:	0658      	lsls	r0, r3, #25
   81bdc:	f140 83ec 	bpl.w	823b8 <_vfiprintf_r+0xa40>
   81be0:	2700      	movs	r7, #0
   81be2:	2201      	movs	r2, #1
   81be4:	880e      	ldrh	r6, [r1, #0]
   81be6:	3104      	adds	r1, #4
   81be8:	9107      	str	r1, [sp, #28]
   81bea:	f04f 0100 	mov.w	r1, #0
   81bee:	2500      	movs	r5, #0
   81bf0:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
   81bf4:	1c61      	adds	r1, r4, #1
   81bf6:	f000 8117 	beq.w	81e28 <_vfiprintf_r+0x4b0>
   81bfa:	f023 0180 	bic.w	r1, r3, #128	; 0x80
   81bfe:	9102      	str	r1, [sp, #8]
   81c00:	ea56 0107 	orrs.w	r1, r6, r7
   81c04:	f040 8115 	bne.w	81e32 <_vfiprintf_r+0x4ba>
   81c08:	2c00      	cmp	r4, #0
   81c0a:	f040 835b 	bne.w	822c4 <_vfiprintf_r+0x94c>
   81c0e:	2a00      	cmp	r2, #0
   81c10:	f040 83b6 	bne.w	82380 <_vfiprintf_r+0xa08>
   81c14:	f013 0301 	ands.w	r3, r3, #1
   81c18:	9305      	str	r3, [sp, #20]
   81c1a:	f000 8455 	beq.w	824c8 <_vfiprintf_r+0xb50>
   81c1e:	2330      	movs	r3, #48	; 0x30
   81c20:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
   81c24:	f80b 3d41 	strb.w	r3, [fp, #-65]!
   81c28:	9b05      	ldr	r3, [sp, #20]
   81c2a:	42a3      	cmp	r3, r4
   81c2c:	bfb8      	it	lt
   81c2e:	4623      	movlt	r3, r4
   81c30:	9301      	str	r3, [sp, #4]
   81c32:	b10d      	cbz	r5, 81c38 <_vfiprintf_r+0x2c0>
   81c34:	3301      	adds	r3, #1
   81c36:	9301      	str	r3, [sp, #4]
   81c38:	9b02      	ldr	r3, [sp, #8]
   81c3a:	f013 0302 	ands.w	r3, r3, #2
   81c3e:	9309      	str	r3, [sp, #36]	; 0x24
   81c40:	d002      	beq.n	81c48 <_vfiprintf_r+0x2d0>
   81c42:	9b01      	ldr	r3, [sp, #4]
   81c44:	3302      	adds	r3, #2
   81c46:	9301      	str	r3, [sp, #4]
   81c48:	9b02      	ldr	r3, [sp, #8]
   81c4a:	f013 0384 	ands.w	r3, r3, #132	; 0x84
   81c4e:	930a      	str	r3, [sp, #40]	; 0x28
   81c50:	f040 8215 	bne.w	8207e <_vfiprintf_r+0x706>
   81c54:	9b08      	ldr	r3, [sp, #32]
   81c56:	9a01      	ldr	r2, [sp, #4]
   81c58:	1a9d      	subs	r5, r3, r2
   81c5a:	2d00      	cmp	r5, #0
   81c5c:	f340 820f 	ble.w	8207e <_vfiprintf_r+0x706>
   81c60:	2d10      	cmp	r5, #16
   81c62:	f340 8484 	ble.w	8256e <_vfiprintf_r+0xbf6>
   81c66:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81c68:	46ce      	mov	lr, r9
   81c6a:	2710      	movs	r7, #16
   81c6c:	46a1      	mov	r9, r4
   81c6e:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81c70:	4ec5      	ldr	r6, [pc, #788]	; (81f88 <_vfiprintf_r+0x610>)
   81c72:	4619      	mov	r1, r3
   81c74:	9c06      	ldr	r4, [sp, #24]
   81c76:	e007      	b.n	81c88 <_vfiprintf_r+0x310>
   81c78:	f101 0c02 	add.w	ip, r1, #2
   81c7c:	4601      	mov	r1, r0
   81c7e:	f10e 0e08 	add.w	lr, lr, #8
   81c82:	3d10      	subs	r5, #16
   81c84:	2d10      	cmp	r5, #16
   81c86:	dd11      	ble.n	81cac <_vfiprintf_r+0x334>
   81c88:	1c48      	adds	r0, r1, #1
   81c8a:	3210      	adds	r2, #16
   81c8c:	2807      	cmp	r0, #7
   81c8e:	9211      	str	r2, [sp, #68]	; 0x44
   81c90:	e88e 00c0 	stmia.w	lr, {r6, r7}
   81c94:	9010      	str	r0, [sp, #64]	; 0x40
   81c96:	ddef      	ble.n	81c78 <_vfiprintf_r+0x300>
   81c98:	2a00      	cmp	r2, #0
   81c9a:	f040 81d9 	bne.w	82050 <_vfiprintf_r+0x6d8>
   81c9e:	3d10      	subs	r5, #16
   81ca0:	2d10      	cmp	r5, #16
   81ca2:	4611      	mov	r1, r2
   81ca4:	f04f 0c01 	mov.w	ip, #1
   81ca8:	46d6      	mov	lr, sl
   81caa:	dced      	bgt.n	81c88 <_vfiprintf_r+0x310>
   81cac:	464c      	mov	r4, r9
   81cae:	4661      	mov	r1, ip
   81cb0:	46f1      	mov	r9, lr
   81cb2:	442a      	add	r2, r5
   81cb4:	2907      	cmp	r1, #7
   81cb6:	9211      	str	r2, [sp, #68]	; 0x44
   81cb8:	f8c9 6000 	str.w	r6, [r9]
   81cbc:	f8c9 5004 	str.w	r5, [r9, #4]
   81cc0:	9110      	str	r1, [sp, #64]	; 0x40
   81cc2:	f300 82eb 	bgt.w	8229c <_vfiprintf_r+0x924>
   81cc6:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81cca:	f109 0908 	add.w	r9, r9, #8
   81cce:	1c48      	adds	r0, r1, #1
   81cd0:	2d00      	cmp	r5, #0
   81cd2:	f040 81dc 	bne.w	8208e <_vfiprintf_r+0x716>
   81cd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81cd8:	2b00      	cmp	r3, #0
   81cda:	f000 81f6 	beq.w	820ca <_vfiprintf_r+0x752>
   81cde:	2102      	movs	r1, #2
   81ce0:	ab0e      	add	r3, sp, #56	; 0x38
   81ce2:	440a      	add	r2, r1
   81ce4:	2807      	cmp	r0, #7
   81ce6:	9211      	str	r2, [sp, #68]	; 0x44
   81ce8:	9010      	str	r0, [sp, #64]	; 0x40
   81cea:	f8c9 1004 	str.w	r1, [r9, #4]
   81cee:	f8c9 3000 	str.w	r3, [r9]
   81cf2:	f340 81e6 	ble.w	820c2 <_vfiprintf_r+0x74a>
   81cf6:	2a00      	cmp	r2, #0
   81cf8:	f040 8395 	bne.w	82426 <_vfiprintf_r+0xaae>
   81cfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81cfe:	2001      	movs	r0, #1
   81d00:	2b80      	cmp	r3, #128	; 0x80
   81d02:	4611      	mov	r1, r2
   81d04:	46d1      	mov	r9, sl
   81d06:	f040 81e4 	bne.w	820d2 <_vfiprintf_r+0x75a>
   81d0a:	9b08      	ldr	r3, [sp, #32]
   81d0c:	9d01      	ldr	r5, [sp, #4]
   81d0e:	1b5e      	subs	r6, r3, r5
   81d10:	2e00      	cmp	r6, #0
   81d12:	f340 81de 	ble.w	820d2 <_vfiprintf_r+0x75a>
   81d16:	2e10      	cmp	r6, #16
   81d18:	f340 843c 	ble.w	82594 <_vfiprintf_r+0xc1c>
   81d1c:	46cc      	mov	ip, r9
   81d1e:	2710      	movs	r7, #16
   81d20:	46a1      	mov	r9, r4
   81d22:	4d9a      	ldr	r5, [pc, #616]	; (81f8c <_vfiprintf_r+0x614>)
   81d24:	9c06      	ldr	r4, [sp, #24]
   81d26:	e007      	b.n	81d38 <_vfiprintf_r+0x3c0>
   81d28:	f101 0e02 	add.w	lr, r1, #2
   81d2c:	4601      	mov	r1, r0
   81d2e:	f10c 0c08 	add.w	ip, ip, #8
   81d32:	3e10      	subs	r6, #16
   81d34:	2e10      	cmp	r6, #16
   81d36:	dd11      	ble.n	81d5c <_vfiprintf_r+0x3e4>
   81d38:	1c48      	adds	r0, r1, #1
   81d3a:	3210      	adds	r2, #16
   81d3c:	2807      	cmp	r0, #7
   81d3e:	9211      	str	r2, [sp, #68]	; 0x44
   81d40:	e88c 00a0 	stmia.w	ip, {r5, r7}
   81d44:	9010      	str	r0, [sp, #64]	; 0x40
   81d46:	ddef      	ble.n	81d28 <_vfiprintf_r+0x3b0>
   81d48:	2a00      	cmp	r2, #0
   81d4a:	f040 829b 	bne.w	82284 <_vfiprintf_r+0x90c>
   81d4e:	3e10      	subs	r6, #16
   81d50:	2e10      	cmp	r6, #16
   81d52:	f04f 0e01 	mov.w	lr, #1
   81d56:	4611      	mov	r1, r2
   81d58:	46d4      	mov	ip, sl
   81d5a:	dced      	bgt.n	81d38 <_vfiprintf_r+0x3c0>
   81d5c:	464c      	mov	r4, r9
   81d5e:	46e1      	mov	r9, ip
   81d60:	4432      	add	r2, r6
   81d62:	f1be 0f07 	cmp.w	lr, #7
   81d66:	9211      	str	r2, [sp, #68]	; 0x44
   81d68:	e889 0060 	stmia.w	r9, {r5, r6}
   81d6c:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
   81d70:	f300 8366 	bgt.w	82440 <_vfiprintf_r+0xac8>
   81d74:	f109 0908 	add.w	r9, r9, #8
   81d78:	f10e 0001 	add.w	r0, lr, #1
   81d7c:	4671      	mov	r1, lr
   81d7e:	e1a8      	b.n	820d2 <_vfiprintf_r+0x75a>
   81d80:	9508      	str	r5, [sp, #32]
   81d82:	f013 0220 	ands.w	r2, r3, #32
   81d86:	f040 8389 	bne.w	8249c <_vfiprintf_r+0xb24>
   81d8a:	f013 0110 	ands.w	r1, r3, #16
   81d8e:	f040 8319 	bne.w	823c4 <_vfiprintf_r+0xa4c>
   81d92:	f013 0240 	ands.w	r2, r3, #64	; 0x40
   81d96:	f000 8315 	beq.w	823c4 <_vfiprintf_r+0xa4c>
   81d9a:	9807      	ldr	r0, [sp, #28]
   81d9c:	460a      	mov	r2, r1
   81d9e:	4601      	mov	r1, r0
   81da0:	3104      	adds	r1, #4
   81da2:	8806      	ldrh	r6, [r0, #0]
   81da4:	2700      	movs	r7, #0
   81da6:	9107      	str	r1, [sp, #28]
   81da8:	e71f      	b.n	81bea <_vfiprintf_r+0x272>
   81daa:	9508      	str	r5, [sp, #32]
   81dac:	f043 0310 	orr.w	r3, r3, #16
   81db0:	e7e7      	b.n	81d82 <_vfiprintf_r+0x40a>
   81db2:	9508      	str	r5, [sp, #32]
   81db4:	f043 0310 	orr.w	r3, r3, #16
   81db8:	e707      	b.n	81bca <_vfiprintf_r+0x252>
   81dba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   81dbe:	f898 2000 	ldrb.w	r2, [r8]
   81dc2:	e64b      	b.n	81a5c <_vfiprintf_r+0xe4>
   81dc4:	2500      	movs	r5, #0
   81dc6:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   81dca:	f818 2b01 	ldrb.w	r2, [r8], #1
   81dce:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   81dd2:	eb01 0545 	add.w	r5, r1, r5, lsl #1
   81dd6:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   81dda:	2909      	cmp	r1, #9
   81ddc:	d9f5      	bls.n	81dca <_vfiprintf_r+0x452>
   81dde:	e63f      	b.n	81a60 <_vfiprintf_r+0xe8>
   81de0:	9508      	str	r5, [sp, #32]
   81de2:	2800      	cmp	r0, #0
   81de4:	f040 8402 	bne.w	825ec <_vfiprintf_r+0xc74>
   81de8:	f043 0310 	orr.w	r3, r3, #16
   81dec:	069e      	lsls	r6, r3, #26
   81dee:	f100 833d 	bmi.w	8246c <_vfiprintf_r+0xaf4>
   81df2:	9907      	ldr	r1, [sp, #28]
   81df4:	06dd      	lsls	r5, r3, #27
   81df6:	460a      	mov	r2, r1
   81df8:	f100 82f0 	bmi.w	823dc <_vfiprintf_r+0xa64>
   81dfc:	0658      	lsls	r0, r3, #25
   81dfe:	f140 82ed 	bpl.w	823dc <_vfiprintf_r+0xa64>
   81e02:	f9b1 6000 	ldrsh.w	r6, [r1]
   81e06:	3204      	adds	r2, #4
   81e08:	17f7      	asrs	r7, r6, #31
   81e0a:	4630      	mov	r0, r6
   81e0c:	4639      	mov	r1, r7
   81e0e:	9207      	str	r2, [sp, #28]
   81e10:	2800      	cmp	r0, #0
   81e12:	f171 0200 	sbcs.w	r2, r1, #0
   81e16:	f2c0 835a 	blt.w	824ce <_vfiprintf_r+0xb56>
   81e1a:	1c61      	adds	r1, r4, #1
   81e1c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81e20:	f04f 0201 	mov.w	r2, #1
   81e24:	f47f aee9 	bne.w	81bfa <_vfiprintf_r+0x282>
   81e28:	ea56 0107 	orrs.w	r1, r6, r7
   81e2c:	f000 824b 	beq.w	822c6 <_vfiprintf_r+0x94e>
   81e30:	9302      	str	r3, [sp, #8]
   81e32:	2a01      	cmp	r2, #1
   81e34:	f000 828a 	beq.w	8234c <_vfiprintf_r+0x9d4>
   81e38:	2a02      	cmp	r2, #2
   81e3a:	f040 825a 	bne.w	822f2 <_vfiprintf_r+0x97a>
   81e3e:	46d3      	mov	fp, sl
   81e40:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81e42:	0933      	lsrs	r3, r6, #4
   81e44:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
   81e48:	0939      	lsrs	r1, r7, #4
   81e4a:	f006 020f 	and.w	r2, r6, #15
   81e4e:	460f      	mov	r7, r1
   81e50:	461e      	mov	r6, r3
   81e52:	5c83      	ldrb	r3, [r0, r2]
   81e54:	f80b 3d01 	strb.w	r3, [fp, #-1]!
   81e58:	ea56 0307 	orrs.w	r3, r6, r7
   81e5c:	d1f1      	bne.n	81e42 <_vfiprintf_r+0x4ca>
   81e5e:	ebaa 030b 	sub.w	r3, sl, fp
   81e62:	9305      	str	r3, [sp, #20]
   81e64:	e6e0      	b.n	81c28 <_vfiprintf_r+0x2b0>
   81e66:	2800      	cmp	r0, #0
   81e68:	f040 83bd 	bne.w	825e6 <_vfiprintf_r+0xc6e>
   81e6c:	0699      	lsls	r1, r3, #26
   81e6e:	f100 8359 	bmi.w	82524 <_vfiprintf_r+0xbac>
   81e72:	06da      	lsls	r2, r3, #27
   81e74:	f100 80e5 	bmi.w	82042 <_vfiprintf_r+0x6ca>
   81e78:	065b      	lsls	r3, r3, #25
   81e7a:	f140 80e2 	bpl.w	82042 <_vfiprintf_r+0x6ca>
   81e7e:	9a07      	ldr	r2, [sp, #28]
   81e80:	6813      	ldr	r3, [r2, #0]
   81e82:	3204      	adds	r2, #4
   81e84:	9207      	str	r2, [sp, #28]
   81e86:	f8bd 200c 	ldrh.w	r2, [sp, #12]
   81e8a:	801a      	strh	r2, [r3, #0]
   81e8c:	e5b1      	b.n	819f2 <_vfiprintf_r+0x7a>
   81e8e:	2278      	movs	r2, #120	; 0x78
   81e90:	2130      	movs	r1, #48	; 0x30
   81e92:	9508      	str	r5, [sp, #32]
   81e94:	9d07      	ldr	r5, [sp, #28]
   81e96:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
   81e9a:	1d2a      	adds	r2, r5, #4
   81e9c:	9207      	str	r2, [sp, #28]
   81e9e:	4a3c      	ldr	r2, [pc, #240]	; (81f90 <_vfiprintf_r+0x618>)
   81ea0:	682e      	ldr	r6, [r5, #0]
   81ea2:	920b      	str	r2, [sp, #44]	; 0x2c
   81ea4:	f043 0302 	orr.w	r3, r3, #2
   81ea8:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
   81eac:	2700      	movs	r7, #0
   81eae:	2202      	movs	r2, #2
   81eb0:	e69b      	b.n	81bea <_vfiprintf_r+0x272>
   81eb2:	9508      	str	r5, [sp, #32]
   81eb4:	2800      	cmp	r0, #0
   81eb6:	d099      	beq.n	81dec <_vfiprintf_r+0x474>
   81eb8:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   81ebc:	e796      	b.n	81dec <_vfiprintf_r+0x474>
   81ebe:	f898 2000 	ldrb.w	r2, [r8]
   81ec2:	2e00      	cmp	r6, #0
   81ec4:	f47f adca 	bne.w	81a5c <_vfiprintf_r+0xe4>
   81ec8:	2001      	movs	r0, #1
   81eca:	2620      	movs	r6, #32
   81ecc:	e5c6      	b.n	81a5c <_vfiprintf_r+0xe4>
   81ece:	f043 0301 	orr.w	r3, r3, #1
   81ed2:	f898 2000 	ldrb.w	r2, [r8]
   81ed6:	e5c1      	b.n	81a5c <_vfiprintf_r+0xe4>
   81ed8:	9508      	str	r5, [sp, #32]
   81eda:	2800      	cmp	r0, #0
   81edc:	f040 8380 	bne.w	825e0 <_vfiprintf_r+0xc68>
   81ee0:	492b      	ldr	r1, [pc, #172]	; (81f90 <_vfiprintf_r+0x618>)
   81ee2:	910b      	str	r1, [sp, #44]	; 0x2c
   81ee4:	069f      	lsls	r7, r3, #26
   81ee6:	f100 82e5 	bmi.w	824b4 <_vfiprintf_r+0xb3c>
   81eea:	9807      	ldr	r0, [sp, #28]
   81eec:	06de      	lsls	r6, r3, #27
   81eee:	4601      	mov	r1, r0
   81ef0:	f100 826f 	bmi.w	823d2 <_vfiprintf_r+0xa5a>
   81ef4:	065d      	lsls	r5, r3, #25
   81ef6:	f140 826c 	bpl.w	823d2 <_vfiprintf_r+0xa5a>
   81efa:	2700      	movs	r7, #0
   81efc:	3104      	adds	r1, #4
   81efe:	8806      	ldrh	r6, [r0, #0]
   81f00:	9107      	str	r1, [sp, #28]
   81f02:	07d8      	lsls	r0, r3, #31
   81f04:	f140 8220 	bpl.w	82348 <_vfiprintf_r+0x9d0>
   81f08:	ea56 0107 	orrs.w	r1, r6, r7
   81f0c:	f000 821c 	beq.w	82348 <_vfiprintf_r+0x9d0>
   81f10:	2130      	movs	r1, #48	; 0x30
   81f12:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
   81f16:	f043 0302 	orr.w	r3, r3, #2
   81f1a:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
   81f1e:	2202      	movs	r2, #2
   81f20:	e663      	b.n	81bea <_vfiprintf_r+0x272>
   81f22:	9508      	str	r5, [sp, #32]
   81f24:	2800      	cmp	r0, #0
   81f26:	f040 8355 	bne.w	825d4 <_vfiprintf_r+0xc5c>
   81f2a:	491a      	ldr	r1, [pc, #104]	; (81f94 <_vfiprintf_r+0x61c>)
   81f2c:	910b      	str	r1, [sp, #44]	; 0x2c
   81f2e:	e7d9      	b.n	81ee4 <_vfiprintf_r+0x56c>
   81f30:	2201      	movs	r2, #1
   81f32:	9807      	ldr	r0, [sp, #28]
   81f34:	4611      	mov	r1, r2
   81f36:	9201      	str	r2, [sp, #4]
   81f38:	6802      	ldr	r2, [r0, #0]
   81f3a:	f04f 0400 	mov.w	r4, #0
   81f3e:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   81f42:	4602      	mov	r2, r0
   81f44:	3204      	adds	r2, #4
   81f46:	9508      	str	r5, [sp, #32]
   81f48:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
   81f4c:	9105      	str	r1, [sp, #20]
   81f4e:	9207      	str	r2, [sp, #28]
   81f50:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
   81f54:	9302      	str	r3, [sp, #8]
   81f56:	2400      	movs	r4, #0
   81f58:	e66e      	b.n	81c38 <_vfiprintf_r+0x2c0>
   81f5a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81f5e:	f898 2000 	ldrb.w	r2, [r8]
   81f62:	e57b      	b.n	81a5c <_vfiprintf_r+0xe4>
   81f64:	f898 2000 	ldrb.w	r2, [r8]
   81f68:	2a6c      	cmp	r2, #108	; 0x6c
   81f6a:	bf03      	ittte	eq
   81f6c:	f898 2001 	ldrbeq.w	r2, [r8, #1]
   81f70:	f043 0320 	orreq.w	r3, r3, #32
   81f74:	f108 0801 	addeq.w	r8, r8, #1
   81f78:	f043 0310 	orrne.w	r3, r3, #16
   81f7c:	e56e      	b.n	81a5c <_vfiprintf_r+0xe4>
   81f7e:	f898 2000 	ldrb.w	r2, [r8]
   81f82:	2001      	movs	r0, #1
   81f84:	262b      	movs	r6, #43	; 0x2b
   81f86:	e569      	b.n	81a5c <_vfiprintf_r+0xe4>
   81f88:	0008453c 	.word	0x0008453c
   81f8c:	0008454c 	.word	0x0008454c
   81f90:	00084520 	.word	0x00084520
   81f94:	0008450c 	.word	0x0008450c
   81f98:	f04f 0200 	mov.w	r2, #0
   81f9c:	9907      	ldr	r1, [sp, #28]
   81f9e:	9508      	str	r5, [sp, #32]
   81fa0:	f8d1 b000 	ldr.w	fp, [r1]
   81fa4:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   81fa8:	1d0d      	adds	r5, r1, #4
   81faa:	f1bb 0f00 	cmp.w	fp, #0
   81fae:	f000 82e4 	beq.w	8257a <_vfiprintf_r+0xc02>
   81fb2:	1c67      	adds	r7, r4, #1
   81fb4:	f000 82c3 	beq.w	8253e <_vfiprintf_r+0xbc6>
   81fb8:	4622      	mov	r2, r4
   81fba:	2100      	movs	r1, #0
   81fbc:	4658      	mov	r0, fp
   81fbe:	9301      	str	r3, [sp, #4]
   81fc0:	f001 fbc6 	bl	83750 <memchr>
   81fc4:	9b01      	ldr	r3, [sp, #4]
   81fc6:	2800      	cmp	r0, #0
   81fc8:	f000 82e8 	beq.w	8259c <_vfiprintf_r+0xc24>
   81fcc:	eba0 020b 	sub.w	r2, r0, fp
   81fd0:	9507      	str	r5, [sp, #28]
   81fd2:	9205      	str	r2, [sp, #20]
   81fd4:	9302      	str	r3, [sp, #8]
   81fd6:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81fda:	2400      	movs	r4, #0
   81fdc:	e624      	b.n	81c28 <_vfiprintf_r+0x2b0>
   81fde:	f898 2000 	ldrb.w	r2, [r8]
   81fe2:	f108 0701 	add.w	r7, r8, #1
   81fe6:	2a2a      	cmp	r2, #42	; 0x2a
   81fe8:	f000 82e9 	beq.w	825be <_vfiprintf_r+0xc46>
   81fec:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   81ff0:	2909      	cmp	r1, #9
   81ff2:	46b8      	mov	r8, r7
   81ff4:	f04f 0400 	mov.w	r4, #0
   81ff8:	f63f ad32 	bhi.w	81a60 <_vfiprintf_r+0xe8>
   81ffc:	f818 2b01 	ldrb.w	r2, [r8], #1
   82000:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   82004:	eb01 0444 	add.w	r4, r1, r4, lsl #1
   82008:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   8200c:	2909      	cmp	r1, #9
   8200e:	d9f5      	bls.n	81ffc <_vfiprintf_r+0x684>
   82010:	e526      	b.n	81a60 <_vfiprintf_r+0xe8>
   82012:	f043 0320 	orr.w	r3, r3, #32
   82016:	f898 2000 	ldrb.w	r2, [r8]
   8201a:	e51f      	b.n	81a5c <_vfiprintf_r+0xe4>
   8201c:	9508      	str	r5, [sp, #32]
   8201e:	2800      	cmp	r0, #0
   82020:	f040 82db 	bne.w	825da <_vfiprintf_r+0xc62>
   82024:	2a00      	cmp	r2, #0
   82026:	f000 80f1 	beq.w	8220c <_vfiprintf_r+0x894>
   8202a:	2101      	movs	r1, #1
   8202c:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   82030:	f04f 0200 	mov.w	r2, #0
   82034:	9101      	str	r1, [sp, #4]
   82036:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   8203a:	9105      	str	r1, [sp, #20]
   8203c:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
   82040:	e788      	b.n	81f54 <_vfiprintf_r+0x5dc>
   82042:	9a07      	ldr	r2, [sp, #28]
   82044:	6813      	ldr	r3, [r2, #0]
   82046:	3204      	adds	r2, #4
   82048:	9207      	str	r2, [sp, #28]
   8204a:	9a03      	ldr	r2, [sp, #12]
   8204c:	601a      	str	r2, [r3, #0]
   8204e:	e4d0      	b.n	819f2 <_vfiprintf_r+0x7a>
   82050:	aa0f      	add	r2, sp, #60	; 0x3c
   82052:	9904      	ldr	r1, [sp, #16]
   82054:	4620      	mov	r0, r4
   82056:	f7ff fc4f 	bl	818f8 <__sprint_r.part.0>
   8205a:	2800      	cmp	r0, #0
   8205c:	f040 8143 	bne.w	822e6 <_vfiprintf_r+0x96e>
   82060:	9910      	ldr	r1, [sp, #64]	; 0x40
   82062:	46d6      	mov	lr, sl
   82064:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82066:	f101 0c01 	add.w	ip, r1, #1
   8206a:	e60a      	b.n	81c82 <_vfiprintf_r+0x30a>
   8206c:	aa0f      	add	r2, sp, #60	; 0x3c
   8206e:	9904      	ldr	r1, [sp, #16]
   82070:	9806      	ldr	r0, [sp, #24]
   82072:	f7ff fc41 	bl	818f8 <__sprint_r.part.0>
   82076:	2800      	cmp	r0, #0
   82078:	f040 8135 	bne.w	822e6 <_vfiprintf_r+0x96e>
   8207c:	46d1      	mov	r9, sl
   8207e:	9910      	ldr	r1, [sp, #64]	; 0x40
   82080:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   82084:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82086:	1c48      	adds	r0, r1, #1
   82088:	2d00      	cmp	r5, #0
   8208a:	f43f ae24 	beq.w	81cd6 <_vfiprintf_r+0x35e>
   8208e:	2101      	movs	r1, #1
   82090:	f10d 0537 	add.w	r5, sp, #55	; 0x37
   82094:	440a      	add	r2, r1
   82096:	2807      	cmp	r0, #7
   82098:	9211      	str	r2, [sp, #68]	; 0x44
   8209a:	9010      	str	r0, [sp, #64]	; 0x40
   8209c:	f8c9 1004 	str.w	r1, [r9, #4]
   820a0:	f8c9 5000 	str.w	r5, [r9]
   820a4:	f340 8109 	ble.w	822ba <_vfiprintf_r+0x942>
   820a8:	2a00      	cmp	r2, #0
   820aa:	f040 81af 	bne.w	8240c <_vfiprintf_r+0xa94>
   820ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
   820b0:	2b00      	cmp	r3, #0
   820b2:	f43f ae23 	beq.w	81cfc <_vfiprintf_r+0x384>
   820b6:	2202      	movs	r2, #2
   820b8:	4608      	mov	r0, r1
   820ba:	46d1      	mov	r9, sl
   820bc:	ab0e      	add	r3, sp, #56	; 0x38
   820be:	921d      	str	r2, [sp, #116]	; 0x74
   820c0:	931c      	str	r3, [sp, #112]	; 0x70
   820c2:	4601      	mov	r1, r0
   820c4:	f109 0908 	add.w	r9, r9, #8
   820c8:	3001      	adds	r0, #1
   820ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   820cc:	2b80      	cmp	r3, #128	; 0x80
   820ce:	f43f ae1c 	beq.w	81d0a <_vfiprintf_r+0x392>
   820d2:	9b05      	ldr	r3, [sp, #20]
   820d4:	1ae4      	subs	r4, r4, r3
   820d6:	2c00      	cmp	r4, #0
   820d8:	dd2f      	ble.n	8213a <_vfiprintf_r+0x7c2>
   820da:	2c10      	cmp	r4, #16
   820dc:	f340 8220 	ble.w	82520 <_vfiprintf_r+0xba8>
   820e0:	46ce      	mov	lr, r9
   820e2:	2610      	movs	r6, #16
   820e4:	4db2      	ldr	r5, [pc, #712]	; (823b0 <_vfiprintf_r+0xa38>)
   820e6:	9f06      	ldr	r7, [sp, #24]
   820e8:	f8dd 9010 	ldr.w	r9, [sp, #16]
   820ec:	e006      	b.n	820fc <_vfiprintf_r+0x784>
   820ee:	1c88      	adds	r0, r1, #2
   820f0:	4619      	mov	r1, r3
   820f2:	f10e 0e08 	add.w	lr, lr, #8
   820f6:	3c10      	subs	r4, #16
   820f8:	2c10      	cmp	r4, #16
   820fa:	dd10      	ble.n	8211e <_vfiprintf_r+0x7a6>
   820fc:	1c4b      	adds	r3, r1, #1
   820fe:	3210      	adds	r2, #16
   82100:	2b07      	cmp	r3, #7
   82102:	9211      	str	r2, [sp, #68]	; 0x44
   82104:	e88e 0060 	stmia.w	lr, {r5, r6}
   82108:	9310      	str	r3, [sp, #64]	; 0x40
   8210a:	ddf0      	ble.n	820ee <_vfiprintf_r+0x776>
   8210c:	2a00      	cmp	r2, #0
   8210e:	d165      	bne.n	821dc <_vfiprintf_r+0x864>
   82110:	3c10      	subs	r4, #16
   82112:	2c10      	cmp	r4, #16
   82114:	f04f 0001 	mov.w	r0, #1
   82118:	4611      	mov	r1, r2
   8211a:	46d6      	mov	lr, sl
   8211c:	dcee      	bgt.n	820fc <_vfiprintf_r+0x784>
   8211e:	46f1      	mov	r9, lr
   82120:	4422      	add	r2, r4
   82122:	2807      	cmp	r0, #7
   82124:	9211      	str	r2, [sp, #68]	; 0x44
   82126:	f8c9 5000 	str.w	r5, [r9]
   8212a:	f8c9 4004 	str.w	r4, [r9, #4]
   8212e:	9010      	str	r0, [sp, #64]	; 0x40
   82130:	f300 8085 	bgt.w	8223e <_vfiprintf_r+0x8c6>
   82134:	f109 0908 	add.w	r9, r9, #8
   82138:	3001      	adds	r0, #1
   8213a:	9905      	ldr	r1, [sp, #20]
   8213c:	2807      	cmp	r0, #7
   8213e:	440a      	add	r2, r1
   82140:	9211      	str	r2, [sp, #68]	; 0x44
   82142:	f8c9 b000 	str.w	fp, [r9]
   82146:	f8c9 1004 	str.w	r1, [r9, #4]
   8214a:	9010      	str	r0, [sp, #64]	; 0x40
   8214c:	f340 8082 	ble.w	82254 <_vfiprintf_r+0x8dc>
   82150:	2a00      	cmp	r2, #0
   82152:	f040 8118 	bne.w	82386 <_vfiprintf_r+0xa0e>
   82156:	9b02      	ldr	r3, [sp, #8]
   82158:	9210      	str	r2, [sp, #64]	; 0x40
   8215a:	0758      	lsls	r0, r3, #29
   8215c:	d535      	bpl.n	821ca <_vfiprintf_r+0x852>
   8215e:	9b08      	ldr	r3, [sp, #32]
   82160:	9901      	ldr	r1, [sp, #4]
   82162:	1a5c      	subs	r4, r3, r1
   82164:	2c00      	cmp	r4, #0
   82166:	f340 80e7 	ble.w	82338 <_vfiprintf_r+0x9c0>
   8216a:	46d1      	mov	r9, sl
   8216c:	2c10      	cmp	r4, #16
   8216e:	f340 820d 	ble.w	8258c <_vfiprintf_r+0xc14>
   82172:	2510      	movs	r5, #16
   82174:	9910      	ldr	r1, [sp, #64]	; 0x40
   82176:	4e8f      	ldr	r6, [pc, #572]	; (823b4 <_vfiprintf_r+0xa3c>)
   82178:	9f06      	ldr	r7, [sp, #24]
   8217a:	f8dd b010 	ldr.w	fp, [sp, #16]
   8217e:	e006      	b.n	8218e <_vfiprintf_r+0x816>
   82180:	1c88      	adds	r0, r1, #2
   82182:	4619      	mov	r1, r3
   82184:	f109 0908 	add.w	r9, r9, #8
   82188:	3c10      	subs	r4, #16
   8218a:	2c10      	cmp	r4, #16
   8218c:	dd11      	ble.n	821b2 <_vfiprintf_r+0x83a>
   8218e:	1c4b      	adds	r3, r1, #1
   82190:	3210      	adds	r2, #16
   82192:	2b07      	cmp	r3, #7
   82194:	9211      	str	r2, [sp, #68]	; 0x44
   82196:	f8c9 6000 	str.w	r6, [r9]
   8219a:	f8c9 5004 	str.w	r5, [r9, #4]
   8219e:	9310      	str	r3, [sp, #64]	; 0x40
   821a0:	ddee      	ble.n	82180 <_vfiprintf_r+0x808>
   821a2:	bb42      	cbnz	r2, 821f6 <_vfiprintf_r+0x87e>
   821a4:	3c10      	subs	r4, #16
   821a6:	2c10      	cmp	r4, #16
   821a8:	f04f 0001 	mov.w	r0, #1
   821ac:	4611      	mov	r1, r2
   821ae:	46d1      	mov	r9, sl
   821b0:	dced      	bgt.n	8218e <_vfiprintf_r+0x816>
   821b2:	4422      	add	r2, r4
   821b4:	2807      	cmp	r0, #7
   821b6:	9211      	str	r2, [sp, #68]	; 0x44
   821b8:	f8c9 6000 	str.w	r6, [r9]
   821bc:	f8c9 4004 	str.w	r4, [r9, #4]
   821c0:	9010      	str	r0, [sp, #64]	; 0x40
   821c2:	dd51      	ble.n	82268 <_vfiprintf_r+0x8f0>
   821c4:	2a00      	cmp	r2, #0
   821c6:	f040 819a 	bne.w	824fe <_vfiprintf_r+0xb86>
   821ca:	9b03      	ldr	r3, [sp, #12]
   821cc:	9a08      	ldr	r2, [sp, #32]
   821ce:	9901      	ldr	r1, [sp, #4]
   821d0:	428a      	cmp	r2, r1
   821d2:	bfac      	ite	ge
   821d4:	189b      	addge	r3, r3, r2
   821d6:	185b      	addlt	r3, r3, r1
   821d8:	9303      	str	r3, [sp, #12]
   821da:	e04e      	b.n	8227a <_vfiprintf_r+0x902>
   821dc:	aa0f      	add	r2, sp, #60	; 0x3c
   821de:	4649      	mov	r1, r9
   821e0:	4638      	mov	r0, r7
   821e2:	f7ff fb89 	bl	818f8 <__sprint_r.part.0>
   821e6:	2800      	cmp	r0, #0
   821e8:	f040 813e 	bne.w	82468 <_vfiprintf_r+0xaf0>
   821ec:	9910      	ldr	r1, [sp, #64]	; 0x40
   821ee:	46d6      	mov	lr, sl
   821f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
   821f2:	1c48      	adds	r0, r1, #1
   821f4:	e77f      	b.n	820f6 <_vfiprintf_r+0x77e>
   821f6:	aa0f      	add	r2, sp, #60	; 0x3c
   821f8:	4659      	mov	r1, fp
   821fa:	4638      	mov	r0, r7
   821fc:	f7ff fb7c 	bl	818f8 <__sprint_r.part.0>
   82200:	b960      	cbnz	r0, 8221c <_vfiprintf_r+0x8a4>
   82202:	9910      	ldr	r1, [sp, #64]	; 0x40
   82204:	46d1      	mov	r9, sl
   82206:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82208:	1c48      	adds	r0, r1, #1
   8220a:	e7bd      	b.n	82188 <_vfiprintf_r+0x810>
   8220c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8220e:	f8dd b010 	ldr.w	fp, [sp, #16]
   82212:	2b00      	cmp	r3, #0
   82214:	f040 81ca 	bne.w	825ac <_vfiprintf_r+0xc34>
   82218:	2300      	movs	r3, #0
   8221a:	9310      	str	r3, [sp, #64]	; 0x40
   8221c:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   82220:	f013 0f01 	tst.w	r3, #1
   82224:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   82228:	d102      	bne.n	82230 <_vfiprintf_r+0x8b8>
   8222a:	059a      	lsls	r2, r3, #22
   8222c:	f140 80dd 	bpl.w	823ea <_vfiprintf_r+0xa72>
   82230:	065b      	lsls	r3, r3, #25
   82232:	f53f acad 	bmi.w	81b90 <_vfiprintf_r+0x218>
   82236:	9803      	ldr	r0, [sp, #12]
   82238:	b02d      	add	sp, #180	; 0xb4
   8223a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8223e:	2a00      	cmp	r2, #0
   82240:	f040 8105 	bne.w	8244e <_vfiprintf_r+0xad6>
   82244:	2301      	movs	r3, #1
   82246:	46d1      	mov	r9, sl
   82248:	9a05      	ldr	r2, [sp, #20]
   8224a:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
   8224e:	921d      	str	r2, [sp, #116]	; 0x74
   82250:	9211      	str	r2, [sp, #68]	; 0x44
   82252:	9310      	str	r3, [sp, #64]	; 0x40
   82254:	f109 0908 	add.w	r9, r9, #8
   82258:	9b02      	ldr	r3, [sp, #8]
   8225a:	0759      	lsls	r1, r3, #29
   8225c:	d504      	bpl.n	82268 <_vfiprintf_r+0x8f0>
   8225e:	9b08      	ldr	r3, [sp, #32]
   82260:	9901      	ldr	r1, [sp, #4]
   82262:	1a5c      	subs	r4, r3, r1
   82264:	2c00      	cmp	r4, #0
   82266:	dc81      	bgt.n	8216c <_vfiprintf_r+0x7f4>
   82268:	9b03      	ldr	r3, [sp, #12]
   8226a:	9908      	ldr	r1, [sp, #32]
   8226c:	9801      	ldr	r0, [sp, #4]
   8226e:	4281      	cmp	r1, r0
   82270:	bfac      	ite	ge
   82272:	185b      	addge	r3, r3, r1
   82274:	181b      	addlt	r3, r3, r0
   82276:	9303      	str	r3, [sp, #12]
   82278:	bb72      	cbnz	r2, 822d8 <_vfiprintf_r+0x960>
   8227a:	2300      	movs	r3, #0
   8227c:	46d1      	mov	r9, sl
   8227e:	9310      	str	r3, [sp, #64]	; 0x40
   82280:	f7ff bbb7 	b.w	819f2 <_vfiprintf_r+0x7a>
   82284:	aa0f      	add	r2, sp, #60	; 0x3c
   82286:	9904      	ldr	r1, [sp, #16]
   82288:	4620      	mov	r0, r4
   8228a:	f7ff fb35 	bl	818f8 <__sprint_r.part.0>
   8228e:	bb50      	cbnz	r0, 822e6 <_vfiprintf_r+0x96e>
   82290:	9910      	ldr	r1, [sp, #64]	; 0x40
   82292:	46d4      	mov	ip, sl
   82294:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82296:	f101 0e01 	add.w	lr, r1, #1
   8229a:	e54a      	b.n	81d32 <_vfiprintf_r+0x3ba>
   8229c:	2a00      	cmp	r2, #0
   8229e:	f47f aee5 	bne.w	8206c <_vfiprintf_r+0x6f4>
   822a2:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
   822a6:	2900      	cmp	r1, #0
   822a8:	f000 811a 	beq.w	824e0 <_vfiprintf_r+0xb68>
   822ac:	2201      	movs	r2, #1
   822ae:	46d1      	mov	r9, sl
   822b0:	4610      	mov	r0, r2
   822b2:	f10d 0137 	add.w	r1, sp, #55	; 0x37
   822b6:	921d      	str	r2, [sp, #116]	; 0x74
   822b8:	911c      	str	r1, [sp, #112]	; 0x70
   822ba:	4601      	mov	r1, r0
   822bc:	f109 0908 	add.w	r9, r9, #8
   822c0:	3001      	adds	r0, #1
   822c2:	e508      	b.n	81cd6 <_vfiprintf_r+0x35e>
   822c4:	9b02      	ldr	r3, [sp, #8]
   822c6:	2a01      	cmp	r2, #1
   822c8:	f000 8097 	beq.w	823fa <_vfiprintf_r+0xa82>
   822cc:	2a02      	cmp	r2, #2
   822ce:	d10d      	bne.n	822ec <_vfiprintf_r+0x974>
   822d0:	9302      	str	r3, [sp, #8]
   822d2:	2600      	movs	r6, #0
   822d4:	2700      	movs	r7, #0
   822d6:	e5b2      	b.n	81e3e <_vfiprintf_r+0x4c6>
   822d8:	aa0f      	add	r2, sp, #60	; 0x3c
   822da:	9904      	ldr	r1, [sp, #16]
   822dc:	9806      	ldr	r0, [sp, #24]
   822de:	f7ff fb0b 	bl	818f8 <__sprint_r.part.0>
   822e2:	2800      	cmp	r0, #0
   822e4:	d0c9      	beq.n	8227a <_vfiprintf_r+0x902>
   822e6:	f8dd b010 	ldr.w	fp, [sp, #16]
   822ea:	e797      	b.n	8221c <_vfiprintf_r+0x8a4>
   822ec:	2600      	movs	r6, #0
   822ee:	2700      	movs	r7, #0
   822f0:	9302      	str	r3, [sp, #8]
   822f2:	4651      	mov	r1, sl
   822f4:	e000      	b.n	822f8 <_vfiprintf_r+0x980>
   822f6:	4659      	mov	r1, fp
   822f8:	08f2      	lsrs	r2, r6, #3
   822fa:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
   822fe:	08f8      	lsrs	r0, r7, #3
   82300:	f006 0307 	and.w	r3, r6, #7
   82304:	4607      	mov	r7, r0
   82306:	4616      	mov	r6, r2
   82308:	3330      	adds	r3, #48	; 0x30
   8230a:	ea56 0207 	orrs.w	r2, r6, r7
   8230e:	f801 3c01 	strb.w	r3, [r1, #-1]
   82312:	f101 3bff 	add.w	fp, r1, #4294967295
   82316:	d1ee      	bne.n	822f6 <_vfiprintf_r+0x97e>
   82318:	9a02      	ldr	r2, [sp, #8]
   8231a:	07d6      	lsls	r6, r2, #31
   8231c:	f57f ad9f 	bpl.w	81e5e <_vfiprintf_r+0x4e6>
   82320:	2b30      	cmp	r3, #48	; 0x30
   82322:	f43f ad9c 	beq.w	81e5e <_vfiprintf_r+0x4e6>
   82326:	2330      	movs	r3, #48	; 0x30
   82328:	3902      	subs	r1, #2
   8232a:	f80b 3c01 	strb.w	r3, [fp, #-1]
   8232e:	ebaa 0301 	sub.w	r3, sl, r1
   82332:	9305      	str	r3, [sp, #20]
   82334:	468b      	mov	fp, r1
   82336:	e477      	b.n	81c28 <_vfiprintf_r+0x2b0>
   82338:	9b03      	ldr	r3, [sp, #12]
   8233a:	9a08      	ldr	r2, [sp, #32]
   8233c:	428a      	cmp	r2, r1
   8233e:	bfac      	ite	ge
   82340:	189b      	addge	r3, r3, r2
   82342:	185b      	addlt	r3, r3, r1
   82344:	9303      	str	r3, [sp, #12]
   82346:	e798      	b.n	8227a <_vfiprintf_r+0x902>
   82348:	2202      	movs	r2, #2
   8234a:	e44e      	b.n	81bea <_vfiprintf_r+0x272>
   8234c:	2f00      	cmp	r7, #0
   8234e:	bf08      	it	eq
   82350:	2e0a      	cmpeq	r6, #10
   82352:	d351      	bcc.n	823f8 <_vfiprintf_r+0xa80>
   82354:	46d3      	mov	fp, sl
   82356:	4630      	mov	r0, r6
   82358:	4639      	mov	r1, r7
   8235a:	220a      	movs	r2, #10
   8235c:	2300      	movs	r3, #0
   8235e:	f001 ff29 	bl	841b4 <__aeabi_uldivmod>
   82362:	3230      	adds	r2, #48	; 0x30
   82364:	f80b 2d01 	strb.w	r2, [fp, #-1]!
   82368:	4630      	mov	r0, r6
   8236a:	4639      	mov	r1, r7
   8236c:	2300      	movs	r3, #0
   8236e:	220a      	movs	r2, #10
   82370:	f001 ff20 	bl	841b4 <__aeabi_uldivmod>
   82374:	4606      	mov	r6, r0
   82376:	460f      	mov	r7, r1
   82378:	ea56 0307 	orrs.w	r3, r6, r7
   8237c:	d1eb      	bne.n	82356 <_vfiprintf_r+0x9de>
   8237e:	e56e      	b.n	81e5e <_vfiprintf_r+0x4e6>
   82380:	9405      	str	r4, [sp, #20]
   82382:	46d3      	mov	fp, sl
   82384:	e450      	b.n	81c28 <_vfiprintf_r+0x2b0>
   82386:	aa0f      	add	r2, sp, #60	; 0x3c
   82388:	9904      	ldr	r1, [sp, #16]
   8238a:	9806      	ldr	r0, [sp, #24]
   8238c:	f7ff fab4 	bl	818f8 <__sprint_r.part.0>
   82390:	2800      	cmp	r0, #0
   82392:	d1a8      	bne.n	822e6 <_vfiprintf_r+0x96e>
   82394:	46d1      	mov	r9, sl
   82396:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82398:	e75e      	b.n	82258 <_vfiprintf_r+0x8e0>
   8239a:	aa0f      	add	r2, sp, #60	; 0x3c
   8239c:	9904      	ldr	r1, [sp, #16]
   8239e:	9806      	ldr	r0, [sp, #24]
   823a0:	f7ff faaa 	bl	818f8 <__sprint_r.part.0>
   823a4:	2800      	cmp	r0, #0
   823a6:	d19e      	bne.n	822e6 <_vfiprintf_r+0x96e>
   823a8:	46d1      	mov	r9, sl
   823aa:	f7ff bbbb 	b.w	81b24 <_vfiprintf_r+0x1ac>
   823ae:	bf00      	nop
   823b0:	0008454c 	.word	0x0008454c
   823b4:	0008453c 	.word	0x0008453c
   823b8:	3104      	adds	r1, #4
   823ba:	6816      	ldr	r6, [r2, #0]
   823bc:	2700      	movs	r7, #0
   823be:	2201      	movs	r2, #1
   823c0:	9107      	str	r1, [sp, #28]
   823c2:	e412      	b.n	81bea <_vfiprintf_r+0x272>
   823c4:	9807      	ldr	r0, [sp, #28]
   823c6:	2700      	movs	r7, #0
   823c8:	4601      	mov	r1, r0
   823ca:	3104      	adds	r1, #4
   823cc:	6806      	ldr	r6, [r0, #0]
   823ce:	9107      	str	r1, [sp, #28]
   823d0:	e40b      	b.n	81bea <_vfiprintf_r+0x272>
   823d2:	680e      	ldr	r6, [r1, #0]
   823d4:	3104      	adds	r1, #4
   823d6:	9107      	str	r1, [sp, #28]
   823d8:	2700      	movs	r7, #0
   823da:	e592      	b.n	81f02 <_vfiprintf_r+0x58a>
   823dc:	6816      	ldr	r6, [r2, #0]
   823de:	3204      	adds	r2, #4
   823e0:	17f7      	asrs	r7, r6, #31
   823e2:	9207      	str	r2, [sp, #28]
   823e4:	4630      	mov	r0, r6
   823e6:	4639      	mov	r1, r7
   823e8:	e512      	b.n	81e10 <_vfiprintf_r+0x498>
   823ea:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   823ee:	f000 fe75 	bl	830dc <__retarget_lock_release_recursive>
   823f2:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   823f6:	e71b      	b.n	82230 <_vfiprintf_r+0x8b8>
   823f8:	9b02      	ldr	r3, [sp, #8]
   823fa:	9302      	str	r3, [sp, #8]
   823fc:	2301      	movs	r3, #1
   823fe:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
   82402:	3630      	adds	r6, #48	; 0x30
   82404:	f80b 6d41 	strb.w	r6, [fp, #-65]!
   82408:	9305      	str	r3, [sp, #20]
   8240a:	e40d      	b.n	81c28 <_vfiprintf_r+0x2b0>
   8240c:	aa0f      	add	r2, sp, #60	; 0x3c
   8240e:	9904      	ldr	r1, [sp, #16]
   82410:	9806      	ldr	r0, [sp, #24]
   82412:	f7ff fa71 	bl	818f8 <__sprint_r.part.0>
   82416:	2800      	cmp	r0, #0
   82418:	f47f af65 	bne.w	822e6 <_vfiprintf_r+0x96e>
   8241c:	9910      	ldr	r1, [sp, #64]	; 0x40
   8241e:	46d1      	mov	r9, sl
   82420:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82422:	1c48      	adds	r0, r1, #1
   82424:	e457      	b.n	81cd6 <_vfiprintf_r+0x35e>
   82426:	aa0f      	add	r2, sp, #60	; 0x3c
   82428:	9904      	ldr	r1, [sp, #16]
   8242a:	9806      	ldr	r0, [sp, #24]
   8242c:	f7ff fa64 	bl	818f8 <__sprint_r.part.0>
   82430:	2800      	cmp	r0, #0
   82432:	f47f af58 	bne.w	822e6 <_vfiprintf_r+0x96e>
   82436:	9910      	ldr	r1, [sp, #64]	; 0x40
   82438:	46d1      	mov	r9, sl
   8243a:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8243c:	1c48      	adds	r0, r1, #1
   8243e:	e644      	b.n	820ca <_vfiprintf_r+0x752>
   82440:	2a00      	cmp	r2, #0
   82442:	f040 8087 	bne.w	82554 <_vfiprintf_r+0xbdc>
   82446:	2001      	movs	r0, #1
   82448:	4611      	mov	r1, r2
   8244a:	46d1      	mov	r9, sl
   8244c:	e641      	b.n	820d2 <_vfiprintf_r+0x75a>
   8244e:	aa0f      	add	r2, sp, #60	; 0x3c
   82450:	9904      	ldr	r1, [sp, #16]
   82452:	9806      	ldr	r0, [sp, #24]
   82454:	f7ff fa50 	bl	818f8 <__sprint_r.part.0>
   82458:	2800      	cmp	r0, #0
   8245a:	f47f af44 	bne.w	822e6 <_vfiprintf_r+0x96e>
   8245e:	9810      	ldr	r0, [sp, #64]	; 0x40
   82460:	46d1      	mov	r9, sl
   82462:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82464:	3001      	adds	r0, #1
   82466:	e668      	b.n	8213a <_vfiprintf_r+0x7c2>
   82468:	46cb      	mov	fp, r9
   8246a:	e6d7      	b.n	8221c <_vfiprintf_r+0x8a4>
   8246c:	9d07      	ldr	r5, [sp, #28]
   8246e:	3507      	adds	r5, #7
   82470:	f025 0507 	bic.w	r5, r5, #7
   82474:	f105 0208 	add.w	r2, r5, #8
   82478:	e9d5 0100 	ldrd	r0, r1, [r5]
   8247c:	9207      	str	r2, [sp, #28]
   8247e:	4606      	mov	r6, r0
   82480:	460f      	mov	r7, r1
   82482:	e4c5      	b.n	81e10 <_vfiprintf_r+0x498>
   82484:	9d07      	ldr	r5, [sp, #28]
   82486:	3507      	adds	r5, #7
   82488:	f025 0207 	bic.w	r2, r5, #7
   8248c:	f102 0108 	add.w	r1, r2, #8
   82490:	e9d2 6700 	ldrd	r6, r7, [r2]
   82494:	9107      	str	r1, [sp, #28]
   82496:	2201      	movs	r2, #1
   82498:	f7ff bba7 	b.w	81bea <_vfiprintf_r+0x272>
   8249c:	9d07      	ldr	r5, [sp, #28]
   8249e:	3507      	adds	r5, #7
   824a0:	f025 0207 	bic.w	r2, r5, #7
   824a4:	f102 0108 	add.w	r1, r2, #8
   824a8:	e9d2 6700 	ldrd	r6, r7, [r2]
   824ac:	9107      	str	r1, [sp, #28]
   824ae:	2200      	movs	r2, #0
   824b0:	f7ff bb9b 	b.w	81bea <_vfiprintf_r+0x272>
   824b4:	9d07      	ldr	r5, [sp, #28]
   824b6:	3507      	adds	r5, #7
   824b8:	f025 0107 	bic.w	r1, r5, #7
   824bc:	f101 0008 	add.w	r0, r1, #8
   824c0:	9007      	str	r0, [sp, #28]
   824c2:	e9d1 6700 	ldrd	r6, r7, [r1]
   824c6:	e51c      	b.n	81f02 <_vfiprintf_r+0x58a>
   824c8:	46d3      	mov	fp, sl
   824ca:	f7ff bbad 	b.w	81c28 <_vfiprintf_r+0x2b0>
   824ce:	252d      	movs	r5, #45	; 0x2d
   824d0:	4276      	negs	r6, r6
   824d2:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
   824d6:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
   824da:	2201      	movs	r2, #1
   824dc:	f7ff bb8a 	b.w	81bf4 <_vfiprintf_r+0x27c>
   824e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   824e2:	b9b3      	cbnz	r3, 82512 <_vfiprintf_r+0xb9a>
   824e4:	4611      	mov	r1, r2
   824e6:	2001      	movs	r0, #1
   824e8:	46d1      	mov	r9, sl
   824ea:	e5f2      	b.n	820d2 <_vfiprintf_r+0x75a>
   824ec:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   824f0:	f000 fdf4 	bl	830dc <__retarget_lock_release_recursive>
   824f4:	f04f 33ff 	mov.w	r3, #4294967295
   824f8:	9303      	str	r3, [sp, #12]
   824fa:	f7ff bb4c 	b.w	81b96 <_vfiprintf_r+0x21e>
   824fe:	aa0f      	add	r2, sp, #60	; 0x3c
   82500:	9904      	ldr	r1, [sp, #16]
   82502:	9806      	ldr	r0, [sp, #24]
   82504:	f7ff f9f8 	bl	818f8 <__sprint_r.part.0>
   82508:	2800      	cmp	r0, #0
   8250a:	f47f aeec 	bne.w	822e6 <_vfiprintf_r+0x96e>
   8250e:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82510:	e6aa      	b.n	82268 <_vfiprintf_r+0x8f0>
   82512:	2202      	movs	r2, #2
   82514:	ab0e      	add	r3, sp, #56	; 0x38
   82516:	921d      	str	r2, [sp, #116]	; 0x74
   82518:	931c      	str	r3, [sp, #112]	; 0x70
   8251a:	2001      	movs	r0, #1
   8251c:	46d1      	mov	r9, sl
   8251e:	e5d0      	b.n	820c2 <_vfiprintf_r+0x74a>
   82520:	4d34      	ldr	r5, [pc, #208]	; (825f4 <_vfiprintf_r+0xc7c>)
   82522:	e5fd      	b.n	82120 <_vfiprintf_r+0x7a8>
   82524:	9a07      	ldr	r2, [sp, #28]
   82526:	4613      	mov	r3, r2
   82528:	3304      	adds	r3, #4
   8252a:	9307      	str	r3, [sp, #28]
   8252c:	9b03      	ldr	r3, [sp, #12]
   8252e:	6811      	ldr	r1, [r2, #0]
   82530:	17dd      	asrs	r5, r3, #31
   82532:	461a      	mov	r2, r3
   82534:	462b      	mov	r3, r5
   82536:	e9c1 2300 	strd	r2, r3, [r1]
   8253a:	f7ff ba5a 	b.w	819f2 <_vfiprintf_r+0x7a>
   8253e:	4658      	mov	r0, fp
   82540:	9507      	str	r5, [sp, #28]
   82542:	9302      	str	r3, [sp, #8]
   82544:	f001 fc3c 	bl	83dc0 <strlen>
   82548:	2400      	movs	r4, #0
   8254a:	9005      	str	r0, [sp, #20]
   8254c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   82550:	f7ff bb6a 	b.w	81c28 <_vfiprintf_r+0x2b0>
   82554:	aa0f      	add	r2, sp, #60	; 0x3c
   82556:	9904      	ldr	r1, [sp, #16]
   82558:	9806      	ldr	r0, [sp, #24]
   8255a:	f7ff f9cd 	bl	818f8 <__sprint_r.part.0>
   8255e:	2800      	cmp	r0, #0
   82560:	f47f aec1 	bne.w	822e6 <_vfiprintf_r+0x96e>
   82564:	9910      	ldr	r1, [sp, #64]	; 0x40
   82566:	46d1      	mov	r9, sl
   82568:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8256a:	1c48      	adds	r0, r1, #1
   8256c:	e5b1      	b.n	820d2 <_vfiprintf_r+0x75a>
   8256e:	9910      	ldr	r1, [sp, #64]	; 0x40
   82570:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82572:	3101      	adds	r1, #1
   82574:	4e20      	ldr	r6, [pc, #128]	; (825f8 <_vfiprintf_r+0xc80>)
   82576:	f7ff bb9c 	b.w	81cb2 <_vfiprintf_r+0x33a>
   8257a:	2c06      	cmp	r4, #6
   8257c:	bf28      	it	cs
   8257e:	2406      	movcs	r4, #6
   82580:	9507      	str	r5, [sp, #28]
   82582:	9405      	str	r4, [sp, #20]
   82584:	9401      	str	r4, [sp, #4]
   82586:	f8df b074 	ldr.w	fp, [pc, #116]	; 825fc <_vfiprintf_r+0xc84>
   8258a:	e4e3      	b.n	81f54 <_vfiprintf_r+0x5dc>
   8258c:	9810      	ldr	r0, [sp, #64]	; 0x40
   8258e:	4e1a      	ldr	r6, [pc, #104]	; (825f8 <_vfiprintf_r+0xc80>)
   82590:	3001      	adds	r0, #1
   82592:	e60e      	b.n	821b2 <_vfiprintf_r+0x83a>
   82594:	4686      	mov	lr, r0
   82596:	4d17      	ldr	r5, [pc, #92]	; (825f4 <_vfiprintf_r+0xc7c>)
   82598:	f7ff bbe2 	b.w	81d60 <_vfiprintf_r+0x3e8>
   8259c:	9405      	str	r4, [sp, #20]
   8259e:	9507      	str	r5, [sp, #28]
   825a0:	9302      	str	r3, [sp, #8]
   825a2:	4604      	mov	r4, r0
   825a4:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   825a8:	f7ff bb3e 	b.w	81c28 <_vfiprintf_r+0x2b0>
   825ac:	9806      	ldr	r0, [sp, #24]
   825ae:	aa0f      	add	r2, sp, #60	; 0x3c
   825b0:	4659      	mov	r1, fp
   825b2:	f7ff f9a1 	bl	818f8 <__sprint_r.part.0>
   825b6:	2800      	cmp	r0, #0
   825b8:	f43f ae2e 	beq.w	82218 <_vfiprintf_r+0x8a0>
   825bc:	e62e      	b.n	8221c <_vfiprintf_r+0x8a4>
   825be:	9907      	ldr	r1, [sp, #28]
   825c0:	f898 2001 	ldrb.w	r2, [r8, #1]
   825c4:	680c      	ldr	r4, [r1, #0]
   825c6:	3104      	adds	r1, #4
   825c8:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
   825cc:	46b8      	mov	r8, r7
   825ce:	9107      	str	r1, [sp, #28]
   825d0:	f7ff ba44 	b.w	81a5c <_vfiprintf_r+0xe4>
   825d4:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   825d8:	e4a7      	b.n	81f2a <_vfiprintf_r+0x5b2>
   825da:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   825de:	e521      	b.n	82024 <_vfiprintf_r+0x6ac>
   825e0:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   825e4:	e47c      	b.n	81ee0 <_vfiprintf_r+0x568>
   825e6:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   825ea:	e43f      	b.n	81e6c <_vfiprintf_r+0x4f4>
   825ec:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   825f0:	f7ff bbfa 	b.w	81de8 <_vfiprintf_r+0x470>
   825f4:	0008454c 	.word	0x0008454c
   825f8:	0008453c 	.word	0x0008453c
   825fc:	00084534 	.word	0x00084534

00082600 <__sbprintf>:
   82600:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82604:	460c      	mov	r4, r1
   82606:	f04f 0e00 	mov.w	lr, #0
   8260a:	f44f 6580 	mov.w	r5, #1024	; 0x400
   8260e:	4606      	mov	r6, r0
   82610:	4617      	mov	r7, r2
   82612:	4698      	mov	r8, r3
   82614:	6e62      	ldr	r2, [r4, #100]	; 0x64
   82616:	89e3      	ldrh	r3, [r4, #14]
   82618:	8989      	ldrh	r1, [r1, #12]
   8261a:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
   8261e:	f021 0102 	bic.w	r1, r1, #2
   82622:	9219      	str	r2, [sp, #100]	; 0x64
   82624:	f8ad 300e 	strh.w	r3, [sp, #14]
   82628:	69e2      	ldr	r2, [r4, #28]
   8262a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   8262c:	f8ad 100c 	strh.w	r1, [sp, #12]
   82630:	a816      	add	r0, sp, #88	; 0x58
   82632:	a91a      	add	r1, sp, #104	; 0x68
   82634:	f8cd e018 	str.w	lr, [sp, #24]
   82638:	9207      	str	r2, [sp, #28]
   8263a:	9309      	str	r3, [sp, #36]	; 0x24
   8263c:	9100      	str	r1, [sp, #0]
   8263e:	9104      	str	r1, [sp, #16]
   82640:	9502      	str	r5, [sp, #8]
   82642:	9505      	str	r5, [sp, #20]
   82644:	f000 fd44 	bl	830d0 <__retarget_lock_init_recursive>
   82648:	4643      	mov	r3, r8
   8264a:	463a      	mov	r2, r7
   8264c:	4669      	mov	r1, sp
   8264e:	4630      	mov	r0, r6
   82650:	f7ff f992 	bl	81978 <_vfiprintf_r>
   82654:	1e05      	subs	r5, r0, #0
   82656:	db07      	blt.n	82668 <__sbprintf+0x68>
   82658:	4630      	mov	r0, r6
   8265a:	4669      	mov	r1, sp
   8265c:	f000 f924 	bl	828a8 <_fflush_r>
   82660:	2800      	cmp	r0, #0
   82662:	bf18      	it	ne
   82664:	f04f 35ff 	movne.w	r5, #4294967295
   82668:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   8266c:	065b      	lsls	r3, r3, #25
   8266e:	d503      	bpl.n	82678 <__sbprintf+0x78>
   82670:	89a3      	ldrh	r3, [r4, #12]
   82672:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82676:	81a3      	strh	r3, [r4, #12]
   82678:	9816      	ldr	r0, [sp, #88]	; 0x58
   8267a:	f000 fd2b 	bl	830d4 <__retarget_lock_close_recursive>
   8267e:	4628      	mov	r0, r5
   82680:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
   82684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00082688 <__swsetup_r>:
   82688:	b538      	push	{r3, r4, r5, lr}
   8268a:	4b30      	ldr	r3, [pc, #192]	; (8274c <__swsetup_r+0xc4>)
   8268c:	4605      	mov	r5, r0
   8268e:	6818      	ldr	r0, [r3, #0]
   82690:	460c      	mov	r4, r1
   82692:	b110      	cbz	r0, 8269a <__swsetup_r+0x12>
   82694:	6b83      	ldr	r3, [r0, #56]	; 0x38
   82696:	2b00      	cmp	r3, #0
   82698:	d038      	beq.n	8270c <__swsetup_r+0x84>
   8269a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   8269e:	b293      	uxth	r3, r2
   826a0:	0718      	lsls	r0, r3, #28
   826a2:	d50c      	bpl.n	826be <__swsetup_r+0x36>
   826a4:	6920      	ldr	r0, [r4, #16]
   826a6:	b1a8      	cbz	r0, 826d4 <__swsetup_r+0x4c>
   826a8:	f013 0201 	ands.w	r2, r3, #1
   826ac:	d01e      	beq.n	826ec <__swsetup_r+0x64>
   826ae:	2200      	movs	r2, #0
   826b0:	6963      	ldr	r3, [r4, #20]
   826b2:	60a2      	str	r2, [r4, #8]
   826b4:	425b      	negs	r3, r3
   826b6:	61a3      	str	r3, [r4, #24]
   826b8:	b1f0      	cbz	r0, 826f8 <__swsetup_r+0x70>
   826ba:	2000      	movs	r0, #0
   826bc:	bd38      	pop	{r3, r4, r5, pc}
   826be:	06d9      	lsls	r1, r3, #27
   826c0:	d53b      	bpl.n	8273a <__swsetup_r+0xb2>
   826c2:	0758      	lsls	r0, r3, #29
   826c4:	d425      	bmi.n	82712 <__swsetup_r+0x8a>
   826c6:	6920      	ldr	r0, [r4, #16]
   826c8:	f042 0308 	orr.w	r3, r2, #8
   826cc:	81a3      	strh	r3, [r4, #12]
   826ce:	b29b      	uxth	r3, r3
   826d0:	2800      	cmp	r0, #0
   826d2:	d1e9      	bne.n	826a8 <__swsetup_r+0x20>
   826d4:	f403 7220 	and.w	r2, r3, #640	; 0x280
   826d8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   826dc:	d0e4      	beq.n	826a8 <__swsetup_r+0x20>
   826de:	4628      	mov	r0, r5
   826e0:	4621      	mov	r1, r4
   826e2:	f000 fd2b 	bl	8313c <__smakebuf_r>
   826e6:	89a3      	ldrh	r3, [r4, #12]
   826e8:	6920      	ldr	r0, [r4, #16]
   826ea:	e7dd      	b.n	826a8 <__swsetup_r+0x20>
   826ec:	0799      	lsls	r1, r3, #30
   826ee:	bf58      	it	pl
   826f0:	6962      	ldrpl	r2, [r4, #20]
   826f2:	60a2      	str	r2, [r4, #8]
   826f4:	2800      	cmp	r0, #0
   826f6:	d1e0      	bne.n	826ba <__swsetup_r+0x32>
   826f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   826fc:	061a      	lsls	r2, r3, #24
   826fe:	d5dd      	bpl.n	826bc <__swsetup_r+0x34>
   82700:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82704:	81a3      	strh	r3, [r4, #12]
   82706:	f04f 30ff 	mov.w	r0, #4294967295
   8270a:	bd38      	pop	{r3, r4, r5, pc}
   8270c:	f000 f924 	bl	82958 <__sinit>
   82710:	e7c3      	b.n	8269a <__swsetup_r+0x12>
   82712:	6b21      	ldr	r1, [r4, #48]	; 0x30
   82714:	b151      	cbz	r1, 8272c <__swsetup_r+0xa4>
   82716:	f104 0340 	add.w	r3, r4, #64	; 0x40
   8271a:	4299      	cmp	r1, r3
   8271c:	d004      	beq.n	82728 <__swsetup_r+0xa0>
   8271e:	4628      	mov	r0, r5
   82720:	f000 fa40 	bl	82ba4 <_free_r>
   82724:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   82728:	2300      	movs	r3, #0
   8272a:	6323      	str	r3, [r4, #48]	; 0x30
   8272c:	2300      	movs	r3, #0
   8272e:	6920      	ldr	r0, [r4, #16]
   82730:	f022 0224 	bic.w	r2, r2, #36	; 0x24
   82734:	e884 0009 	stmia.w	r4, {r0, r3}
   82738:	e7c6      	b.n	826c8 <__swsetup_r+0x40>
   8273a:	2309      	movs	r3, #9
   8273c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   82740:	602b      	str	r3, [r5, #0]
   82742:	f04f 30ff 	mov.w	r0, #4294967295
   82746:	81a2      	strh	r2, [r4, #12]
   82748:	bd38      	pop	{r3, r4, r5, pc}
   8274a:	bf00      	nop
   8274c:	20070140 	.word	0x20070140

00082750 <register_fini>:
   82750:	4b02      	ldr	r3, [pc, #8]	; (8275c <register_fini+0xc>)
   82752:	b113      	cbz	r3, 8275a <register_fini+0xa>
   82754:	4802      	ldr	r0, [pc, #8]	; (82760 <register_fini+0x10>)
   82756:	f000 b805 	b.w	82764 <atexit>
   8275a:	4770      	bx	lr
   8275c:	00000000 	.word	0x00000000
   82760:	000829d1 	.word	0x000829d1

00082764 <atexit>:
   82764:	2300      	movs	r3, #0
   82766:	4601      	mov	r1, r0
   82768:	461a      	mov	r2, r3
   8276a:	4618      	mov	r0, r3
   8276c:	f001 bbfa 	b.w	83f64 <__register_exitproc>

00082770 <__sflush_r>:
   82770:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
   82774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82778:	b29a      	uxth	r2, r3
   8277a:	460d      	mov	r5, r1
   8277c:	0711      	lsls	r1, r2, #28
   8277e:	4680      	mov	r8, r0
   82780:	d43a      	bmi.n	827f8 <__sflush_r+0x88>
   82782:	686a      	ldr	r2, [r5, #4]
   82784:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   82788:	2a00      	cmp	r2, #0
   8278a:	81ab      	strh	r3, [r5, #12]
   8278c:	dd70      	ble.n	82870 <__sflush_r+0x100>
   8278e:	6aac      	ldr	r4, [r5, #40]	; 0x28
   82790:	2c00      	cmp	r4, #0
   82792:	d04a      	beq.n	8282a <__sflush_r+0xba>
   82794:	2200      	movs	r2, #0
   82796:	b29b      	uxth	r3, r3
   82798:	f8d8 6000 	ldr.w	r6, [r8]
   8279c:	f8c8 2000 	str.w	r2, [r8]
   827a0:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
   827a4:	d068      	beq.n	82878 <__sflush_r+0x108>
   827a6:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   827a8:	075f      	lsls	r7, r3, #29
   827aa:	d505      	bpl.n	827b8 <__sflush_r+0x48>
   827ac:	6869      	ldr	r1, [r5, #4]
   827ae:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   827b0:	1a52      	subs	r2, r2, r1
   827b2:	b10b      	cbz	r3, 827b8 <__sflush_r+0x48>
   827b4:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   827b6:	1ad2      	subs	r2, r2, r3
   827b8:	2300      	movs	r3, #0
   827ba:	69e9      	ldr	r1, [r5, #28]
   827bc:	4640      	mov	r0, r8
   827be:	47a0      	blx	r4
   827c0:	1c44      	adds	r4, r0, #1
   827c2:	d03d      	beq.n	82840 <__sflush_r+0xd0>
   827c4:	2100      	movs	r1, #0
   827c6:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
   827ca:	692a      	ldr	r2, [r5, #16]
   827cc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   827d0:	81ab      	strh	r3, [r5, #12]
   827d2:	04db      	lsls	r3, r3, #19
   827d4:	6069      	str	r1, [r5, #4]
   827d6:	602a      	str	r2, [r5, #0]
   827d8:	d448      	bmi.n	8286c <__sflush_r+0xfc>
   827da:	6b29      	ldr	r1, [r5, #48]	; 0x30
   827dc:	f8c8 6000 	str.w	r6, [r8]
   827e0:	b319      	cbz	r1, 8282a <__sflush_r+0xba>
   827e2:	f105 0340 	add.w	r3, r5, #64	; 0x40
   827e6:	4299      	cmp	r1, r3
   827e8:	d002      	beq.n	827f0 <__sflush_r+0x80>
   827ea:	4640      	mov	r0, r8
   827ec:	f000 f9da 	bl	82ba4 <_free_r>
   827f0:	2000      	movs	r0, #0
   827f2:	6328      	str	r0, [r5, #48]	; 0x30
   827f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   827f8:	692e      	ldr	r6, [r5, #16]
   827fa:	b1b6      	cbz	r6, 8282a <__sflush_r+0xba>
   827fc:	0791      	lsls	r1, r2, #30
   827fe:	bf18      	it	ne
   82800:	2300      	movne	r3, #0
   82802:	682c      	ldr	r4, [r5, #0]
   82804:	bf08      	it	eq
   82806:	696b      	ldreq	r3, [r5, #20]
   82808:	602e      	str	r6, [r5, #0]
   8280a:	1ba4      	subs	r4, r4, r6
   8280c:	60ab      	str	r3, [r5, #8]
   8280e:	e00a      	b.n	82826 <__sflush_r+0xb6>
   82810:	4623      	mov	r3, r4
   82812:	4632      	mov	r2, r6
   82814:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   82816:	69e9      	ldr	r1, [r5, #28]
   82818:	4640      	mov	r0, r8
   8281a:	47b8      	blx	r7
   8281c:	2800      	cmp	r0, #0
   8281e:	eba4 0400 	sub.w	r4, r4, r0
   82822:	4406      	add	r6, r0
   82824:	dd04      	ble.n	82830 <__sflush_r+0xc0>
   82826:	2c00      	cmp	r4, #0
   82828:	dcf2      	bgt.n	82810 <__sflush_r+0xa0>
   8282a:	2000      	movs	r0, #0
   8282c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82830:	89ab      	ldrh	r3, [r5, #12]
   82832:	f04f 30ff 	mov.w	r0, #4294967295
   82836:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8283a:	81ab      	strh	r3, [r5, #12]
   8283c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82840:	f8d8 4000 	ldr.w	r4, [r8]
   82844:	2c1d      	cmp	r4, #29
   82846:	d8f3      	bhi.n	82830 <__sflush_r+0xc0>
   82848:	4b16      	ldr	r3, [pc, #88]	; (828a4 <__sflush_r+0x134>)
   8284a:	40e3      	lsrs	r3, r4
   8284c:	43db      	mvns	r3, r3
   8284e:	f013 0301 	ands.w	r3, r3, #1
   82852:	d1ed      	bne.n	82830 <__sflush_r+0xc0>
   82854:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
   82858:	6929      	ldr	r1, [r5, #16]
   8285a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   8285e:	81aa      	strh	r2, [r5, #12]
   82860:	04d2      	lsls	r2, r2, #19
   82862:	606b      	str	r3, [r5, #4]
   82864:	6029      	str	r1, [r5, #0]
   82866:	d5b8      	bpl.n	827da <__sflush_r+0x6a>
   82868:	2c00      	cmp	r4, #0
   8286a:	d1b6      	bne.n	827da <__sflush_r+0x6a>
   8286c:	6528      	str	r0, [r5, #80]	; 0x50
   8286e:	e7b4      	b.n	827da <__sflush_r+0x6a>
   82870:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   82872:	2a00      	cmp	r2, #0
   82874:	dc8b      	bgt.n	8278e <__sflush_r+0x1e>
   82876:	e7d8      	b.n	8282a <__sflush_r+0xba>
   82878:	2301      	movs	r3, #1
   8287a:	69e9      	ldr	r1, [r5, #28]
   8287c:	4640      	mov	r0, r8
   8287e:	47a0      	blx	r4
   82880:	1c43      	adds	r3, r0, #1
   82882:	4602      	mov	r2, r0
   82884:	d002      	beq.n	8288c <__sflush_r+0x11c>
   82886:	89ab      	ldrh	r3, [r5, #12]
   82888:	6aac      	ldr	r4, [r5, #40]	; 0x28
   8288a:	e78d      	b.n	827a8 <__sflush_r+0x38>
   8288c:	f8d8 3000 	ldr.w	r3, [r8]
   82890:	2b00      	cmp	r3, #0
   82892:	d0f8      	beq.n	82886 <__sflush_r+0x116>
   82894:	2b1d      	cmp	r3, #29
   82896:	d001      	beq.n	8289c <__sflush_r+0x12c>
   82898:	2b16      	cmp	r3, #22
   8289a:	d1c9      	bne.n	82830 <__sflush_r+0xc0>
   8289c:	f8c8 6000 	str.w	r6, [r8]
   828a0:	e7c3      	b.n	8282a <__sflush_r+0xba>
   828a2:	bf00      	nop
   828a4:	20400001 	.word	0x20400001

000828a8 <_fflush_r>:
   828a8:	b538      	push	{r3, r4, r5, lr}
   828aa:	460d      	mov	r5, r1
   828ac:	4604      	mov	r4, r0
   828ae:	b108      	cbz	r0, 828b4 <_fflush_r+0xc>
   828b0:	6b83      	ldr	r3, [r0, #56]	; 0x38
   828b2:	b1bb      	cbz	r3, 828e4 <_fflush_r+0x3c>
   828b4:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
   828b8:	b188      	cbz	r0, 828de <_fflush_r+0x36>
   828ba:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   828bc:	07db      	lsls	r3, r3, #31
   828be:	d401      	bmi.n	828c4 <_fflush_r+0x1c>
   828c0:	0581      	lsls	r1, r0, #22
   828c2:	d517      	bpl.n	828f4 <_fflush_r+0x4c>
   828c4:	4620      	mov	r0, r4
   828c6:	4629      	mov	r1, r5
   828c8:	f7ff ff52 	bl	82770 <__sflush_r>
   828cc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   828ce:	4604      	mov	r4, r0
   828d0:	07da      	lsls	r2, r3, #31
   828d2:	d402      	bmi.n	828da <_fflush_r+0x32>
   828d4:	89ab      	ldrh	r3, [r5, #12]
   828d6:	059b      	lsls	r3, r3, #22
   828d8:	d507      	bpl.n	828ea <_fflush_r+0x42>
   828da:	4620      	mov	r0, r4
   828dc:	bd38      	pop	{r3, r4, r5, pc}
   828de:	4604      	mov	r4, r0
   828e0:	4620      	mov	r0, r4
   828e2:	bd38      	pop	{r3, r4, r5, pc}
   828e4:	f000 f838 	bl	82958 <__sinit>
   828e8:	e7e4      	b.n	828b4 <_fflush_r+0xc>
   828ea:	6da8      	ldr	r0, [r5, #88]	; 0x58
   828ec:	f000 fbf6 	bl	830dc <__retarget_lock_release_recursive>
   828f0:	4620      	mov	r0, r4
   828f2:	bd38      	pop	{r3, r4, r5, pc}
   828f4:	6da8      	ldr	r0, [r5, #88]	; 0x58
   828f6:	f000 fbef 	bl	830d8 <__retarget_lock_acquire_recursive>
   828fa:	e7e3      	b.n	828c4 <_fflush_r+0x1c>

000828fc <_cleanup_r>:
   828fc:	4901      	ldr	r1, [pc, #4]	; (82904 <_cleanup_r+0x8>)
   828fe:	f000 bbb1 	b.w	83064 <_fwalk_reent>
   82902:	bf00      	nop
   82904:	0008404d 	.word	0x0008404d

00082908 <std.isra.0>:
   82908:	2300      	movs	r3, #0
   8290a:	b510      	push	{r4, lr}
   8290c:	4604      	mov	r4, r0
   8290e:	8181      	strh	r1, [r0, #12]
   82910:	81c2      	strh	r2, [r0, #14]
   82912:	6003      	str	r3, [r0, #0]
   82914:	6043      	str	r3, [r0, #4]
   82916:	6083      	str	r3, [r0, #8]
   82918:	6643      	str	r3, [r0, #100]	; 0x64
   8291a:	6103      	str	r3, [r0, #16]
   8291c:	6143      	str	r3, [r0, #20]
   8291e:	6183      	str	r3, [r0, #24]
   82920:	4619      	mov	r1, r3
   82922:	2208      	movs	r2, #8
   82924:	305c      	adds	r0, #92	; 0x5c
   82926:	f7fe fec9 	bl	816bc <memset>
   8292a:	4807      	ldr	r0, [pc, #28]	; (82948 <std.isra.0+0x40>)
   8292c:	4907      	ldr	r1, [pc, #28]	; (8294c <std.isra.0+0x44>)
   8292e:	4a08      	ldr	r2, [pc, #32]	; (82950 <std.isra.0+0x48>)
   82930:	4b08      	ldr	r3, [pc, #32]	; (82954 <std.isra.0+0x4c>)
   82932:	6220      	str	r0, [r4, #32]
   82934:	61e4      	str	r4, [r4, #28]
   82936:	6261      	str	r1, [r4, #36]	; 0x24
   82938:	62a2      	str	r2, [r4, #40]	; 0x28
   8293a:	62e3      	str	r3, [r4, #44]	; 0x2c
   8293c:	f104 0058 	add.w	r0, r4, #88	; 0x58
   82940:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   82944:	f000 bbc4 	b.w	830d0 <__retarget_lock_init_recursive>
   82948:	00083d39 	.word	0x00083d39
   8294c:	00083d5d 	.word	0x00083d5d
   82950:	00083d99 	.word	0x00083d99
   82954:	00083db9 	.word	0x00083db9

00082958 <__sinit>:
   82958:	b510      	push	{r4, lr}
   8295a:	4604      	mov	r4, r0
   8295c:	4814      	ldr	r0, [pc, #80]	; (829b0 <__sinit+0x58>)
   8295e:	f000 fbbb 	bl	830d8 <__retarget_lock_acquire_recursive>
   82962:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   82964:	b9fa      	cbnz	r2, 829a6 <__sinit+0x4e>
   82966:	2003      	movs	r0, #3
   82968:	4912      	ldr	r1, [pc, #72]	; (829b4 <__sinit+0x5c>)
   8296a:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
   8296e:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
   82972:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
   82976:	f8c4 02e4 	str.w	r0, [r4, #740]	; 0x2e4
   8297a:	63e1      	str	r1, [r4, #60]	; 0x3c
   8297c:	6860      	ldr	r0, [r4, #4]
   8297e:	2104      	movs	r1, #4
   82980:	f7ff ffc2 	bl	82908 <std.isra.0>
   82984:	68a0      	ldr	r0, [r4, #8]
   82986:	2201      	movs	r2, #1
   82988:	2109      	movs	r1, #9
   8298a:	f7ff ffbd 	bl	82908 <std.isra.0>
   8298e:	68e0      	ldr	r0, [r4, #12]
   82990:	2202      	movs	r2, #2
   82992:	2112      	movs	r1, #18
   82994:	f7ff ffb8 	bl	82908 <std.isra.0>
   82998:	2301      	movs	r3, #1
   8299a:	4805      	ldr	r0, [pc, #20]	; (829b0 <__sinit+0x58>)
   8299c:	63a3      	str	r3, [r4, #56]	; 0x38
   8299e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   829a2:	f000 bb9b 	b.w	830dc <__retarget_lock_release_recursive>
   829a6:	4802      	ldr	r0, [pc, #8]	; (829b0 <__sinit+0x58>)
   829a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   829ac:	f000 bb96 	b.w	830dc <__retarget_lock_release_recursive>
   829b0:	20070c6c 	.word	0x20070c6c
   829b4:	000828fd 	.word	0x000828fd

000829b8 <__sfp_lock_acquire>:
   829b8:	4801      	ldr	r0, [pc, #4]	; (829c0 <__sfp_lock_acquire+0x8>)
   829ba:	f000 bb8d 	b.w	830d8 <__retarget_lock_acquire_recursive>
   829be:	bf00      	nop
   829c0:	20070c80 	.word	0x20070c80

000829c4 <__sfp_lock_release>:
   829c4:	4801      	ldr	r0, [pc, #4]	; (829cc <__sfp_lock_release+0x8>)
   829c6:	f000 bb89 	b.w	830dc <__retarget_lock_release_recursive>
   829ca:	bf00      	nop
   829cc:	20070c80 	.word	0x20070c80

000829d0 <__libc_fini_array>:
   829d0:	b538      	push	{r3, r4, r5, lr}
   829d2:	4c0a      	ldr	r4, [pc, #40]	; (829fc <__libc_fini_array+0x2c>)
   829d4:	4d0a      	ldr	r5, [pc, #40]	; (82a00 <__libc_fini_array+0x30>)
   829d6:	1b64      	subs	r4, r4, r5
   829d8:	10a4      	asrs	r4, r4, #2
   829da:	d00a      	beq.n	829f2 <__libc_fini_array+0x22>
   829dc:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   829e0:	3b01      	subs	r3, #1
   829e2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   829e6:	3c01      	subs	r4, #1
   829e8:	f855 3904 	ldr.w	r3, [r5], #-4
   829ec:	4798      	blx	r3
   829ee:	2c00      	cmp	r4, #0
   829f0:	d1f9      	bne.n	829e6 <__libc_fini_array+0x16>
   829f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   829f6:	f001 be45 	b.w	84684 <_fini>
   829fa:	bf00      	nop
   829fc:	00084694 	.word	0x00084694
   82a00:	00084690 	.word	0x00084690

00082a04 <__fputwc>:
   82a04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   82a08:	b083      	sub	sp, #12
   82a0a:	4607      	mov	r7, r0
   82a0c:	4688      	mov	r8, r1
   82a0e:	4614      	mov	r4, r2
   82a10:	f000 fb50 	bl	830b4 <__locale_mb_cur_max>
   82a14:	2801      	cmp	r0, #1
   82a16:	d033      	beq.n	82a80 <__fputwc+0x7c>
   82a18:	4642      	mov	r2, r8
   82a1a:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   82a1e:	a901      	add	r1, sp, #4
   82a20:	4638      	mov	r0, r7
   82a22:	f001 fa53 	bl	83ecc <_wcrtomb_r>
   82a26:	1c42      	adds	r2, r0, #1
   82a28:	4606      	mov	r6, r0
   82a2a:	d022      	beq.n	82a72 <__fputwc+0x6e>
   82a2c:	b390      	cbz	r0, 82a94 <__fputwc+0x90>
   82a2e:	f89d 1004 	ldrb.w	r1, [sp, #4]
   82a32:	2500      	movs	r5, #0
   82a34:	f10d 0904 	add.w	r9, sp, #4
   82a38:	e008      	b.n	82a4c <__fputwc+0x48>
   82a3a:	6823      	ldr	r3, [r4, #0]
   82a3c:	1c5a      	adds	r2, r3, #1
   82a3e:	6022      	str	r2, [r4, #0]
   82a40:	7019      	strb	r1, [r3, #0]
   82a42:	3501      	adds	r5, #1
   82a44:	42b5      	cmp	r5, r6
   82a46:	d225      	bcs.n	82a94 <__fputwc+0x90>
   82a48:	f815 1009 	ldrb.w	r1, [r5, r9]
   82a4c:	68a3      	ldr	r3, [r4, #8]
   82a4e:	3b01      	subs	r3, #1
   82a50:	2b00      	cmp	r3, #0
   82a52:	60a3      	str	r3, [r4, #8]
   82a54:	daf1      	bge.n	82a3a <__fputwc+0x36>
   82a56:	69a2      	ldr	r2, [r4, #24]
   82a58:	4293      	cmp	r3, r2
   82a5a:	db01      	blt.n	82a60 <__fputwc+0x5c>
   82a5c:	290a      	cmp	r1, #10
   82a5e:	d1ec      	bne.n	82a3a <__fputwc+0x36>
   82a60:	4622      	mov	r2, r4
   82a62:	4638      	mov	r0, r7
   82a64:	f001 f9da 	bl	83e1c <__swbuf_r>
   82a68:	1c43      	adds	r3, r0, #1
   82a6a:	d1ea      	bne.n	82a42 <__fputwc+0x3e>
   82a6c:	b003      	add	sp, #12
   82a6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   82a72:	89a3      	ldrh	r3, [r4, #12]
   82a74:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82a78:	81a3      	strh	r3, [r4, #12]
   82a7a:	b003      	add	sp, #12
   82a7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   82a80:	f108 33ff 	add.w	r3, r8, #4294967295
   82a84:	2bfe      	cmp	r3, #254	; 0xfe
   82a86:	d8c7      	bhi.n	82a18 <__fputwc+0x14>
   82a88:	fa5f f188 	uxtb.w	r1, r8
   82a8c:	4606      	mov	r6, r0
   82a8e:	f88d 1004 	strb.w	r1, [sp, #4]
   82a92:	e7ce      	b.n	82a32 <__fputwc+0x2e>
   82a94:	4640      	mov	r0, r8
   82a96:	b003      	add	sp, #12
   82a98:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00082a9c <_fputwc_r>:
   82a9c:	b530      	push	{r4, r5, lr}
   82a9e:	6e53      	ldr	r3, [r2, #100]	; 0x64
   82aa0:	4614      	mov	r4, r2
   82aa2:	f013 0f01 	tst.w	r3, #1
   82aa6:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   82aaa:	b083      	sub	sp, #12
   82aac:	4605      	mov	r5, r0
   82aae:	b29a      	uxth	r2, r3
   82ab0:	d101      	bne.n	82ab6 <_fputwc_r+0x1a>
   82ab2:	0590      	lsls	r0, r2, #22
   82ab4:	d51c      	bpl.n	82af0 <_fputwc_r+0x54>
   82ab6:	0490      	lsls	r0, r2, #18
   82ab8:	d406      	bmi.n	82ac8 <_fputwc_r+0x2c>
   82aba:	6e62      	ldr	r2, [r4, #100]	; 0x64
   82abc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   82ac0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   82ac4:	81a3      	strh	r3, [r4, #12]
   82ac6:	6662      	str	r2, [r4, #100]	; 0x64
   82ac8:	4628      	mov	r0, r5
   82aca:	4622      	mov	r2, r4
   82acc:	f7ff ff9a 	bl	82a04 <__fputwc>
   82ad0:	6e63      	ldr	r3, [r4, #100]	; 0x64
   82ad2:	4605      	mov	r5, r0
   82ad4:	07da      	lsls	r2, r3, #31
   82ad6:	d402      	bmi.n	82ade <_fputwc_r+0x42>
   82ad8:	89a3      	ldrh	r3, [r4, #12]
   82ada:	059b      	lsls	r3, r3, #22
   82adc:	d502      	bpl.n	82ae4 <_fputwc_r+0x48>
   82ade:	4628      	mov	r0, r5
   82ae0:	b003      	add	sp, #12
   82ae2:	bd30      	pop	{r4, r5, pc}
   82ae4:	6da0      	ldr	r0, [r4, #88]	; 0x58
   82ae6:	f000 faf9 	bl	830dc <__retarget_lock_release_recursive>
   82aea:	4628      	mov	r0, r5
   82aec:	b003      	add	sp, #12
   82aee:	bd30      	pop	{r4, r5, pc}
   82af0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   82af2:	9101      	str	r1, [sp, #4]
   82af4:	f000 faf0 	bl	830d8 <__retarget_lock_acquire_recursive>
   82af8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82afc:	9901      	ldr	r1, [sp, #4]
   82afe:	b29a      	uxth	r2, r3
   82b00:	e7d9      	b.n	82ab6 <_fputwc_r+0x1a>
   82b02:	bf00      	nop

00082b04 <_malloc_trim_r>:
   82b04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82b06:	460c      	mov	r4, r1
   82b08:	4f23      	ldr	r7, [pc, #140]	; (82b98 <_malloc_trim_r+0x94>)
   82b0a:	4606      	mov	r6, r0
   82b0c:	f000 ff40 	bl	83990 <__malloc_lock>
   82b10:	68bb      	ldr	r3, [r7, #8]
   82b12:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   82b16:	685d      	ldr	r5, [r3, #4]
   82b18:	310f      	adds	r1, #15
   82b1a:	f025 0503 	bic.w	r5, r5, #3
   82b1e:	4429      	add	r1, r5
   82b20:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   82b24:	f021 010f 	bic.w	r1, r1, #15
   82b28:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   82b2c:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   82b30:	db07      	blt.n	82b42 <_malloc_trim_r+0x3e>
   82b32:	2100      	movs	r1, #0
   82b34:	4630      	mov	r0, r6
   82b36:	f001 f8ed 	bl	83d14 <_sbrk_r>
   82b3a:	68bb      	ldr	r3, [r7, #8]
   82b3c:	442b      	add	r3, r5
   82b3e:	4298      	cmp	r0, r3
   82b40:	d004      	beq.n	82b4c <_malloc_trim_r+0x48>
   82b42:	4630      	mov	r0, r6
   82b44:	f000 ff2a 	bl	8399c <__malloc_unlock>
   82b48:	2000      	movs	r0, #0
   82b4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82b4c:	4261      	negs	r1, r4
   82b4e:	4630      	mov	r0, r6
   82b50:	f001 f8e0 	bl	83d14 <_sbrk_r>
   82b54:	3001      	adds	r0, #1
   82b56:	d00d      	beq.n	82b74 <_malloc_trim_r+0x70>
   82b58:	4b10      	ldr	r3, [pc, #64]	; (82b9c <_malloc_trim_r+0x98>)
   82b5a:	68ba      	ldr	r2, [r7, #8]
   82b5c:	6819      	ldr	r1, [r3, #0]
   82b5e:	1b2d      	subs	r5, r5, r4
   82b60:	f045 0501 	orr.w	r5, r5, #1
   82b64:	4630      	mov	r0, r6
   82b66:	1b09      	subs	r1, r1, r4
   82b68:	6055      	str	r5, [r2, #4]
   82b6a:	6019      	str	r1, [r3, #0]
   82b6c:	f000 ff16 	bl	8399c <__malloc_unlock>
   82b70:	2001      	movs	r0, #1
   82b72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82b74:	2100      	movs	r1, #0
   82b76:	4630      	mov	r0, r6
   82b78:	f001 f8cc 	bl	83d14 <_sbrk_r>
   82b7c:	68ba      	ldr	r2, [r7, #8]
   82b7e:	1a83      	subs	r3, r0, r2
   82b80:	2b0f      	cmp	r3, #15
   82b82:	ddde      	ble.n	82b42 <_malloc_trim_r+0x3e>
   82b84:	4c06      	ldr	r4, [pc, #24]	; (82ba0 <_malloc_trim_r+0x9c>)
   82b86:	4905      	ldr	r1, [pc, #20]	; (82b9c <_malloc_trim_r+0x98>)
   82b88:	6824      	ldr	r4, [r4, #0]
   82b8a:	f043 0301 	orr.w	r3, r3, #1
   82b8e:	1b00      	subs	r0, r0, r4
   82b90:	6053      	str	r3, [r2, #4]
   82b92:	6008      	str	r0, [r1, #0]
   82b94:	e7d5      	b.n	82b42 <_malloc_trim_r+0x3e>
   82b96:	bf00      	nop
   82b98:	200706e0 	.word	0x200706e0
   82b9c:	20070c20 	.word	0x20070c20
   82ba0:	20070ae8 	.word	0x20070ae8

00082ba4 <_free_r>:
   82ba4:	2900      	cmp	r1, #0
   82ba6:	d044      	beq.n	82c32 <_free_r+0x8e>
   82ba8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82bac:	460d      	mov	r5, r1
   82bae:	4680      	mov	r8, r0
   82bb0:	f000 feee 	bl	83990 <__malloc_lock>
   82bb4:	f855 7c04 	ldr.w	r7, [r5, #-4]
   82bb8:	4969      	ldr	r1, [pc, #420]	; (82d60 <_free_r+0x1bc>)
   82bba:	f1a5 0408 	sub.w	r4, r5, #8
   82bbe:	f027 0301 	bic.w	r3, r7, #1
   82bc2:	18e2      	adds	r2, r4, r3
   82bc4:	688e      	ldr	r6, [r1, #8]
   82bc6:	6850      	ldr	r0, [r2, #4]
   82bc8:	42b2      	cmp	r2, r6
   82bca:	f020 0003 	bic.w	r0, r0, #3
   82bce:	d05e      	beq.n	82c8e <_free_r+0xea>
   82bd0:	07fe      	lsls	r6, r7, #31
   82bd2:	6050      	str	r0, [r2, #4]
   82bd4:	d40b      	bmi.n	82bee <_free_r+0x4a>
   82bd6:	f855 7c08 	ldr.w	r7, [r5, #-8]
   82bda:	f101 0e08 	add.w	lr, r1, #8
   82bde:	1be4      	subs	r4, r4, r7
   82be0:	68a5      	ldr	r5, [r4, #8]
   82be2:	443b      	add	r3, r7
   82be4:	4575      	cmp	r5, lr
   82be6:	d06d      	beq.n	82cc4 <_free_r+0x120>
   82be8:	68e7      	ldr	r7, [r4, #12]
   82bea:	60ef      	str	r7, [r5, #12]
   82bec:	60bd      	str	r5, [r7, #8]
   82bee:	1815      	adds	r5, r2, r0
   82bf0:	686d      	ldr	r5, [r5, #4]
   82bf2:	07ed      	lsls	r5, r5, #31
   82bf4:	d53e      	bpl.n	82c74 <_free_r+0xd0>
   82bf6:	f043 0201 	orr.w	r2, r3, #1
   82bfa:	6062      	str	r2, [r4, #4]
   82bfc:	50e3      	str	r3, [r4, r3]
   82bfe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   82c02:	d217      	bcs.n	82c34 <_free_r+0x90>
   82c04:	2201      	movs	r2, #1
   82c06:	08db      	lsrs	r3, r3, #3
   82c08:	1098      	asrs	r0, r3, #2
   82c0a:	684d      	ldr	r5, [r1, #4]
   82c0c:	4413      	add	r3, r2
   82c0e:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   82c12:	4082      	lsls	r2, r0
   82c14:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   82c18:	432a      	orrs	r2, r5
   82c1a:	3808      	subs	r0, #8
   82c1c:	60e0      	str	r0, [r4, #12]
   82c1e:	60a7      	str	r7, [r4, #8]
   82c20:	604a      	str	r2, [r1, #4]
   82c22:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   82c26:	60fc      	str	r4, [r7, #12]
   82c28:	4640      	mov	r0, r8
   82c2a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   82c2e:	f000 beb5 	b.w	8399c <__malloc_unlock>
   82c32:	4770      	bx	lr
   82c34:	0a5a      	lsrs	r2, r3, #9
   82c36:	2a04      	cmp	r2, #4
   82c38:	d852      	bhi.n	82ce0 <_free_r+0x13c>
   82c3a:	099a      	lsrs	r2, r3, #6
   82c3c:	f102 0739 	add.w	r7, r2, #57	; 0x39
   82c40:	00ff      	lsls	r7, r7, #3
   82c42:	f102 0538 	add.w	r5, r2, #56	; 0x38
   82c46:	19c8      	adds	r0, r1, r7
   82c48:	59ca      	ldr	r2, [r1, r7]
   82c4a:	3808      	subs	r0, #8
   82c4c:	4290      	cmp	r0, r2
   82c4e:	d04f      	beq.n	82cf0 <_free_r+0x14c>
   82c50:	6851      	ldr	r1, [r2, #4]
   82c52:	f021 0103 	bic.w	r1, r1, #3
   82c56:	428b      	cmp	r3, r1
   82c58:	d232      	bcs.n	82cc0 <_free_r+0x11c>
   82c5a:	6892      	ldr	r2, [r2, #8]
   82c5c:	4290      	cmp	r0, r2
   82c5e:	d1f7      	bne.n	82c50 <_free_r+0xac>
   82c60:	68c3      	ldr	r3, [r0, #12]
   82c62:	60a0      	str	r0, [r4, #8]
   82c64:	60e3      	str	r3, [r4, #12]
   82c66:	609c      	str	r4, [r3, #8]
   82c68:	60c4      	str	r4, [r0, #12]
   82c6a:	4640      	mov	r0, r8
   82c6c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   82c70:	f000 be94 	b.w	8399c <__malloc_unlock>
   82c74:	6895      	ldr	r5, [r2, #8]
   82c76:	4f3b      	ldr	r7, [pc, #236]	; (82d64 <_free_r+0x1c0>)
   82c78:	4403      	add	r3, r0
   82c7a:	42bd      	cmp	r5, r7
   82c7c:	d040      	beq.n	82d00 <_free_r+0x15c>
   82c7e:	68d0      	ldr	r0, [r2, #12]
   82c80:	f043 0201 	orr.w	r2, r3, #1
   82c84:	60e8      	str	r0, [r5, #12]
   82c86:	6085      	str	r5, [r0, #8]
   82c88:	6062      	str	r2, [r4, #4]
   82c8a:	50e3      	str	r3, [r4, r3]
   82c8c:	e7b7      	b.n	82bfe <_free_r+0x5a>
   82c8e:	07ff      	lsls	r7, r7, #31
   82c90:	4403      	add	r3, r0
   82c92:	d407      	bmi.n	82ca4 <_free_r+0x100>
   82c94:	f855 5c08 	ldr.w	r5, [r5, #-8]
   82c98:	1b64      	subs	r4, r4, r5
   82c9a:	68e2      	ldr	r2, [r4, #12]
   82c9c:	68a0      	ldr	r0, [r4, #8]
   82c9e:	442b      	add	r3, r5
   82ca0:	60c2      	str	r2, [r0, #12]
   82ca2:	6090      	str	r0, [r2, #8]
   82ca4:	4a30      	ldr	r2, [pc, #192]	; (82d68 <_free_r+0x1c4>)
   82ca6:	f043 0001 	orr.w	r0, r3, #1
   82caa:	6812      	ldr	r2, [r2, #0]
   82cac:	6060      	str	r0, [r4, #4]
   82cae:	4293      	cmp	r3, r2
   82cb0:	608c      	str	r4, [r1, #8]
   82cb2:	d3b9      	bcc.n	82c28 <_free_r+0x84>
   82cb4:	4b2d      	ldr	r3, [pc, #180]	; (82d6c <_free_r+0x1c8>)
   82cb6:	4640      	mov	r0, r8
   82cb8:	6819      	ldr	r1, [r3, #0]
   82cba:	f7ff ff23 	bl	82b04 <_malloc_trim_r>
   82cbe:	e7b3      	b.n	82c28 <_free_r+0x84>
   82cc0:	4610      	mov	r0, r2
   82cc2:	e7cd      	b.n	82c60 <_free_r+0xbc>
   82cc4:	1811      	adds	r1, r2, r0
   82cc6:	6849      	ldr	r1, [r1, #4]
   82cc8:	07c9      	lsls	r1, r1, #31
   82cca:	d444      	bmi.n	82d56 <_free_r+0x1b2>
   82ccc:	6891      	ldr	r1, [r2, #8]
   82cce:	4403      	add	r3, r0
   82cd0:	68d2      	ldr	r2, [r2, #12]
   82cd2:	f043 0001 	orr.w	r0, r3, #1
   82cd6:	60ca      	str	r2, [r1, #12]
   82cd8:	6091      	str	r1, [r2, #8]
   82cda:	6060      	str	r0, [r4, #4]
   82cdc:	50e3      	str	r3, [r4, r3]
   82cde:	e7a3      	b.n	82c28 <_free_r+0x84>
   82ce0:	2a14      	cmp	r2, #20
   82ce2:	d816      	bhi.n	82d12 <_free_r+0x16e>
   82ce4:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   82ce8:	00ff      	lsls	r7, r7, #3
   82cea:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   82cee:	e7aa      	b.n	82c46 <_free_r+0xa2>
   82cf0:	2301      	movs	r3, #1
   82cf2:	10aa      	asrs	r2, r5, #2
   82cf4:	684d      	ldr	r5, [r1, #4]
   82cf6:	4093      	lsls	r3, r2
   82cf8:	432b      	orrs	r3, r5
   82cfa:	604b      	str	r3, [r1, #4]
   82cfc:	4603      	mov	r3, r0
   82cfe:	e7b0      	b.n	82c62 <_free_r+0xbe>
   82d00:	f043 0201 	orr.w	r2, r3, #1
   82d04:	614c      	str	r4, [r1, #20]
   82d06:	610c      	str	r4, [r1, #16]
   82d08:	60e5      	str	r5, [r4, #12]
   82d0a:	60a5      	str	r5, [r4, #8]
   82d0c:	6062      	str	r2, [r4, #4]
   82d0e:	50e3      	str	r3, [r4, r3]
   82d10:	e78a      	b.n	82c28 <_free_r+0x84>
   82d12:	2a54      	cmp	r2, #84	; 0x54
   82d14:	d806      	bhi.n	82d24 <_free_r+0x180>
   82d16:	0b1a      	lsrs	r2, r3, #12
   82d18:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   82d1c:	00ff      	lsls	r7, r7, #3
   82d1e:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   82d22:	e790      	b.n	82c46 <_free_r+0xa2>
   82d24:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   82d28:	d806      	bhi.n	82d38 <_free_r+0x194>
   82d2a:	0bda      	lsrs	r2, r3, #15
   82d2c:	f102 0778 	add.w	r7, r2, #120	; 0x78
   82d30:	00ff      	lsls	r7, r7, #3
   82d32:	f102 0577 	add.w	r5, r2, #119	; 0x77
   82d36:	e786      	b.n	82c46 <_free_r+0xa2>
   82d38:	f240 5054 	movw	r0, #1364	; 0x554
   82d3c:	4282      	cmp	r2, r0
   82d3e:	d806      	bhi.n	82d4e <_free_r+0x1aa>
   82d40:	0c9a      	lsrs	r2, r3, #18
   82d42:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   82d46:	00ff      	lsls	r7, r7, #3
   82d48:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   82d4c:	e77b      	b.n	82c46 <_free_r+0xa2>
   82d4e:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   82d52:	257e      	movs	r5, #126	; 0x7e
   82d54:	e777      	b.n	82c46 <_free_r+0xa2>
   82d56:	f043 0101 	orr.w	r1, r3, #1
   82d5a:	6061      	str	r1, [r4, #4]
   82d5c:	6013      	str	r3, [r2, #0]
   82d5e:	e763      	b.n	82c28 <_free_r+0x84>
   82d60:	200706e0 	.word	0x200706e0
   82d64:	200706e8 	.word	0x200706e8
   82d68:	20070aec 	.word	0x20070aec
   82d6c:	20070c50 	.word	0x20070c50

00082d70 <__sfvwrite_r>:
   82d70:	6893      	ldr	r3, [r2, #8]
   82d72:	2b00      	cmp	r3, #0
   82d74:	d071      	beq.n	82e5a <__sfvwrite_r+0xea>
   82d76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82d7a:	898b      	ldrh	r3, [r1, #12]
   82d7c:	b083      	sub	sp, #12
   82d7e:	460c      	mov	r4, r1
   82d80:	0719      	lsls	r1, r3, #28
   82d82:	9000      	str	r0, [sp, #0]
   82d84:	4616      	mov	r6, r2
   82d86:	d525      	bpl.n	82dd4 <__sfvwrite_r+0x64>
   82d88:	6922      	ldr	r2, [r4, #16]
   82d8a:	b31a      	cbz	r2, 82dd4 <__sfvwrite_r+0x64>
   82d8c:	f013 0002 	ands.w	r0, r3, #2
   82d90:	6835      	ldr	r5, [r6, #0]
   82d92:	d02b      	beq.n	82dec <__sfvwrite_r+0x7c>
   82d94:	f04f 0900 	mov.w	r9, #0
   82d98:	46b0      	mov	r8, r6
   82d9a:	464f      	mov	r7, r9
   82d9c:	f8df a2c0 	ldr.w	sl, [pc, #704]	; 83060 <__sfvwrite_r+0x2f0>
   82da0:	2f00      	cmp	r7, #0
   82da2:	d055      	beq.n	82e50 <__sfvwrite_r+0xe0>
   82da4:	4557      	cmp	r7, sl
   82da6:	463b      	mov	r3, r7
   82da8:	464a      	mov	r2, r9
   82daa:	bf28      	it	cs
   82dac:	4653      	movcs	r3, sl
   82dae:	69e1      	ldr	r1, [r4, #28]
   82db0:	9800      	ldr	r0, [sp, #0]
   82db2:	6a66      	ldr	r6, [r4, #36]	; 0x24
   82db4:	47b0      	blx	r6
   82db6:	2800      	cmp	r0, #0
   82db8:	dd56      	ble.n	82e68 <__sfvwrite_r+0xf8>
   82dba:	f8d8 3008 	ldr.w	r3, [r8, #8]
   82dbe:	4481      	add	r9, r0
   82dc0:	1a1b      	subs	r3, r3, r0
   82dc2:	1a3f      	subs	r7, r7, r0
   82dc4:	f8c8 3008 	str.w	r3, [r8, #8]
   82dc8:	2b00      	cmp	r3, #0
   82dca:	d1e9      	bne.n	82da0 <__sfvwrite_r+0x30>
   82dcc:	2000      	movs	r0, #0
   82dce:	b003      	add	sp, #12
   82dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82dd4:	4621      	mov	r1, r4
   82dd6:	9800      	ldr	r0, [sp, #0]
   82dd8:	f7ff fc56 	bl	82688 <__swsetup_r>
   82ddc:	2800      	cmp	r0, #0
   82dde:	f040 8135 	bne.w	8304c <__sfvwrite_r+0x2dc>
   82de2:	89a3      	ldrh	r3, [r4, #12]
   82de4:	6835      	ldr	r5, [r6, #0]
   82de6:	f013 0002 	ands.w	r0, r3, #2
   82dea:	d1d3      	bne.n	82d94 <__sfvwrite_r+0x24>
   82dec:	f013 0901 	ands.w	r9, r3, #1
   82df0:	d144      	bne.n	82e7c <__sfvwrite_r+0x10c>
   82df2:	464f      	mov	r7, r9
   82df4:	9601      	str	r6, [sp, #4]
   82df6:	b337      	cbz	r7, 82e46 <__sfvwrite_r+0xd6>
   82df8:	059a      	lsls	r2, r3, #22
   82dfa:	f8d4 8008 	ldr.w	r8, [r4, #8]
   82dfe:	f140 8085 	bpl.w	82f0c <__sfvwrite_r+0x19c>
   82e02:	4547      	cmp	r7, r8
   82e04:	46c3      	mov	fp, r8
   82e06:	f0c0 80ad 	bcc.w	82f64 <__sfvwrite_r+0x1f4>
   82e0a:	f413 6f90 	tst.w	r3, #1152	; 0x480
   82e0e:	f040 80ae 	bne.w	82f6e <__sfvwrite_r+0x1fe>
   82e12:	46ba      	mov	sl, r7
   82e14:	6820      	ldr	r0, [r4, #0]
   82e16:	465a      	mov	r2, fp
   82e18:	4649      	mov	r1, r9
   82e1a:	f000 fd55 	bl	838c8 <memmove>
   82e1e:	68a2      	ldr	r2, [r4, #8]
   82e20:	6823      	ldr	r3, [r4, #0]
   82e22:	eba2 0208 	sub.w	r2, r2, r8
   82e26:	445b      	add	r3, fp
   82e28:	60a2      	str	r2, [r4, #8]
   82e2a:	6023      	str	r3, [r4, #0]
   82e2c:	9a01      	ldr	r2, [sp, #4]
   82e2e:	44d1      	add	r9, sl
   82e30:	6893      	ldr	r3, [r2, #8]
   82e32:	eba7 070a 	sub.w	r7, r7, sl
   82e36:	eba3 030a 	sub.w	r3, r3, sl
   82e3a:	6093      	str	r3, [r2, #8]
   82e3c:	2b00      	cmp	r3, #0
   82e3e:	d0c5      	beq.n	82dcc <__sfvwrite_r+0x5c>
   82e40:	89a3      	ldrh	r3, [r4, #12]
   82e42:	2f00      	cmp	r7, #0
   82e44:	d1d8      	bne.n	82df8 <__sfvwrite_r+0x88>
   82e46:	f8d5 9000 	ldr.w	r9, [r5]
   82e4a:	686f      	ldr	r7, [r5, #4]
   82e4c:	3508      	adds	r5, #8
   82e4e:	e7d2      	b.n	82df6 <__sfvwrite_r+0x86>
   82e50:	f8d5 9000 	ldr.w	r9, [r5]
   82e54:	686f      	ldr	r7, [r5, #4]
   82e56:	3508      	adds	r5, #8
   82e58:	e7a2      	b.n	82da0 <__sfvwrite_r+0x30>
   82e5a:	2000      	movs	r0, #0
   82e5c:	4770      	bx	lr
   82e5e:	4621      	mov	r1, r4
   82e60:	9800      	ldr	r0, [sp, #0]
   82e62:	f7ff fd21 	bl	828a8 <_fflush_r>
   82e66:	b378      	cbz	r0, 82ec8 <__sfvwrite_r+0x158>
   82e68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82e6c:	f04f 30ff 	mov.w	r0, #4294967295
   82e70:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82e74:	81a3      	strh	r3, [r4, #12]
   82e76:	b003      	add	sp, #12
   82e78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82e7c:	4681      	mov	r9, r0
   82e7e:	4633      	mov	r3, r6
   82e80:	464e      	mov	r6, r9
   82e82:	46a8      	mov	r8, r5
   82e84:	469a      	mov	sl, r3
   82e86:	464d      	mov	r5, r9
   82e88:	b356      	cbz	r6, 82ee0 <__sfvwrite_r+0x170>
   82e8a:	2800      	cmp	r0, #0
   82e8c:	d032      	beq.n	82ef4 <__sfvwrite_r+0x184>
   82e8e:	45b1      	cmp	r9, r6
   82e90:	46cb      	mov	fp, r9
   82e92:	bf28      	it	cs
   82e94:	46b3      	movcs	fp, r6
   82e96:	6820      	ldr	r0, [r4, #0]
   82e98:	6923      	ldr	r3, [r4, #16]
   82e9a:	465f      	mov	r7, fp
   82e9c:	4298      	cmp	r0, r3
   82e9e:	6962      	ldr	r2, [r4, #20]
   82ea0:	d904      	bls.n	82eac <__sfvwrite_r+0x13c>
   82ea2:	68a3      	ldr	r3, [r4, #8]
   82ea4:	4413      	add	r3, r2
   82ea6:	459b      	cmp	fp, r3
   82ea8:	f300 80a8 	bgt.w	82ffc <__sfvwrite_r+0x28c>
   82eac:	4593      	cmp	fp, r2
   82eae:	db4d      	blt.n	82f4c <__sfvwrite_r+0x1dc>
   82eb0:	4613      	mov	r3, r2
   82eb2:	6a67      	ldr	r7, [r4, #36]	; 0x24
   82eb4:	462a      	mov	r2, r5
   82eb6:	69e1      	ldr	r1, [r4, #28]
   82eb8:	9800      	ldr	r0, [sp, #0]
   82eba:	47b8      	blx	r7
   82ebc:	1e07      	subs	r7, r0, #0
   82ebe:	ddd3      	ble.n	82e68 <__sfvwrite_r+0xf8>
   82ec0:	ebb9 0907 	subs.w	r9, r9, r7
   82ec4:	d0cb      	beq.n	82e5e <__sfvwrite_r+0xee>
   82ec6:	2001      	movs	r0, #1
   82ec8:	f8da 3008 	ldr.w	r3, [sl, #8]
   82ecc:	443d      	add	r5, r7
   82ece:	1bdb      	subs	r3, r3, r7
   82ed0:	1bf6      	subs	r6, r6, r7
   82ed2:	f8ca 3008 	str.w	r3, [sl, #8]
   82ed6:	2b00      	cmp	r3, #0
   82ed8:	f43f af78 	beq.w	82dcc <__sfvwrite_r+0x5c>
   82edc:	2e00      	cmp	r6, #0
   82ede:	d1d4      	bne.n	82e8a <__sfvwrite_r+0x11a>
   82ee0:	f108 0308 	add.w	r3, r8, #8
   82ee4:	f853 6c04 	ldr.w	r6, [r3, #-4]
   82ee8:	4698      	mov	r8, r3
   82eea:	f853 5c08 	ldr.w	r5, [r3, #-8]
   82eee:	3308      	adds	r3, #8
   82ef0:	2e00      	cmp	r6, #0
   82ef2:	d0f7      	beq.n	82ee4 <__sfvwrite_r+0x174>
   82ef4:	4632      	mov	r2, r6
   82ef6:	210a      	movs	r1, #10
   82ef8:	4628      	mov	r0, r5
   82efa:	f000 fc29 	bl	83750 <memchr>
   82efe:	2800      	cmp	r0, #0
   82f00:	f000 80a1 	beq.w	83046 <__sfvwrite_r+0x2d6>
   82f04:	3001      	adds	r0, #1
   82f06:	eba0 0905 	sub.w	r9, r0, r5
   82f0a:	e7c0      	b.n	82e8e <__sfvwrite_r+0x11e>
   82f0c:	6820      	ldr	r0, [r4, #0]
   82f0e:	6923      	ldr	r3, [r4, #16]
   82f10:	4298      	cmp	r0, r3
   82f12:	d802      	bhi.n	82f1a <__sfvwrite_r+0x1aa>
   82f14:	6963      	ldr	r3, [r4, #20]
   82f16:	429f      	cmp	r7, r3
   82f18:	d25d      	bcs.n	82fd6 <__sfvwrite_r+0x266>
   82f1a:	45b8      	cmp	r8, r7
   82f1c:	bf28      	it	cs
   82f1e:	46b8      	movcs	r8, r7
   82f20:	4649      	mov	r1, r9
   82f22:	4642      	mov	r2, r8
   82f24:	f000 fcd0 	bl	838c8 <memmove>
   82f28:	68a3      	ldr	r3, [r4, #8]
   82f2a:	6822      	ldr	r2, [r4, #0]
   82f2c:	eba3 0308 	sub.w	r3, r3, r8
   82f30:	4442      	add	r2, r8
   82f32:	60a3      	str	r3, [r4, #8]
   82f34:	6022      	str	r2, [r4, #0]
   82f36:	b10b      	cbz	r3, 82f3c <__sfvwrite_r+0x1cc>
   82f38:	46c2      	mov	sl, r8
   82f3a:	e777      	b.n	82e2c <__sfvwrite_r+0xbc>
   82f3c:	4621      	mov	r1, r4
   82f3e:	9800      	ldr	r0, [sp, #0]
   82f40:	f7ff fcb2 	bl	828a8 <_fflush_r>
   82f44:	2800      	cmp	r0, #0
   82f46:	d18f      	bne.n	82e68 <__sfvwrite_r+0xf8>
   82f48:	46c2      	mov	sl, r8
   82f4a:	e76f      	b.n	82e2c <__sfvwrite_r+0xbc>
   82f4c:	465a      	mov	r2, fp
   82f4e:	4629      	mov	r1, r5
   82f50:	f000 fcba 	bl	838c8 <memmove>
   82f54:	68a2      	ldr	r2, [r4, #8]
   82f56:	6823      	ldr	r3, [r4, #0]
   82f58:	eba2 020b 	sub.w	r2, r2, fp
   82f5c:	445b      	add	r3, fp
   82f5e:	60a2      	str	r2, [r4, #8]
   82f60:	6023      	str	r3, [r4, #0]
   82f62:	e7ad      	b.n	82ec0 <__sfvwrite_r+0x150>
   82f64:	46b8      	mov	r8, r7
   82f66:	46ba      	mov	sl, r7
   82f68:	46bb      	mov	fp, r7
   82f6a:	6820      	ldr	r0, [r4, #0]
   82f6c:	e753      	b.n	82e16 <__sfvwrite_r+0xa6>
   82f6e:	6962      	ldr	r2, [r4, #20]
   82f70:	6820      	ldr	r0, [r4, #0]
   82f72:	6921      	ldr	r1, [r4, #16]
   82f74:	eb02 0842 	add.w	r8, r2, r2, lsl #1
   82f78:	eba0 0a01 	sub.w	sl, r0, r1
   82f7c:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
   82f80:	f10a 0001 	add.w	r0, sl, #1
   82f84:	ea4f 0868 	mov.w	r8, r8, asr #1
   82f88:	4438      	add	r0, r7
   82f8a:	4540      	cmp	r0, r8
   82f8c:	4642      	mov	r2, r8
   82f8e:	bf84      	itt	hi
   82f90:	4680      	movhi	r8, r0
   82f92:	4642      	movhi	r2, r8
   82f94:	055b      	lsls	r3, r3, #21
   82f96:	d544      	bpl.n	83022 <__sfvwrite_r+0x2b2>
   82f98:	4611      	mov	r1, r2
   82f9a:	9800      	ldr	r0, [sp, #0]
   82f9c:	f000 f920 	bl	831e0 <_malloc_r>
   82fa0:	4683      	mov	fp, r0
   82fa2:	2800      	cmp	r0, #0
   82fa4:	d055      	beq.n	83052 <__sfvwrite_r+0x2e2>
   82fa6:	4652      	mov	r2, sl
   82fa8:	6921      	ldr	r1, [r4, #16]
   82faa:	f000 fc17 	bl	837dc <memcpy>
   82fae:	89a3      	ldrh	r3, [r4, #12]
   82fb0:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   82fb4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   82fb8:	81a3      	strh	r3, [r4, #12]
   82fba:	eb0b 000a 	add.w	r0, fp, sl
   82fbe:	eba8 030a 	sub.w	r3, r8, sl
   82fc2:	f8c4 b010 	str.w	fp, [r4, #16]
   82fc6:	f8c4 8014 	str.w	r8, [r4, #20]
   82fca:	6020      	str	r0, [r4, #0]
   82fcc:	60a3      	str	r3, [r4, #8]
   82fce:	46b8      	mov	r8, r7
   82fd0:	46ba      	mov	sl, r7
   82fd2:	46bb      	mov	fp, r7
   82fd4:	e71f      	b.n	82e16 <__sfvwrite_r+0xa6>
   82fd6:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
   82fda:	42ba      	cmp	r2, r7
   82fdc:	bf28      	it	cs
   82fde:	463a      	movcs	r2, r7
   82fe0:	fb92 f2f3 	sdiv	r2, r2, r3
   82fe4:	69e1      	ldr	r1, [r4, #28]
   82fe6:	fb03 f302 	mul.w	r3, r3, r2
   82fea:	9800      	ldr	r0, [sp, #0]
   82fec:	464a      	mov	r2, r9
   82fee:	6a66      	ldr	r6, [r4, #36]	; 0x24
   82ff0:	47b0      	blx	r6
   82ff2:	f1b0 0a00 	subs.w	sl, r0, #0
   82ff6:	f73f af19 	bgt.w	82e2c <__sfvwrite_r+0xbc>
   82ffa:	e735      	b.n	82e68 <__sfvwrite_r+0xf8>
   82ffc:	461a      	mov	r2, r3
   82ffe:	4629      	mov	r1, r5
   83000:	9301      	str	r3, [sp, #4]
   83002:	f000 fc61 	bl	838c8 <memmove>
   83006:	6822      	ldr	r2, [r4, #0]
   83008:	9b01      	ldr	r3, [sp, #4]
   8300a:	4621      	mov	r1, r4
   8300c:	441a      	add	r2, r3
   8300e:	6022      	str	r2, [r4, #0]
   83010:	9800      	ldr	r0, [sp, #0]
   83012:	f7ff fc49 	bl	828a8 <_fflush_r>
   83016:	9b01      	ldr	r3, [sp, #4]
   83018:	2800      	cmp	r0, #0
   8301a:	f47f af25 	bne.w	82e68 <__sfvwrite_r+0xf8>
   8301e:	461f      	mov	r7, r3
   83020:	e74e      	b.n	82ec0 <__sfvwrite_r+0x150>
   83022:	9800      	ldr	r0, [sp, #0]
   83024:	f000 fcc0 	bl	839a8 <_realloc_r>
   83028:	4683      	mov	fp, r0
   8302a:	2800      	cmp	r0, #0
   8302c:	d1c5      	bne.n	82fba <__sfvwrite_r+0x24a>
   8302e:	9d00      	ldr	r5, [sp, #0]
   83030:	6921      	ldr	r1, [r4, #16]
   83032:	4628      	mov	r0, r5
   83034:	f7ff fdb6 	bl	82ba4 <_free_r>
   83038:	220c      	movs	r2, #12
   8303a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8303e:	602a      	str	r2, [r5, #0]
   83040:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   83044:	e712      	b.n	82e6c <__sfvwrite_r+0xfc>
   83046:	f106 0901 	add.w	r9, r6, #1
   8304a:	e720      	b.n	82e8e <__sfvwrite_r+0x11e>
   8304c:	f04f 30ff 	mov.w	r0, #4294967295
   83050:	e6bd      	b.n	82dce <__sfvwrite_r+0x5e>
   83052:	220c      	movs	r2, #12
   83054:	9900      	ldr	r1, [sp, #0]
   83056:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8305a:	600a      	str	r2, [r1, #0]
   8305c:	e706      	b.n	82e6c <__sfvwrite_r+0xfc>
   8305e:	bf00      	nop
   83060:	7ffffc00 	.word	0x7ffffc00

00083064 <_fwalk_reent>:
   83064:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   83068:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
   8306c:	d01e      	beq.n	830ac <_fwalk_reent+0x48>
   8306e:	4688      	mov	r8, r1
   83070:	4607      	mov	r7, r0
   83072:	f04f 0900 	mov.w	r9, #0
   83076:	6875      	ldr	r5, [r6, #4]
   83078:	68b4      	ldr	r4, [r6, #8]
   8307a:	3d01      	subs	r5, #1
   8307c:	d410      	bmi.n	830a0 <_fwalk_reent+0x3c>
   8307e:	89a3      	ldrh	r3, [r4, #12]
   83080:	3d01      	subs	r5, #1
   83082:	2b01      	cmp	r3, #1
   83084:	d908      	bls.n	83098 <_fwalk_reent+0x34>
   83086:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   8308a:	3301      	adds	r3, #1
   8308c:	d004      	beq.n	83098 <_fwalk_reent+0x34>
   8308e:	4621      	mov	r1, r4
   83090:	4638      	mov	r0, r7
   83092:	47c0      	blx	r8
   83094:	ea49 0900 	orr.w	r9, r9, r0
   83098:	1c6b      	adds	r3, r5, #1
   8309a:	f104 0468 	add.w	r4, r4, #104	; 0x68
   8309e:	d1ee      	bne.n	8307e <_fwalk_reent+0x1a>
   830a0:	6836      	ldr	r6, [r6, #0]
   830a2:	2e00      	cmp	r6, #0
   830a4:	d1e7      	bne.n	83076 <_fwalk_reent+0x12>
   830a6:	4648      	mov	r0, r9
   830a8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   830ac:	46b1      	mov	r9, r6
   830ae:	4648      	mov	r0, r9
   830b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000830b4 <__locale_mb_cur_max>:
   830b4:	4b04      	ldr	r3, [pc, #16]	; (830c8 <__locale_mb_cur_max+0x14>)
   830b6:	4a05      	ldr	r2, [pc, #20]	; (830cc <__locale_mb_cur_max+0x18>)
   830b8:	681b      	ldr	r3, [r3, #0]
   830ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   830bc:	2b00      	cmp	r3, #0
   830be:	bf08      	it	eq
   830c0:	4613      	moveq	r3, r2
   830c2:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
   830c6:	4770      	bx	lr
   830c8:	20070140 	.word	0x20070140
   830cc:	20070574 	.word	0x20070574

000830d0 <__retarget_lock_init_recursive>:
   830d0:	4770      	bx	lr
   830d2:	bf00      	nop

000830d4 <__retarget_lock_close_recursive>:
   830d4:	4770      	bx	lr
   830d6:	bf00      	nop

000830d8 <__retarget_lock_acquire_recursive>:
   830d8:	4770      	bx	lr
   830da:	bf00      	nop

000830dc <__retarget_lock_release_recursive>:
   830dc:	4770      	bx	lr
   830de:	bf00      	nop

000830e0 <__swhatbuf_r>:
   830e0:	b570      	push	{r4, r5, r6, lr}
   830e2:	460c      	mov	r4, r1
   830e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   830e8:	b090      	sub	sp, #64	; 0x40
   830ea:	2900      	cmp	r1, #0
   830ec:	4615      	mov	r5, r2
   830ee:	461e      	mov	r6, r3
   830f0:	db14      	blt.n	8311c <__swhatbuf_r+0x3c>
   830f2:	aa01      	add	r2, sp, #4
   830f4:	f001 f80c 	bl	84110 <_fstat_r>
   830f8:	2800      	cmp	r0, #0
   830fa:	db0f      	blt.n	8311c <__swhatbuf_r+0x3c>
   830fc:	9a02      	ldr	r2, [sp, #8]
   830fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
   83102:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   83106:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
   8310a:	fab2 f282 	clz	r2, r2
   8310e:	f44f 6000 	mov.w	r0, #2048	; 0x800
   83112:	0952      	lsrs	r2, r2, #5
   83114:	6032      	str	r2, [r6, #0]
   83116:	602b      	str	r3, [r5, #0]
   83118:	b010      	add	sp, #64	; 0x40
   8311a:	bd70      	pop	{r4, r5, r6, pc}
   8311c:	2300      	movs	r3, #0
   8311e:	89a2      	ldrh	r2, [r4, #12]
   83120:	6033      	str	r3, [r6, #0]
   83122:	f012 0080 	ands.w	r0, r2, #128	; 0x80
   83126:	d004      	beq.n	83132 <__swhatbuf_r+0x52>
   83128:	2240      	movs	r2, #64	; 0x40
   8312a:	4618      	mov	r0, r3
   8312c:	602a      	str	r2, [r5, #0]
   8312e:	b010      	add	sp, #64	; 0x40
   83130:	bd70      	pop	{r4, r5, r6, pc}
   83132:	f44f 6380 	mov.w	r3, #1024	; 0x400
   83136:	602b      	str	r3, [r5, #0]
   83138:	b010      	add	sp, #64	; 0x40
   8313a:	bd70      	pop	{r4, r5, r6, pc}

0008313c <__smakebuf_r>:
   8313c:	898a      	ldrh	r2, [r1, #12]
   8313e:	460b      	mov	r3, r1
   83140:	0792      	lsls	r2, r2, #30
   83142:	d506      	bpl.n	83152 <__smakebuf_r+0x16>
   83144:	2101      	movs	r1, #1
   83146:	f103 0243 	add.w	r2, r3, #67	; 0x43
   8314a:	6159      	str	r1, [r3, #20]
   8314c:	601a      	str	r2, [r3, #0]
   8314e:	611a      	str	r2, [r3, #16]
   83150:	4770      	bx	lr
   83152:	b5f0      	push	{r4, r5, r6, r7, lr}
   83154:	b083      	sub	sp, #12
   83156:	ab01      	add	r3, sp, #4
   83158:	466a      	mov	r2, sp
   8315a:	460c      	mov	r4, r1
   8315c:	4606      	mov	r6, r0
   8315e:	f7ff ffbf 	bl	830e0 <__swhatbuf_r>
   83162:	9900      	ldr	r1, [sp, #0]
   83164:	4605      	mov	r5, r0
   83166:	4630      	mov	r0, r6
   83168:	f000 f83a 	bl	831e0 <_malloc_r>
   8316c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83170:	b1d8      	cbz	r0, 831aa <__smakebuf_r+0x6e>
   83172:	e89d 0006 	ldmia.w	sp, {r1, r2}
   83176:	4f15      	ldr	r7, [pc, #84]	; (831cc <__smakebuf_r+0x90>)
   83178:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   8317c:	63f7      	str	r7, [r6, #60]	; 0x3c
   8317e:	81a3      	strh	r3, [r4, #12]
   83180:	6020      	str	r0, [r4, #0]
   83182:	6120      	str	r0, [r4, #16]
   83184:	6161      	str	r1, [r4, #20]
   83186:	b91a      	cbnz	r2, 83190 <__smakebuf_r+0x54>
   83188:	432b      	orrs	r3, r5
   8318a:	81a3      	strh	r3, [r4, #12]
   8318c:	b003      	add	sp, #12
   8318e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83190:	4630      	mov	r0, r6
   83192:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83196:	f000 ffcf 	bl	84138 <_isatty_r>
   8319a:	b1a0      	cbz	r0, 831c6 <__smakebuf_r+0x8a>
   8319c:	89a3      	ldrh	r3, [r4, #12]
   8319e:	f023 0303 	bic.w	r3, r3, #3
   831a2:	f043 0301 	orr.w	r3, r3, #1
   831a6:	b21b      	sxth	r3, r3
   831a8:	e7ee      	b.n	83188 <__smakebuf_r+0x4c>
   831aa:	059a      	lsls	r2, r3, #22
   831ac:	d4ee      	bmi.n	8318c <__smakebuf_r+0x50>
   831ae:	2101      	movs	r1, #1
   831b0:	f023 0303 	bic.w	r3, r3, #3
   831b4:	f104 0243 	add.w	r2, r4, #67	; 0x43
   831b8:	f043 0302 	orr.w	r3, r3, #2
   831bc:	81a3      	strh	r3, [r4, #12]
   831be:	6161      	str	r1, [r4, #20]
   831c0:	6022      	str	r2, [r4, #0]
   831c2:	6122      	str	r2, [r4, #16]
   831c4:	e7e2      	b.n	8318c <__smakebuf_r+0x50>
   831c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   831ca:	e7dd      	b.n	83188 <__smakebuf_r+0x4c>
   831cc:	000828fd 	.word	0x000828fd

000831d0 <malloc>:
   831d0:	4b02      	ldr	r3, [pc, #8]	; (831dc <malloc+0xc>)
   831d2:	4601      	mov	r1, r0
   831d4:	6818      	ldr	r0, [r3, #0]
   831d6:	f000 b803 	b.w	831e0 <_malloc_r>
   831da:	bf00      	nop
   831dc:	20070140 	.word	0x20070140

000831e0 <_malloc_r>:
   831e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   831e4:	f101 060b 	add.w	r6, r1, #11
   831e8:	2e16      	cmp	r6, #22
   831ea:	b083      	sub	sp, #12
   831ec:	4605      	mov	r5, r0
   831ee:	f240 809e 	bls.w	8332e <_malloc_r+0x14e>
   831f2:	f036 0607 	bics.w	r6, r6, #7
   831f6:	f100 80bd 	bmi.w	83374 <_malloc_r+0x194>
   831fa:	42b1      	cmp	r1, r6
   831fc:	f200 80ba 	bhi.w	83374 <_malloc_r+0x194>
   83200:	f000 fbc6 	bl	83990 <__malloc_lock>
   83204:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   83208:	f0c0 8285 	bcc.w	83716 <_malloc_r+0x536>
   8320c:	0a73      	lsrs	r3, r6, #9
   8320e:	f000 80b8 	beq.w	83382 <_malloc_r+0x1a2>
   83212:	2b04      	cmp	r3, #4
   83214:	f200 816c 	bhi.w	834f0 <_malloc_r+0x310>
   83218:	09b3      	lsrs	r3, r6, #6
   8321a:	f103 0039 	add.w	r0, r3, #57	; 0x39
   8321e:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   83222:	00c1      	lsls	r1, r0, #3
   83224:	4fb8      	ldr	r7, [pc, #736]	; (83508 <_malloc_r+0x328>)
   83226:	4439      	add	r1, r7
   83228:	684c      	ldr	r4, [r1, #4]
   8322a:	3908      	subs	r1, #8
   8322c:	42a1      	cmp	r1, r4
   8322e:	d106      	bne.n	8323e <_malloc_r+0x5e>
   83230:	e00c      	b.n	8324c <_malloc_r+0x6c>
   83232:	2a00      	cmp	r2, #0
   83234:	f280 80ab 	bge.w	8338e <_malloc_r+0x1ae>
   83238:	68e4      	ldr	r4, [r4, #12]
   8323a:	42a1      	cmp	r1, r4
   8323c:	d006      	beq.n	8324c <_malloc_r+0x6c>
   8323e:	6863      	ldr	r3, [r4, #4]
   83240:	f023 0303 	bic.w	r3, r3, #3
   83244:	1b9a      	subs	r2, r3, r6
   83246:	2a0f      	cmp	r2, #15
   83248:	ddf3      	ble.n	83232 <_malloc_r+0x52>
   8324a:	4670      	mov	r0, lr
   8324c:	693c      	ldr	r4, [r7, #16]
   8324e:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 8351c <_malloc_r+0x33c>
   83252:	4574      	cmp	r4, lr
   83254:	f000 819e 	beq.w	83594 <_malloc_r+0x3b4>
   83258:	6863      	ldr	r3, [r4, #4]
   8325a:	f023 0303 	bic.w	r3, r3, #3
   8325e:	1b9a      	subs	r2, r3, r6
   83260:	2a0f      	cmp	r2, #15
   83262:	f300 8183 	bgt.w	8356c <_malloc_r+0x38c>
   83266:	2a00      	cmp	r2, #0
   83268:	f8c7 e014 	str.w	lr, [r7, #20]
   8326c:	f8c7 e010 	str.w	lr, [r7, #16]
   83270:	f280 8091 	bge.w	83396 <_malloc_r+0x1b6>
   83274:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   83278:	f080 8154 	bcs.w	83524 <_malloc_r+0x344>
   8327c:	2201      	movs	r2, #1
   8327e:	08db      	lsrs	r3, r3, #3
   83280:	6879      	ldr	r1, [r7, #4]
   83282:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   83286:	4413      	add	r3, r2
   83288:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   8328c:	fa02 f20c 	lsl.w	r2, r2, ip
   83290:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   83294:	430a      	orrs	r2, r1
   83296:	f1ac 0108 	sub.w	r1, ip, #8
   8329a:	60e1      	str	r1, [r4, #12]
   8329c:	f8c4 8008 	str.w	r8, [r4, #8]
   832a0:	607a      	str	r2, [r7, #4]
   832a2:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   832a6:	f8c8 400c 	str.w	r4, [r8, #12]
   832aa:	2401      	movs	r4, #1
   832ac:	1083      	asrs	r3, r0, #2
   832ae:	409c      	lsls	r4, r3
   832b0:	4294      	cmp	r4, r2
   832b2:	d87d      	bhi.n	833b0 <_malloc_r+0x1d0>
   832b4:	4214      	tst	r4, r2
   832b6:	d106      	bne.n	832c6 <_malloc_r+0xe6>
   832b8:	f020 0003 	bic.w	r0, r0, #3
   832bc:	0064      	lsls	r4, r4, #1
   832be:	4214      	tst	r4, r2
   832c0:	f100 0004 	add.w	r0, r0, #4
   832c4:	d0fa      	beq.n	832bc <_malloc_r+0xdc>
   832c6:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   832ca:	46cc      	mov	ip, r9
   832cc:	4680      	mov	r8, r0
   832ce:	f8dc 300c 	ldr.w	r3, [ip, #12]
   832d2:	459c      	cmp	ip, r3
   832d4:	d107      	bne.n	832e6 <_malloc_r+0x106>
   832d6:	e15f      	b.n	83598 <_malloc_r+0x3b8>
   832d8:	2a00      	cmp	r2, #0
   832da:	f280 816d 	bge.w	835b8 <_malloc_r+0x3d8>
   832de:	68db      	ldr	r3, [r3, #12]
   832e0:	459c      	cmp	ip, r3
   832e2:	f000 8159 	beq.w	83598 <_malloc_r+0x3b8>
   832e6:	6859      	ldr	r1, [r3, #4]
   832e8:	f021 0103 	bic.w	r1, r1, #3
   832ec:	1b8a      	subs	r2, r1, r6
   832ee:	2a0f      	cmp	r2, #15
   832f0:	ddf2      	ble.n	832d8 <_malloc_r+0xf8>
   832f2:	68dc      	ldr	r4, [r3, #12]
   832f4:	f8d3 c008 	ldr.w	ip, [r3, #8]
   832f8:	f046 0801 	orr.w	r8, r6, #1
   832fc:	4628      	mov	r0, r5
   832fe:	441e      	add	r6, r3
   83300:	f042 0501 	orr.w	r5, r2, #1
   83304:	f8c3 8004 	str.w	r8, [r3, #4]
   83308:	f8cc 400c 	str.w	r4, [ip, #12]
   8330c:	f8c4 c008 	str.w	ip, [r4, #8]
   83310:	617e      	str	r6, [r7, #20]
   83312:	613e      	str	r6, [r7, #16]
   83314:	f8c6 e00c 	str.w	lr, [r6, #12]
   83318:	f8c6 e008 	str.w	lr, [r6, #8]
   8331c:	6075      	str	r5, [r6, #4]
   8331e:	505a      	str	r2, [r3, r1]
   83320:	9300      	str	r3, [sp, #0]
   83322:	f000 fb3b 	bl	8399c <__malloc_unlock>
   83326:	9b00      	ldr	r3, [sp, #0]
   83328:	f103 0408 	add.w	r4, r3, #8
   8332c:	e01e      	b.n	8336c <_malloc_r+0x18c>
   8332e:	2910      	cmp	r1, #16
   83330:	d820      	bhi.n	83374 <_malloc_r+0x194>
   83332:	f000 fb2d 	bl	83990 <__malloc_lock>
   83336:	2610      	movs	r6, #16
   83338:	2318      	movs	r3, #24
   8333a:	2002      	movs	r0, #2
   8333c:	4f72      	ldr	r7, [pc, #456]	; (83508 <_malloc_r+0x328>)
   8333e:	443b      	add	r3, r7
   83340:	685c      	ldr	r4, [r3, #4]
   83342:	f1a3 0208 	sub.w	r2, r3, #8
   83346:	4294      	cmp	r4, r2
   83348:	f000 812f 	beq.w	835aa <_malloc_r+0x3ca>
   8334c:	6863      	ldr	r3, [r4, #4]
   8334e:	68e1      	ldr	r1, [r4, #12]
   83350:	f023 0303 	bic.w	r3, r3, #3
   83354:	4423      	add	r3, r4
   83356:	685a      	ldr	r2, [r3, #4]
   83358:	68a6      	ldr	r6, [r4, #8]
   8335a:	f042 0201 	orr.w	r2, r2, #1
   8335e:	60f1      	str	r1, [r6, #12]
   83360:	4628      	mov	r0, r5
   83362:	608e      	str	r6, [r1, #8]
   83364:	605a      	str	r2, [r3, #4]
   83366:	f000 fb19 	bl	8399c <__malloc_unlock>
   8336a:	3408      	adds	r4, #8
   8336c:	4620      	mov	r0, r4
   8336e:	b003      	add	sp, #12
   83370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83374:	2400      	movs	r4, #0
   83376:	230c      	movs	r3, #12
   83378:	4620      	mov	r0, r4
   8337a:	602b      	str	r3, [r5, #0]
   8337c:	b003      	add	sp, #12
   8337e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83382:	2040      	movs	r0, #64	; 0x40
   83384:	f44f 7100 	mov.w	r1, #512	; 0x200
   83388:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   8338c:	e74a      	b.n	83224 <_malloc_r+0x44>
   8338e:	4423      	add	r3, r4
   83390:	685a      	ldr	r2, [r3, #4]
   83392:	68e1      	ldr	r1, [r4, #12]
   83394:	e7e0      	b.n	83358 <_malloc_r+0x178>
   83396:	4423      	add	r3, r4
   83398:	685a      	ldr	r2, [r3, #4]
   8339a:	4628      	mov	r0, r5
   8339c:	f042 0201 	orr.w	r2, r2, #1
   833a0:	605a      	str	r2, [r3, #4]
   833a2:	3408      	adds	r4, #8
   833a4:	f000 fafa 	bl	8399c <__malloc_unlock>
   833a8:	4620      	mov	r0, r4
   833aa:	b003      	add	sp, #12
   833ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   833b0:	68bc      	ldr	r4, [r7, #8]
   833b2:	6863      	ldr	r3, [r4, #4]
   833b4:	f023 0803 	bic.w	r8, r3, #3
   833b8:	45b0      	cmp	r8, r6
   833ba:	d304      	bcc.n	833c6 <_malloc_r+0x1e6>
   833bc:	eba8 0306 	sub.w	r3, r8, r6
   833c0:	2b0f      	cmp	r3, #15
   833c2:	f300 8085 	bgt.w	834d0 <_malloc_r+0x2f0>
   833c6:	f8df 9158 	ldr.w	r9, [pc, #344]	; 83520 <_malloc_r+0x340>
   833ca:	4b50      	ldr	r3, [pc, #320]	; (8350c <_malloc_r+0x32c>)
   833cc:	f8d9 2000 	ldr.w	r2, [r9]
   833d0:	681b      	ldr	r3, [r3, #0]
   833d2:	3201      	adds	r2, #1
   833d4:	4433      	add	r3, r6
   833d6:	eb04 0a08 	add.w	sl, r4, r8
   833da:	f000 8154 	beq.w	83686 <_malloc_r+0x4a6>
   833de:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   833e2:	330f      	adds	r3, #15
   833e4:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   833e8:	f02b 0b0f 	bic.w	fp, fp, #15
   833ec:	4659      	mov	r1, fp
   833ee:	4628      	mov	r0, r5
   833f0:	f000 fc90 	bl	83d14 <_sbrk_r>
   833f4:	1c41      	adds	r1, r0, #1
   833f6:	4602      	mov	r2, r0
   833f8:	f000 80fb 	beq.w	835f2 <_malloc_r+0x412>
   833fc:	4582      	cmp	sl, r0
   833fe:	f200 80f6 	bhi.w	835ee <_malloc_r+0x40e>
   83402:	4b43      	ldr	r3, [pc, #268]	; (83510 <_malloc_r+0x330>)
   83404:	6819      	ldr	r1, [r3, #0]
   83406:	4459      	add	r1, fp
   83408:	6019      	str	r1, [r3, #0]
   8340a:	f000 814c 	beq.w	836a6 <_malloc_r+0x4c6>
   8340e:	f8d9 0000 	ldr.w	r0, [r9]
   83412:	3001      	adds	r0, #1
   83414:	bf1b      	ittet	ne
   83416:	eba2 0a0a 	subne.w	sl, r2, sl
   8341a:	4451      	addne	r1, sl
   8341c:	f8c9 2000 	streq.w	r2, [r9]
   83420:	6019      	strne	r1, [r3, #0]
   83422:	f012 0107 	ands.w	r1, r2, #7
   83426:	f000 8114 	beq.w	83652 <_malloc_r+0x472>
   8342a:	f1c1 0008 	rsb	r0, r1, #8
   8342e:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   83432:	4402      	add	r2, r0
   83434:	3108      	adds	r1, #8
   83436:	eb02 090b 	add.w	r9, r2, fp
   8343a:	f3c9 090b 	ubfx	r9, r9, #0, #12
   8343e:	eba1 0909 	sub.w	r9, r1, r9
   83442:	4649      	mov	r1, r9
   83444:	4628      	mov	r0, r5
   83446:	9301      	str	r3, [sp, #4]
   83448:	9200      	str	r2, [sp, #0]
   8344a:	f000 fc63 	bl	83d14 <_sbrk_r>
   8344e:	1c43      	adds	r3, r0, #1
   83450:	e89d 000c 	ldmia.w	sp, {r2, r3}
   83454:	f000 8142 	beq.w	836dc <_malloc_r+0x4fc>
   83458:	1a80      	subs	r0, r0, r2
   8345a:	4448      	add	r0, r9
   8345c:	f040 0001 	orr.w	r0, r0, #1
   83460:	6819      	ldr	r1, [r3, #0]
   83462:	42bc      	cmp	r4, r7
   83464:	4449      	add	r1, r9
   83466:	60ba      	str	r2, [r7, #8]
   83468:	6019      	str	r1, [r3, #0]
   8346a:	6050      	str	r0, [r2, #4]
   8346c:	d017      	beq.n	8349e <_malloc_r+0x2be>
   8346e:	f1b8 0f0f 	cmp.w	r8, #15
   83472:	f240 80fa 	bls.w	8366a <_malloc_r+0x48a>
   83476:	f04f 0c05 	mov.w	ip, #5
   8347a:	6862      	ldr	r2, [r4, #4]
   8347c:	f1a8 000c 	sub.w	r0, r8, #12
   83480:	f020 0007 	bic.w	r0, r0, #7
   83484:	f002 0201 	and.w	r2, r2, #1
   83488:	eb04 0e00 	add.w	lr, r4, r0
   8348c:	4302      	orrs	r2, r0
   8348e:	280f      	cmp	r0, #15
   83490:	6062      	str	r2, [r4, #4]
   83492:	f8ce c004 	str.w	ip, [lr, #4]
   83496:	f8ce c008 	str.w	ip, [lr, #8]
   8349a:	f200 8116 	bhi.w	836ca <_malloc_r+0x4ea>
   8349e:	4b1d      	ldr	r3, [pc, #116]	; (83514 <_malloc_r+0x334>)
   834a0:	68bc      	ldr	r4, [r7, #8]
   834a2:	681a      	ldr	r2, [r3, #0]
   834a4:	4291      	cmp	r1, r2
   834a6:	bf88      	it	hi
   834a8:	6019      	strhi	r1, [r3, #0]
   834aa:	4b1b      	ldr	r3, [pc, #108]	; (83518 <_malloc_r+0x338>)
   834ac:	681a      	ldr	r2, [r3, #0]
   834ae:	4291      	cmp	r1, r2
   834b0:	6862      	ldr	r2, [r4, #4]
   834b2:	bf88      	it	hi
   834b4:	6019      	strhi	r1, [r3, #0]
   834b6:	f022 0203 	bic.w	r2, r2, #3
   834ba:	4296      	cmp	r6, r2
   834bc:	eba2 0306 	sub.w	r3, r2, r6
   834c0:	d801      	bhi.n	834c6 <_malloc_r+0x2e6>
   834c2:	2b0f      	cmp	r3, #15
   834c4:	dc04      	bgt.n	834d0 <_malloc_r+0x2f0>
   834c6:	4628      	mov	r0, r5
   834c8:	f000 fa68 	bl	8399c <__malloc_unlock>
   834cc:	2400      	movs	r4, #0
   834ce:	e74d      	b.n	8336c <_malloc_r+0x18c>
   834d0:	f046 0201 	orr.w	r2, r6, #1
   834d4:	f043 0301 	orr.w	r3, r3, #1
   834d8:	4426      	add	r6, r4
   834da:	6062      	str	r2, [r4, #4]
   834dc:	4628      	mov	r0, r5
   834de:	60be      	str	r6, [r7, #8]
   834e0:	3408      	adds	r4, #8
   834e2:	6073      	str	r3, [r6, #4]
   834e4:	f000 fa5a 	bl	8399c <__malloc_unlock>
   834e8:	4620      	mov	r0, r4
   834ea:	b003      	add	sp, #12
   834ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   834f0:	2b14      	cmp	r3, #20
   834f2:	d970      	bls.n	835d6 <_malloc_r+0x3f6>
   834f4:	2b54      	cmp	r3, #84	; 0x54
   834f6:	f200 80a2 	bhi.w	8363e <_malloc_r+0x45e>
   834fa:	0b33      	lsrs	r3, r6, #12
   834fc:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   83500:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   83504:	00c1      	lsls	r1, r0, #3
   83506:	e68d      	b.n	83224 <_malloc_r+0x44>
   83508:	200706e0 	.word	0x200706e0
   8350c:	20070c50 	.word	0x20070c50
   83510:	20070c20 	.word	0x20070c20
   83514:	20070c48 	.word	0x20070c48
   83518:	20070c4c 	.word	0x20070c4c
   8351c:	200706e8 	.word	0x200706e8
   83520:	20070ae8 	.word	0x20070ae8
   83524:	0a5a      	lsrs	r2, r3, #9
   83526:	2a04      	cmp	r2, #4
   83528:	d95b      	bls.n	835e2 <_malloc_r+0x402>
   8352a:	2a14      	cmp	r2, #20
   8352c:	f200 80ae 	bhi.w	8368c <_malloc_r+0x4ac>
   83530:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   83534:	00c9      	lsls	r1, r1, #3
   83536:	325b      	adds	r2, #91	; 0x5b
   83538:	eb07 0c01 	add.w	ip, r7, r1
   8353c:	5879      	ldr	r1, [r7, r1]
   8353e:	f1ac 0c08 	sub.w	ip, ip, #8
   83542:	458c      	cmp	ip, r1
   83544:	f000 8088 	beq.w	83658 <_malloc_r+0x478>
   83548:	684a      	ldr	r2, [r1, #4]
   8354a:	f022 0203 	bic.w	r2, r2, #3
   8354e:	4293      	cmp	r3, r2
   83550:	d273      	bcs.n	8363a <_malloc_r+0x45a>
   83552:	6889      	ldr	r1, [r1, #8]
   83554:	458c      	cmp	ip, r1
   83556:	d1f7      	bne.n	83548 <_malloc_r+0x368>
   83558:	f8dc 300c 	ldr.w	r3, [ip, #12]
   8355c:	687a      	ldr	r2, [r7, #4]
   8355e:	60e3      	str	r3, [r4, #12]
   83560:	f8c4 c008 	str.w	ip, [r4, #8]
   83564:	609c      	str	r4, [r3, #8]
   83566:	f8cc 400c 	str.w	r4, [ip, #12]
   8356a:	e69e      	b.n	832aa <_malloc_r+0xca>
   8356c:	f046 0c01 	orr.w	ip, r6, #1
   83570:	f042 0101 	orr.w	r1, r2, #1
   83574:	4426      	add	r6, r4
   83576:	f8c4 c004 	str.w	ip, [r4, #4]
   8357a:	4628      	mov	r0, r5
   8357c:	617e      	str	r6, [r7, #20]
   8357e:	613e      	str	r6, [r7, #16]
   83580:	f8c6 e00c 	str.w	lr, [r6, #12]
   83584:	f8c6 e008 	str.w	lr, [r6, #8]
   83588:	6071      	str	r1, [r6, #4]
   8358a:	50e2      	str	r2, [r4, r3]
   8358c:	f000 fa06 	bl	8399c <__malloc_unlock>
   83590:	3408      	adds	r4, #8
   83592:	e6eb      	b.n	8336c <_malloc_r+0x18c>
   83594:	687a      	ldr	r2, [r7, #4]
   83596:	e688      	b.n	832aa <_malloc_r+0xca>
   83598:	f108 0801 	add.w	r8, r8, #1
   8359c:	f018 0f03 	tst.w	r8, #3
   835a0:	f10c 0c08 	add.w	ip, ip, #8
   835a4:	f47f ae93 	bne.w	832ce <_malloc_r+0xee>
   835a8:	e02d      	b.n	83606 <_malloc_r+0x426>
   835aa:	68dc      	ldr	r4, [r3, #12]
   835ac:	42a3      	cmp	r3, r4
   835ae:	bf08      	it	eq
   835b0:	3002      	addeq	r0, #2
   835b2:	f43f ae4b 	beq.w	8324c <_malloc_r+0x6c>
   835b6:	e6c9      	b.n	8334c <_malloc_r+0x16c>
   835b8:	461c      	mov	r4, r3
   835ba:	4419      	add	r1, r3
   835bc:	684a      	ldr	r2, [r1, #4]
   835be:	68db      	ldr	r3, [r3, #12]
   835c0:	f854 6f08 	ldr.w	r6, [r4, #8]!
   835c4:	f042 0201 	orr.w	r2, r2, #1
   835c8:	604a      	str	r2, [r1, #4]
   835ca:	4628      	mov	r0, r5
   835cc:	60f3      	str	r3, [r6, #12]
   835ce:	609e      	str	r6, [r3, #8]
   835d0:	f000 f9e4 	bl	8399c <__malloc_unlock>
   835d4:	e6ca      	b.n	8336c <_malloc_r+0x18c>
   835d6:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   835da:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   835de:	00c1      	lsls	r1, r0, #3
   835e0:	e620      	b.n	83224 <_malloc_r+0x44>
   835e2:	099a      	lsrs	r2, r3, #6
   835e4:	f102 0139 	add.w	r1, r2, #57	; 0x39
   835e8:	00c9      	lsls	r1, r1, #3
   835ea:	3238      	adds	r2, #56	; 0x38
   835ec:	e7a4      	b.n	83538 <_malloc_r+0x358>
   835ee:	42bc      	cmp	r4, r7
   835f0:	d054      	beq.n	8369c <_malloc_r+0x4bc>
   835f2:	68bc      	ldr	r4, [r7, #8]
   835f4:	6862      	ldr	r2, [r4, #4]
   835f6:	f022 0203 	bic.w	r2, r2, #3
   835fa:	e75e      	b.n	834ba <_malloc_r+0x2da>
   835fc:	f859 3908 	ldr.w	r3, [r9], #-8
   83600:	4599      	cmp	r9, r3
   83602:	f040 8086 	bne.w	83712 <_malloc_r+0x532>
   83606:	f010 0f03 	tst.w	r0, #3
   8360a:	f100 30ff 	add.w	r0, r0, #4294967295
   8360e:	d1f5      	bne.n	835fc <_malloc_r+0x41c>
   83610:	687b      	ldr	r3, [r7, #4]
   83612:	ea23 0304 	bic.w	r3, r3, r4
   83616:	607b      	str	r3, [r7, #4]
   83618:	0064      	lsls	r4, r4, #1
   8361a:	429c      	cmp	r4, r3
   8361c:	f63f aec8 	bhi.w	833b0 <_malloc_r+0x1d0>
   83620:	2c00      	cmp	r4, #0
   83622:	f43f aec5 	beq.w	833b0 <_malloc_r+0x1d0>
   83626:	421c      	tst	r4, r3
   83628:	4640      	mov	r0, r8
   8362a:	f47f ae4c 	bne.w	832c6 <_malloc_r+0xe6>
   8362e:	0064      	lsls	r4, r4, #1
   83630:	421c      	tst	r4, r3
   83632:	f100 0004 	add.w	r0, r0, #4
   83636:	d0fa      	beq.n	8362e <_malloc_r+0x44e>
   83638:	e645      	b.n	832c6 <_malloc_r+0xe6>
   8363a:	468c      	mov	ip, r1
   8363c:	e78c      	b.n	83558 <_malloc_r+0x378>
   8363e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   83642:	d815      	bhi.n	83670 <_malloc_r+0x490>
   83644:	0bf3      	lsrs	r3, r6, #15
   83646:	f103 0078 	add.w	r0, r3, #120	; 0x78
   8364a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   8364e:	00c1      	lsls	r1, r0, #3
   83650:	e5e8      	b.n	83224 <_malloc_r+0x44>
   83652:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   83656:	e6ee      	b.n	83436 <_malloc_r+0x256>
   83658:	2101      	movs	r1, #1
   8365a:	687b      	ldr	r3, [r7, #4]
   8365c:	1092      	asrs	r2, r2, #2
   8365e:	fa01 f202 	lsl.w	r2, r1, r2
   83662:	431a      	orrs	r2, r3
   83664:	607a      	str	r2, [r7, #4]
   83666:	4663      	mov	r3, ip
   83668:	e779      	b.n	8355e <_malloc_r+0x37e>
   8366a:	2301      	movs	r3, #1
   8366c:	6053      	str	r3, [r2, #4]
   8366e:	e72a      	b.n	834c6 <_malloc_r+0x2e6>
   83670:	f240 5254 	movw	r2, #1364	; 0x554
   83674:	4293      	cmp	r3, r2
   83676:	d822      	bhi.n	836be <_malloc_r+0x4de>
   83678:	0cb3      	lsrs	r3, r6, #18
   8367a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   8367e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   83682:	00c1      	lsls	r1, r0, #3
   83684:	e5ce      	b.n	83224 <_malloc_r+0x44>
   83686:	f103 0b10 	add.w	fp, r3, #16
   8368a:	e6af      	b.n	833ec <_malloc_r+0x20c>
   8368c:	2a54      	cmp	r2, #84	; 0x54
   8368e:	d829      	bhi.n	836e4 <_malloc_r+0x504>
   83690:	0b1a      	lsrs	r2, r3, #12
   83692:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   83696:	00c9      	lsls	r1, r1, #3
   83698:	326e      	adds	r2, #110	; 0x6e
   8369a:	e74d      	b.n	83538 <_malloc_r+0x358>
   8369c:	4b20      	ldr	r3, [pc, #128]	; (83720 <_malloc_r+0x540>)
   8369e:	6819      	ldr	r1, [r3, #0]
   836a0:	4459      	add	r1, fp
   836a2:	6019      	str	r1, [r3, #0]
   836a4:	e6b3      	b.n	8340e <_malloc_r+0x22e>
   836a6:	f3ca 000b 	ubfx	r0, sl, #0, #12
   836aa:	2800      	cmp	r0, #0
   836ac:	f47f aeaf 	bne.w	8340e <_malloc_r+0x22e>
   836b0:	eb08 030b 	add.w	r3, r8, fp
   836b4:	68ba      	ldr	r2, [r7, #8]
   836b6:	f043 0301 	orr.w	r3, r3, #1
   836ba:	6053      	str	r3, [r2, #4]
   836bc:	e6ef      	b.n	8349e <_malloc_r+0x2be>
   836be:	207f      	movs	r0, #127	; 0x7f
   836c0:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   836c4:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   836c8:	e5ac      	b.n	83224 <_malloc_r+0x44>
   836ca:	f104 0108 	add.w	r1, r4, #8
   836ce:	4628      	mov	r0, r5
   836d0:	9300      	str	r3, [sp, #0]
   836d2:	f7ff fa67 	bl	82ba4 <_free_r>
   836d6:	9b00      	ldr	r3, [sp, #0]
   836d8:	6819      	ldr	r1, [r3, #0]
   836da:	e6e0      	b.n	8349e <_malloc_r+0x2be>
   836dc:	2001      	movs	r0, #1
   836de:	f04f 0900 	mov.w	r9, #0
   836e2:	e6bd      	b.n	83460 <_malloc_r+0x280>
   836e4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   836e8:	d805      	bhi.n	836f6 <_malloc_r+0x516>
   836ea:	0bda      	lsrs	r2, r3, #15
   836ec:	f102 0178 	add.w	r1, r2, #120	; 0x78
   836f0:	00c9      	lsls	r1, r1, #3
   836f2:	3277      	adds	r2, #119	; 0x77
   836f4:	e720      	b.n	83538 <_malloc_r+0x358>
   836f6:	f240 5154 	movw	r1, #1364	; 0x554
   836fa:	428a      	cmp	r2, r1
   836fc:	d805      	bhi.n	8370a <_malloc_r+0x52a>
   836fe:	0c9a      	lsrs	r2, r3, #18
   83700:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   83704:	00c9      	lsls	r1, r1, #3
   83706:	327c      	adds	r2, #124	; 0x7c
   83708:	e716      	b.n	83538 <_malloc_r+0x358>
   8370a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   8370e:	227e      	movs	r2, #126	; 0x7e
   83710:	e712      	b.n	83538 <_malloc_r+0x358>
   83712:	687b      	ldr	r3, [r7, #4]
   83714:	e780      	b.n	83618 <_malloc_r+0x438>
   83716:	08f0      	lsrs	r0, r6, #3
   83718:	f106 0308 	add.w	r3, r6, #8
   8371c:	e60e      	b.n	8333c <_malloc_r+0x15c>
   8371e:	bf00      	nop
   83720:	20070c20 	.word	0x20070c20

00083724 <__ascii_mbtowc>:
   83724:	b082      	sub	sp, #8
   83726:	b149      	cbz	r1, 8373c <__ascii_mbtowc+0x18>
   83728:	b15a      	cbz	r2, 83742 <__ascii_mbtowc+0x1e>
   8372a:	b16b      	cbz	r3, 83748 <__ascii_mbtowc+0x24>
   8372c:	7813      	ldrb	r3, [r2, #0]
   8372e:	600b      	str	r3, [r1, #0]
   83730:	7812      	ldrb	r2, [r2, #0]
   83732:	1c10      	adds	r0, r2, #0
   83734:	bf18      	it	ne
   83736:	2001      	movne	r0, #1
   83738:	b002      	add	sp, #8
   8373a:	4770      	bx	lr
   8373c:	a901      	add	r1, sp, #4
   8373e:	2a00      	cmp	r2, #0
   83740:	d1f3      	bne.n	8372a <__ascii_mbtowc+0x6>
   83742:	4610      	mov	r0, r2
   83744:	b002      	add	sp, #8
   83746:	4770      	bx	lr
   83748:	f06f 0001 	mvn.w	r0, #1
   8374c:	e7f4      	b.n	83738 <__ascii_mbtowc+0x14>
   8374e:	bf00      	nop

00083750 <memchr>:
   83750:	0783      	lsls	r3, r0, #30
   83752:	b470      	push	{r4, r5, r6}
   83754:	b2cd      	uxtb	r5, r1
   83756:	d03d      	beq.n	837d4 <memchr+0x84>
   83758:	1e54      	subs	r4, r2, #1
   8375a:	b30a      	cbz	r2, 837a0 <memchr+0x50>
   8375c:	7803      	ldrb	r3, [r0, #0]
   8375e:	42ab      	cmp	r3, r5
   83760:	d01f      	beq.n	837a2 <memchr+0x52>
   83762:	1c43      	adds	r3, r0, #1
   83764:	e005      	b.n	83772 <memchr+0x22>
   83766:	f114 34ff 	adds.w	r4, r4, #4294967295
   8376a:	d319      	bcc.n	837a0 <memchr+0x50>
   8376c:	7802      	ldrb	r2, [r0, #0]
   8376e:	42aa      	cmp	r2, r5
   83770:	d017      	beq.n	837a2 <memchr+0x52>
   83772:	f013 0f03 	tst.w	r3, #3
   83776:	4618      	mov	r0, r3
   83778:	f103 0301 	add.w	r3, r3, #1
   8377c:	d1f3      	bne.n	83766 <memchr+0x16>
   8377e:	2c03      	cmp	r4, #3
   83780:	d811      	bhi.n	837a6 <memchr+0x56>
   83782:	b34c      	cbz	r4, 837d8 <memchr+0x88>
   83784:	7803      	ldrb	r3, [r0, #0]
   83786:	42ab      	cmp	r3, r5
   83788:	d00b      	beq.n	837a2 <memchr+0x52>
   8378a:	4404      	add	r4, r0
   8378c:	1c43      	adds	r3, r0, #1
   8378e:	e002      	b.n	83796 <memchr+0x46>
   83790:	7802      	ldrb	r2, [r0, #0]
   83792:	42aa      	cmp	r2, r5
   83794:	d005      	beq.n	837a2 <memchr+0x52>
   83796:	429c      	cmp	r4, r3
   83798:	4618      	mov	r0, r3
   8379a:	f103 0301 	add.w	r3, r3, #1
   8379e:	d1f7      	bne.n	83790 <memchr+0x40>
   837a0:	2000      	movs	r0, #0
   837a2:	bc70      	pop	{r4, r5, r6}
   837a4:	4770      	bx	lr
   837a6:	0209      	lsls	r1, r1, #8
   837a8:	b289      	uxth	r1, r1
   837aa:	4329      	orrs	r1, r5
   837ac:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   837b0:	6803      	ldr	r3, [r0, #0]
   837b2:	4606      	mov	r6, r0
   837b4:	404b      	eors	r3, r1
   837b6:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   837ba:	ea22 0303 	bic.w	r3, r2, r3
   837be:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   837c2:	f100 0004 	add.w	r0, r0, #4
   837c6:	d103      	bne.n	837d0 <memchr+0x80>
   837c8:	3c04      	subs	r4, #4
   837ca:	2c03      	cmp	r4, #3
   837cc:	d8f0      	bhi.n	837b0 <memchr+0x60>
   837ce:	e7d8      	b.n	83782 <memchr+0x32>
   837d0:	4630      	mov	r0, r6
   837d2:	e7d7      	b.n	83784 <memchr+0x34>
   837d4:	4614      	mov	r4, r2
   837d6:	e7d2      	b.n	8377e <memchr+0x2e>
   837d8:	4620      	mov	r0, r4
   837da:	e7e2      	b.n	837a2 <memchr+0x52>

000837dc <memcpy>:
   837dc:	4684      	mov	ip, r0
   837de:	ea41 0300 	orr.w	r3, r1, r0
   837e2:	f013 0303 	ands.w	r3, r3, #3
   837e6:	d149      	bne.n	8387c <memcpy+0xa0>
   837e8:	3a40      	subs	r2, #64	; 0x40
   837ea:	d323      	bcc.n	83834 <memcpy+0x58>
   837ec:	680b      	ldr	r3, [r1, #0]
   837ee:	6003      	str	r3, [r0, #0]
   837f0:	684b      	ldr	r3, [r1, #4]
   837f2:	6043      	str	r3, [r0, #4]
   837f4:	688b      	ldr	r3, [r1, #8]
   837f6:	6083      	str	r3, [r0, #8]
   837f8:	68cb      	ldr	r3, [r1, #12]
   837fa:	60c3      	str	r3, [r0, #12]
   837fc:	690b      	ldr	r3, [r1, #16]
   837fe:	6103      	str	r3, [r0, #16]
   83800:	694b      	ldr	r3, [r1, #20]
   83802:	6143      	str	r3, [r0, #20]
   83804:	698b      	ldr	r3, [r1, #24]
   83806:	6183      	str	r3, [r0, #24]
   83808:	69cb      	ldr	r3, [r1, #28]
   8380a:	61c3      	str	r3, [r0, #28]
   8380c:	6a0b      	ldr	r3, [r1, #32]
   8380e:	6203      	str	r3, [r0, #32]
   83810:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   83812:	6243      	str	r3, [r0, #36]	; 0x24
   83814:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   83816:	6283      	str	r3, [r0, #40]	; 0x28
   83818:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   8381a:	62c3      	str	r3, [r0, #44]	; 0x2c
   8381c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   8381e:	6303      	str	r3, [r0, #48]	; 0x30
   83820:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   83822:	6343      	str	r3, [r0, #52]	; 0x34
   83824:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   83826:	6383      	str	r3, [r0, #56]	; 0x38
   83828:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   8382a:	63c3      	str	r3, [r0, #60]	; 0x3c
   8382c:	3040      	adds	r0, #64	; 0x40
   8382e:	3140      	adds	r1, #64	; 0x40
   83830:	3a40      	subs	r2, #64	; 0x40
   83832:	d2db      	bcs.n	837ec <memcpy+0x10>
   83834:	3230      	adds	r2, #48	; 0x30
   83836:	d30b      	bcc.n	83850 <memcpy+0x74>
   83838:	680b      	ldr	r3, [r1, #0]
   8383a:	6003      	str	r3, [r0, #0]
   8383c:	684b      	ldr	r3, [r1, #4]
   8383e:	6043      	str	r3, [r0, #4]
   83840:	688b      	ldr	r3, [r1, #8]
   83842:	6083      	str	r3, [r0, #8]
   83844:	68cb      	ldr	r3, [r1, #12]
   83846:	60c3      	str	r3, [r0, #12]
   83848:	3010      	adds	r0, #16
   8384a:	3110      	adds	r1, #16
   8384c:	3a10      	subs	r2, #16
   8384e:	d2f3      	bcs.n	83838 <memcpy+0x5c>
   83850:	320c      	adds	r2, #12
   83852:	d305      	bcc.n	83860 <memcpy+0x84>
   83854:	f851 3b04 	ldr.w	r3, [r1], #4
   83858:	f840 3b04 	str.w	r3, [r0], #4
   8385c:	3a04      	subs	r2, #4
   8385e:	d2f9      	bcs.n	83854 <memcpy+0x78>
   83860:	3204      	adds	r2, #4
   83862:	d008      	beq.n	83876 <memcpy+0x9a>
   83864:	07d2      	lsls	r2, r2, #31
   83866:	bf1c      	itt	ne
   83868:	f811 3b01 	ldrbne.w	r3, [r1], #1
   8386c:	f800 3b01 	strbne.w	r3, [r0], #1
   83870:	d301      	bcc.n	83876 <memcpy+0x9a>
   83872:	880b      	ldrh	r3, [r1, #0]
   83874:	8003      	strh	r3, [r0, #0]
   83876:	4660      	mov	r0, ip
   83878:	4770      	bx	lr
   8387a:	bf00      	nop
   8387c:	2a08      	cmp	r2, #8
   8387e:	d313      	bcc.n	838a8 <memcpy+0xcc>
   83880:	078b      	lsls	r3, r1, #30
   83882:	d0b1      	beq.n	837e8 <memcpy+0xc>
   83884:	f010 0303 	ands.w	r3, r0, #3
   83888:	d0ae      	beq.n	837e8 <memcpy+0xc>
   8388a:	f1c3 0304 	rsb	r3, r3, #4
   8388e:	1ad2      	subs	r2, r2, r3
   83890:	07db      	lsls	r3, r3, #31
   83892:	bf1c      	itt	ne
   83894:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83898:	f800 3b01 	strbne.w	r3, [r0], #1
   8389c:	d3a4      	bcc.n	837e8 <memcpy+0xc>
   8389e:	f831 3b02 	ldrh.w	r3, [r1], #2
   838a2:	f820 3b02 	strh.w	r3, [r0], #2
   838a6:	e79f      	b.n	837e8 <memcpy+0xc>
   838a8:	3a04      	subs	r2, #4
   838aa:	d3d9      	bcc.n	83860 <memcpy+0x84>
   838ac:	3a01      	subs	r2, #1
   838ae:	f811 3b01 	ldrb.w	r3, [r1], #1
   838b2:	f800 3b01 	strb.w	r3, [r0], #1
   838b6:	d2f9      	bcs.n	838ac <memcpy+0xd0>
   838b8:	780b      	ldrb	r3, [r1, #0]
   838ba:	7003      	strb	r3, [r0, #0]
   838bc:	784b      	ldrb	r3, [r1, #1]
   838be:	7043      	strb	r3, [r0, #1]
   838c0:	788b      	ldrb	r3, [r1, #2]
   838c2:	7083      	strb	r3, [r0, #2]
   838c4:	4660      	mov	r0, ip
   838c6:	4770      	bx	lr

000838c8 <memmove>:
   838c8:	4288      	cmp	r0, r1
   838ca:	b5f0      	push	{r4, r5, r6, r7, lr}
   838cc:	d90d      	bls.n	838ea <memmove+0x22>
   838ce:	188b      	adds	r3, r1, r2
   838d0:	4298      	cmp	r0, r3
   838d2:	d20a      	bcs.n	838ea <memmove+0x22>
   838d4:	1884      	adds	r4, r0, r2
   838d6:	2a00      	cmp	r2, #0
   838d8:	d051      	beq.n	8397e <memmove+0xb6>
   838da:	4622      	mov	r2, r4
   838dc:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   838e0:	4299      	cmp	r1, r3
   838e2:	f802 4d01 	strb.w	r4, [r2, #-1]!
   838e6:	d1f9      	bne.n	838dc <memmove+0x14>
   838e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   838ea:	2a0f      	cmp	r2, #15
   838ec:	d948      	bls.n	83980 <memmove+0xb8>
   838ee:	ea41 0300 	orr.w	r3, r1, r0
   838f2:	079b      	lsls	r3, r3, #30
   838f4:	d146      	bne.n	83984 <memmove+0xbc>
   838f6:	4615      	mov	r5, r2
   838f8:	f100 0410 	add.w	r4, r0, #16
   838fc:	f101 0310 	add.w	r3, r1, #16
   83900:	f853 6c10 	ldr.w	r6, [r3, #-16]
   83904:	3d10      	subs	r5, #16
   83906:	f844 6c10 	str.w	r6, [r4, #-16]
   8390a:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   8390e:	2d0f      	cmp	r5, #15
   83910:	f844 6c0c 	str.w	r6, [r4, #-12]
   83914:	f853 6c08 	ldr.w	r6, [r3, #-8]
   83918:	f104 0410 	add.w	r4, r4, #16
   8391c:	f844 6c18 	str.w	r6, [r4, #-24]
   83920:	f853 6c04 	ldr.w	r6, [r3, #-4]
   83924:	f103 0310 	add.w	r3, r3, #16
   83928:	f844 6c14 	str.w	r6, [r4, #-20]
   8392c:	d8e8      	bhi.n	83900 <memmove+0x38>
   8392e:	f1a2 0310 	sub.w	r3, r2, #16
   83932:	f023 030f 	bic.w	r3, r3, #15
   83936:	f002 0e0f 	and.w	lr, r2, #15
   8393a:	3310      	adds	r3, #16
   8393c:	f1be 0f03 	cmp.w	lr, #3
   83940:	4419      	add	r1, r3
   83942:	4403      	add	r3, r0
   83944:	d921      	bls.n	8398a <memmove+0xc2>
   83946:	460e      	mov	r6, r1
   83948:	4674      	mov	r4, lr
   8394a:	1f1d      	subs	r5, r3, #4
   8394c:	f856 7b04 	ldr.w	r7, [r6], #4
   83950:	3c04      	subs	r4, #4
   83952:	2c03      	cmp	r4, #3
   83954:	f845 7f04 	str.w	r7, [r5, #4]!
   83958:	d8f8      	bhi.n	8394c <memmove+0x84>
   8395a:	f1ae 0404 	sub.w	r4, lr, #4
   8395e:	f024 0403 	bic.w	r4, r4, #3
   83962:	3404      	adds	r4, #4
   83964:	4421      	add	r1, r4
   83966:	4423      	add	r3, r4
   83968:	f002 0203 	and.w	r2, r2, #3
   8396c:	b162      	cbz	r2, 83988 <memmove+0xc0>
   8396e:	3b01      	subs	r3, #1
   83970:	440a      	add	r2, r1
   83972:	f811 4b01 	ldrb.w	r4, [r1], #1
   83976:	428a      	cmp	r2, r1
   83978:	f803 4f01 	strb.w	r4, [r3, #1]!
   8397c:	d1f9      	bne.n	83972 <memmove+0xaa>
   8397e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83980:	4603      	mov	r3, r0
   83982:	e7f3      	b.n	8396c <memmove+0xa4>
   83984:	4603      	mov	r3, r0
   83986:	e7f2      	b.n	8396e <memmove+0xa6>
   83988:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8398a:	4672      	mov	r2, lr
   8398c:	e7ee      	b.n	8396c <memmove+0xa4>
   8398e:	bf00      	nop

00083990 <__malloc_lock>:
   83990:	4801      	ldr	r0, [pc, #4]	; (83998 <__malloc_lock+0x8>)
   83992:	f7ff bba1 	b.w	830d8 <__retarget_lock_acquire_recursive>
   83996:	bf00      	nop
   83998:	20070c70 	.word	0x20070c70

0008399c <__malloc_unlock>:
   8399c:	4801      	ldr	r0, [pc, #4]	; (839a4 <__malloc_unlock+0x8>)
   8399e:	f7ff bb9d 	b.w	830dc <__retarget_lock_release_recursive>
   839a2:	bf00      	nop
   839a4:	20070c70 	.word	0x20070c70

000839a8 <_realloc_r>:
   839a8:	2900      	cmp	r1, #0
   839aa:	f000 8094 	beq.w	83ad6 <_realloc_r+0x12e>
   839ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   839b2:	460c      	mov	r4, r1
   839b4:	4615      	mov	r5, r2
   839b6:	b083      	sub	sp, #12
   839b8:	4680      	mov	r8, r0
   839ba:	f105 060b 	add.w	r6, r5, #11
   839be:	f7ff ffe7 	bl	83990 <__malloc_lock>
   839c2:	f854 ec04 	ldr.w	lr, [r4, #-4]
   839c6:	2e16      	cmp	r6, #22
   839c8:	f02e 0703 	bic.w	r7, lr, #3
   839cc:	f1a4 0908 	sub.w	r9, r4, #8
   839d0:	d83c      	bhi.n	83a4c <_realloc_r+0xa4>
   839d2:	2210      	movs	r2, #16
   839d4:	4616      	mov	r6, r2
   839d6:	42b5      	cmp	r5, r6
   839d8:	d83d      	bhi.n	83a56 <_realloc_r+0xae>
   839da:	4297      	cmp	r7, r2
   839dc:	da43      	bge.n	83a66 <_realloc_r+0xbe>
   839de:	4bc6      	ldr	r3, [pc, #792]	; (83cf8 <_realloc_r+0x350>)
   839e0:	eb09 0007 	add.w	r0, r9, r7
   839e4:	6899      	ldr	r1, [r3, #8]
   839e6:	4288      	cmp	r0, r1
   839e8:	f000 80c3 	beq.w	83b72 <_realloc_r+0x1ca>
   839ec:	6843      	ldr	r3, [r0, #4]
   839ee:	f023 0101 	bic.w	r1, r3, #1
   839f2:	4401      	add	r1, r0
   839f4:	6849      	ldr	r1, [r1, #4]
   839f6:	07c9      	lsls	r1, r1, #31
   839f8:	d54d      	bpl.n	83a96 <_realloc_r+0xee>
   839fa:	f01e 0f01 	tst.w	lr, #1
   839fe:	f000 809b 	beq.w	83b38 <_realloc_r+0x190>
   83a02:	4629      	mov	r1, r5
   83a04:	4640      	mov	r0, r8
   83a06:	f7ff fbeb 	bl	831e0 <_malloc_r>
   83a0a:	4605      	mov	r5, r0
   83a0c:	2800      	cmp	r0, #0
   83a0e:	d03b      	beq.n	83a88 <_realloc_r+0xe0>
   83a10:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83a14:	f1a0 0208 	sub.w	r2, r0, #8
   83a18:	f023 0301 	bic.w	r3, r3, #1
   83a1c:	444b      	add	r3, r9
   83a1e:	429a      	cmp	r2, r3
   83a20:	f000 812b 	beq.w	83c7a <_realloc_r+0x2d2>
   83a24:	1f3a      	subs	r2, r7, #4
   83a26:	2a24      	cmp	r2, #36	; 0x24
   83a28:	f200 8118 	bhi.w	83c5c <_realloc_r+0x2b4>
   83a2c:	2a13      	cmp	r2, #19
   83a2e:	f200 80eb 	bhi.w	83c08 <_realloc_r+0x260>
   83a32:	4603      	mov	r3, r0
   83a34:	4622      	mov	r2, r4
   83a36:	6811      	ldr	r1, [r2, #0]
   83a38:	6019      	str	r1, [r3, #0]
   83a3a:	6851      	ldr	r1, [r2, #4]
   83a3c:	6059      	str	r1, [r3, #4]
   83a3e:	6892      	ldr	r2, [r2, #8]
   83a40:	609a      	str	r2, [r3, #8]
   83a42:	4621      	mov	r1, r4
   83a44:	4640      	mov	r0, r8
   83a46:	f7ff f8ad 	bl	82ba4 <_free_r>
   83a4a:	e01d      	b.n	83a88 <_realloc_r+0xe0>
   83a4c:	f026 0607 	bic.w	r6, r6, #7
   83a50:	2e00      	cmp	r6, #0
   83a52:	4632      	mov	r2, r6
   83a54:	dabf      	bge.n	839d6 <_realloc_r+0x2e>
   83a56:	2500      	movs	r5, #0
   83a58:	230c      	movs	r3, #12
   83a5a:	4628      	mov	r0, r5
   83a5c:	f8c8 3000 	str.w	r3, [r8]
   83a60:	b003      	add	sp, #12
   83a62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83a66:	4625      	mov	r5, r4
   83a68:	1bbb      	subs	r3, r7, r6
   83a6a:	2b0f      	cmp	r3, #15
   83a6c:	f8d9 2004 	ldr.w	r2, [r9, #4]
   83a70:	d81d      	bhi.n	83aae <_realloc_r+0x106>
   83a72:	f002 0201 	and.w	r2, r2, #1
   83a76:	433a      	orrs	r2, r7
   83a78:	eb09 0107 	add.w	r1, r9, r7
   83a7c:	f8c9 2004 	str.w	r2, [r9, #4]
   83a80:	684b      	ldr	r3, [r1, #4]
   83a82:	f043 0301 	orr.w	r3, r3, #1
   83a86:	604b      	str	r3, [r1, #4]
   83a88:	4640      	mov	r0, r8
   83a8a:	f7ff ff87 	bl	8399c <__malloc_unlock>
   83a8e:	4628      	mov	r0, r5
   83a90:	b003      	add	sp, #12
   83a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83a96:	f023 0303 	bic.w	r3, r3, #3
   83a9a:	18f9      	adds	r1, r7, r3
   83a9c:	4291      	cmp	r1, r2
   83a9e:	db1d      	blt.n	83adc <_realloc_r+0x134>
   83aa0:	68c3      	ldr	r3, [r0, #12]
   83aa2:	6882      	ldr	r2, [r0, #8]
   83aa4:	4625      	mov	r5, r4
   83aa6:	60d3      	str	r3, [r2, #12]
   83aa8:	460f      	mov	r7, r1
   83aaa:	609a      	str	r2, [r3, #8]
   83aac:	e7dc      	b.n	83a68 <_realloc_r+0xc0>
   83aae:	f002 0201 	and.w	r2, r2, #1
   83ab2:	eb09 0106 	add.w	r1, r9, r6
   83ab6:	f043 0301 	orr.w	r3, r3, #1
   83aba:	4332      	orrs	r2, r6
   83abc:	f8c9 2004 	str.w	r2, [r9, #4]
   83ac0:	444f      	add	r7, r9
   83ac2:	604b      	str	r3, [r1, #4]
   83ac4:	687b      	ldr	r3, [r7, #4]
   83ac6:	3108      	adds	r1, #8
   83ac8:	f043 0301 	orr.w	r3, r3, #1
   83acc:	607b      	str	r3, [r7, #4]
   83ace:	4640      	mov	r0, r8
   83ad0:	f7ff f868 	bl	82ba4 <_free_r>
   83ad4:	e7d8      	b.n	83a88 <_realloc_r+0xe0>
   83ad6:	4611      	mov	r1, r2
   83ad8:	f7ff bb82 	b.w	831e0 <_malloc_r>
   83adc:	f01e 0f01 	tst.w	lr, #1
   83ae0:	d18f      	bne.n	83a02 <_realloc_r+0x5a>
   83ae2:	f854 1c08 	ldr.w	r1, [r4, #-8]
   83ae6:	eba9 0a01 	sub.w	sl, r9, r1
   83aea:	f8da 1004 	ldr.w	r1, [sl, #4]
   83aee:	f021 0103 	bic.w	r1, r1, #3
   83af2:	440b      	add	r3, r1
   83af4:	443b      	add	r3, r7
   83af6:	4293      	cmp	r3, r2
   83af8:	db26      	blt.n	83b48 <_realloc_r+0x1a0>
   83afa:	4655      	mov	r5, sl
   83afc:	68c1      	ldr	r1, [r0, #12]
   83afe:	6880      	ldr	r0, [r0, #8]
   83b00:	1f3a      	subs	r2, r7, #4
   83b02:	60c1      	str	r1, [r0, #12]
   83b04:	6088      	str	r0, [r1, #8]
   83b06:	f855 0f08 	ldr.w	r0, [r5, #8]!
   83b0a:	f8da 100c 	ldr.w	r1, [sl, #12]
   83b0e:	2a24      	cmp	r2, #36	; 0x24
   83b10:	60c1      	str	r1, [r0, #12]
   83b12:	6088      	str	r0, [r1, #8]
   83b14:	d826      	bhi.n	83b64 <_realloc_r+0x1bc>
   83b16:	2a13      	cmp	r2, #19
   83b18:	f240 8081 	bls.w	83c1e <_realloc_r+0x276>
   83b1c:	6821      	ldr	r1, [r4, #0]
   83b1e:	2a1b      	cmp	r2, #27
   83b20:	f8ca 1008 	str.w	r1, [sl, #8]
   83b24:	6861      	ldr	r1, [r4, #4]
   83b26:	f8ca 100c 	str.w	r1, [sl, #12]
   83b2a:	f200 80ad 	bhi.w	83c88 <_realloc_r+0x2e0>
   83b2e:	f104 0008 	add.w	r0, r4, #8
   83b32:	f10a 0210 	add.w	r2, sl, #16
   83b36:	e074      	b.n	83c22 <_realloc_r+0x27a>
   83b38:	f854 3c08 	ldr.w	r3, [r4, #-8]
   83b3c:	eba9 0a03 	sub.w	sl, r9, r3
   83b40:	f8da 1004 	ldr.w	r1, [sl, #4]
   83b44:	f021 0103 	bic.w	r1, r1, #3
   83b48:	187b      	adds	r3, r7, r1
   83b4a:	4293      	cmp	r3, r2
   83b4c:	f6ff af59 	blt.w	83a02 <_realloc_r+0x5a>
   83b50:	4655      	mov	r5, sl
   83b52:	f8da 100c 	ldr.w	r1, [sl, #12]
   83b56:	f855 0f08 	ldr.w	r0, [r5, #8]!
   83b5a:	1f3a      	subs	r2, r7, #4
   83b5c:	2a24      	cmp	r2, #36	; 0x24
   83b5e:	60c1      	str	r1, [r0, #12]
   83b60:	6088      	str	r0, [r1, #8]
   83b62:	d9d8      	bls.n	83b16 <_realloc_r+0x16e>
   83b64:	4621      	mov	r1, r4
   83b66:	4628      	mov	r0, r5
   83b68:	461f      	mov	r7, r3
   83b6a:	46d1      	mov	r9, sl
   83b6c:	f7ff feac 	bl	838c8 <memmove>
   83b70:	e77a      	b.n	83a68 <_realloc_r+0xc0>
   83b72:	6841      	ldr	r1, [r0, #4]
   83b74:	f106 0010 	add.w	r0, r6, #16
   83b78:	f021 0b03 	bic.w	fp, r1, #3
   83b7c:	44bb      	add	fp, r7
   83b7e:	4583      	cmp	fp, r0
   83b80:	da58      	bge.n	83c34 <_realloc_r+0x28c>
   83b82:	f01e 0f01 	tst.w	lr, #1
   83b86:	f47f af3c 	bne.w	83a02 <_realloc_r+0x5a>
   83b8a:	f854 1c08 	ldr.w	r1, [r4, #-8]
   83b8e:	eba9 0a01 	sub.w	sl, r9, r1
   83b92:	f8da 1004 	ldr.w	r1, [sl, #4]
   83b96:	f021 0103 	bic.w	r1, r1, #3
   83b9a:	448b      	add	fp, r1
   83b9c:	4558      	cmp	r0, fp
   83b9e:	dcd3      	bgt.n	83b48 <_realloc_r+0x1a0>
   83ba0:	4655      	mov	r5, sl
   83ba2:	f8da 100c 	ldr.w	r1, [sl, #12]
   83ba6:	f855 0f08 	ldr.w	r0, [r5, #8]!
   83baa:	1f3a      	subs	r2, r7, #4
   83bac:	2a24      	cmp	r2, #36	; 0x24
   83bae:	60c1      	str	r1, [r0, #12]
   83bb0:	6088      	str	r0, [r1, #8]
   83bb2:	f200 808d 	bhi.w	83cd0 <_realloc_r+0x328>
   83bb6:	2a13      	cmp	r2, #19
   83bb8:	f240 8087 	bls.w	83cca <_realloc_r+0x322>
   83bbc:	6821      	ldr	r1, [r4, #0]
   83bbe:	2a1b      	cmp	r2, #27
   83bc0:	f8ca 1008 	str.w	r1, [sl, #8]
   83bc4:	6861      	ldr	r1, [r4, #4]
   83bc6:	f8ca 100c 	str.w	r1, [sl, #12]
   83bca:	f200 8088 	bhi.w	83cde <_realloc_r+0x336>
   83bce:	f104 0108 	add.w	r1, r4, #8
   83bd2:	f10a 0210 	add.w	r2, sl, #16
   83bd6:	6808      	ldr	r0, [r1, #0]
   83bd8:	6010      	str	r0, [r2, #0]
   83bda:	6848      	ldr	r0, [r1, #4]
   83bdc:	6050      	str	r0, [r2, #4]
   83bde:	6889      	ldr	r1, [r1, #8]
   83be0:	6091      	str	r1, [r2, #8]
   83be2:	ebab 0206 	sub.w	r2, fp, r6
   83be6:	eb0a 0106 	add.w	r1, sl, r6
   83bea:	f042 0201 	orr.w	r2, r2, #1
   83bee:	6099      	str	r1, [r3, #8]
   83bf0:	604a      	str	r2, [r1, #4]
   83bf2:	f8da 3004 	ldr.w	r3, [sl, #4]
   83bf6:	4640      	mov	r0, r8
   83bf8:	f003 0301 	and.w	r3, r3, #1
   83bfc:	431e      	orrs	r6, r3
   83bfe:	f8ca 6004 	str.w	r6, [sl, #4]
   83c02:	f7ff fecb 	bl	8399c <__malloc_unlock>
   83c06:	e742      	b.n	83a8e <_realloc_r+0xe6>
   83c08:	6823      	ldr	r3, [r4, #0]
   83c0a:	2a1b      	cmp	r2, #27
   83c0c:	6003      	str	r3, [r0, #0]
   83c0e:	6863      	ldr	r3, [r4, #4]
   83c10:	6043      	str	r3, [r0, #4]
   83c12:	d827      	bhi.n	83c64 <_realloc_r+0x2bc>
   83c14:	f100 0308 	add.w	r3, r0, #8
   83c18:	f104 0208 	add.w	r2, r4, #8
   83c1c:	e70b      	b.n	83a36 <_realloc_r+0x8e>
   83c1e:	4620      	mov	r0, r4
   83c20:	462a      	mov	r2, r5
   83c22:	6801      	ldr	r1, [r0, #0]
   83c24:	461f      	mov	r7, r3
   83c26:	6011      	str	r1, [r2, #0]
   83c28:	6841      	ldr	r1, [r0, #4]
   83c2a:	46d1      	mov	r9, sl
   83c2c:	6051      	str	r1, [r2, #4]
   83c2e:	6883      	ldr	r3, [r0, #8]
   83c30:	6093      	str	r3, [r2, #8]
   83c32:	e719      	b.n	83a68 <_realloc_r+0xc0>
   83c34:	ebab 0b06 	sub.w	fp, fp, r6
   83c38:	eb09 0106 	add.w	r1, r9, r6
   83c3c:	f04b 0201 	orr.w	r2, fp, #1
   83c40:	6099      	str	r1, [r3, #8]
   83c42:	604a      	str	r2, [r1, #4]
   83c44:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83c48:	4640      	mov	r0, r8
   83c4a:	f003 0301 	and.w	r3, r3, #1
   83c4e:	431e      	orrs	r6, r3
   83c50:	f844 6c04 	str.w	r6, [r4, #-4]
   83c54:	f7ff fea2 	bl	8399c <__malloc_unlock>
   83c58:	4625      	mov	r5, r4
   83c5a:	e718      	b.n	83a8e <_realloc_r+0xe6>
   83c5c:	4621      	mov	r1, r4
   83c5e:	f7ff fe33 	bl	838c8 <memmove>
   83c62:	e6ee      	b.n	83a42 <_realloc_r+0x9a>
   83c64:	68a3      	ldr	r3, [r4, #8]
   83c66:	2a24      	cmp	r2, #36	; 0x24
   83c68:	6083      	str	r3, [r0, #8]
   83c6a:	68e3      	ldr	r3, [r4, #12]
   83c6c:	60c3      	str	r3, [r0, #12]
   83c6e:	d018      	beq.n	83ca2 <_realloc_r+0x2fa>
   83c70:	f100 0310 	add.w	r3, r0, #16
   83c74:	f104 0210 	add.w	r2, r4, #16
   83c78:	e6dd      	b.n	83a36 <_realloc_r+0x8e>
   83c7a:	f850 3c04 	ldr.w	r3, [r0, #-4]
   83c7e:	4625      	mov	r5, r4
   83c80:	f023 0303 	bic.w	r3, r3, #3
   83c84:	441f      	add	r7, r3
   83c86:	e6ef      	b.n	83a68 <_realloc_r+0xc0>
   83c88:	68a1      	ldr	r1, [r4, #8]
   83c8a:	2a24      	cmp	r2, #36	; 0x24
   83c8c:	f8ca 1010 	str.w	r1, [sl, #16]
   83c90:	68e1      	ldr	r1, [r4, #12]
   83c92:	f8ca 1014 	str.w	r1, [sl, #20]
   83c96:	d00d      	beq.n	83cb4 <_realloc_r+0x30c>
   83c98:	f104 0010 	add.w	r0, r4, #16
   83c9c:	f10a 0218 	add.w	r2, sl, #24
   83ca0:	e7bf      	b.n	83c22 <_realloc_r+0x27a>
   83ca2:	6922      	ldr	r2, [r4, #16]
   83ca4:	f100 0318 	add.w	r3, r0, #24
   83ca8:	6102      	str	r2, [r0, #16]
   83caa:	6961      	ldr	r1, [r4, #20]
   83cac:	f104 0218 	add.w	r2, r4, #24
   83cb0:	6141      	str	r1, [r0, #20]
   83cb2:	e6c0      	b.n	83a36 <_realloc_r+0x8e>
   83cb4:	6922      	ldr	r2, [r4, #16]
   83cb6:	f104 0018 	add.w	r0, r4, #24
   83cba:	f8ca 2018 	str.w	r2, [sl, #24]
   83cbe:	6961      	ldr	r1, [r4, #20]
   83cc0:	f10a 0220 	add.w	r2, sl, #32
   83cc4:	f8ca 101c 	str.w	r1, [sl, #28]
   83cc8:	e7ab      	b.n	83c22 <_realloc_r+0x27a>
   83cca:	4621      	mov	r1, r4
   83ccc:	462a      	mov	r2, r5
   83cce:	e782      	b.n	83bd6 <_realloc_r+0x22e>
   83cd0:	4621      	mov	r1, r4
   83cd2:	4628      	mov	r0, r5
   83cd4:	9301      	str	r3, [sp, #4]
   83cd6:	f7ff fdf7 	bl	838c8 <memmove>
   83cda:	9b01      	ldr	r3, [sp, #4]
   83cdc:	e781      	b.n	83be2 <_realloc_r+0x23a>
   83cde:	68a1      	ldr	r1, [r4, #8]
   83ce0:	2a24      	cmp	r2, #36	; 0x24
   83ce2:	f8ca 1010 	str.w	r1, [sl, #16]
   83ce6:	68e1      	ldr	r1, [r4, #12]
   83ce8:	f8ca 1014 	str.w	r1, [sl, #20]
   83cec:	d006      	beq.n	83cfc <_realloc_r+0x354>
   83cee:	f104 0110 	add.w	r1, r4, #16
   83cf2:	f10a 0218 	add.w	r2, sl, #24
   83cf6:	e76e      	b.n	83bd6 <_realloc_r+0x22e>
   83cf8:	200706e0 	.word	0x200706e0
   83cfc:	6922      	ldr	r2, [r4, #16]
   83cfe:	f104 0118 	add.w	r1, r4, #24
   83d02:	f8ca 2018 	str.w	r2, [sl, #24]
   83d06:	6960      	ldr	r0, [r4, #20]
   83d08:	f10a 0220 	add.w	r2, sl, #32
   83d0c:	f8ca 001c 	str.w	r0, [sl, #28]
   83d10:	e761      	b.n	83bd6 <_realloc_r+0x22e>
   83d12:	bf00      	nop

00083d14 <_sbrk_r>:
   83d14:	b538      	push	{r3, r4, r5, lr}
   83d16:	2300      	movs	r3, #0
   83d18:	4c06      	ldr	r4, [pc, #24]	; (83d34 <_sbrk_r+0x20>)
   83d1a:	4605      	mov	r5, r0
   83d1c:	4608      	mov	r0, r1
   83d1e:	6023      	str	r3, [r4, #0]
   83d20:	f7fc ff62 	bl	80be8 <_sbrk>
   83d24:	1c43      	adds	r3, r0, #1
   83d26:	d000      	beq.n	83d2a <_sbrk_r+0x16>
   83d28:	bd38      	pop	{r3, r4, r5, pc}
   83d2a:	6823      	ldr	r3, [r4, #0]
   83d2c:	2b00      	cmp	r3, #0
   83d2e:	d0fb      	beq.n	83d28 <_sbrk_r+0x14>
   83d30:	602b      	str	r3, [r5, #0]
   83d32:	bd38      	pop	{r3, r4, r5, pc}
   83d34:	20070c84 	.word	0x20070c84

00083d38 <__sread>:
   83d38:	b510      	push	{r4, lr}
   83d3a:	460c      	mov	r4, r1
   83d3c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83d40:	f000 fa22 	bl	84188 <_read_r>
   83d44:	2800      	cmp	r0, #0
   83d46:	db03      	blt.n	83d50 <__sread+0x18>
   83d48:	6d23      	ldr	r3, [r4, #80]	; 0x50
   83d4a:	4403      	add	r3, r0
   83d4c:	6523      	str	r3, [r4, #80]	; 0x50
   83d4e:	bd10      	pop	{r4, pc}
   83d50:	89a3      	ldrh	r3, [r4, #12]
   83d52:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   83d56:	81a3      	strh	r3, [r4, #12]
   83d58:	bd10      	pop	{r4, pc}
   83d5a:	bf00      	nop

00083d5c <__swrite>:
   83d5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83d60:	460c      	mov	r4, r1
   83d62:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   83d66:	461f      	mov	r7, r3
   83d68:	05cb      	lsls	r3, r1, #23
   83d6a:	4616      	mov	r6, r2
   83d6c:	4605      	mov	r5, r0
   83d6e:	d507      	bpl.n	83d80 <__swrite+0x24>
   83d70:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83d74:	2302      	movs	r3, #2
   83d76:	2200      	movs	r2, #0
   83d78:	f000 f9f0 	bl	8415c <_lseek_r>
   83d7c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   83d80:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   83d84:	81a1      	strh	r1, [r4, #12]
   83d86:	463b      	mov	r3, r7
   83d88:	4632      	mov	r2, r6
   83d8a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83d8e:	4628      	mov	r0, r5
   83d90:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   83d94:	f000 b8d0 	b.w	83f38 <_write_r>

00083d98 <__sseek>:
   83d98:	b510      	push	{r4, lr}
   83d9a:	460c      	mov	r4, r1
   83d9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83da0:	f000 f9dc 	bl	8415c <_lseek_r>
   83da4:	89a3      	ldrh	r3, [r4, #12]
   83da6:	1c42      	adds	r2, r0, #1
   83da8:	bf0e      	itee	eq
   83daa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   83dae:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   83db2:	6520      	strne	r0, [r4, #80]	; 0x50
   83db4:	81a3      	strh	r3, [r4, #12]
   83db6:	bd10      	pop	{r4, pc}

00083db8 <__sclose>:
   83db8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83dbc:	f000 b934 	b.w	84028 <_close_r>

00083dc0 <strlen>:
   83dc0:	f020 0103 	bic.w	r1, r0, #3
   83dc4:	f010 0003 	ands.w	r0, r0, #3
   83dc8:	f1c0 0000 	rsb	r0, r0, #0
   83dcc:	f851 3b04 	ldr.w	r3, [r1], #4
   83dd0:	f100 0c04 	add.w	ip, r0, #4
   83dd4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   83dd8:	f06f 0200 	mvn.w	r2, #0
   83ddc:	bf1c      	itt	ne
   83dde:	fa22 f20c 	lsrne.w	r2, r2, ip
   83de2:	4313      	orrne	r3, r2
   83de4:	f04f 0c01 	mov.w	ip, #1
   83de8:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   83dec:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   83df0:	eba3 020c 	sub.w	r2, r3, ip
   83df4:	ea22 0203 	bic.w	r2, r2, r3
   83df8:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   83dfc:	bf04      	itt	eq
   83dfe:	f851 3b04 	ldreq.w	r3, [r1], #4
   83e02:	3004      	addeq	r0, #4
   83e04:	d0f4      	beq.n	83df0 <strlen+0x30>
   83e06:	f1c2 0100 	rsb	r1, r2, #0
   83e0a:	ea02 0201 	and.w	r2, r2, r1
   83e0e:	fab2 f282 	clz	r2, r2
   83e12:	f1c2 021f 	rsb	r2, r2, #31
   83e16:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   83e1a:	4770      	bx	lr

00083e1c <__swbuf_r>:
   83e1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83e1e:	460d      	mov	r5, r1
   83e20:	4614      	mov	r4, r2
   83e22:	4606      	mov	r6, r0
   83e24:	b110      	cbz	r0, 83e2c <__swbuf_r+0x10>
   83e26:	6b83      	ldr	r3, [r0, #56]	; 0x38
   83e28:	2b00      	cmp	r3, #0
   83e2a:	d04b      	beq.n	83ec4 <__swbuf_r+0xa8>
   83e2c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   83e30:	69a3      	ldr	r3, [r4, #24]
   83e32:	b291      	uxth	r1, r2
   83e34:	0708      	lsls	r0, r1, #28
   83e36:	60a3      	str	r3, [r4, #8]
   83e38:	d539      	bpl.n	83eae <__swbuf_r+0x92>
   83e3a:	6923      	ldr	r3, [r4, #16]
   83e3c:	2b00      	cmp	r3, #0
   83e3e:	d036      	beq.n	83eae <__swbuf_r+0x92>
   83e40:	b2ed      	uxtb	r5, r5
   83e42:	0489      	lsls	r1, r1, #18
   83e44:	462f      	mov	r7, r5
   83e46:	d515      	bpl.n	83e74 <__swbuf_r+0x58>
   83e48:	6822      	ldr	r2, [r4, #0]
   83e4a:	6961      	ldr	r1, [r4, #20]
   83e4c:	1ad3      	subs	r3, r2, r3
   83e4e:	428b      	cmp	r3, r1
   83e50:	da1c      	bge.n	83e8c <__swbuf_r+0x70>
   83e52:	3301      	adds	r3, #1
   83e54:	68a1      	ldr	r1, [r4, #8]
   83e56:	1c50      	adds	r0, r2, #1
   83e58:	3901      	subs	r1, #1
   83e5a:	60a1      	str	r1, [r4, #8]
   83e5c:	6020      	str	r0, [r4, #0]
   83e5e:	7015      	strb	r5, [r2, #0]
   83e60:	6962      	ldr	r2, [r4, #20]
   83e62:	429a      	cmp	r2, r3
   83e64:	d01a      	beq.n	83e9c <__swbuf_r+0x80>
   83e66:	89a3      	ldrh	r3, [r4, #12]
   83e68:	07db      	lsls	r3, r3, #31
   83e6a:	d501      	bpl.n	83e70 <__swbuf_r+0x54>
   83e6c:	2d0a      	cmp	r5, #10
   83e6e:	d015      	beq.n	83e9c <__swbuf_r+0x80>
   83e70:	4638      	mov	r0, r7
   83e72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83e74:	6e61      	ldr	r1, [r4, #100]	; 0x64
   83e76:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   83e7a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
   83e7e:	81a2      	strh	r2, [r4, #12]
   83e80:	6822      	ldr	r2, [r4, #0]
   83e82:	6661      	str	r1, [r4, #100]	; 0x64
   83e84:	6961      	ldr	r1, [r4, #20]
   83e86:	1ad3      	subs	r3, r2, r3
   83e88:	428b      	cmp	r3, r1
   83e8a:	dbe2      	blt.n	83e52 <__swbuf_r+0x36>
   83e8c:	4621      	mov	r1, r4
   83e8e:	4630      	mov	r0, r6
   83e90:	f7fe fd0a 	bl	828a8 <_fflush_r>
   83e94:	b940      	cbnz	r0, 83ea8 <__swbuf_r+0x8c>
   83e96:	2301      	movs	r3, #1
   83e98:	6822      	ldr	r2, [r4, #0]
   83e9a:	e7db      	b.n	83e54 <__swbuf_r+0x38>
   83e9c:	4621      	mov	r1, r4
   83e9e:	4630      	mov	r0, r6
   83ea0:	f7fe fd02 	bl	828a8 <_fflush_r>
   83ea4:	2800      	cmp	r0, #0
   83ea6:	d0e3      	beq.n	83e70 <__swbuf_r+0x54>
   83ea8:	f04f 37ff 	mov.w	r7, #4294967295
   83eac:	e7e0      	b.n	83e70 <__swbuf_r+0x54>
   83eae:	4621      	mov	r1, r4
   83eb0:	4630      	mov	r0, r6
   83eb2:	f7fe fbe9 	bl	82688 <__swsetup_r>
   83eb6:	2800      	cmp	r0, #0
   83eb8:	d1f6      	bne.n	83ea8 <__swbuf_r+0x8c>
   83eba:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   83ebe:	6923      	ldr	r3, [r4, #16]
   83ec0:	b291      	uxth	r1, r2
   83ec2:	e7bd      	b.n	83e40 <__swbuf_r+0x24>
   83ec4:	f7fe fd48 	bl	82958 <__sinit>
   83ec8:	e7b0      	b.n	83e2c <__swbuf_r+0x10>
   83eca:	bf00      	nop

00083ecc <_wcrtomb_r>:
   83ecc:	b5f0      	push	{r4, r5, r6, r7, lr}
   83ece:	4606      	mov	r6, r0
   83ed0:	b085      	sub	sp, #20
   83ed2:	461f      	mov	r7, r3
   83ed4:	b189      	cbz	r1, 83efa <_wcrtomb_r+0x2e>
   83ed6:	4c10      	ldr	r4, [pc, #64]	; (83f18 <_wcrtomb_r+0x4c>)
   83ed8:	4d10      	ldr	r5, [pc, #64]	; (83f1c <_wcrtomb_r+0x50>)
   83eda:	6824      	ldr	r4, [r4, #0]
   83edc:	6b64      	ldr	r4, [r4, #52]	; 0x34
   83ede:	2c00      	cmp	r4, #0
   83ee0:	bf08      	it	eq
   83ee2:	462c      	moveq	r4, r5
   83ee4:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   83ee8:	47a0      	blx	r4
   83eea:	1c43      	adds	r3, r0, #1
   83eec:	d103      	bne.n	83ef6 <_wcrtomb_r+0x2a>
   83eee:	2200      	movs	r2, #0
   83ef0:	238a      	movs	r3, #138	; 0x8a
   83ef2:	603a      	str	r2, [r7, #0]
   83ef4:	6033      	str	r3, [r6, #0]
   83ef6:	b005      	add	sp, #20
   83ef8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83efa:	460c      	mov	r4, r1
   83efc:	4a06      	ldr	r2, [pc, #24]	; (83f18 <_wcrtomb_r+0x4c>)
   83efe:	4d07      	ldr	r5, [pc, #28]	; (83f1c <_wcrtomb_r+0x50>)
   83f00:	6811      	ldr	r1, [r2, #0]
   83f02:	4622      	mov	r2, r4
   83f04:	6b4c      	ldr	r4, [r1, #52]	; 0x34
   83f06:	a901      	add	r1, sp, #4
   83f08:	2c00      	cmp	r4, #0
   83f0a:	bf08      	it	eq
   83f0c:	462c      	moveq	r4, r5
   83f0e:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   83f12:	47a0      	blx	r4
   83f14:	e7e9      	b.n	83eea <_wcrtomb_r+0x1e>
   83f16:	bf00      	nop
   83f18:	20070140 	.word	0x20070140
   83f1c:	20070574 	.word	0x20070574

00083f20 <__ascii_wctomb>:
   83f20:	b119      	cbz	r1, 83f2a <__ascii_wctomb+0xa>
   83f22:	2aff      	cmp	r2, #255	; 0xff
   83f24:	d803      	bhi.n	83f2e <__ascii_wctomb+0xe>
   83f26:	700a      	strb	r2, [r1, #0]
   83f28:	2101      	movs	r1, #1
   83f2a:	4608      	mov	r0, r1
   83f2c:	4770      	bx	lr
   83f2e:	238a      	movs	r3, #138	; 0x8a
   83f30:	f04f 31ff 	mov.w	r1, #4294967295
   83f34:	6003      	str	r3, [r0, #0]
   83f36:	e7f8      	b.n	83f2a <__ascii_wctomb+0xa>

00083f38 <_write_r>:
   83f38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83f3a:	460e      	mov	r6, r1
   83f3c:	2500      	movs	r5, #0
   83f3e:	4c08      	ldr	r4, [pc, #32]	; (83f60 <_write_r+0x28>)
   83f40:	4611      	mov	r1, r2
   83f42:	4607      	mov	r7, r0
   83f44:	461a      	mov	r2, r3
   83f46:	4630      	mov	r0, r6
   83f48:	6025      	str	r5, [r4, #0]
   83f4a:	f7fc fa61 	bl	80410 <_write>
   83f4e:	1c43      	adds	r3, r0, #1
   83f50:	d000      	beq.n	83f54 <_write_r+0x1c>
   83f52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83f54:	6823      	ldr	r3, [r4, #0]
   83f56:	2b00      	cmp	r3, #0
   83f58:	d0fb      	beq.n	83f52 <_write_r+0x1a>
   83f5a:	603b      	str	r3, [r7, #0]
   83f5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83f5e:	bf00      	nop
   83f60:	20070c84 	.word	0x20070c84

00083f64 <__register_exitproc>:
   83f64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   83f68:	4d2c      	ldr	r5, [pc, #176]	; (8401c <__register_exitproc+0xb8>)
   83f6a:	4606      	mov	r6, r0
   83f6c:	6828      	ldr	r0, [r5, #0]
   83f6e:	4698      	mov	r8, r3
   83f70:	460f      	mov	r7, r1
   83f72:	4691      	mov	r9, r2
   83f74:	f7ff f8b0 	bl	830d8 <__retarget_lock_acquire_recursive>
   83f78:	4b29      	ldr	r3, [pc, #164]	; (84020 <__register_exitproc+0xbc>)
   83f7a:	681c      	ldr	r4, [r3, #0]
   83f7c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   83f80:	2b00      	cmp	r3, #0
   83f82:	d03e      	beq.n	84002 <__register_exitproc+0x9e>
   83f84:	685a      	ldr	r2, [r3, #4]
   83f86:	2a1f      	cmp	r2, #31
   83f88:	dc1c      	bgt.n	83fc4 <__register_exitproc+0x60>
   83f8a:	f102 0e01 	add.w	lr, r2, #1
   83f8e:	b176      	cbz	r6, 83fae <__register_exitproc+0x4a>
   83f90:	2101      	movs	r1, #1
   83f92:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   83f96:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   83f9a:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   83f9e:	4091      	lsls	r1, r2
   83fa0:	4308      	orrs	r0, r1
   83fa2:	2e02      	cmp	r6, #2
   83fa4:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   83fa8:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   83fac:	d023      	beq.n	83ff6 <__register_exitproc+0x92>
   83fae:	3202      	adds	r2, #2
   83fb0:	f8c3 e004 	str.w	lr, [r3, #4]
   83fb4:	6828      	ldr	r0, [r5, #0]
   83fb6:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   83fba:	f7ff f88f 	bl	830dc <__retarget_lock_release_recursive>
   83fbe:	2000      	movs	r0, #0
   83fc0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   83fc4:	4b17      	ldr	r3, [pc, #92]	; (84024 <__register_exitproc+0xc0>)
   83fc6:	b30b      	cbz	r3, 8400c <__register_exitproc+0xa8>
   83fc8:	f44f 70c8 	mov.w	r0, #400	; 0x190
   83fcc:	f7ff f900 	bl	831d0 <malloc>
   83fd0:	4603      	mov	r3, r0
   83fd2:	b1d8      	cbz	r0, 8400c <__register_exitproc+0xa8>
   83fd4:	2000      	movs	r0, #0
   83fd6:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   83fda:	f04f 0e01 	mov.w	lr, #1
   83fde:	6058      	str	r0, [r3, #4]
   83fe0:	6019      	str	r1, [r3, #0]
   83fe2:	4602      	mov	r2, r0
   83fe4:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   83fe8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   83fec:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   83ff0:	2e00      	cmp	r6, #0
   83ff2:	d0dc      	beq.n	83fae <__register_exitproc+0x4a>
   83ff4:	e7cc      	b.n	83f90 <__register_exitproc+0x2c>
   83ff6:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   83ffa:	4301      	orrs	r1, r0
   83ffc:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   84000:	e7d5      	b.n	83fae <__register_exitproc+0x4a>
   84002:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   84006:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   8400a:	e7bb      	b.n	83f84 <__register_exitproc+0x20>
   8400c:	6828      	ldr	r0, [r5, #0]
   8400e:	f7ff f865 	bl	830dc <__retarget_lock_release_recursive>
   84012:	f04f 30ff 	mov.w	r0, #4294967295
   84016:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8401a:	bf00      	nop
   8401c:	20070570 	.word	0x20070570
   84020:	00084508 	.word	0x00084508
   84024:	000831d1 	.word	0x000831d1

00084028 <_close_r>:
   84028:	b538      	push	{r3, r4, r5, lr}
   8402a:	2300      	movs	r3, #0
   8402c:	4c06      	ldr	r4, [pc, #24]	; (84048 <_close_r+0x20>)
   8402e:	4605      	mov	r5, r0
   84030:	4608      	mov	r0, r1
   84032:	6023      	str	r3, [r4, #0]
   84034:	f7fc fdf4 	bl	80c20 <_close>
   84038:	1c43      	adds	r3, r0, #1
   8403a:	d000      	beq.n	8403e <_close_r+0x16>
   8403c:	bd38      	pop	{r3, r4, r5, pc}
   8403e:	6823      	ldr	r3, [r4, #0]
   84040:	2b00      	cmp	r3, #0
   84042:	d0fb      	beq.n	8403c <_close_r+0x14>
   84044:	602b      	str	r3, [r5, #0]
   84046:	bd38      	pop	{r3, r4, r5, pc}
   84048:	20070c84 	.word	0x20070c84

0008404c <_fclose_r>:
   8404c:	b570      	push	{r4, r5, r6, lr}
   8404e:	b159      	cbz	r1, 84068 <_fclose_r+0x1c>
   84050:	4605      	mov	r5, r0
   84052:	460c      	mov	r4, r1
   84054:	b110      	cbz	r0, 8405c <_fclose_r+0x10>
   84056:	6b83      	ldr	r3, [r0, #56]	; 0x38
   84058:	2b00      	cmp	r3, #0
   8405a:	d03c      	beq.n	840d6 <_fclose_r+0x8a>
   8405c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   8405e:	07d8      	lsls	r0, r3, #31
   84060:	d505      	bpl.n	8406e <_fclose_r+0x22>
   84062:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   84066:	b92b      	cbnz	r3, 84074 <_fclose_r+0x28>
   84068:	2600      	movs	r6, #0
   8406a:	4630      	mov	r0, r6
   8406c:	bd70      	pop	{r4, r5, r6, pc}
   8406e:	89a3      	ldrh	r3, [r4, #12]
   84070:	0599      	lsls	r1, r3, #22
   84072:	d53c      	bpl.n	840ee <_fclose_r+0xa2>
   84074:	4621      	mov	r1, r4
   84076:	4628      	mov	r0, r5
   84078:	f7fe fb7a 	bl	82770 <__sflush_r>
   8407c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   8407e:	4606      	mov	r6, r0
   84080:	b133      	cbz	r3, 84090 <_fclose_r+0x44>
   84082:	69e1      	ldr	r1, [r4, #28]
   84084:	4628      	mov	r0, r5
   84086:	4798      	blx	r3
   84088:	2800      	cmp	r0, #0
   8408a:	bfb8      	it	lt
   8408c:	f04f 36ff 	movlt.w	r6, #4294967295
   84090:	89a3      	ldrh	r3, [r4, #12]
   84092:	061a      	lsls	r2, r3, #24
   84094:	d422      	bmi.n	840dc <_fclose_r+0x90>
   84096:	6b21      	ldr	r1, [r4, #48]	; 0x30
   84098:	b141      	cbz	r1, 840ac <_fclose_r+0x60>
   8409a:	f104 0340 	add.w	r3, r4, #64	; 0x40
   8409e:	4299      	cmp	r1, r3
   840a0:	d002      	beq.n	840a8 <_fclose_r+0x5c>
   840a2:	4628      	mov	r0, r5
   840a4:	f7fe fd7e 	bl	82ba4 <_free_r>
   840a8:	2300      	movs	r3, #0
   840aa:	6323      	str	r3, [r4, #48]	; 0x30
   840ac:	6c61      	ldr	r1, [r4, #68]	; 0x44
   840ae:	b121      	cbz	r1, 840ba <_fclose_r+0x6e>
   840b0:	4628      	mov	r0, r5
   840b2:	f7fe fd77 	bl	82ba4 <_free_r>
   840b6:	2300      	movs	r3, #0
   840b8:	6463      	str	r3, [r4, #68]	; 0x44
   840ba:	f7fe fc7d 	bl	829b8 <__sfp_lock_acquire>
   840be:	2200      	movs	r2, #0
   840c0:	6e63      	ldr	r3, [r4, #100]	; 0x64
   840c2:	81a2      	strh	r2, [r4, #12]
   840c4:	07db      	lsls	r3, r3, #31
   840c6:	d50e      	bpl.n	840e6 <_fclose_r+0x9a>
   840c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   840ca:	f7ff f803 	bl	830d4 <__retarget_lock_close_recursive>
   840ce:	f7fe fc79 	bl	829c4 <__sfp_lock_release>
   840d2:	4630      	mov	r0, r6
   840d4:	bd70      	pop	{r4, r5, r6, pc}
   840d6:	f7fe fc3f 	bl	82958 <__sinit>
   840da:	e7bf      	b.n	8405c <_fclose_r+0x10>
   840dc:	6921      	ldr	r1, [r4, #16]
   840de:	4628      	mov	r0, r5
   840e0:	f7fe fd60 	bl	82ba4 <_free_r>
   840e4:	e7d7      	b.n	84096 <_fclose_r+0x4a>
   840e6:	6da0      	ldr	r0, [r4, #88]	; 0x58
   840e8:	f7fe fff8 	bl	830dc <__retarget_lock_release_recursive>
   840ec:	e7ec      	b.n	840c8 <_fclose_r+0x7c>
   840ee:	6da0      	ldr	r0, [r4, #88]	; 0x58
   840f0:	f7fe fff2 	bl	830d8 <__retarget_lock_acquire_recursive>
   840f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   840f8:	2b00      	cmp	r3, #0
   840fa:	d1bb      	bne.n	84074 <_fclose_r+0x28>
   840fc:	6e66      	ldr	r6, [r4, #100]	; 0x64
   840fe:	f016 0601 	ands.w	r6, r6, #1
   84102:	d1b1      	bne.n	84068 <_fclose_r+0x1c>
   84104:	6da0      	ldr	r0, [r4, #88]	; 0x58
   84106:	f7fe ffe9 	bl	830dc <__retarget_lock_release_recursive>
   8410a:	4630      	mov	r0, r6
   8410c:	bd70      	pop	{r4, r5, r6, pc}
   8410e:	bf00      	nop

00084110 <_fstat_r>:
   84110:	b570      	push	{r4, r5, r6, lr}
   84112:	460d      	mov	r5, r1
   84114:	2300      	movs	r3, #0
   84116:	4c07      	ldr	r4, [pc, #28]	; (84134 <_fstat_r+0x24>)
   84118:	4606      	mov	r6, r0
   8411a:	4611      	mov	r1, r2
   8411c:	4628      	mov	r0, r5
   8411e:	6023      	str	r3, [r4, #0]
   84120:	f7fc fd81 	bl	80c26 <_fstat>
   84124:	1c43      	adds	r3, r0, #1
   84126:	d000      	beq.n	8412a <_fstat_r+0x1a>
   84128:	bd70      	pop	{r4, r5, r6, pc}
   8412a:	6823      	ldr	r3, [r4, #0]
   8412c:	2b00      	cmp	r3, #0
   8412e:	d0fb      	beq.n	84128 <_fstat_r+0x18>
   84130:	6033      	str	r3, [r6, #0]
   84132:	bd70      	pop	{r4, r5, r6, pc}
   84134:	20070c84 	.word	0x20070c84

00084138 <_isatty_r>:
   84138:	b538      	push	{r3, r4, r5, lr}
   8413a:	2300      	movs	r3, #0
   8413c:	4c06      	ldr	r4, [pc, #24]	; (84158 <_isatty_r+0x20>)
   8413e:	4605      	mov	r5, r0
   84140:	4608      	mov	r0, r1
   84142:	6023      	str	r3, [r4, #0]
   84144:	f7fc fd74 	bl	80c30 <_isatty>
   84148:	1c43      	adds	r3, r0, #1
   8414a:	d000      	beq.n	8414e <_isatty_r+0x16>
   8414c:	bd38      	pop	{r3, r4, r5, pc}
   8414e:	6823      	ldr	r3, [r4, #0]
   84150:	2b00      	cmp	r3, #0
   84152:	d0fb      	beq.n	8414c <_isatty_r+0x14>
   84154:	602b      	str	r3, [r5, #0]
   84156:	bd38      	pop	{r3, r4, r5, pc}
   84158:	20070c84 	.word	0x20070c84

0008415c <_lseek_r>:
   8415c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8415e:	460e      	mov	r6, r1
   84160:	2500      	movs	r5, #0
   84162:	4c08      	ldr	r4, [pc, #32]	; (84184 <_lseek_r+0x28>)
   84164:	4611      	mov	r1, r2
   84166:	4607      	mov	r7, r0
   84168:	461a      	mov	r2, r3
   8416a:	4630      	mov	r0, r6
   8416c:	6025      	str	r5, [r4, #0]
   8416e:	f7fc fd61 	bl	80c34 <_lseek>
   84172:	1c43      	adds	r3, r0, #1
   84174:	d000      	beq.n	84178 <_lseek_r+0x1c>
   84176:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84178:	6823      	ldr	r3, [r4, #0]
   8417a:	2b00      	cmp	r3, #0
   8417c:	d0fb      	beq.n	84176 <_lseek_r+0x1a>
   8417e:	603b      	str	r3, [r7, #0]
   84180:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84182:	bf00      	nop
   84184:	20070c84 	.word	0x20070c84

00084188 <_read_r>:
   84188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8418a:	460e      	mov	r6, r1
   8418c:	2500      	movs	r5, #0
   8418e:	4c08      	ldr	r4, [pc, #32]	; (841b0 <_read_r+0x28>)
   84190:	4611      	mov	r1, r2
   84192:	4607      	mov	r7, r0
   84194:	461a      	mov	r2, r3
   84196:	4630      	mov	r0, r6
   84198:	6025      	str	r5, [r4, #0]
   8419a:	f7fc f91b 	bl	803d4 <_read>
   8419e:	1c43      	adds	r3, r0, #1
   841a0:	d000      	beq.n	841a4 <_read_r+0x1c>
   841a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   841a4:	6823      	ldr	r3, [r4, #0]
   841a6:	2b00      	cmp	r3, #0
   841a8:	d0fb      	beq.n	841a2 <_read_r+0x1a>
   841aa:	603b      	str	r3, [r7, #0]
   841ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   841ae:	bf00      	nop
   841b0:	20070c84 	.word	0x20070c84

000841b4 <__aeabi_uldivmod>:
   841b4:	b953      	cbnz	r3, 841cc <__aeabi_uldivmod+0x18>
   841b6:	b94a      	cbnz	r2, 841cc <__aeabi_uldivmod+0x18>
   841b8:	2900      	cmp	r1, #0
   841ba:	bf08      	it	eq
   841bc:	2800      	cmpeq	r0, #0
   841be:	bf1c      	itt	ne
   841c0:	f04f 31ff 	movne.w	r1, #4294967295
   841c4:	f04f 30ff 	movne.w	r0, #4294967295
   841c8:	f000 b97a 	b.w	844c0 <__aeabi_idiv0>
   841cc:	f1ad 0c08 	sub.w	ip, sp, #8
   841d0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   841d4:	f000 f806 	bl	841e4 <__udivmoddi4>
   841d8:	f8dd e004 	ldr.w	lr, [sp, #4]
   841dc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   841e0:	b004      	add	sp, #16
   841e2:	4770      	bx	lr

000841e4 <__udivmoddi4>:
   841e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   841e8:	468c      	mov	ip, r1
   841ea:	460e      	mov	r6, r1
   841ec:	4604      	mov	r4, r0
   841ee:	9d08      	ldr	r5, [sp, #32]
   841f0:	2b00      	cmp	r3, #0
   841f2:	d150      	bne.n	84296 <__udivmoddi4+0xb2>
   841f4:	428a      	cmp	r2, r1
   841f6:	4617      	mov	r7, r2
   841f8:	d96c      	bls.n	842d4 <__udivmoddi4+0xf0>
   841fa:	fab2 fe82 	clz	lr, r2
   841fe:	f1be 0f00 	cmp.w	lr, #0
   84202:	d00b      	beq.n	8421c <__udivmoddi4+0x38>
   84204:	f1ce 0c20 	rsb	ip, lr, #32
   84208:	fa01 f60e 	lsl.w	r6, r1, lr
   8420c:	fa20 fc0c 	lsr.w	ip, r0, ip
   84210:	fa02 f70e 	lsl.w	r7, r2, lr
   84214:	ea4c 0c06 	orr.w	ip, ip, r6
   84218:	fa00 f40e 	lsl.w	r4, r0, lr
   8421c:	0c3a      	lsrs	r2, r7, #16
   8421e:	fbbc f9f2 	udiv	r9, ip, r2
   84222:	b2bb      	uxth	r3, r7
   84224:	fb02 cc19 	mls	ip, r2, r9, ip
   84228:	fb09 fa03 	mul.w	sl, r9, r3
   8422c:	ea4f 4814 	mov.w	r8, r4, lsr #16
   84230:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   84234:	45b2      	cmp	sl, r6
   84236:	d90a      	bls.n	8424e <__udivmoddi4+0x6a>
   84238:	19f6      	adds	r6, r6, r7
   8423a:	f109 31ff 	add.w	r1, r9, #4294967295
   8423e:	f080 8125 	bcs.w	8448c <__udivmoddi4+0x2a8>
   84242:	45b2      	cmp	sl, r6
   84244:	f240 8122 	bls.w	8448c <__udivmoddi4+0x2a8>
   84248:	f1a9 0902 	sub.w	r9, r9, #2
   8424c:	443e      	add	r6, r7
   8424e:	eba6 060a 	sub.w	r6, r6, sl
   84252:	fbb6 f0f2 	udiv	r0, r6, r2
   84256:	fb02 6610 	mls	r6, r2, r0, r6
   8425a:	fb00 f303 	mul.w	r3, r0, r3
   8425e:	b2a4      	uxth	r4, r4
   84260:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   84264:	42a3      	cmp	r3, r4
   84266:	d909      	bls.n	8427c <__udivmoddi4+0x98>
   84268:	19e4      	adds	r4, r4, r7
   8426a:	f100 32ff 	add.w	r2, r0, #4294967295
   8426e:	f080 810b 	bcs.w	84488 <__udivmoddi4+0x2a4>
   84272:	42a3      	cmp	r3, r4
   84274:	f240 8108 	bls.w	84488 <__udivmoddi4+0x2a4>
   84278:	3802      	subs	r0, #2
   8427a:	443c      	add	r4, r7
   8427c:	2100      	movs	r1, #0
   8427e:	1ae4      	subs	r4, r4, r3
   84280:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   84284:	2d00      	cmp	r5, #0
   84286:	d062      	beq.n	8434e <__udivmoddi4+0x16a>
   84288:	2300      	movs	r3, #0
   8428a:	fa24 f40e 	lsr.w	r4, r4, lr
   8428e:	602c      	str	r4, [r5, #0]
   84290:	606b      	str	r3, [r5, #4]
   84292:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84296:	428b      	cmp	r3, r1
   84298:	d907      	bls.n	842aa <__udivmoddi4+0xc6>
   8429a:	2d00      	cmp	r5, #0
   8429c:	d055      	beq.n	8434a <__udivmoddi4+0x166>
   8429e:	2100      	movs	r1, #0
   842a0:	e885 0041 	stmia.w	r5, {r0, r6}
   842a4:	4608      	mov	r0, r1
   842a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   842aa:	fab3 f183 	clz	r1, r3
   842ae:	2900      	cmp	r1, #0
   842b0:	f040 808f 	bne.w	843d2 <__udivmoddi4+0x1ee>
   842b4:	42b3      	cmp	r3, r6
   842b6:	d302      	bcc.n	842be <__udivmoddi4+0xda>
   842b8:	4282      	cmp	r2, r0
   842ba:	f200 80fc 	bhi.w	844b6 <__udivmoddi4+0x2d2>
   842be:	1a84      	subs	r4, r0, r2
   842c0:	eb66 0603 	sbc.w	r6, r6, r3
   842c4:	2001      	movs	r0, #1
   842c6:	46b4      	mov	ip, r6
   842c8:	2d00      	cmp	r5, #0
   842ca:	d040      	beq.n	8434e <__udivmoddi4+0x16a>
   842cc:	e885 1010 	stmia.w	r5, {r4, ip}
   842d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   842d4:	b912      	cbnz	r2, 842dc <__udivmoddi4+0xf8>
   842d6:	2701      	movs	r7, #1
   842d8:	fbb7 f7f2 	udiv	r7, r7, r2
   842dc:	fab7 fe87 	clz	lr, r7
   842e0:	f1be 0f00 	cmp.w	lr, #0
   842e4:	d135      	bne.n	84352 <__udivmoddi4+0x16e>
   842e6:	2101      	movs	r1, #1
   842e8:	1bf6      	subs	r6, r6, r7
   842ea:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   842ee:	fa1f f887 	uxth.w	r8, r7
   842f2:	fbb6 f2fc 	udiv	r2, r6, ip
   842f6:	fb0c 6612 	mls	r6, ip, r2, r6
   842fa:	fb08 f002 	mul.w	r0, r8, r2
   842fe:	0c23      	lsrs	r3, r4, #16
   84300:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   84304:	42b0      	cmp	r0, r6
   84306:	d907      	bls.n	84318 <__udivmoddi4+0x134>
   84308:	19f6      	adds	r6, r6, r7
   8430a:	f102 33ff 	add.w	r3, r2, #4294967295
   8430e:	d202      	bcs.n	84316 <__udivmoddi4+0x132>
   84310:	42b0      	cmp	r0, r6
   84312:	f200 80d2 	bhi.w	844ba <__udivmoddi4+0x2d6>
   84316:	461a      	mov	r2, r3
   84318:	1a36      	subs	r6, r6, r0
   8431a:	fbb6 f0fc 	udiv	r0, r6, ip
   8431e:	fb0c 6610 	mls	r6, ip, r0, r6
   84322:	fb08 f800 	mul.w	r8, r8, r0
   84326:	b2a3      	uxth	r3, r4
   84328:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   8432c:	45a0      	cmp	r8, r4
   8432e:	d907      	bls.n	84340 <__udivmoddi4+0x15c>
   84330:	19e4      	adds	r4, r4, r7
   84332:	f100 33ff 	add.w	r3, r0, #4294967295
   84336:	d202      	bcs.n	8433e <__udivmoddi4+0x15a>
   84338:	45a0      	cmp	r8, r4
   8433a:	f200 80b9 	bhi.w	844b0 <__udivmoddi4+0x2cc>
   8433e:	4618      	mov	r0, r3
   84340:	eba4 0408 	sub.w	r4, r4, r8
   84344:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   84348:	e79c      	b.n	84284 <__udivmoddi4+0xa0>
   8434a:	4629      	mov	r1, r5
   8434c:	4628      	mov	r0, r5
   8434e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84352:	fa07 f70e 	lsl.w	r7, r7, lr
   84356:	f1ce 0320 	rsb	r3, lr, #32
   8435a:	fa26 f203 	lsr.w	r2, r6, r3
   8435e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   84362:	fbb2 f1fc 	udiv	r1, r2, ip
   84366:	fa1f f887 	uxth.w	r8, r7
   8436a:	fb0c 2211 	mls	r2, ip, r1, r2
   8436e:	fa06 f60e 	lsl.w	r6, r6, lr
   84372:	fa20 f303 	lsr.w	r3, r0, r3
   84376:	fb01 f908 	mul.w	r9, r1, r8
   8437a:	4333      	orrs	r3, r6
   8437c:	0c1e      	lsrs	r6, r3, #16
   8437e:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   84382:	45b1      	cmp	r9, r6
   84384:	fa00 f40e 	lsl.w	r4, r0, lr
   84388:	d909      	bls.n	8439e <__udivmoddi4+0x1ba>
   8438a:	19f6      	adds	r6, r6, r7
   8438c:	f101 32ff 	add.w	r2, r1, #4294967295
   84390:	f080 808c 	bcs.w	844ac <__udivmoddi4+0x2c8>
   84394:	45b1      	cmp	r9, r6
   84396:	f240 8089 	bls.w	844ac <__udivmoddi4+0x2c8>
   8439a:	3902      	subs	r1, #2
   8439c:	443e      	add	r6, r7
   8439e:	eba6 0609 	sub.w	r6, r6, r9
   843a2:	fbb6 f0fc 	udiv	r0, r6, ip
   843a6:	fb0c 6210 	mls	r2, ip, r0, r6
   843aa:	fb00 f908 	mul.w	r9, r0, r8
   843ae:	b29e      	uxth	r6, r3
   843b0:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   843b4:	45b1      	cmp	r9, r6
   843b6:	d907      	bls.n	843c8 <__udivmoddi4+0x1e4>
   843b8:	19f6      	adds	r6, r6, r7
   843ba:	f100 33ff 	add.w	r3, r0, #4294967295
   843be:	d271      	bcs.n	844a4 <__udivmoddi4+0x2c0>
   843c0:	45b1      	cmp	r9, r6
   843c2:	d96f      	bls.n	844a4 <__udivmoddi4+0x2c0>
   843c4:	3802      	subs	r0, #2
   843c6:	443e      	add	r6, r7
   843c8:	eba6 0609 	sub.w	r6, r6, r9
   843cc:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   843d0:	e78f      	b.n	842f2 <__udivmoddi4+0x10e>
   843d2:	f1c1 0720 	rsb	r7, r1, #32
   843d6:	fa22 f807 	lsr.w	r8, r2, r7
   843da:	408b      	lsls	r3, r1
   843dc:	ea48 0303 	orr.w	r3, r8, r3
   843e0:	fa26 f407 	lsr.w	r4, r6, r7
   843e4:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   843e8:	fbb4 f9fe 	udiv	r9, r4, lr
   843ec:	fa1f fc83 	uxth.w	ip, r3
   843f0:	fb0e 4419 	mls	r4, lr, r9, r4
   843f4:	408e      	lsls	r6, r1
   843f6:	fa20 f807 	lsr.w	r8, r0, r7
   843fa:	fb09 fa0c 	mul.w	sl, r9, ip
   843fe:	ea48 0806 	orr.w	r8, r8, r6
   84402:	ea4f 4618 	mov.w	r6, r8, lsr #16
   84406:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   8440a:	45a2      	cmp	sl, r4
   8440c:	fa02 f201 	lsl.w	r2, r2, r1
   84410:	fa00 f601 	lsl.w	r6, r0, r1
   84414:	d908      	bls.n	84428 <__udivmoddi4+0x244>
   84416:	18e4      	adds	r4, r4, r3
   84418:	f109 30ff 	add.w	r0, r9, #4294967295
   8441c:	d244      	bcs.n	844a8 <__udivmoddi4+0x2c4>
   8441e:	45a2      	cmp	sl, r4
   84420:	d942      	bls.n	844a8 <__udivmoddi4+0x2c4>
   84422:	f1a9 0902 	sub.w	r9, r9, #2
   84426:	441c      	add	r4, r3
   84428:	eba4 040a 	sub.w	r4, r4, sl
   8442c:	fbb4 f0fe 	udiv	r0, r4, lr
   84430:	fb0e 4410 	mls	r4, lr, r0, r4
   84434:	fb00 fc0c 	mul.w	ip, r0, ip
   84438:	fa1f f888 	uxth.w	r8, r8
   8443c:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   84440:	45a4      	cmp	ip, r4
   84442:	d907      	bls.n	84454 <__udivmoddi4+0x270>
   84444:	18e4      	adds	r4, r4, r3
   84446:	f100 3eff 	add.w	lr, r0, #4294967295
   8444a:	d229      	bcs.n	844a0 <__udivmoddi4+0x2bc>
   8444c:	45a4      	cmp	ip, r4
   8444e:	d927      	bls.n	844a0 <__udivmoddi4+0x2bc>
   84450:	3802      	subs	r0, #2
   84452:	441c      	add	r4, r3
   84454:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   84458:	fba0 8902 	umull	r8, r9, r0, r2
   8445c:	eba4 0c0c 	sub.w	ip, r4, ip
   84460:	45cc      	cmp	ip, r9
   84462:	46c2      	mov	sl, r8
   84464:	46ce      	mov	lr, r9
   84466:	d315      	bcc.n	84494 <__udivmoddi4+0x2b0>
   84468:	d012      	beq.n	84490 <__udivmoddi4+0x2ac>
   8446a:	b155      	cbz	r5, 84482 <__udivmoddi4+0x29e>
   8446c:	ebb6 030a 	subs.w	r3, r6, sl
   84470:	eb6c 060e 	sbc.w	r6, ip, lr
   84474:	fa06 f707 	lsl.w	r7, r6, r7
   84478:	40cb      	lsrs	r3, r1
   8447a:	431f      	orrs	r7, r3
   8447c:	40ce      	lsrs	r6, r1
   8447e:	602f      	str	r7, [r5, #0]
   84480:	606e      	str	r6, [r5, #4]
   84482:	2100      	movs	r1, #0
   84484:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84488:	4610      	mov	r0, r2
   8448a:	e6f7      	b.n	8427c <__udivmoddi4+0x98>
   8448c:	4689      	mov	r9, r1
   8448e:	e6de      	b.n	8424e <__udivmoddi4+0x6a>
   84490:	4546      	cmp	r6, r8
   84492:	d2ea      	bcs.n	8446a <__udivmoddi4+0x286>
   84494:	ebb8 0a02 	subs.w	sl, r8, r2
   84498:	eb69 0e03 	sbc.w	lr, r9, r3
   8449c:	3801      	subs	r0, #1
   8449e:	e7e4      	b.n	8446a <__udivmoddi4+0x286>
   844a0:	4670      	mov	r0, lr
   844a2:	e7d7      	b.n	84454 <__udivmoddi4+0x270>
   844a4:	4618      	mov	r0, r3
   844a6:	e78f      	b.n	843c8 <__udivmoddi4+0x1e4>
   844a8:	4681      	mov	r9, r0
   844aa:	e7bd      	b.n	84428 <__udivmoddi4+0x244>
   844ac:	4611      	mov	r1, r2
   844ae:	e776      	b.n	8439e <__udivmoddi4+0x1ba>
   844b0:	3802      	subs	r0, #2
   844b2:	443c      	add	r4, r7
   844b4:	e744      	b.n	84340 <__udivmoddi4+0x15c>
   844b6:	4608      	mov	r0, r1
   844b8:	e706      	b.n	842c8 <__udivmoddi4+0xe4>
   844ba:	3a02      	subs	r2, #2
   844bc:	443e      	add	r6, r7
   844be:	e72b      	b.n	84318 <__udivmoddi4+0x134>

000844c0 <__aeabi_idiv0>:
   844c0:	4770      	bx	lr
   844c2:	bf00      	nop
   844c4:	736e6f43 	.word	0x736e6f43
   844c8:	20656c6f 	.word	0x20656c6f
   844cc:	64616572 	.word	0x64616572
   844d0:	00000a79 	.word	0x00000a79
   844d4:	3d3d3d3d 	.word	0x3d3d3d3d
   844d8:	3d3d3d3d 	.word	0x3d3d3d3d
   844dc:	3d3d3d3d 	.word	0x3d3d3d3d
   844e0:	00000a3d 	.word	0x00000a3d
   844e4:	762d4152 	.word	0x762d4152
   844e8:	65756c61 	.word	0x65756c61
   844ec:	6c25203a 	.word	0x6c25203a
   844f0:	2d2d2075 	.word	0x2d2d2075
   844f4:	202d2d2d 	.word	0x202d2d2d
   844f8:	762d4352 	.word	0x762d4352
   844fc:	65756c61 	.word	0x65756c61
   84500:	6c25203a 	.word	0x6c25203a
   84504:	00000a75 	.word	0x00000a75

00084508 <_global_impure_ptr>:
   84508:	20070148 33323130 37363534 42413938     H.. 0123456789AB
   84518:	46454443 00000000 33323130 37363534     CDEF....01234567
   84528:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   84538:	0000296c                                l)..

0008453c <blanks.7217>:
   8453c:	20202020 20202020 20202020 20202020                     

0008454c <zeroes.7218>:
   8454c:	30303030 30303030 30303030 30303030     0000000000000000
   8455c:	00000043 49534f50 00000058 0000002e     C...POSIX.......

0008456c <_ctype_>:
   8456c:	20202000 20202020 28282020 20282828     .         ((((( 
   8457c:	20202020 20202020 20202020 20202020                     
   8458c:	10108820 10101010 10101010 10101010      ...............
   8459c:	04040410 04040404 10040404 10101010     ................
   845ac:	41411010 41414141 01010101 01010101     ..AAAAAA........
   845bc:	01010101 01010101 01010101 10101010     ................
   845cc:	42421010 42424242 02020202 02020202     ..BBBBBB........
   845dc:	02020202 02020202 02020202 10101010     ................
   845ec:	00000020 00000000 00000000 00000000      ...............
	...

00084670 <_init>:
   84670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   84672:	bf00      	nop
   84674:	bcf8      	pop	{r3, r4, r5, r6, r7}
   84676:	bc08      	pop	{r3}
   84678:	469e      	mov	lr, r3
   8467a:	4770      	bx	lr

0008467c <__init_array_start>:
   8467c:	00082751 	.word	0x00082751

00084680 <__frame_dummy_init_array_entry>:
   84680:	00080119                                ....

00084684 <_fini>:
   84684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   84686:	bf00      	nop
   84688:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8468a:	bc08      	pop	{r3}
   8468c:	469e      	mov	lr, r3
   8468e:	4770      	bx	lr

00084690 <__fini_array_start>:
   84690:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
	...

2007000c <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4a14      	ldr	r2, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b13      	ldr	r3, [r2, #48]	; 0x30
20070048:	f023 0303 	bic.w	r3, r3, #3
2007004c:	f043 0301 	orr.w	r3, r3, #1
20070050:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070054:	f013 0f08 	tst.w	r3, #8
20070058:	d0fb      	beq.n	20070052 <SystemInit+0x46>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005a:	4a12      	ldr	r2, [pc, #72]	; (200700a4 <SystemInit+0x98>)
2007005c:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
2007005e:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070060:	461a      	mov	r2, r3
20070062:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070064:	f013 0f02 	tst.w	r3, #2
20070068:	d0fb      	beq.n	20070062 <SystemInit+0x56>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006a:	2211      	movs	r2, #17
2007006c:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
2007006e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070070:	461a      	mov	r2, r3
20070072:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070074:	f013 0f08 	tst.w	r3, #8
20070078:	d0fb      	beq.n	20070072 <SystemInit+0x66>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007a:	2212      	movs	r2, #18
2007007c:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070080:	461a      	mov	r2, r3
20070082:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070084:	f013 0f08 	tst.w	r3, #8
20070088:	d0fb      	beq.n	20070082 <SystemInit+0x76>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008a:	4a07      	ldr	r2, [pc, #28]	; (200700a8 <SystemInit+0x9c>)
2007008c:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
2007008e:	601a      	str	r2, [r3, #0]
20070090:	4770      	bx	lr
20070092:	bf00      	nop
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	2007013c 	.word	0x2007013c

200700b0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d915      	bls.n	200700e2 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b6:	4b1b      	ldr	r3, [pc, #108]	; (20070124 <system_init_flash+0x74>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d919      	bls.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700bc:	4b1a      	ldr	r3, [pc, #104]	; (20070128 <system_init_flash+0x78>)
200700be:	4298      	cmp	r0, r3
200700c0:	d91e      	bls.n	20070100 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700c2:	4b1a      	ldr	r3, [pc, #104]	; (2007012c <system_init_flash+0x7c>)
200700c4:	4298      	cmp	r0, r3
200700c6:	d923      	bls.n	20070110 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700c8:	4b19      	ldr	r3, [pc, #100]	; (20070130 <system_init_flash+0x80>)
200700ca:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700cc:	bf94      	ite	ls
200700ce:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700d2:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700d6:	4a17      	ldr	r2, [pc, #92]	; (20070134 <system_init_flash+0x84>)
200700d8:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700da:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700de:	6013      	str	r3, [r2, #0]
200700e0:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700e2:	2300      	movs	r3, #0
200700e4:	4a13      	ldr	r2, [pc, #76]	; (20070134 <system_init_flash+0x84>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700f0:	f44f 7380 	mov.w	r3, #256	; 0x100
200700f4:	4a0f      	ldr	r2, [pc, #60]	; (20070134 <system_init_flash+0x84>)
200700f6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700f8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700fc:	6013      	str	r3, [r2, #0]
200700fe:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20070100:	f44f 7300 	mov.w	r3, #512	; 0x200
20070104:	4a0b      	ldr	r2, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070106:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20070108:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007010c:	6013      	str	r3, [r2, #0]
2007010e:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070110:	f44f 7340 	mov.w	r3, #768	; 0x300
20070114:	4a07      	ldr	r2, [pc, #28]	; (20070134 <system_init_flash+0x84>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0121eabf 	.word	0x0121eabf
20070124:	02faf07f 	.word	0x02faf07f
20070128:	03d08fff 	.word	0x03d08fff
2007012c:	04c4b3ff 	.word	0x04c4b3ff
20070130:	055d4a7f 	.word	0x055d4a7f
20070134:	400e0a00 	.word	0x400e0a00

20070138 <g_interrupt_enabled>:
20070138:	00000001                                ....

2007013c <SystemCoreClock>:
2007013c:	003d0900                                ..=.

20070140 <_impure_ptr>:
20070140:	20070148 00000000                       H.. ....

20070148 <impure_data>:
20070148:	00000000 20070434 2007049c 20070504     ....4.. ... ... 
	...
200701f0:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070200:	0005deec 0000000b 00000000 00000000     ................
	...

20070570 <__atexit_recursive_mutex>:
20070570:	20070c60                                `.. 

20070574 <__global_locale>:
20070574:	00000043 00000000 00000000 00000000     C...............
	...
20070594:	00000043 00000000 00000000 00000000     C...............
	...
200705b4:	00000043 00000000 00000000 00000000     C...............
	...
200705d4:	00000043 00000000 00000000 00000000     C...............
	...
200705f4:	00000043 00000000 00000000 00000000     C...............
	...
20070614:	00000043 00000000 00000000 00000000     C...............
	...
20070634:	00000043 00000000 00000000 00000000     C...............
	...
20070654:	00083f21 00083725 00000000 0008456c     !?..%7......lE..
20070664:	00084568 0008451c 0008451c 0008451c     hE...E...E...E..
20070674:	0008451c 0008451c 0008451c 0008451c     .E...E...E...E..
20070684:	0008451c 0008451c ffffffff ffffffff     .E...E..........
20070694:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
200706bc:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

200706e0 <__malloc_av_>:
	...
200706e8:	200706e0 200706e0 200706e8 200706e8     ... ... ... ... 
200706f8:	200706f0 200706f0 200706f8 200706f8     ... ... ... ... 
20070708:	20070700 20070700 20070708 20070708     ... ... ... ... 
20070718:	20070710 20070710 20070718 20070718     ... ... ... ... 
20070728:	20070720 20070720 20070728 20070728      ..  .. (.. (.. 
20070738:	20070730 20070730 20070738 20070738     0.. 0.. 8.. 8.. 
20070748:	20070740 20070740 20070748 20070748     @.. @.. H.. H.. 
20070758:	20070750 20070750 20070758 20070758     P.. P.. X.. X.. 
20070768:	20070760 20070760 20070768 20070768     `.. `.. h.. h.. 
20070778:	20070770 20070770 20070778 20070778     p.. p.. x.. x.. 
20070788:	20070780 20070780 20070788 20070788     ... ... ... ... 
20070798:	20070790 20070790 20070798 20070798     ... ... ... ... 
200707a8:	200707a0 200707a0 200707a8 200707a8     ... ... ... ... 
200707b8:	200707b0 200707b0 200707b8 200707b8     ... ... ... ... 
200707c8:	200707c0 200707c0 200707c8 200707c8     ... ... ... ... 
200707d8:	200707d0 200707d0 200707d8 200707d8     ... ... ... ... 
200707e8:	200707e0 200707e0 200707e8 200707e8     ... ... ... ... 
200707f8:	200707f0 200707f0 200707f8 200707f8     ... ... ... ... 
20070808:	20070800 20070800 20070808 20070808     ... ... ... ... 
20070818:	20070810 20070810 20070818 20070818     ... ... ... ... 
20070828:	20070820 20070820 20070828 20070828      ..  .. (.. (.. 
20070838:	20070830 20070830 20070838 20070838     0.. 0.. 8.. 8.. 
20070848:	20070840 20070840 20070848 20070848     @.. @.. H.. H.. 
20070858:	20070850 20070850 20070858 20070858     P.. P.. X.. X.. 
20070868:	20070860 20070860 20070868 20070868     `.. `.. h.. h.. 
20070878:	20070870 20070870 20070878 20070878     p.. p.. x.. x.. 
20070888:	20070880 20070880 20070888 20070888     ... ... ... ... 
20070898:	20070890 20070890 20070898 20070898     ... ... ... ... 
200708a8:	200708a0 200708a0 200708a8 200708a8     ... ... ... ... 
200708b8:	200708b0 200708b0 200708b8 200708b8     ... ... ... ... 
200708c8:	200708c0 200708c0 200708c8 200708c8     ... ... ... ... 
200708d8:	200708d0 200708d0 200708d8 200708d8     ... ... ... ... 
200708e8:	200708e0 200708e0 200708e8 200708e8     ... ... ... ... 
200708f8:	200708f0 200708f0 200708f8 200708f8     ... ... ... ... 
20070908:	20070900 20070900 20070908 20070908     ... ... ... ... 
20070918:	20070910 20070910 20070918 20070918     ... ... ... ... 
20070928:	20070920 20070920 20070928 20070928      ..  .. (.. (.. 
20070938:	20070930 20070930 20070938 20070938     0.. 0.. 8.. 8.. 
20070948:	20070940 20070940 20070948 20070948     @.. @.. H.. H.. 
20070958:	20070950 20070950 20070958 20070958     P.. P.. X.. X.. 
20070968:	20070960 20070960 20070968 20070968     `.. `.. h.. h.. 
20070978:	20070970 20070970 20070978 20070978     p.. p.. x.. x.. 
20070988:	20070980 20070980 20070988 20070988     ... ... ... ... 
20070998:	20070990 20070990 20070998 20070998     ... ... ... ... 
200709a8:	200709a0 200709a0 200709a8 200709a8     ... ... ... ... 
200709b8:	200709b0 200709b0 200709b8 200709b8     ... ... ... ... 
200709c8:	200709c0 200709c0 200709c8 200709c8     ... ... ... ... 
200709d8:	200709d0 200709d0 200709d8 200709d8     ... ... ... ... 
200709e8:	200709e0 200709e0 200709e8 200709e8     ... ... ... ... 
200709f8:	200709f0 200709f0 200709f8 200709f8     ... ... ... ... 
20070a08:	20070a00 20070a00 20070a08 20070a08     ... ... ... ... 
20070a18:	20070a10 20070a10 20070a18 20070a18     ... ... ... ... 
20070a28:	20070a20 20070a20 20070a28 20070a28      ..  .. (.. (.. 
20070a38:	20070a30 20070a30 20070a38 20070a38     0.. 0.. 8.. 8.. 
20070a48:	20070a40 20070a40 20070a48 20070a48     @.. @.. H.. H.. 
20070a58:	20070a50 20070a50 20070a58 20070a58     P.. P.. X.. X.. 
20070a68:	20070a60 20070a60 20070a68 20070a68     `.. `.. h.. h.. 
20070a78:	20070a70 20070a70 20070a78 20070a78     p.. p.. x.. x.. 
20070a88:	20070a80 20070a80 20070a88 20070a88     ... ... ... ... 
20070a98:	20070a90 20070a90 20070a98 20070a98     ... ... ... ... 
20070aa8:	20070aa0 20070aa0 20070aa8 20070aa8     ... ... ... ... 
20070ab8:	20070ab0 20070ab0 20070ab8 20070ab8     ... ... ... ... 
20070ac8:	20070ac0 20070ac0 20070ac8 20070ac8     ... ... ... ... 
20070ad8:	20070ad0 20070ad0 20070ad8 20070ad8     ... ... ... ... 

20070ae8 <__malloc_sbrk_base>:
20070ae8:	ffffffff                                ....

20070aec <__malloc_trim_threshold>:
20070aec:	00020000                                ....
