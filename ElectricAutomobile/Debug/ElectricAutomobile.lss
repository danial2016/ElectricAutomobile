
ElectricAutomobile.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000468c  00080000  00080000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0008468c  0008468c  0001468c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000af0  20070000  00084694  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000198  20070af0  00085184  00020af0  2**2
                  ALLOC
  4 .stack        00002000  20070c88  0008531c  00020af0  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020af0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020b19  2**0
                  CONTENTS, READONLY
  7 .debug_info   00016f5c  00000000  00000000  00020b72  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003569  00000000  00000000  00037ace  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000aa0  00000000  00000000  0003b037  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000009c0  00000000  00000000  0003bad7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000192a6  00000000  00000000  0003c497  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0001034d  00000000  00000000  0005573d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000657b7  00000000  00000000  00065a8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000024ac  00000000  00000000  000cb244  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    000046b5  00000000  00000000  000cd6f0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	88 2c 07 20 31 0a 08 00 2d 0a 08 00 2d 0a 08 00     .,. 1...-...-...
   80010:	2d 0a 08 00 2d 0a 08 00 2d 0a 08 00 00 00 00 00     -...-...-.......
	...
   8002c:	2d 0a 08 00 2d 0a 08 00 00 00 00 00 2d 0a 08 00     -...-.......-...
   8003c:	2d 0a 08 00 2d 0a 08 00 2d 0a 08 00 2d 0a 08 00     -...-...-...-...
   8004c:	2d 0a 08 00 2d 0a 08 00 2d 0a 08 00 2d 0a 08 00     -...-...-...-...
   8005c:	2d 0a 08 00 2d 0a 08 00 2d 0a 08 00 00 00 00 00     -...-...-.......
   8006c:	7d 08 08 00 91 08 08 00 a5 08 08 00 b9 08 08 00     }...............
	...
   80084:	dd 04 08 00 2d 0a 08 00 2d 0a 08 00 2d 0a 08 00     ....-...-...-...
   80094:	2d 0a 08 00 2d 0a 08 00 2d 0a 08 00 2d 0a 08 00     -...-...-...-...
   800a4:	00 00 00 00 2d 0a 08 00 2d 0a 08 00 2d 0a 08 00     ....-...-...-...
   800b4:	2d 0a 08 00 2d 0a 08 00 2d 0a 08 00 2d 0a 08 00     -...-...-...-...
   800c4:	2d 0a 08 00 2d 0a 08 00 2d 0a 08 00 2d 0a 08 00     -...-...-...-...
   800d4:	2d 0a 08 00 2d 0a 08 00 2d 0a 08 00 2d 0a 08 00     -...-...-...-...
   800e4:	2d 0a 08 00 2d 0a 08 00 2d 0a 08 00 2d 0a 08 00     -...-...-...-...

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070af0 	.word	0x20070af0
   80110:	00000000 	.word	0x00000000
   80114:	00084694 	.word	0x00084694

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00084694 	.word	0x00084694
   80154:	20070af4 	.word	0x20070af4
   80158:	00084694 	.word	0x00084694
   8015c:	00000000 	.word	0x00000000

00080160 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80160:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80162:	0189      	lsls	r1, r1, #6
   80164:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   80166:	2402      	movs	r4, #2
   80168:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   8016a:	f04f 31ff 	mov.w	r1, #4294967295
   8016e:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   80170:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   80172:	605a      	str	r2, [r3, #4]
}
   80174:	bc10      	pop	{r4}
   80176:	4770      	bx	lr

00080178 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   80178:	0189      	lsls	r1, r1, #6
   8017a:	2305      	movs	r3, #5
   8017c:	5043      	str	r3, [r0, r1]
   8017e:	4770      	bx	lr

00080180 <tc_read_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_RA;
   80180:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80184:	6948      	ldr	r0, [r1, #20]
}
   80186:	4770      	bx	lr

00080188 <tc_read_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_RC;
   80188:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   8018c:	69c8      	ldr	r0, [r1, #28]
}
   8018e:	4770      	bx	lr

00080190 <tc_write_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RA = ul_value;
   80190:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80194:	614a      	str	r2, [r1, #20]
   80196:	4770      	bx	lr

00080198 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   80198:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   8019c:	61ca      	str	r2, [r1, #28]
   8019e:	4770      	bx	lr

000801a0 <pulse_set_duty_cycle>:
		tc_start(TC2, TC_WAVE_CHANNEL_1);
	}
 }
 
 void pulse_set_duty_cycle(int pin, double duty_cycle)
 {
   801a0:	b538      	push	{r3, r4, r5, lr}
   801a2:	4604      	mov	r4, r0
   801a4:	4610      	mov	r0, r2
   801a6:	4619      	mov	r1, r3
	 double rc = 0, ra = 0;
	 rc = 656;
	 ra = rc * (1 - duty_cycle/100);
   801a8:	2200      	movs	r2, #0
   801aa:	4b18      	ldr	r3, [pc, #96]	; (8020c <pulse_set_duty_cycle+0x6c>)
   801ac:	4d18      	ldr	r5, [pc, #96]	; (80210 <pulse_set_duty_cycle+0x70>)
   801ae:	47a8      	blx	r5
   801b0:	4602      	mov	r2, r0
   801b2:	460b      	mov	r3, r1
   801b4:	2000      	movs	r0, #0
   801b6:	4917      	ldr	r1, [pc, #92]	; (80214 <pulse_set_duty_cycle+0x74>)
   801b8:	4d17      	ldr	r5, [pc, #92]	; (80218 <pulse_set_duty_cycle+0x78>)
   801ba:	47a8      	blx	r5
   801bc:	2200      	movs	r2, #0
   801be:	4b17      	ldr	r3, [pc, #92]	; (8021c <pulse_set_duty_cycle+0x7c>)
   801c0:	4d17      	ldr	r5, [pc, #92]	; (80220 <pulse_set_duty_cycle+0x80>)
   801c2:	47a8      	blx	r5
	 
	 /*
	  * RA Compare is used to control the TIOA output. The value of RA will regulate the
	  * duty cycle. The signal will go high on RA compare and get cleared on RC compare.
	  */	
	 if (pin == EnA)
   801c4:	2c39      	cmp	r4, #57	; 0x39
   801c6:	d002      	beq.n	801ce <pulse_set_duty_cycle+0x2e>
	 {
		 tc_write_ra(TC0, TC_WAVE_CHANNEL_0, (uint32_t) ra);
		 tc_write_rc(TC0, TC_WAVE_CHANNEL_0, (uint32_t) rc);
	 }
	 if (pin == EnB)
   801c8:	2c5c      	cmp	r4, #92	; 0x5c
   801ca:	d00f      	beq.n	801ec <pulse_set_duty_cycle+0x4c>
   801cc:	bd38      	pop	{r3, r4, r5, pc}
		 tc_write_ra(TC0, TC_WAVE_CHANNEL_0, (uint32_t) ra);
   801ce:	4b15      	ldr	r3, [pc, #84]	; (80224 <pulse_set_duty_cycle+0x84>)
   801d0:	4798      	blx	r3
   801d2:	4c15      	ldr	r4, [pc, #84]	; (80228 <pulse_set_duty_cycle+0x88>)
   801d4:	4602      	mov	r2, r0
   801d6:	2100      	movs	r1, #0
   801d8:	4620      	mov	r0, r4
   801da:	4b14      	ldr	r3, [pc, #80]	; (8022c <pulse_set_duty_cycle+0x8c>)
   801dc:	4798      	blx	r3
		 tc_write_rc(TC0, TC_WAVE_CHANNEL_0, (uint32_t) rc);
   801de:	f44f 7224 	mov.w	r2, #656	; 0x290
   801e2:	2100      	movs	r1, #0
   801e4:	4620      	mov	r0, r4
   801e6:	4b12      	ldr	r3, [pc, #72]	; (80230 <pulse_set_duty_cycle+0x90>)
   801e8:	4798      	blx	r3
   801ea:	bd38      	pop	{r3, r4, r5, pc}
	 {
		 tc_write_ra(TC2, TC_WAVE_CHANNEL_1, (uint32_t) ra);
   801ec:	4b0d      	ldr	r3, [pc, #52]	; (80224 <pulse_set_duty_cycle+0x84>)
   801ee:	4798      	blx	r3
   801f0:	4c10      	ldr	r4, [pc, #64]	; (80234 <pulse_set_duty_cycle+0x94>)
   801f2:	4602      	mov	r2, r0
   801f4:	2101      	movs	r1, #1
   801f6:	4620      	mov	r0, r4
   801f8:	4b0c      	ldr	r3, [pc, #48]	; (8022c <pulse_set_duty_cycle+0x8c>)
   801fa:	4798      	blx	r3
		 tc_write_rc(TC2, TC_WAVE_CHANNEL_1, (uint32_t) rc);
   801fc:	f44f 7224 	mov.w	r2, #656	; 0x290
   80200:	2101      	movs	r1, #1
   80202:	4620      	mov	r0, r4
   80204:	4b0a      	ldr	r3, [pc, #40]	; (80230 <pulse_set_duty_cycle+0x90>)
   80206:	4798      	blx	r3
	 }
 }
   80208:	e7e0      	b.n	801cc <pulse_set_duty_cycle+0x2c>
   8020a:	bf00      	nop
   8020c:	40590000 	.word	0x40590000
   80210:	0008142d 	.word	0x0008142d
   80214:	3ff00000 	.word	0x3ff00000
   80218:	00080e71 	.word	0x00080e71
   8021c:	40848000 	.word	0x40848000
   80220:	000811d9 	.word	0x000811d9
   80224:	000815fd 	.word	0x000815fd
   80228:	40080000 	.word	0x40080000
   8022c:	00080191 	.word	0x00080191
   80230:	00080199 	.word	0x00080199
   80234:	40088000 	.word	0x40088000

00080238 <pulse_start>:
 {
   80238:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   8023c:	4605      	mov	r5, r0
   8023e:	4690      	mov	r8, r2
   80240:	4699      	mov	r9, r3
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   80242:	200b      	movs	r0, #11
   80244:	4c26      	ldr	r4, [pc, #152]	; (802e0 <pulse_start+0xa8>)
   80246:	47a0      	blx	r4
   80248:	200c      	movs	r0, #12
   8024a:	47a0      	blx	r4
   8024c:	200d      	movs	r0, #13
   8024e:	47a0      	blx	r4
   80250:	200e      	movs	r0, #14
   80252:	47a0      	blx	r4
		ioport_port_mask_t mask, ioport_mode_t mode)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
   80254:	4b23      	ldr	r3, [pc, #140]	; (802e4 <pulse_start+0xac>)
   80256:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   8025a:	665a      	str	r2, [r3, #100]	; 0x64
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   8025c:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   8025e:	625a      	str	r2, [r3, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   80260:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
#endif
	}

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
   80264:	6f19      	ldr	r1, [r3, #112]	; 0x70
   80266:	4311      	orrs	r1, r2
   80268:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   8026a:	605a      	str	r2, [r3, #4]
		base->PIO_PUER = mask;
   8026c:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80270:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   80274:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_MDDR = mask;
   80276:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
   80278:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_SCIFSR = mask;
   8027a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABSR |= mask;
   8027e:	6f19      	ldr	r1, [r3, #112]	; 0x70
   80280:	4311      	orrs	r1, r2
   80282:	6719      	str	r1, [r3, #112]	; 0x70
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   80284:	605a      	str	r2, [r3, #4]
	 pmc_set_writeprotect(false);
   80286:	2000      	movs	r0, #0
   80288:	4b17      	ldr	r3, [pc, #92]	; (802e8 <pulse_start+0xb0>)
   8028a:	4798      	blx	r3
	 pmc_enable_periph_clk(ID_TC0); // PMC ID of TC0 ch0 = ID_TC0
   8028c:	201b      	movs	r0, #27
   8028e:	47a0      	blx	r4
	 pmc_enable_periph_clk(ID_TC7); // PMC ID of TC2 ch1 = ID_TC7
   80290:	2022      	movs	r0, #34	; 0x22
   80292:	47a0      	blx	r4
	 tc_init(TC0, TC_WAVE_CHANNEL_0, TC_CMR_TCCLKS_TIMER_CLOCK4 
   80294:	4e15      	ldr	r6, [pc, #84]	; (802ec <pulse_start+0xb4>)
   80296:	4632      	mov	r2, r6
   80298:	2100      	movs	r1, #0
   8029a:	4815      	ldr	r0, [pc, #84]	; (802f0 <pulse_start+0xb8>)
   8029c:	4c15      	ldr	r4, [pc, #84]	; (802f4 <pulse_start+0xbc>)
   8029e:	47a0      	blx	r4
	tc_init(TC2, TC_WAVE_CHANNEL_1, TC_CMR_TCCLKS_TIMER_CLOCK4 
   802a0:	4632      	mov	r2, r6
   802a2:	2101      	movs	r1, #1
   802a4:	4814      	ldr	r0, [pc, #80]	; (802f8 <pulse_start+0xc0>)
   802a6:	47a0      	blx	r4
	if (pin == EnA)
   802a8:	2d39      	cmp	r5, #57	; 0x39
   802aa:	d003      	beq.n	802b4 <pulse_start+0x7c>
	if (pin == EnB)
   802ac:	2d5c      	cmp	r5, #92	; 0x5c
   802ae:	d00c      	beq.n	802ca <pulse_start+0x92>
   802b0:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
		pulse_set_duty_cycle(EnA, duty_cycle);
   802b4:	4642      	mov	r2, r8
   802b6:	464b      	mov	r3, r9
   802b8:	2039      	movs	r0, #57	; 0x39
   802ba:	4910      	ldr	r1, [pc, #64]	; (802fc <pulse_start+0xc4>)
   802bc:	4788      	blx	r1
		tc_start(TC0, TC_WAVE_CHANNEL_0);
   802be:	2100      	movs	r1, #0
   802c0:	480b      	ldr	r0, [pc, #44]	; (802f0 <pulse_start+0xb8>)
   802c2:	4b0f      	ldr	r3, [pc, #60]	; (80300 <pulse_start+0xc8>)
   802c4:	4798      	blx	r3
   802c6:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
		pulse_set_duty_cycle(EnB, duty_cycle);
   802ca:	4642      	mov	r2, r8
   802cc:	464b      	mov	r3, r9
   802ce:	205c      	movs	r0, #92	; 0x5c
   802d0:	490a      	ldr	r1, [pc, #40]	; (802fc <pulse_start+0xc4>)
   802d2:	4788      	blx	r1
		tc_start(TC2, TC_WAVE_CHANNEL_1);
   802d4:	2101      	movs	r1, #1
   802d6:	4808      	ldr	r0, [pc, #32]	; (802f8 <pulse_start+0xc0>)
   802d8:	4b09      	ldr	r3, [pc, #36]	; (80300 <pulse_start+0xc8>)
   802da:	4798      	blx	r3
 }
   802dc:	e7e8      	b.n	802b0 <pulse_start+0x78>
   802de:	bf00      	nop
   802e0:	000809b5 	.word	0x000809b5
   802e4:	400e1000 	.word	0x400e1000
   802e8:	00080a09 	.word	0x00080a09
   802ec:	0009c003 	.word	0x0009c003
   802f0:	40080000 	.word	0x40080000
   802f4:	00080161 	.word	0x00080161
   802f8:	40088000 	.word	0x40088000
   802fc:	000801a1 	.word	0x000801a1
   80300:	00080179 	.word	0x00080179

00080304 <usart_serial_read_packet>:
 *
 */
status_code_t usart_serial_read_packet(usart_if usart, uint8_t *data,
		size_t len)
{
	while (len) {
   80304:	2a00      	cmp	r2, #0
   80306:	d051      	beq.n	803ac <usart_serial_read_packet+0xa8>
{
   80308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8030c:	b083      	sub	sp, #12
   8030e:	4605      	mov	r5, r0
   80310:	460c      	mov	r4, r1
   80312:	4692      	mov	sl, r2
   80314:	448a      	add	sl, r1

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   80316:	4f26      	ldr	r7, [pc, #152]	; (803b0 <usart_serial_read_packet+0xac>)
		while (uart_read((Uart*)p_usart, data));
   80318:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 803c4 <usart_serial_read_packet+0xc0>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   8031c:	4e25      	ldr	r6, [pc, #148]	; (803b4 <usart_serial_read_packet+0xb0>)
   8031e:	e01d      	b.n	8035c <usart_serial_read_packet+0x58>
		while (uart_read((Uart*)p_usart, data));
   80320:	4621      	mov	r1, r4
   80322:	4638      	mov	r0, r7
   80324:	47c8      	blx	r9
   80326:	2800      	cmp	r0, #0
   80328:	d1fa      	bne.n	80320 <usart_serial_read_packet+0x1c>
   8032a:	e021      	b.n	80370 <usart_serial_read_packet+0x6c>
		while (usart_read(p_usart, &val));
   8032c:	469b      	mov	fp, r3
   8032e:	f8df 8098 	ldr.w	r8, [pc, #152]	; 803c8 <usart_serial_read_packet+0xc4>
   80332:	a901      	add	r1, sp, #4
   80334:	4658      	mov	r0, fp
   80336:	47c0      	blx	r8
   80338:	2800      	cmp	r0, #0
   8033a:	d1fa      	bne.n	80332 <usart_serial_read_packet+0x2e>
		*data = (uint8_t)(val & 0xFF);
   8033c:	9b01      	ldr	r3, [sp, #4]
   8033e:	7023      	strb	r3, [r4, #0]
   80340:	e019      	b.n	80376 <usart_serial_read_packet+0x72>
		while (usart_read(p_usart, &val));
   80342:	469b      	mov	fp, r3
   80344:	f8df 8080 	ldr.w	r8, [pc, #128]	; 803c8 <usart_serial_read_packet+0xc4>
   80348:	a901      	add	r1, sp, #4
   8034a:	4658      	mov	r0, fp
   8034c:	47c0      	blx	r8
   8034e:	2800      	cmp	r0, #0
   80350:	d1fa      	bne.n	80348 <usart_serial_read_packet+0x44>
		*data = (uint8_t)(val & 0xFF);
   80352:	9b01      	ldr	r3, [sp, #4]
   80354:	7023      	strb	r3, [r4, #0]
		usart_serial_getchar(usart, data);
		len--;
		data++;
   80356:	3401      	adds	r4, #1
	while (len) {
   80358:	4554      	cmp	r4, sl
   8035a:	d023      	beq.n	803a4 <usart_serial_read_packet+0xa0>
	uint32_t val = 0;
   8035c:	2300      	movs	r3, #0
   8035e:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
   80360:	42bd      	cmp	r5, r7
   80362:	d0dd      	beq.n	80320 <usart_serial_read_packet+0x1c>
	if (USART0 == p_usart) {
   80364:	4b14      	ldr	r3, [pc, #80]	; (803b8 <usart_serial_read_packet+0xb4>)
   80366:	429d      	cmp	r5, r3
   80368:	d0e0      	beq.n	8032c <usart_serial_read_packet+0x28>
	if (USART1 == p_usart) {
   8036a:	4b14      	ldr	r3, [pc, #80]	; (803bc <usart_serial_read_packet+0xb8>)
   8036c:	429d      	cmp	r5, r3
   8036e:	d0e8      	beq.n	80342 <usart_serial_read_packet+0x3e>
	if (USART2 == p_usart) {
   80370:	4b13      	ldr	r3, [pc, #76]	; (803c0 <usart_serial_read_packet+0xbc>)
   80372:	429d      	cmp	r5, r3
   80374:	d00b      	beq.n	8038e <usart_serial_read_packet+0x8a>
	if (USART3 == p_usart) {
   80376:	42b5      	cmp	r5, r6
   80378:	d1ed      	bne.n	80356 <usart_serial_read_packet+0x52>
		while (usart_read(p_usart, &val));
   8037a:	f8df 804c 	ldr.w	r8, [pc, #76]	; 803c8 <usart_serial_read_packet+0xc4>
   8037e:	a901      	add	r1, sp, #4
   80380:	4630      	mov	r0, r6
   80382:	47c0      	blx	r8
   80384:	2800      	cmp	r0, #0
   80386:	d1fa      	bne.n	8037e <usart_serial_read_packet+0x7a>
		*data = (uint8_t)(val & 0xFF);
   80388:	9b01      	ldr	r3, [sp, #4]
   8038a:	7023      	strb	r3, [r4, #0]
   8038c:	e7e3      	b.n	80356 <usart_serial_read_packet+0x52>
		while (usart_read(p_usart, &val));
   8038e:	469b      	mov	fp, r3
   80390:	f8df 8034 	ldr.w	r8, [pc, #52]	; 803c8 <usart_serial_read_packet+0xc4>
   80394:	a901      	add	r1, sp, #4
   80396:	4658      	mov	r0, fp
   80398:	47c0      	blx	r8
   8039a:	2800      	cmp	r0, #0
   8039c:	d1fa      	bne.n	80394 <usart_serial_read_packet+0x90>
		*data = (uint8_t)(val & 0xFF);
   8039e:	9b01      	ldr	r3, [sp, #4]
   803a0:	7023      	strb	r3, [r4, #0]
   803a2:	e7d8      	b.n	80356 <usart_serial_read_packet+0x52>
	}
	return STATUS_OK;
}
   803a4:	2000      	movs	r0, #0
   803a6:	b003      	add	sp, #12
   803a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   803ac:	2000      	movs	r0, #0
   803ae:	4770      	bx	lr
   803b0:	400e0800 	.word	0x400e0800
   803b4:	400a4000 	.word	0x400a4000
   803b8:	40098000 	.word	0x40098000
   803bc:	4009c000 	.word	0x4009c000
   803c0:	400a0000 	.word	0x400a0000
   803c4:	0008049f 	.word	0x0008049f
   803c8:	000804c5 	.word	0x000804c5

000803cc <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
   803cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
   803d0:	b980      	cbnz	r0, 803f4 <_read+0x28>
   803d2:	460c      	mov	r4, r1
   803d4:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
   803d6:	2a00      	cmp	r2, #0
   803d8:	dd0f      	ble.n	803fa <_read+0x2e>
   803da:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
   803dc:	4e08      	ldr	r6, [pc, #32]	; (80400 <_read+0x34>)
   803de:	4d09      	ldr	r5, [pc, #36]	; (80404 <_read+0x38>)
   803e0:	6830      	ldr	r0, [r6, #0]
   803e2:	4621      	mov	r1, r4
   803e4:	682b      	ldr	r3, [r5, #0]
   803e6:	4798      	blx	r3
		ptr++;
   803e8:	3401      	adds	r4, #1
	for (; len > 0; --len) {
   803ea:	42bc      	cmp	r4, r7
   803ec:	d1f8      	bne.n	803e0 <_read+0x14>
		nChars++;
	}
	return nChars;
}
   803ee:	4640      	mov	r0, r8
   803f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   803f4:	f04f 38ff 	mov.w	r8, #4294967295
   803f8:	e7f9      	b.n	803ee <_read+0x22>
	for (; len > 0; --len) {
   803fa:	4680      	mov	r8, r0
   803fc:	e7f7      	b.n	803ee <_read+0x22>
   803fe:	bf00      	nop
   80400:	20070c5c 	.word	0x20070c5c
   80404:	20070c54 	.word	0x20070c54

00080408 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
   80408:	3801      	subs	r0, #1
   8040a:	2802      	cmp	r0, #2
   8040c:	d815      	bhi.n	8043a <_write+0x32>
{
   8040e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80412:	460e      	mov	r6, r1
   80414:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
   80416:	b19a      	cbz	r2, 80440 <_write+0x38>
   80418:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
   8041a:	f8df 8038 	ldr.w	r8, [pc, #56]	; 80454 <_write+0x4c>
   8041e:	4f0c      	ldr	r7, [pc, #48]	; (80450 <_write+0x48>)
   80420:	f8d8 0000 	ldr.w	r0, [r8]
   80424:	f815 1b01 	ldrb.w	r1, [r5], #1
   80428:	683b      	ldr	r3, [r7, #0]
   8042a:	4798      	blx	r3
   8042c:	2800      	cmp	r0, #0
   8042e:	db0a      	blt.n	80446 <_write+0x3e>
   80430:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
   80432:	3c01      	subs	r4, #1
   80434:	d1f4      	bne.n	80420 <_write+0x18>
   80436:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   8043a:	f04f 30ff 	mov.w	r0, #4294967295
   8043e:	4770      	bx	lr
	for (; len != 0; --len) {
   80440:	4610      	mov	r0, r2
   80442:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
   80446:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
   8044a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8044e:	bf00      	nop
   80450:	20070c58 	.word	0x20070c58
   80454:	20070c5c 	.word	0x20070c5c

00080458 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
   80458:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   8045a:	23ac      	movs	r3, #172	; 0xac
   8045c:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   8045e:	680b      	ldr	r3, [r1, #0]
   80460:	684a      	ldr	r2, [r1, #4]
   80462:	fbb3 f3f2 	udiv	r3, r3, r2
   80466:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   80468:	1e5c      	subs	r4, r3, #1
   8046a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   8046e:	4294      	cmp	r4, r2
   80470:	d80b      	bhi.n	8048a <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
   80472:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
   80474:	688b      	ldr	r3, [r1, #8]
   80476:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   80478:	f240 2302 	movw	r3, #514	; 0x202
   8047c:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   80480:	2350      	movs	r3, #80	; 0x50
   80482:	6003      	str	r3, [r0, #0]

	return 0;
   80484:	2000      	movs	r0, #0
}
   80486:	bc10      	pop	{r4}
   80488:	4770      	bx	lr
		return 1;
   8048a:	2001      	movs	r0, #1
   8048c:	e7fb      	b.n	80486 <uart_init+0x2e>

0008048e <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
   8048e:	6943      	ldr	r3, [r0, #20]
   80490:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
   80494:	bf1a      	itte	ne
   80496:	61c1      	strne	r1, [r0, #28]
	return 0;
   80498:	2000      	movne	r0, #0
		return 1;
   8049a:	2001      	moveq	r0, #1
}
   8049c:	4770      	bx	lr

0008049e <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
   8049e:	6943      	ldr	r3, [r0, #20]
   804a0:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
   804a4:	bf1d      	ittte	ne
   804a6:	6983      	ldrne	r3, [r0, #24]
   804a8:	700b      	strbne	r3, [r1, #0]
	return 0;
   804aa:	2000      	movne	r0, #0
		return 1;
   804ac:	2001      	moveq	r0, #1
}
   804ae:	4770      	bx	lr

000804b0 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
   804b0:	6943      	ldr	r3, [r0, #20]
   804b2:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
   804b6:	bf1d      	ittte	ne
   804b8:	f3c1 0108 	ubfxne	r1, r1, #0, #9
   804bc:	61c1      	strne	r1, [r0, #28]
	return 0;
   804be:	2000      	movne	r0, #0
		return 1;
   804c0:	2001      	moveq	r0, #1
}
   804c2:	4770      	bx	lr

000804c4 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
   804c4:	6943      	ldr	r3, [r0, #20]
   804c6:	f013 0f01 	tst.w	r3, #1
   804ca:	d005      	beq.n	804d8 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   804cc:	6983      	ldr	r3, [r0, #24]
   804ce:	f3c3 0308 	ubfx	r3, r3, #0, #9
   804d2:	600b      	str	r3, [r1, #0]

	return 0;
   804d4:	2000      	movs	r0, #0
   804d6:	4770      	bx	lr
		return 1;
   804d8:	2001      	movs	r0, #1
}
   804da:	4770      	bx	lr

000804dc <USART0_Handler>:
#if SAMD || SAMR21 || SAML21 || SAMR30
void USART_HOST_ISR_VECT(uint8_t instance)
#else
USART_HOST_ISR_VECT()
#endif
{
   804dc:	b500      	push	{lr}
   804de:	b083      	sub	sp, #12
#if SAMD || SAMR21 || SAML21 || SAMR30
	usart_serial_read_packet(&host_uart_module, &temp, 1);
#elif SAM4E || SAM4S
	usart_serial_read_packet((Usart *)USART_HOST, &temp, 1);
#else
    usart_serial_read_packet(USART_HOST, &temp, 1);
   804e0:	2201      	movs	r2, #1
   804e2:	f10d 0107 	add.w	r1, sp, #7
   804e6:	4810      	ldr	r0, [pc, #64]	; (80528 <USART0_Handler+0x4c>)
   804e8:	4b10      	ldr	r3, [pc, #64]	; (8052c <USART0_Handler+0x50>)
   804ea:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   804ec:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   804ee:	f3bf 8f5f 	dmb	sy
#endif

	/* Introducing critical section to avoid buffer corruption. */
	cpu_irq_disable();
   804f2:	2200      	movs	r2, #0
   804f4:	4b0e      	ldr	r3, [pc, #56]	; (80530 <USART0_Handler+0x54>)
   804f6:	701a      	strb	r2, [r3, #0]

	/* The number of data in the receive buffer is incremented and the
	 * buffer is updated. */

	serial_rx_buf[serial_rx_buf_tail] = temp;
   804f8:	4b0e      	ldr	r3, [pc, #56]	; (80534 <USART0_Handler+0x58>)
   804fa:	781b      	ldrb	r3, [r3, #0]
   804fc:	f89d 1007 	ldrb.w	r1, [sp, #7]
   80500:	4a0d      	ldr	r2, [pc, #52]	; (80538 <USART0_Handler+0x5c>)
   80502:	54d1      	strb	r1, [r2, r3]

	if ((SERIAL_RX_BUF_SIZE_HOST - 1) == serial_rx_buf_tail) {
   80504:	2b9b      	cmp	r3, #155	; 0x9b
   80506:	d00b      	beq.n	80520 <USART0_Handler+0x44>
		/* Reached the end of buffer, revert back to beginning of
		 * buffer. */
		serial_rx_buf_tail = 0x00;
	} else {
		serial_rx_buf_tail++;
   80508:	3301      	adds	r3, #1
   8050a:	4a0a      	ldr	r2, [pc, #40]	; (80534 <USART0_Handler+0x58>)
   8050c:	7013      	strb	r3, [r2, #0]
	}

	cpu_irq_enable();
   8050e:	2201      	movs	r2, #1
   80510:	4b07      	ldr	r3, [pc, #28]	; (80530 <USART0_Handler+0x54>)
   80512:	701a      	strb	r2, [r3, #0]
   80514:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80518:	b662      	cpsie	i
}
   8051a:	b003      	add	sp, #12
   8051c:	f85d fb04 	ldr.w	pc, [sp], #4
		serial_rx_buf_tail = 0x00;
   80520:	2200      	movs	r2, #0
   80522:	4b04      	ldr	r3, [pc, #16]	; (80534 <USART0_Handler+0x58>)
   80524:	701a      	strb	r2, [r3, #0]
   80526:	e7f2      	b.n	8050e <USART0_Handler+0x32>
   80528:	40098000 	.word	0x40098000
   8052c:	00080305 	.word	0x00080305
   80530:	20070138 	.word	0x20070138
   80534:	20070ba8 	.word	0x20070ba8
   80538:	20070b0c 	.word	0x20070b0c

0008053c <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   8053c:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   8053e:	480e      	ldr	r0, [pc, #56]	; (80578 <sysclk_init+0x3c>)
   80540:	4b0e      	ldr	r3, [pc, #56]	; (8057c <sysclk_init+0x40>)
   80542:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   80544:	213e      	movs	r1, #62	; 0x3e
   80546:	2000      	movs	r0, #0
   80548:	4b0d      	ldr	r3, [pc, #52]	; (80580 <sysclk_init+0x44>)
   8054a:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   8054c:	4c0d      	ldr	r4, [pc, #52]	; (80584 <sysclk_init+0x48>)
   8054e:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   80550:	2800      	cmp	r0, #0
   80552:	d0fc      	beq.n	8054e <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   80554:	4b0c      	ldr	r3, [pc, #48]	; (80588 <sysclk_init+0x4c>)
   80556:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   80558:	4a0c      	ldr	r2, [pc, #48]	; (8058c <sysclk_init+0x50>)
   8055a:	4b0d      	ldr	r3, [pc, #52]	; (80590 <sysclk_init+0x54>)
   8055c:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   8055e:	4c0d      	ldr	r4, [pc, #52]	; (80594 <sysclk_init+0x58>)
   80560:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   80562:	2800      	cmp	r0, #0
   80564:	d0fc      	beq.n	80560 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80566:	2010      	movs	r0, #16
   80568:	4b0b      	ldr	r3, [pc, #44]	; (80598 <sysclk_init+0x5c>)
   8056a:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   8056c:	4b0b      	ldr	r3, [pc, #44]	; (8059c <sysclk_init+0x60>)
   8056e:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   80570:	4801      	ldr	r0, [pc, #4]	; (80578 <sysclk_init+0x3c>)
   80572:	4b02      	ldr	r3, [pc, #8]	; (8057c <sysclk_init+0x40>)
   80574:	4798      	blx	r3
   80576:	bd10      	pop	{r4, pc}
   80578:	0501bd00 	.word	0x0501bd00
   8057c:	200700b1 	.word	0x200700b1
   80580:	00080931 	.word	0x00080931
   80584:	00080985 	.word	0x00080985
   80588:	00080995 	.word	0x00080995
   8058c:	200d3f01 	.word	0x200d3f01
   80590:	400e0600 	.word	0x400e0600
   80594:	000809a5 	.word	0x000809a5
   80598:	000808cd 	.word	0x000808cd
   8059c:	00080ac9 	.word	0x00080ac9

000805a0 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   805a0:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   805a2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   805a6:	4b16      	ldr	r3, [pc, #88]	; (80600 <board_init+0x60>)
   805a8:	605a      	str	r2, [r3, #4]
   805aa:	200b      	movs	r0, #11
   805ac:	4c15      	ldr	r4, [pc, #84]	; (80604 <board_init+0x64>)
   805ae:	47a0      	blx	r4
   805b0:	200c      	movs	r0, #12
   805b2:	47a0      	blx	r4
   805b4:	200d      	movs	r0, #13
   805b6:	47a0      	blx	r4
   805b8:	200e      	movs	r0, #14
   805ba:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   805bc:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   805c0:	203b      	movs	r0, #59	; 0x3b
   805c2:	4c11      	ldr	r4, [pc, #68]	; (80608 <board_init+0x68>)
   805c4:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   805c6:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   805ca:	2055      	movs	r0, #85	; 0x55
   805cc:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   805ce:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   805d2:	2056      	movs	r0, #86	; 0x56
   805d4:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   805d6:	490d      	ldr	r1, [pc, #52]	; (8060c <board_init+0x6c>)
   805d8:	2068      	movs	r0, #104	; 0x68
   805da:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   805dc:	490c      	ldr	r1, [pc, #48]	; (80610 <board_init+0x70>)
   805de:	205c      	movs	r0, #92	; 0x5c
   805e0:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   805e2:	4a0c      	ldr	r2, [pc, #48]	; (80614 <board_init+0x74>)
   805e4:	f44f 7140 	mov.w	r1, #768	; 0x300
   805e8:	480b      	ldr	r0, [pc, #44]	; (80618 <board_init+0x78>)
   805ea:	4b0c      	ldr	r3, [pc, #48]	; (8061c <board_init+0x7c>)
   805ec:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   805ee:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   805f2:	202b      	movs	r0, #43	; 0x2b
   805f4:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   805f6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   805fa:	202a      	movs	r0, #42	; 0x2a
   805fc:	47a0      	blx	r4
   805fe:	bd10      	pop	{r4, pc}
   80600:	400e1a50 	.word	0x400e1a50
   80604:	000809b5 	.word	0x000809b5
   80608:	000806c1 	.word	0x000806c1
   8060c:	28000079 	.word	0x28000079
   80610:	28000001 	.word	0x28000001
   80614:	08000001 	.word	0x08000001
   80618:	400e0e00 	.word	0x400e0e00
   8061c:	00080791 	.word	0x00080791

00080620 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   80620:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   80622:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   80626:	d016      	beq.n	80656 <pio_set_peripheral+0x36>
   80628:	d80b      	bhi.n	80642 <pio_set_peripheral+0x22>
   8062a:	b149      	cbz	r1, 80640 <pio_set_peripheral+0x20>
   8062c:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   80630:	d105      	bne.n	8063e <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   80632:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   80634:	6f01      	ldr	r1, [r0, #112]	; 0x70
   80636:	400b      	ands	r3, r1
   80638:	ea23 0302 	bic.w	r3, r3, r2
   8063c:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   8063e:	6042      	str	r2, [r0, #4]
   80640:	4770      	bx	lr
	switch (ul_type) {
   80642:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   80646:	d0fb      	beq.n	80640 <pio_set_peripheral+0x20>
   80648:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   8064c:	d0f8      	beq.n	80640 <pio_set_peripheral+0x20>
   8064e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   80652:	d1f4      	bne.n	8063e <pio_set_peripheral+0x1e>
   80654:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   80656:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   80658:	4313      	orrs	r3, r2
   8065a:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   8065c:	e7ef      	b.n	8063e <pio_set_peripheral+0x1e>

0008065e <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   8065e:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80660:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80664:	bf14      	ite	ne
   80666:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80668:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   8066a:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   8066e:	bf14      	ite	ne
   80670:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   80672:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   80674:	f012 0f02 	tst.w	r2, #2
   80678:	d107      	bne.n	8068a <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   8067a:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   8067e:	bf18      	it	ne
   80680:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   80684:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80686:	6001      	str	r1, [r0, #0]
   80688:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   8068a:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   8068e:	e7f9      	b.n	80684 <pio_set_input+0x26>

00080690 <pio_set_output>:
{
   80690:	b410      	push	{r4}
   80692:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   80694:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80696:	b944      	cbnz	r4, 806aa <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   80698:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   8069a:	b143      	cbz	r3, 806ae <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   8069c:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   8069e:	b942      	cbnz	r2, 806b2 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   806a0:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   806a2:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   806a4:	6001      	str	r1, [r0, #0]
}
   806a6:	bc10      	pop	{r4}
   806a8:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   806aa:	6641      	str	r1, [r0, #100]	; 0x64
   806ac:	e7f5      	b.n	8069a <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   806ae:	6541      	str	r1, [r0, #84]	; 0x54
   806b0:	e7f5      	b.n	8069e <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   806b2:	6301      	str	r1, [r0, #48]	; 0x30
   806b4:	e7f5      	b.n	806a2 <pio_set_output+0x12>

000806b6 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   806b6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   806b8:	4770      	bx	lr

000806ba <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   806ba:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   806bc:	4770      	bx	lr
	...

000806c0 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   806c0:	b570      	push	{r4, r5, r6, lr}
   806c2:	b082      	sub	sp, #8
   806c4:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   806c6:	0943      	lsrs	r3, r0, #5
   806c8:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   806cc:	f203 7307 	addw	r3, r3, #1799	; 0x707
   806d0:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   806d2:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   806d6:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   806da:	d031      	beq.n	80740 <pio_configure_pin+0x80>
   806dc:	d816      	bhi.n	8070c <pio_configure_pin+0x4c>
   806de:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   806e2:	d01b      	beq.n	8071c <pio_configure_pin+0x5c>
   806e4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   806e8:	d116      	bne.n	80718 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   806ea:	f000 001f 	and.w	r0, r0, #31
   806ee:	2601      	movs	r6, #1
   806f0:	4086      	lsls	r6, r0
   806f2:	4632      	mov	r2, r6
   806f4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   806f8:	4620      	mov	r0, r4
   806fa:	4b22      	ldr	r3, [pc, #136]	; (80784 <pio_configure_pin+0xc4>)
   806fc:	4798      	blx	r3
	if (ul_pull_up_enable) {
   806fe:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80702:	bf14      	ite	ne
   80704:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80706:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   80708:	2001      	movs	r0, #1
   8070a:	e017      	b.n	8073c <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   8070c:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   80710:	d021      	beq.n	80756 <pio_configure_pin+0x96>
   80712:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   80716:	d01e      	beq.n	80756 <pio_configure_pin+0x96>
		return 0;
   80718:	2000      	movs	r0, #0
   8071a:	e00f      	b.n	8073c <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   8071c:	f000 001f 	and.w	r0, r0, #31
   80720:	2601      	movs	r6, #1
   80722:	4086      	lsls	r6, r0
   80724:	4632      	mov	r2, r6
   80726:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8072a:	4620      	mov	r0, r4
   8072c:	4b15      	ldr	r3, [pc, #84]	; (80784 <pio_configure_pin+0xc4>)
   8072e:	4798      	blx	r3
	if (ul_pull_up_enable) {
   80730:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80734:	bf14      	ite	ne
   80736:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80738:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   8073a:	2001      	movs	r0, #1
}
   8073c:	b002      	add	sp, #8
   8073e:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   80740:	f000 011f 	and.w	r1, r0, #31
   80744:	2601      	movs	r6, #1
   80746:	462a      	mov	r2, r5
   80748:	fa06 f101 	lsl.w	r1, r6, r1
   8074c:	4620      	mov	r0, r4
   8074e:	4b0e      	ldr	r3, [pc, #56]	; (80788 <pio_configure_pin+0xc8>)
   80750:	4798      	blx	r3
	return 1;
   80752:	4630      	mov	r0, r6
		break;
   80754:	e7f2      	b.n	8073c <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80756:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   8075a:	f000 011f 	and.w	r1, r0, #31
   8075e:	2601      	movs	r6, #1
   80760:	ea05 0306 	and.w	r3, r5, r6
   80764:	9300      	str	r3, [sp, #0]
   80766:	f3c5 0380 	ubfx	r3, r5, #2, #1
   8076a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   8076e:	bf14      	ite	ne
   80770:	2200      	movne	r2, #0
   80772:	2201      	moveq	r2, #1
   80774:	fa06 f101 	lsl.w	r1, r6, r1
   80778:	4620      	mov	r0, r4
   8077a:	4c04      	ldr	r4, [pc, #16]	; (8078c <pio_configure_pin+0xcc>)
   8077c:	47a0      	blx	r4
	return 1;
   8077e:	4630      	mov	r0, r6
		break;
   80780:	e7dc      	b.n	8073c <pio_configure_pin+0x7c>
   80782:	bf00      	nop
   80784:	00080621 	.word	0x00080621
   80788:	0008065f 	.word	0x0008065f
   8078c:	00080691 	.word	0x00080691

00080790 <pio_configure_pin_group>:
{
   80790:	b570      	push	{r4, r5, r6, lr}
   80792:	b082      	sub	sp, #8
   80794:	4605      	mov	r5, r0
   80796:	460e      	mov	r6, r1
   80798:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
   8079a:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   8079e:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   807a2:	d027      	beq.n	807f4 <pio_configure_pin_group+0x64>
   807a4:	d811      	bhi.n	807ca <pio_configure_pin_group+0x3a>
   807a6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   807aa:	d016      	beq.n	807da <pio_configure_pin_group+0x4a>
   807ac:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   807b0:	d111      	bne.n	807d6 <pio_configure_pin_group+0x46>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   807b2:	460a      	mov	r2, r1
   807b4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   807b8:	4b19      	ldr	r3, [pc, #100]	; (80820 <pio_configure_pin_group+0x90>)
   807ba:	4798      	blx	r3
	if (ul_pull_up_enable) {
   807bc:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   807c0:	bf14      	ite	ne
   807c2:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   807c4:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   807c6:	2001      	movs	r0, #1
   807c8:	e012      	b.n	807f0 <pio_configure_pin_group+0x60>
	switch (ul_flags & PIO_TYPE_Msk) {
   807ca:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   807ce:	d015      	beq.n	807fc <pio_configure_pin_group+0x6c>
   807d0:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   807d4:	d012      	beq.n	807fc <pio_configure_pin_group+0x6c>
		return 0;
   807d6:	2000      	movs	r0, #0
   807d8:	e00a      	b.n	807f0 <pio_configure_pin_group+0x60>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   807da:	460a      	mov	r2, r1
   807dc:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   807e0:	4b0f      	ldr	r3, [pc, #60]	; (80820 <pio_configure_pin_group+0x90>)
   807e2:	4798      	blx	r3
	if (ul_pull_up_enable) {
   807e4:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   807e8:	bf14      	ite	ne
   807ea:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   807ec:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   807ee:	2001      	movs	r0, #1
}
   807f0:	b002      	add	sp, #8
   807f2:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, ul_mask, ul_flags);
   807f4:	4b0b      	ldr	r3, [pc, #44]	; (80824 <pio_configure_pin_group+0x94>)
   807f6:	4798      	blx	r3
	return 1;
   807f8:	2001      	movs	r0, #1
		break;
   807fa:	e7f9      	b.n	807f0 <pio_configure_pin_group+0x60>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   807fc:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   80800:	f004 0301 	and.w	r3, r4, #1
   80804:	9300      	str	r3, [sp, #0]
   80806:	f3c4 0380 	ubfx	r3, r4, #2, #1
   8080a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   8080e:	bf14      	ite	ne
   80810:	2200      	movne	r2, #0
   80812:	2201      	moveq	r2, #1
   80814:	4631      	mov	r1, r6
   80816:	4628      	mov	r0, r5
   80818:	4c03      	ldr	r4, [pc, #12]	; (80828 <pio_configure_pin_group+0x98>)
   8081a:	47a0      	blx	r4
	return 1;
   8081c:	2001      	movs	r0, #1
		break;
   8081e:	e7e7      	b.n	807f0 <pio_configure_pin_group+0x60>
   80820:	00080621 	.word	0x00080621
   80824:	0008065f 	.word	0x0008065f
   80828:	00080691 	.word	0x00080691

0008082c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   8082c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80830:	4604      	mov	r4, r0
   80832:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80834:	4b0e      	ldr	r3, [pc, #56]	; (80870 <pio_handler_process+0x44>)
   80836:	4798      	blx	r3
   80838:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   8083a:	4620      	mov	r0, r4
   8083c:	4b0d      	ldr	r3, [pc, #52]	; (80874 <pio_handler_process+0x48>)
   8083e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80840:	4005      	ands	r5, r0
   80842:	d013      	beq.n	8086c <pio_handler_process+0x40>
   80844:	4c0c      	ldr	r4, [pc, #48]	; (80878 <pio_handler_process+0x4c>)
   80846:	f104 0660 	add.w	r6, r4, #96	; 0x60
   8084a:	e003      	b.n	80854 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   8084c:	42b4      	cmp	r4, r6
   8084e:	d00d      	beq.n	8086c <pio_handler_process+0x40>
   80850:	3410      	adds	r4, #16
		while (status != 0) {
   80852:	b15d      	cbz	r5, 8086c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   80854:	6820      	ldr	r0, [r4, #0]
   80856:	4540      	cmp	r0, r8
   80858:	d1f8      	bne.n	8084c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   8085a:	6861      	ldr	r1, [r4, #4]
   8085c:	4229      	tst	r1, r5
   8085e:	d0f5      	beq.n	8084c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80860:	68e3      	ldr	r3, [r4, #12]
   80862:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80864:	6863      	ldr	r3, [r4, #4]
   80866:	ea25 0503 	bic.w	r5, r5, r3
   8086a:	e7ef      	b.n	8084c <pio_handler_process+0x20>
   8086c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80870:	000806b7 	.word	0x000806b7
   80874:	000806bb 	.word	0x000806bb
   80878:	20070bac 	.word	0x20070bac

0008087c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   8087c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   8087e:	210b      	movs	r1, #11
   80880:	4801      	ldr	r0, [pc, #4]	; (80888 <PIOA_Handler+0xc>)
   80882:	4b02      	ldr	r3, [pc, #8]	; (8088c <PIOA_Handler+0x10>)
   80884:	4798      	blx	r3
   80886:	bd08      	pop	{r3, pc}
   80888:	400e0e00 	.word	0x400e0e00
   8088c:	0008082d 	.word	0x0008082d

00080890 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80890:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80892:	210c      	movs	r1, #12
   80894:	4801      	ldr	r0, [pc, #4]	; (8089c <PIOB_Handler+0xc>)
   80896:	4b02      	ldr	r3, [pc, #8]	; (808a0 <PIOB_Handler+0x10>)
   80898:	4798      	blx	r3
   8089a:	bd08      	pop	{r3, pc}
   8089c:	400e1000 	.word	0x400e1000
   808a0:	0008082d 	.word	0x0008082d

000808a4 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   808a4:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   808a6:	210d      	movs	r1, #13
   808a8:	4801      	ldr	r0, [pc, #4]	; (808b0 <PIOC_Handler+0xc>)
   808aa:	4b02      	ldr	r3, [pc, #8]	; (808b4 <PIOC_Handler+0x10>)
   808ac:	4798      	blx	r3
   808ae:	bd08      	pop	{r3, pc}
   808b0:	400e1200 	.word	0x400e1200
   808b4:	0008082d 	.word	0x0008082d

000808b8 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   808b8:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   808ba:	210e      	movs	r1, #14
   808bc:	4801      	ldr	r0, [pc, #4]	; (808c4 <PIOD_Handler+0xc>)
   808be:	4b02      	ldr	r3, [pc, #8]	; (808c8 <PIOD_Handler+0x10>)
   808c0:	4798      	blx	r3
   808c2:	bd08      	pop	{r3, pc}
   808c4:	400e1400 	.word	0x400e1400
   808c8:	0008082d 	.word	0x0008082d

000808cc <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   808cc:	4a17      	ldr	r2, [pc, #92]	; (8092c <pmc_switch_mck_to_pllack+0x60>)
   808ce:	6b13      	ldr	r3, [r2, #48]	; 0x30
   808d0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   808d4:	4318      	orrs	r0, r3
   808d6:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   808d8:	6e93      	ldr	r3, [r2, #104]	; 0x68
   808da:	f013 0f08 	tst.w	r3, #8
   808de:	d10a      	bne.n	808f6 <pmc_switch_mck_to_pllack+0x2a>
   808e0:	f44f 6300 	mov.w	r3, #2048	; 0x800
   808e4:	4911      	ldr	r1, [pc, #68]	; (8092c <pmc_switch_mck_to_pllack+0x60>)
   808e6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   808e8:	f012 0f08 	tst.w	r2, #8
   808ec:	d103      	bne.n	808f6 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   808ee:	3b01      	subs	r3, #1
   808f0:	d1f9      	bne.n	808e6 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
   808f2:	2001      	movs	r0, #1
   808f4:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   808f6:	4a0d      	ldr	r2, [pc, #52]	; (8092c <pmc_switch_mck_to_pllack+0x60>)
   808f8:	6b13      	ldr	r3, [r2, #48]	; 0x30
   808fa:	f023 0303 	bic.w	r3, r3, #3
   808fe:	f043 0302 	orr.w	r3, r3, #2
   80902:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80904:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80906:	f013 0f08 	tst.w	r3, #8
   8090a:	d10a      	bne.n	80922 <pmc_switch_mck_to_pllack+0x56>
   8090c:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80910:	4906      	ldr	r1, [pc, #24]	; (8092c <pmc_switch_mck_to_pllack+0x60>)
   80912:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80914:	f012 0f08 	tst.w	r2, #8
   80918:	d105      	bne.n	80926 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8091a:	3b01      	subs	r3, #1
   8091c:	d1f9      	bne.n	80912 <pmc_switch_mck_to_pllack+0x46>
			return 1;
   8091e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   80920:	4770      	bx	lr
	return 0;
   80922:	2000      	movs	r0, #0
   80924:	4770      	bx	lr
   80926:	2000      	movs	r0, #0
   80928:	4770      	bx	lr
   8092a:	bf00      	nop
   8092c:	400e0600 	.word	0x400e0600

00080930 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   80930:	b9c8      	cbnz	r0, 80966 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80932:	4a11      	ldr	r2, [pc, #68]	; (80978 <pmc_switch_mainck_to_xtal+0x48>)
   80934:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   80936:	0209      	lsls	r1, r1, #8
   80938:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   8093a:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   8093e:	f023 0303 	bic.w	r3, r3, #3
   80942:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80946:	f043 0301 	orr.w	r3, r3, #1
   8094a:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   8094c:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   8094e:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80950:	f013 0f01 	tst.w	r3, #1
   80954:	d0fb      	beq.n	8094e <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   80956:	4a08      	ldr	r2, [pc, #32]	; (80978 <pmc_switch_mainck_to_xtal+0x48>)
   80958:	6a13      	ldr	r3, [r2, #32]
   8095a:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   8095e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80962:	6213      	str	r3, [r2, #32]
   80964:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80966:	4904      	ldr	r1, [pc, #16]	; (80978 <pmc_switch_mainck_to_xtal+0x48>)
   80968:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   8096a:	4a04      	ldr	r2, [pc, #16]	; (8097c <pmc_switch_mainck_to_xtal+0x4c>)
   8096c:	401a      	ands	r2, r3
   8096e:	4b04      	ldr	r3, [pc, #16]	; (80980 <pmc_switch_mainck_to_xtal+0x50>)
   80970:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80972:	620b      	str	r3, [r1, #32]
   80974:	4770      	bx	lr
   80976:	bf00      	nop
   80978:	400e0600 	.word	0x400e0600
   8097c:	fec8fffc 	.word	0xfec8fffc
   80980:	01370002 	.word	0x01370002

00080984 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80984:	4b02      	ldr	r3, [pc, #8]	; (80990 <pmc_osc_is_ready_mainck+0xc>)
   80986:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80988:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   8098c:	4770      	bx	lr
   8098e:	bf00      	nop
   80990:	400e0600 	.word	0x400e0600

00080994 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80994:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80998:	4b01      	ldr	r3, [pc, #4]	; (809a0 <pmc_disable_pllack+0xc>)
   8099a:	629a      	str	r2, [r3, #40]	; 0x28
   8099c:	4770      	bx	lr
   8099e:	bf00      	nop
   809a0:	400e0600 	.word	0x400e0600

000809a4 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   809a4:	4b02      	ldr	r3, [pc, #8]	; (809b0 <pmc_is_locked_pllack+0xc>)
   809a6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   809a8:	f000 0002 	and.w	r0, r0, #2
   809ac:	4770      	bx	lr
   809ae:	bf00      	nop
   809b0:	400e0600 	.word	0x400e0600

000809b4 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   809b4:	282c      	cmp	r0, #44	; 0x2c
   809b6:	d81e      	bhi.n	809f6 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
   809b8:	281f      	cmp	r0, #31
   809ba:	d80c      	bhi.n	809d6 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   809bc:	4b11      	ldr	r3, [pc, #68]	; (80a04 <pmc_enable_periph_clk+0x50>)
   809be:	699a      	ldr	r2, [r3, #24]
   809c0:	2301      	movs	r3, #1
   809c2:	4083      	lsls	r3, r0
   809c4:	4393      	bics	r3, r2
   809c6:	d018      	beq.n	809fa <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
   809c8:	2301      	movs	r3, #1
   809ca:	fa03 f000 	lsl.w	r0, r3, r0
   809ce:	4b0d      	ldr	r3, [pc, #52]	; (80a04 <pmc_enable_periph_clk+0x50>)
   809d0:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   809d2:	2000      	movs	r0, #0
   809d4:	4770      	bx	lr
		ul_id -= 32;
   809d6:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   809d8:	4b0a      	ldr	r3, [pc, #40]	; (80a04 <pmc_enable_periph_clk+0x50>)
   809da:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   809de:	2301      	movs	r3, #1
   809e0:	4083      	lsls	r3, r0
   809e2:	4393      	bics	r3, r2
   809e4:	d00b      	beq.n	809fe <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
   809e6:	2301      	movs	r3, #1
   809e8:	fa03 f000 	lsl.w	r0, r3, r0
   809ec:	4b05      	ldr	r3, [pc, #20]	; (80a04 <pmc_enable_periph_clk+0x50>)
   809ee:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
   809f2:	2000      	movs	r0, #0
   809f4:	4770      	bx	lr
		return 1;
   809f6:	2001      	movs	r0, #1
   809f8:	4770      	bx	lr
	return 0;
   809fa:	2000      	movs	r0, #0
   809fc:	4770      	bx	lr
   809fe:	2000      	movs	r0, #0
}
   80a00:	4770      	bx	lr
   80a02:	bf00      	nop
   80a04:	400e0600 	.word	0x400e0600

00080a08 <pmc_set_writeprotect>:
 *
 * \param ul_enable 1 to enable, 0 to disable.
 */
void pmc_set_writeprotect(uint32_t ul_enable)
{
	if (ul_enable) {
   80a08:	b920      	cbnz	r0, 80a14 <pmc_set_writeprotect+0xc>
		PMC->PMC_WPMR = PMC_WPMR_WPKEY_PASSWD | PMC_WPMR_WPEN;
	} else {
		PMC->PMC_WPMR = PMC_WPMR_WPKEY_PASSWD;
   80a0a:	4a05      	ldr	r2, [pc, #20]	; (80a20 <pmc_set_writeprotect+0x18>)
   80a0c:	4b05      	ldr	r3, [pc, #20]	; (80a24 <pmc_set_writeprotect+0x1c>)
   80a0e:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
   80a12:	4770      	bx	lr
		PMC->PMC_WPMR = PMC_WPMR_WPKEY_PASSWD | PMC_WPMR_WPEN;
   80a14:	4a04      	ldr	r2, [pc, #16]	; (80a28 <pmc_set_writeprotect+0x20>)
   80a16:	4b03      	ldr	r3, [pc, #12]	; (80a24 <pmc_set_writeprotect+0x1c>)
   80a18:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
   80a1c:	4770      	bx	lr
   80a1e:	bf00      	nop
   80a20:	504d4300 	.word	0x504d4300
   80a24:	400e0600 	.word	0x400e0600
   80a28:	504d4301 	.word	0x504d4301

00080a2c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80a2c:	e7fe      	b.n	80a2c <Dummy_Handler>
	...

00080a30 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80a30:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80a32:	4b1c      	ldr	r3, [pc, #112]	; (80aa4 <Reset_Handler+0x74>)
   80a34:	4a1c      	ldr	r2, [pc, #112]	; (80aa8 <Reset_Handler+0x78>)
   80a36:	429a      	cmp	r2, r3
   80a38:	d010      	beq.n	80a5c <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   80a3a:	4b1c      	ldr	r3, [pc, #112]	; (80aac <Reset_Handler+0x7c>)
   80a3c:	4a19      	ldr	r2, [pc, #100]	; (80aa4 <Reset_Handler+0x74>)
   80a3e:	429a      	cmp	r2, r3
   80a40:	d20c      	bcs.n	80a5c <Reset_Handler+0x2c>
   80a42:	3b01      	subs	r3, #1
   80a44:	1a9b      	subs	r3, r3, r2
   80a46:	f023 0303 	bic.w	r3, r3, #3
   80a4a:	3304      	adds	r3, #4
   80a4c:	4413      	add	r3, r2
   80a4e:	4916      	ldr	r1, [pc, #88]	; (80aa8 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   80a50:	f851 0b04 	ldr.w	r0, [r1], #4
   80a54:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   80a58:	429a      	cmp	r2, r3
   80a5a:	d1f9      	bne.n	80a50 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80a5c:	4b14      	ldr	r3, [pc, #80]	; (80ab0 <Reset_Handler+0x80>)
   80a5e:	4a15      	ldr	r2, [pc, #84]	; (80ab4 <Reset_Handler+0x84>)
   80a60:	429a      	cmp	r2, r3
   80a62:	d20a      	bcs.n	80a7a <Reset_Handler+0x4a>
   80a64:	3b01      	subs	r3, #1
   80a66:	1a9b      	subs	r3, r3, r2
   80a68:	f023 0303 	bic.w	r3, r3, #3
   80a6c:	3304      	adds	r3, #4
   80a6e:	4413      	add	r3, r2
		*pDest++ = 0;
   80a70:	2100      	movs	r1, #0
   80a72:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   80a76:	4293      	cmp	r3, r2
   80a78:	d1fb      	bne.n	80a72 <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80a7a:	4b0f      	ldr	r3, [pc, #60]	; (80ab8 <Reset_Handler+0x88>)
   80a7c:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   80a80:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   80a84:	490d      	ldr	r1, [pc, #52]	; (80abc <Reset_Handler+0x8c>)
   80a86:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80a88:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   80a8c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   80a90:	d203      	bcs.n	80a9a <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80a92:	688b      	ldr	r3, [r1, #8]
   80a94:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   80a98:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80a9a:	4b09      	ldr	r3, [pc, #36]	; (80ac0 <Reset_Handler+0x90>)
   80a9c:	4798      	blx	r3

	/* Branch to main function */
	main();
   80a9e:	4b09      	ldr	r3, [pc, #36]	; (80ac4 <Reset_Handler+0x94>)
   80aa0:	4798      	blx	r3
   80aa2:	e7fe      	b.n	80aa2 <Reset_Handler+0x72>
   80aa4:	20070000 	.word	0x20070000
   80aa8:	00084694 	.word	0x00084694
   80aac:	20070af0 	.word	0x20070af0
   80ab0:	20070c88 	.word	0x20070c88
   80ab4:	20070af0 	.word	0x20070af0
   80ab8:	00080000 	.word	0x00080000
   80abc:	e000ed00 	.word	0xe000ed00
   80ac0:	0008163d 	.word	0x0008163d
   80ac4:	00080d79 	.word	0x00080d79

00080ac8 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80ac8:	4b3d      	ldr	r3, [pc, #244]	; (80bc0 <SystemCoreClockUpdate+0xf8>)
   80aca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80acc:	f003 0303 	and.w	r3, r3, #3
   80ad0:	2b03      	cmp	r3, #3
   80ad2:	d80e      	bhi.n	80af2 <SystemCoreClockUpdate+0x2a>
   80ad4:	e8df f003 	tbb	[pc, r3]
   80ad8:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80adc:	4b39      	ldr	r3, [pc, #228]	; (80bc4 <SystemCoreClockUpdate+0xfc>)
   80ade:	695b      	ldr	r3, [r3, #20]
   80ae0:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80ae4:	bf14      	ite	ne
   80ae6:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80aea:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80aee:	4b36      	ldr	r3, [pc, #216]	; (80bc8 <SystemCoreClockUpdate+0x100>)
   80af0:	601a      	str	r2, [r3, #0]
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80af2:	4b33      	ldr	r3, [pc, #204]	; (80bc0 <SystemCoreClockUpdate+0xf8>)
   80af4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80af6:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80afa:	2b70      	cmp	r3, #112	; 0x70
   80afc:	d057      	beq.n	80bae <SystemCoreClockUpdate+0xe6>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   80afe:	4b30      	ldr	r3, [pc, #192]	; (80bc0 <SystemCoreClockUpdate+0xf8>)
   80b00:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80b02:	4931      	ldr	r1, [pc, #196]	; (80bc8 <SystemCoreClockUpdate+0x100>)
   80b04:	f3c2 1202 	ubfx	r2, r2, #4, #3
   80b08:	680b      	ldr	r3, [r1, #0]
   80b0a:	40d3      	lsrs	r3, r2
   80b0c:	600b      	str	r3, [r1, #0]
   80b0e:	4770      	bx	lr
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80b10:	4b2b      	ldr	r3, [pc, #172]	; (80bc0 <SystemCoreClockUpdate+0xf8>)
   80b12:	6a1b      	ldr	r3, [r3, #32]
   80b14:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80b18:	d003      	beq.n	80b22 <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80b1a:	4a2c      	ldr	r2, [pc, #176]	; (80bcc <SystemCoreClockUpdate+0x104>)
   80b1c:	4b2a      	ldr	r3, [pc, #168]	; (80bc8 <SystemCoreClockUpdate+0x100>)
   80b1e:	601a      	str	r2, [r3, #0]
   80b20:	e7e7      	b.n	80af2 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80b22:	4a2b      	ldr	r2, [pc, #172]	; (80bd0 <SystemCoreClockUpdate+0x108>)
   80b24:	4b28      	ldr	r3, [pc, #160]	; (80bc8 <SystemCoreClockUpdate+0x100>)
   80b26:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80b28:	4b25      	ldr	r3, [pc, #148]	; (80bc0 <SystemCoreClockUpdate+0xf8>)
   80b2a:	6a1b      	ldr	r3, [r3, #32]
   80b2c:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80b30:	2b10      	cmp	r3, #16
   80b32:	d005      	beq.n	80b40 <SystemCoreClockUpdate+0x78>
   80b34:	2b20      	cmp	r3, #32
   80b36:	d1dc      	bne.n	80af2 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 3U;
   80b38:	4a24      	ldr	r2, [pc, #144]	; (80bcc <SystemCoreClockUpdate+0x104>)
   80b3a:	4b23      	ldr	r3, [pc, #140]	; (80bc8 <SystemCoreClockUpdate+0x100>)
   80b3c:	601a      	str	r2, [r3, #0]
				break;
   80b3e:	e7d8      	b.n	80af2 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 2U;
   80b40:	4a24      	ldr	r2, [pc, #144]	; (80bd4 <SystemCoreClockUpdate+0x10c>)
   80b42:	4b21      	ldr	r3, [pc, #132]	; (80bc8 <SystemCoreClockUpdate+0x100>)
   80b44:	601a      	str	r2, [r3, #0]
				break;
   80b46:	e7d4      	b.n	80af2 <SystemCoreClockUpdate+0x2a>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80b48:	4b1d      	ldr	r3, [pc, #116]	; (80bc0 <SystemCoreClockUpdate+0xf8>)
   80b4a:	6a1b      	ldr	r3, [r3, #32]
   80b4c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80b50:	d00c      	beq.n	80b6c <SystemCoreClockUpdate+0xa4>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80b52:	4a1e      	ldr	r2, [pc, #120]	; (80bcc <SystemCoreClockUpdate+0x104>)
   80b54:	4b1c      	ldr	r3, [pc, #112]	; (80bc8 <SystemCoreClockUpdate+0x100>)
   80b56:	601a      	str	r2, [r3, #0]
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80b58:	4b19      	ldr	r3, [pc, #100]	; (80bc0 <SystemCoreClockUpdate+0xf8>)
   80b5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80b5c:	f003 0303 	and.w	r3, r3, #3
   80b60:	2b02      	cmp	r3, #2
   80b62:	d016      	beq.n	80b92 <SystemCoreClockUpdate+0xca>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   80b64:	4a1c      	ldr	r2, [pc, #112]	; (80bd8 <SystemCoreClockUpdate+0x110>)
   80b66:	4b18      	ldr	r3, [pc, #96]	; (80bc8 <SystemCoreClockUpdate+0x100>)
   80b68:	601a      	str	r2, [r3, #0]
   80b6a:	e7c2      	b.n	80af2 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80b6c:	4a18      	ldr	r2, [pc, #96]	; (80bd0 <SystemCoreClockUpdate+0x108>)
   80b6e:	4b16      	ldr	r3, [pc, #88]	; (80bc8 <SystemCoreClockUpdate+0x100>)
   80b70:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80b72:	4b13      	ldr	r3, [pc, #76]	; (80bc0 <SystemCoreClockUpdate+0xf8>)
   80b74:	6a1b      	ldr	r3, [r3, #32]
   80b76:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80b7a:	2b10      	cmp	r3, #16
   80b7c:	d005      	beq.n	80b8a <SystemCoreClockUpdate+0xc2>
   80b7e:	2b20      	cmp	r3, #32
   80b80:	d1ea      	bne.n	80b58 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
   80b82:	4a12      	ldr	r2, [pc, #72]	; (80bcc <SystemCoreClockUpdate+0x104>)
   80b84:	4b10      	ldr	r3, [pc, #64]	; (80bc8 <SystemCoreClockUpdate+0x100>)
   80b86:	601a      	str	r2, [r3, #0]
				break;
   80b88:	e7e6      	b.n	80b58 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
   80b8a:	4a12      	ldr	r2, [pc, #72]	; (80bd4 <SystemCoreClockUpdate+0x10c>)
   80b8c:	4b0e      	ldr	r3, [pc, #56]	; (80bc8 <SystemCoreClockUpdate+0x100>)
   80b8e:	601a      	str	r2, [r3, #0]
				break;
   80b90:	e7e2      	b.n	80b58 <SystemCoreClockUpdate+0x90>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80b92:	4a0b      	ldr	r2, [pc, #44]	; (80bc0 <SystemCoreClockUpdate+0xf8>)
   80b94:	6a91      	ldr	r1, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80b96:	6a92      	ldr	r2, [r2, #40]	; 0x28
   80b98:	480b      	ldr	r0, [pc, #44]	; (80bc8 <SystemCoreClockUpdate+0x100>)
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80b9a:	f3c1 410a 	ubfx	r1, r1, #16, #11
   80b9e:	6803      	ldr	r3, [r0, #0]
   80ba0:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80ba4:	b2d2      	uxtb	r2, r2
   80ba6:	fbb3 f3f2 	udiv	r3, r3, r2
   80baa:	6003      	str	r3, [r0, #0]
   80bac:	e7a1      	b.n	80af2 <SystemCoreClockUpdate+0x2a>
		SystemCoreClock /= 3U;
   80bae:	4a06      	ldr	r2, [pc, #24]	; (80bc8 <SystemCoreClockUpdate+0x100>)
   80bb0:	6813      	ldr	r3, [r2, #0]
   80bb2:	490a      	ldr	r1, [pc, #40]	; (80bdc <SystemCoreClockUpdate+0x114>)
   80bb4:	fba1 1303 	umull	r1, r3, r1, r3
   80bb8:	085b      	lsrs	r3, r3, #1
   80bba:	6013      	str	r3, [r2, #0]
   80bbc:	4770      	bx	lr
   80bbe:	bf00      	nop
   80bc0:	400e0600 	.word	0x400e0600
   80bc4:	400e1a10 	.word	0x400e1a10
   80bc8:	2007013c 	.word	0x2007013c
   80bcc:	00b71b00 	.word	0x00b71b00
   80bd0:	003d0900 	.word	0x003d0900
   80bd4:	007a1200 	.word	0x007a1200
   80bd8:	0e4e1c00 	.word	0x0e4e1c00
   80bdc:	aaaaaaab 	.word	0xaaaaaaab

00080be0 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80be0:	4b0a      	ldr	r3, [pc, #40]	; (80c0c <_sbrk+0x2c>)
   80be2:	681b      	ldr	r3, [r3, #0]
   80be4:	b153      	cbz	r3, 80bfc <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   80be6:	4b09      	ldr	r3, [pc, #36]	; (80c0c <_sbrk+0x2c>)
   80be8:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80bea:	181a      	adds	r2, r3, r0
   80bec:	4908      	ldr	r1, [pc, #32]	; (80c10 <_sbrk+0x30>)
   80bee:	4291      	cmp	r1, r2
   80bf0:	db08      	blt.n	80c04 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   80bf2:	4610      	mov	r0, r2
   80bf4:	4a05      	ldr	r2, [pc, #20]	; (80c0c <_sbrk+0x2c>)
   80bf6:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80bf8:	4618      	mov	r0, r3
   80bfa:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   80bfc:	4a05      	ldr	r2, [pc, #20]	; (80c14 <_sbrk+0x34>)
   80bfe:	4b03      	ldr	r3, [pc, #12]	; (80c0c <_sbrk+0x2c>)
   80c00:	601a      	str	r2, [r3, #0]
   80c02:	e7f0      	b.n	80be6 <_sbrk+0x6>
		return (caddr_t) -1;	
   80c04:	f04f 30ff 	mov.w	r0, #4294967295
}
   80c08:	4770      	bx	lr
   80c0a:	bf00      	nop
   80c0c:	20070c1c 	.word	0x20070c1c
   80c10:	20087ffc 	.word	0x20087ffc
   80c14:	20072c88 	.word	0x20072c88

00080c18 <_close>:
}

extern int _close(int file)
{
	return -1;
}
   80c18:	f04f 30ff 	mov.w	r0, #4294967295
   80c1c:	4770      	bx	lr

00080c1e <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   80c1e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   80c22:	604b      	str	r3, [r1, #4]

	return 0;
}
   80c24:	2000      	movs	r0, #0
   80c26:	4770      	bx	lr

00080c28 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   80c28:	2001      	movs	r0, #1
   80c2a:	4770      	bx	lr

00080c2c <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   80c2c:	2000      	movs	r0, #0
   80c2e:	4770      	bx	lr

00080c30 <usart_serial_getchar>:
{
   80c30:	b5f0      	push	{r4, r5, r6, r7, lr}
   80c32:	b083      	sub	sp, #12
   80c34:	4604      	mov	r4, r0
   80c36:	460d      	mov	r5, r1
	uint32_t val = 0;
   80c38:	2300      	movs	r3, #0
   80c3a:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
   80c3c:	4b20      	ldr	r3, [pc, #128]	; (80cc0 <usart_serial_getchar+0x90>)
   80c3e:	4298      	cmp	r0, r3
   80c40:	d00d      	beq.n	80c5e <usart_serial_getchar+0x2e>
	if (USART0 == p_usart) {
   80c42:	4b20      	ldr	r3, [pc, #128]	; (80cc4 <usart_serial_getchar+0x94>)
   80c44:	4298      	cmp	r0, r3
   80c46:	d012      	beq.n	80c6e <usart_serial_getchar+0x3e>
	if (USART1 == p_usart) {
   80c48:	4b1f      	ldr	r3, [pc, #124]	; (80cc8 <usart_serial_getchar+0x98>)
   80c4a:	4298      	cmp	r0, r3
   80c4c:	d019      	beq.n	80c82 <usart_serial_getchar+0x52>
	if (USART2 == p_usart) {
   80c4e:	4b1f      	ldr	r3, [pc, #124]	; (80ccc <usart_serial_getchar+0x9c>)
   80c50:	429c      	cmp	r4, r3
   80c52:	d020      	beq.n	80c96 <usart_serial_getchar+0x66>
	if (USART3 == p_usart) {
   80c54:	4b1e      	ldr	r3, [pc, #120]	; (80cd0 <usart_serial_getchar+0xa0>)
   80c56:	429c      	cmp	r4, r3
   80c58:	d027      	beq.n	80caa <usart_serial_getchar+0x7a>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   80c5a:	b003      	add	sp, #12
   80c5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
   80c5e:	461f      	mov	r7, r3
   80c60:	4e1c      	ldr	r6, [pc, #112]	; (80cd4 <usart_serial_getchar+0xa4>)
   80c62:	4629      	mov	r1, r5
   80c64:	4638      	mov	r0, r7
   80c66:	47b0      	blx	r6
   80c68:	2800      	cmp	r0, #0
   80c6a:	d1fa      	bne.n	80c62 <usart_serial_getchar+0x32>
   80c6c:	e7ef      	b.n	80c4e <usart_serial_getchar+0x1e>
		while (usart_read(p_usart, &val));
   80c6e:	461f      	mov	r7, r3
   80c70:	4e19      	ldr	r6, [pc, #100]	; (80cd8 <usart_serial_getchar+0xa8>)
   80c72:	a901      	add	r1, sp, #4
   80c74:	4638      	mov	r0, r7
   80c76:	47b0      	blx	r6
   80c78:	2800      	cmp	r0, #0
   80c7a:	d1fa      	bne.n	80c72 <usart_serial_getchar+0x42>
		*data = (uint8_t)(val & 0xFF);
   80c7c:	9b01      	ldr	r3, [sp, #4]
   80c7e:	702b      	strb	r3, [r5, #0]
   80c80:	e7e8      	b.n	80c54 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
   80c82:	461e      	mov	r6, r3
   80c84:	4c14      	ldr	r4, [pc, #80]	; (80cd8 <usart_serial_getchar+0xa8>)
   80c86:	a901      	add	r1, sp, #4
   80c88:	4630      	mov	r0, r6
   80c8a:	47a0      	blx	r4
   80c8c:	2800      	cmp	r0, #0
   80c8e:	d1fa      	bne.n	80c86 <usart_serial_getchar+0x56>
		*data = (uint8_t)(val & 0xFF);
   80c90:	9b01      	ldr	r3, [sp, #4]
   80c92:	702b      	strb	r3, [r5, #0]
   80c94:	e7e1      	b.n	80c5a <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   80c96:	461e      	mov	r6, r3
   80c98:	4c0f      	ldr	r4, [pc, #60]	; (80cd8 <usart_serial_getchar+0xa8>)
   80c9a:	a901      	add	r1, sp, #4
   80c9c:	4630      	mov	r0, r6
   80c9e:	47a0      	blx	r4
   80ca0:	2800      	cmp	r0, #0
   80ca2:	d1fa      	bne.n	80c9a <usart_serial_getchar+0x6a>
		*data = (uint8_t)(val & 0xFF);
   80ca4:	9b01      	ldr	r3, [sp, #4]
   80ca6:	702b      	strb	r3, [r5, #0]
   80ca8:	e7d7      	b.n	80c5a <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   80caa:	461e      	mov	r6, r3
   80cac:	4c0a      	ldr	r4, [pc, #40]	; (80cd8 <usart_serial_getchar+0xa8>)
   80cae:	a901      	add	r1, sp, #4
   80cb0:	4630      	mov	r0, r6
   80cb2:	47a0      	blx	r4
   80cb4:	2800      	cmp	r0, #0
   80cb6:	d1fa      	bne.n	80cae <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
   80cb8:	9b01      	ldr	r3, [sp, #4]
   80cba:	702b      	strb	r3, [r5, #0]
}
   80cbc:	e7cd      	b.n	80c5a <usart_serial_getchar+0x2a>
   80cbe:	bf00      	nop
   80cc0:	400e0800 	.word	0x400e0800
   80cc4:	40098000 	.word	0x40098000
   80cc8:	4009c000 	.word	0x4009c000
   80ccc:	400a0000 	.word	0x400a0000
   80cd0:	400a4000 	.word	0x400a4000
   80cd4:	0008049f 	.word	0x0008049f
   80cd8:	000804c5 	.word	0x000804c5

00080cdc <usart_serial_putchar>:
{
   80cdc:	b570      	push	{r4, r5, r6, lr}
   80cde:	460c      	mov	r4, r1
	if (UART == (Uart*)p_usart) {
   80ce0:	4b1e      	ldr	r3, [pc, #120]	; (80d5c <usart_serial_putchar+0x80>)
   80ce2:	4298      	cmp	r0, r3
   80ce4:	d00d      	beq.n	80d02 <usart_serial_putchar+0x26>
	if (USART0 == p_usart) {
   80ce6:	4b1e      	ldr	r3, [pc, #120]	; (80d60 <usart_serial_putchar+0x84>)
   80ce8:	4298      	cmp	r0, r3
   80cea:	d013      	beq.n	80d14 <usart_serial_putchar+0x38>
	if (USART1 == p_usart) {
   80cec:	4b1d      	ldr	r3, [pc, #116]	; (80d64 <usart_serial_putchar+0x88>)
   80cee:	4298      	cmp	r0, r3
   80cf0:	d019      	beq.n	80d26 <usart_serial_putchar+0x4a>
	if (USART2 == p_usart) {
   80cf2:	4b1d      	ldr	r3, [pc, #116]	; (80d68 <usart_serial_putchar+0x8c>)
   80cf4:	4298      	cmp	r0, r3
   80cf6:	d01f      	beq.n	80d38 <usart_serial_putchar+0x5c>
	if (USART3 == p_usart) {
   80cf8:	4b1c      	ldr	r3, [pc, #112]	; (80d6c <usart_serial_putchar+0x90>)
   80cfa:	4298      	cmp	r0, r3
   80cfc:	d025      	beq.n	80d4a <usart_serial_putchar+0x6e>
	return 0;
   80cfe:	2000      	movs	r0, #0
}
   80d00:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
   80d02:	461e      	mov	r6, r3
   80d04:	4d1a      	ldr	r5, [pc, #104]	; (80d70 <usart_serial_putchar+0x94>)
   80d06:	4621      	mov	r1, r4
   80d08:	4630      	mov	r0, r6
   80d0a:	47a8      	blx	r5
   80d0c:	2800      	cmp	r0, #0
   80d0e:	d1fa      	bne.n	80d06 <usart_serial_putchar+0x2a>
		return 1;
   80d10:	2001      	movs	r0, #1
   80d12:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80d14:	461e      	mov	r6, r3
   80d16:	4d17      	ldr	r5, [pc, #92]	; (80d74 <usart_serial_putchar+0x98>)
   80d18:	4621      	mov	r1, r4
   80d1a:	4630      	mov	r0, r6
   80d1c:	47a8      	blx	r5
   80d1e:	2800      	cmp	r0, #0
   80d20:	d1fa      	bne.n	80d18 <usart_serial_putchar+0x3c>
		return 1;
   80d22:	2001      	movs	r0, #1
   80d24:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80d26:	461e      	mov	r6, r3
   80d28:	4d12      	ldr	r5, [pc, #72]	; (80d74 <usart_serial_putchar+0x98>)
   80d2a:	4621      	mov	r1, r4
   80d2c:	4630      	mov	r0, r6
   80d2e:	47a8      	blx	r5
   80d30:	2800      	cmp	r0, #0
   80d32:	d1fa      	bne.n	80d2a <usart_serial_putchar+0x4e>
		return 1;
   80d34:	2001      	movs	r0, #1
   80d36:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80d38:	461e      	mov	r6, r3
   80d3a:	4d0e      	ldr	r5, [pc, #56]	; (80d74 <usart_serial_putchar+0x98>)
   80d3c:	4621      	mov	r1, r4
   80d3e:	4630      	mov	r0, r6
   80d40:	47a8      	blx	r5
   80d42:	2800      	cmp	r0, #0
   80d44:	d1fa      	bne.n	80d3c <usart_serial_putchar+0x60>
		return 1;
   80d46:	2001      	movs	r0, #1
   80d48:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80d4a:	461e      	mov	r6, r3
   80d4c:	4d09      	ldr	r5, [pc, #36]	; (80d74 <usart_serial_putchar+0x98>)
   80d4e:	4621      	mov	r1, r4
   80d50:	4630      	mov	r0, r6
   80d52:	47a8      	blx	r5
   80d54:	2800      	cmp	r0, #0
   80d56:	d1fa      	bne.n	80d4e <usart_serial_putchar+0x72>
		return 1;
   80d58:	2001      	movs	r0, #1
   80d5a:	bd70      	pop	{r4, r5, r6, pc}
   80d5c:	400e0800 	.word	0x400e0800
   80d60:	40098000 	.word	0x40098000
   80d64:	4009c000 	.word	0x4009c000
   80d68:	400a0000 	.word	0x400a0000
   80d6c:	400a4000 	.word	0x400a4000
   80d70:	0008048f 	.word	0x0008048f
   80d74:	000804b1 	.word	0x000804b1

00080d78 <main>:
	printf("Console ready\n");
	printf("=============\n");
}

int main (void)
{
   80d78:	b580      	push	{r7, lr}
   80d7a:	b084      	sub	sp, #16
	sysclk_init();
   80d7c:	4b22      	ldr	r3, [pc, #136]	; (80e08 <main+0x90>)
   80d7e:	4798      	blx	r3
	board_init();
   80d80:	4b22      	ldr	r3, [pc, #136]	; (80e0c <main+0x94>)
   80d82:	4798      	blx	r3
   80d84:	2008      	movs	r0, #8
   80d86:	4d22      	ldr	r5, [pc, #136]	; (80e10 <main+0x98>)
   80d88:	47a8      	blx	r5
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
   80d8a:	4c22      	ldr	r4, [pc, #136]	; (80e14 <main+0x9c>)
   80d8c:	4b22      	ldr	r3, [pc, #136]	; (80e18 <main+0xa0>)
   80d8e:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   80d90:	4a22      	ldr	r2, [pc, #136]	; (80e1c <main+0xa4>)
   80d92:	4b23      	ldr	r3, [pc, #140]	; (80e20 <main+0xa8>)
   80d94:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   80d96:	4a23      	ldr	r2, [pc, #140]	; (80e24 <main+0xac>)
   80d98:	4b23      	ldr	r3, [pc, #140]	; (80e28 <main+0xb0>)
   80d9a:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   80d9c:	4b23      	ldr	r3, [pc, #140]	; (80e2c <main+0xb4>)
   80d9e:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
   80da0:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   80da4:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
   80da6:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80daa:	9303      	str	r3, [sp, #12]
   80dac:	2008      	movs	r0, #8
   80dae:	47a8      	blx	r5
		uart_init((Uart*)p_usart, &uart_settings);
   80db0:	a901      	add	r1, sp, #4
   80db2:	4620      	mov	r0, r4
   80db4:	4b1e      	ldr	r3, [pc, #120]	; (80e30 <main+0xb8>)
   80db6:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   80db8:	4d1e      	ldr	r5, [pc, #120]	; (80e34 <main+0xbc>)
   80dba:	682b      	ldr	r3, [r5, #0]
   80dbc:	2100      	movs	r1, #0
   80dbe:	6898      	ldr	r0, [r3, #8]
   80dc0:	4c1d      	ldr	r4, [pc, #116]	; (80e38 <main+0xc0>)
   80dc2:	47a0      	blx	r4
	setbuf(stdin, NULL);
   80dc4:	682b      	ldr	r3, [r5, #0]
   80dc6:	2100      	movs	r1, #0
   80dc8:	6858      	ldr	r0, [r3, #4]
   80dca:	47a0      	blx	r4
	printf("Console ready\n");
   80dcc:	481b      	ldr	r0, [pc, #108]	; (80e3c <main+0xc4>)
   80dce:	4c1c      	ldr	r4, [pc, #112]	; (80e40 <main+0xc8>)
   80dd0:	47a0      	blx	r4
	printf("=============\n");
   80dd2:	481c      	ldr	r0, [pc, #112]	; (80e44 <main+0xcc>)
   80dd4:	47a0      	blx	r4
	pulse_start(EnA, pwm_value);
   80dd6:	2200      	movs	r2, #0
   80dd8:	4b1b      	ldr	r3, [pc, #108]	; (80e48 <main+0xd0>)
   80dda:	2039      	movs	r0, #57	; 0x39
   80ddc:	491b      	ldr	r1, [pc, #108]	; (80e4c <main+0xd4>)
   80dde:	4788      	blx	r1
		uint32_t ra_val = tc_read_ra(TC0, TC_WAVE_CHANNEL_0);
   80de0:	4d1b      	ldr	r5, [pc, #108]	; (80e50 <main+0xd8>)
   80de2:	2400      	movs	r4, #0
   80de4:	4f1b      	ldr	r7, [pc, #108]	; (80e54 <main+0xdc>)
   80de6:	4621      	mov	r1, r4
   80de8:	4628      	mov	r0, r5
   80dea:	47b8      	blx	r7
   80dec:	4606      	mov	r6, r0
		uint32_t rc_val = tc_read_rc(TC0, TC_WAVE_CHANNEL_0);
   80dee:	4621      	mov	r1, r4
   80df0:	4628      	mov	r0, r5
   80df2:	4b19      	ldr	r3, [pc, #100]	; (80e58 <main+0xe0>)
   80df4:	4798      	blx	r3
		printf("RA-value: %lu ----- RC-value: %lu\n", ra_val, rc_val);
   80df6:	4602      	mov	r2, r0
   80df8:	4631      	mov	r1, r6
   80dfa:	4818      	ldr	r0, [pc, #96]	; (80e5c <main+0xe4>)
   80dfc:	4b10      	ldr	r3, [pc, #64]	; (80e40 <main+0xc8>)
   80dfe:	4798      	blx	r3
		delay_ms(100);
   80e00:	4817      	ldr	r0, [pc, #92]	; (80e60 <main+0xe8>)
   80e02:	4b18      	ldr	r3, [pc, #96]	; (80e64 <main+0xec>)
   80e04:	4798      	blx	r3
   80e06:	e7ee      	b.n	80de6 <main+0x6e>
   80e08:	0008053d 	.word	0x0008053d
   80e0c:	000805a1 	.word	0x000805a1
   80e10:	000809b5 	.word	0x000809b5
   80e14:	400e0800 	.word	0x400e0800
   80e18:	20070c5c 	.word	0x20070c5c
   80e1c:	00080cdd 	.word	0x00080cdd
   80e20:	20070c58 	.word	0x20070c58
   80e24:	00080c31 	.word	0x00080c31
   80e28:	20070c54 	.word	0x20070c54
   80e2c:	0501bd00 	.word	0x0501bd00
   80e30:	00080459 	.word	0x00080459
   80e34:	20070140 	.word	0x20070140
   80e38:	00081751 	.word	0x00081751
   80e3c:	000844bc 	.word	0x000844bc
   80e40:	0008168d 	.word	0x0008168d
   80e44:	000844cc 	.word	0x000844cc
   80e48:	40390000 	.word	0x40390000
   80e4c:	00080239 	.word	0x00080239
   80e50:	40080000 	.word	0x40080000
   80e54:	00080181 	.word	0x00080181
   80e58:	00080189 	.word	0x00080189
   80e5c:	000844dc 	.word	0x000844dc
   80e60:	000927c0 	.word	0x000927c0
   80e64:	20070001 	.word	0x20070001

00080e68 <__aeabi_drsub>:
   80e68:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   80e6c:	e002      	b.n	80e74 <__adddf3>
   80e6e:	bf00      	nop

00080e70 <__aeabi_dsub>:
   80e70:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00080e74 <__adddf3>:
   80e74:	b530      	push	{r4, r5, lr}
   80e76:	ea4f 0441 	mov.w	r4, r1, lsl #1
   80e7a:	ea4f 0543 	mov.w	r5, r3, lsl #1
   80e7e:	ea94 0f05 	teq	r4, r5
   80e82:	bf08      	it	eq
   80e84:	ea90 0f02 	teqeq	r0, r2
   80e88:	bf1f      	itttt	ne
   80e8a:	ea54 0c00 	orrsne.w	ip, r4, r0
   80e8e:	ea55 0c02 	orrsne.w	ip, r5, r2
   80e92:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   80e96:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   80e9a:	f000 80e2 	beq.w	81062 <__adddf3+0x1ee>
   80e9e:	ea4f 5454 	mov.w	r4, r4, lsr #21
   80ea2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   80ea6:	bfb8      	it	lt
   80ea8:	426d      	neglt	r5, r5
   80eaa:	dd0c      	ble.n	80ec6 <__adddf3+0x52>
   80eac:	442c      	add	r4, r5
   80eae:	ea80 0202 	eor.w	r2, r0, r2
   80eb2:	ea81 0303 	eor.w	r3, r1, r3
   80eb6:	ea82 0000 	eor.w	r0, r2, r0
   80eba:	ea83 0101 	eor.w	r1, r3, r1
   80ebe:	ea80 0202 	eor.w	r2, r0, r2
   80ec2:	ea81 0303 	eor.w	r3, r1, r3
   80ec6:	2d36      	cmp	r5, #54	; 0x36
   80ec8:	bf88      	it	hi
   80eca:	bd30      	pophi	{r4, r5, pc}
   80ecc:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   80ed0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   80ed4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   80ed8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   80edc:	d002      	beq.n	80ee4 <__adddf3+0x70>
   80ede:	4240      	negs	r0, r0
   80ee0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80ee4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   80ee8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   80eec:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   80ef0:	d002      	beq.n	80ef8 <__adddf3+0x84>
   80ef2:	4252      	negs	r2, r2
   80ef4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   80ef8:	ea94 0f05 	teq	r4, r5
   80efc:	f000 80a7 	beq.w	8104e <__adddf3+0x1da>
   80f00:	f1a4 0401 	sub.w	r4, r4, #1
   80f04:	f1d5 0e20 	rsbs	lr, r5, #32
   80f08:	db0d      	blt.n	80f26 <__adddf3+0xb2>
   80f0a:	fa02 fc0e 	lsl.w	ip, r2, lr
   80f0e:	fa22 f205 	lsr.w	r2, r2, r5
   80f12:	1880      	adds	r0, r0, r2
   80f14:	f141 0100 	adc.w	r1, r1, #0
   80f18:	fa03 f20e 	lsl.w	r2, r3, lr
   80f1c:	1880      	adds	r0, r0, r2
   80f1e:	fa43 f305 	asr.w	r3, r3, r5
   80f22:	4159      	adcs	r1, r3
   80f24:	e00e      	b.n	80f44 <__adddf3+0xd0>
   80f26:	f1a5 0520 	sub.w	r5, r5, #32
   80f2a:	f10e 0e20 	add.w	lr, lr, #32
   80f2e:	2a01      	cmp	r2, #1
   80f30:	fa03 fc0e 	lsl.w	ip, r3, lr
   80f34:	bf28      	it	cs
   80f36:	f04c 0c02 	orrcs.w	ip, ip, #2
   80f3a:	fa43 f305 	asr.w	r3, r3, r5
   80f3e:	18c0      	adds	r0, r0, r3
   80f40:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   80f44:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80f48:	d507      	bpl.n	80f5a <__adddf3+0xe6>
   80f4a:	f04f 0e00 	mov.w	lr, #0
   80f4e:	f1dc 0c00 	rsbs	ip, ip, #0
   80f52:	eb7e 0000 	sbcs.w	r0, lr, r0
   80f56:	eb6e 0101 	sbc.w	r1, lr, r1
   80f5a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   80f5e:	d31b      	bcc.n	80f98 <__adddf3+0x124>
   80f60:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   80f64:	d30c      	bcc.n	80f80 <__adddf3+0x10c>
   80f66:	0849      	lsrs	r1, r1, #1
   80f68:	ea5f 0030 	movs.w	r0, r0, rrx
   80f6c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   80f70:	f104 0401 	add.w	r4, r4, #1
   80f74:	ea4f 5244 	mov.w	r2, r4, lsl #21
   80f78:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   80f7c:	f080 809a 	bcs.w	810b4 <__adddf3+0x240>
   80f80:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   80f84:	bf08      	it	eq
   80f86:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   80f8a:	f150 0000 	adcs.w	r0, r0, #0
   80f8e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   80f92:	ea41 0105 	orr.w	r1, r1, r5
   80f96:	bd30      	pop	{r4, r5, pc}
   80f98:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   80f9c:	4140      	adcs	r0, r0
   80f9e:	eb41 0101 	adc.w	r1, r1, r1
   80fa2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   80fa6:	f1a4 0401 	sub.w	r4, r4, #1
   80faa:	d1e9      	bne.n	80f80 <__adddf3+0x10c>
   80fac:	f091 0f00 	teq	r1, #0
   80fb0:	bf04      	itt	eq
   80fb2:	4601      	moveq	r1, r0
   80fb4:	2000      	moveq	r0, #0
   80fb6:	fab1 f381 	clz	r3, r1
   80fba:	bf08      	it	eq
   80fbc:	3320      	addeq	r3, #32
   80fbe:	f1a3 030b 	sub.w	r3, r3, #11
   80fc2:	f1b3 0220 	subs.w	r2, r3, #32
   80fc6:	da0c      	bge.n	80fe2 <__adddf3+0x16e>
   80fc8:	320c      	adds	r2, #12
   80fca:	dd08      	ble.n	80fde <__adddf3+0x16a>
   80fcc:	f102 0c14 	add.w	ip, r2, #20
   80fd0:	f1c2 020c 	rsb	r2, r2, #12
   80fd4:	fa01 f00c 	lsl.w	r0, r1, ip
   80fd8:	fa21 f102 	lsr.w	r1, r1, r2
   80fdc:	e00c      	b.n	80ff8 <__adddf3+0x184>
   80fde:	f102 0214 	add.w	r2, r2, #20
   80fe2:	bfd8      	it	le
   80fe4:	f1c2 0c20 	rsble	ip, r2, #32
   80fe8:	fa01 f102 	lsl.w	r1, r1, r2
   80fec:	fa20 fc0c 	lsr.w	ip, r0, ip
   80ff0:	bfdc      	itt	le
   80ff2:	ea41 010c 	orrle.w	r1, r1, ip
   80ff6:	4090      	lslle	r0, r2
   80ff8:	1ae4      	subs	r4, r4, r3
   80ffa:	bfa2      	ittt	ge
   80ffc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   81000:	4329      	orrge	r1, r5
   81002:	bd30      	popge	{r4, r5, pc}
   81004:	ea6f 0404 	mvn.w	r4, r4
   81008:	3c1f      	subs	r4, #31
   8100a:	da1c      	bge.n	81046 <__adddf3+0x1d2>
   8100c:	340c      	adds	r4, #12
   8100e:	dc0e      	bgt.n	8102e <__adddf3+0x1ba>
   81010:	f104 0414 	add.w	r4, r4, #20
   81014:	f1c4 0220 	rsb	r2, r4, #32
   81018:	fa20 f004 	lsr.w	r0, r0, r4
   8101c:	fa01 f302 	lsl.w	r3, r1, r2
   81020:	ea40 0003 	orr.w	r0, r0, r3
   81024:	fa21 f304 	lsr.w	r3, r1, r4
   81028:	ea45 0103 	orr.w	r1, r5, r3
   8102c:	bd30      	pop	{r4, r5, pc}
   8102e:	f1c4 040c 	rsb	r4, r4, #12
   81032:	f1c4 0220 	rsb	r2, r4, #32
   81036:	fa20 f002 	lsr.w	r0, r0, r2
   8103a:	fa01 f304 	lsl.w	r3, r1, r4
   8103e:	ea40 0003 	orr.w	r0, r0, r3
   81042:	4629      	mov	r1, r5
   81044:	bd30      	pop	{r4, r5, pc}
   81046:	fa21 f004 	lsr.w	r0, r1, r4
   8104a:	4629      	mov	r1, r5
   8104c:	bd30      	pop	{r4, r5, pc}
   8104e:	f094 0f00 	teq	r4, #0
   81052:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   81056:	bf06      	itte	eq
   81058:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   8105c:	3401      	addeq	r4, #1
   8105e:	3d01      	subne	r5, #1
   81060:	e74e      	b.n	80f00 <__adddf3+0x8c>
   81062:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   81066:	bf18      	it	ne
   81068:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8106c:	d029      	beq.n	810c2 <__adddf3+0x24e>
   8106e:	ea94 0f05 	teq	r4, r5
   81072:	bf08      	it	eq
   81074:	ea90 0f02 	teqeq	r0, r2
   81078:	d005      	beq.n	81086 <__adddf3+0x212>
   8107a:	ea54 0c00 	orrs.w	ip, r4, r0
   8107e:	bf04      	itt	eq
   81080:	4619      	moveq	r1, r3
   81082:	4610      	moveq	r0, r2
   81084:	bd30      	pop	{r4, r5, pc}
   81086:	ea91 0f03 	teq	r1, r3
   8108a:	bf1e      	ittt	ne
   8108c:	2100      	movne	r1, #0
   8108e:	2000      	movne	r0, #0
   81090:	bd30      	popne	{r4, r5, pc}
   81092:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   81096:	d105      	bne.n	810a4 <__adddf3+0x230>
   81098:	0040      	lsls	r0, r0, #1
   8109a:	4149      	adcs	r1, r1
   8109c:	bf28      	it	cs
   8109e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   810a2:	bd30      	pop	{r4, r5, pc}
   810a4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   810a8:	bf3c      	itt	cc
   810aa:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   810ae:	bd30      	popcc	{r4, r5, pc}
   810b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   810b4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   810b8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   810bc:	f04f 0000 	mov.w	r0, #0
   810c0:	bd30      	pop	{r4, r5, pc}
   810c2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   810c6:	bf1a      	itte	ne
   810c8:	4619      	movne	r1, r3
   810ca:	4610      	movne	r0, r2
   810cc:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   810d0:	bf1c      	itt	ne
   810d2:	460b      	movne	r3, r1
   810d4:	4602      	movne	r2, r0
   810d6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   810da:	bf06      	itte	eq
   810dc:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   810e0:	ea91 0f03 	teqeq	r1, r3
   810e4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   810e8:	bd30      	pop	{r4, r5, pc}
   810ea:	bf00      	nop

000810ec <__aeabi_ui2d>:
   810ec:	f090 0f00 	teq	r0, #0
   810f0:	bf04      	itt	eq
   810f2:	2100      	moveq	r1, #0
   810f4:	4770      	bxeq	lr
   810f6:	b530      	push	{r4, r5, lr}
   810f8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   810fc:	f104 0432 	add.w	r4, r4, #50	; 0x32
   81100:	f04f 0500 	mov.w	r5, #0
   81104:	f04f 0100 	mov.w	r1, #0
   81108:	e750      	b.n	80fac <__adddf3+0x138>
   8110a:	bf00      	nop

0008110c <__aeabi_i2d>:
   8110c:	f090 0f00 	teq	r0, #0
   81110:	bf04      	itt	eq
   81112:	2100      	moveq	r1, #0
   81114:	4770      	bxeq	lr
   81116:	b530      	push	{r4, r5, lr}
   81118:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8111c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   81120:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   81124:	bf48      	it	mi
   81126:	4240      	negmi	r0, r0
   81128:	f04f 0100 	mov.w	r1, #0
   8112c:	e73e      	b.n	80fac <__adddf3+0x138>
   8112e:	bf00      	nop

00081130 <__aeabi_f2d>:
   81130:	0042      	lsls	r2, r0, #1
   81132:	ea4f 01e2 	mov.w	r1, r2, asr #3
   81136:	ea4f 0131 	mov.w	r1, r1, rrx
   8113a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   8113e:	bf1f      	itttt	ne
   81140:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   81144:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   81148:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   8114c:	4770      	bxne	lr
   8114e:	f092 0f00 	teq	r2, #0
   81152:	bf14      	ite	ne
   81154:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   81158:	4770      	bxeq	lr
   8115a:	b530      	push	{r4, r5, lr}
   8115c:	f44f 7460 	mov.w	r4, #896	; 0x380
   81160:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   81164:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   81168:	e720      	b.n	80fac <__adddf3+0x138>
   8116a:	bf00      	nop

0008116c <__aeabi_ul2d>:
   8116c:	ea50 0201 	orrs.w	r2, r0, r1
   81170:	bf08      	it	eq
   81172:	4770      	bxeq	lr
   81174:	b530      	push	{r4, r5, lr}
   81176:	f04f 0500 	mov.w	r5, #0
   8117a:	e00a      	b.n	81192 <__aeabi_l2d+0x16>

0008117c <__aeabi_l2d>:
   8117c:	ea50 0201 	orrs.w	r2, r0, r1
   81180:	bf08      	it	eq
   81182:	4770      	bxeq	lr
   81184:	b530      	push	{r4, r5, lr}
   81186:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   8118a:	d502      	bpl.n	81192 <__aeabi_l2d+0x16>
   8118c:	4240      	negs	r0, r0
   8118e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   81192:	f44f 6480 	mov.w	r4, #1024	; 0x400
   81196:	f104 0432 	add.w	r4, r4, #50	; 0x32
   8119a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   8119e:	f43f aedc 	beq.w	80f5a <__adddf3+0xe6>
   811a2:	f04f 0203 	mov.w	r2, #3
   811a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   811aa:	bf18      	it	ne
   811ac:	3203      	addne	r2, #3
   811ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   811b2:	bf18      	it	ne
   811b4:	3203      	addne	r2, #3
   811b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   811ba:	f1c2 0320 	rsb	r3, r2, #32
   811be:	fa00 fc03 	lsl.w	ip, r0, r3
   811c2:	fa20 f002 	lsr.w	r0, r0, r2
   811c6:	fa01 fe03 	lsl.w	lr, r1, r3
   811ca:	ea40 000e 	orr.w	r0, r0, lr
   811ce:	fa21 f102 	lsr.w	r1, r1, r2
   811d2:	4414      	add	r4, r2
   811d4:	e6c1      	b.n	80f5a <__adddf3+0xe6>
   811d6:	bf00      	nop

000811d8 <__aeabi_dmul>:
   811d8:	b570      	push	{r4, r5, r6, lr}
   811da:	f04f 0cff 	mov.w	ip, #255	; 0xff
   811de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   811e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   811e6:	bf1d      	ittte	ne
   811e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   811ec:	ea94 0f0c 	teqne	r4, ip
   811f0:	ea95 0f0c 	teqne	r5, ip
   811f4:	f000 f8de 	bleq	813b4 <__aeabi_dmul+0x1dc>
   811f8:	442c      	add	r4, r5
   811fa:	ea81 0603 	eor.w	r6, r1, r3
   811fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   81202:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   81206:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   8120a:	bf18      	it	ne
   8120c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   81210:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81214:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   81218:	d038      	beq.n	8128c <__aeabi_dmul+0xb4>
   8121a:	fba0 ce02 	umull	ip, lr, r0, r2
   8121e:	f04f 0500 	mov.w	r5, #0
   81222:	fbe1 e502 	umlal	lr, r5, r1, r2
   81226:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   8122a:	fbe0 e503 	umlal	lr, r5, r0, r3
   8122e:	f04f 0600 	mov.w	r6, #0
   81232:	fbe1 5603 	umlal	r5, r6, r1, r3
   81236:	f09c 0f00 	teq	ip, #0
   8123a:	bf18      	it	ne
   8123c:	f04e 0e01 	orrne.w	lr, lr, #1
   81240:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   81244:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   81248:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   8124c:	d204      	bcs.n	81258 <__aeabi_dmul+0x80>
   8124e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   81252:	416d      	adcs	r5, r5
   81254:	eb46 0606 	adc.w	r6, r6, r6
   81258:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   8125c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   81260:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   81264:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   81268:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   8126c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   81270:	bf88      	it	hi
   81272:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   81276:	d81e      	bhi.n	812b6 <__aeabi_dmul+0xde>
   81278:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   8127c:	bf08      	it	eq
   8127e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   81282:	f150 0000 	adcs.w	r0, r0, #0
   81286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8128a:	bd70      	pop	{r4, r5, r6, pc}
   8128c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   81290:	ea46 0101 	orr.w	r1, r6, r1
   81294:	ea40 0002 	orr.w	r0, r0, r2
   81298:	ea81 0103 	eor.w	r1, r1, r3
   8129c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   812a0:	bfc2      	ittt	gt
   812a2:	ebd4 050c 	rsbsgt	r5, r4, ip
   812a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   812aa:	bd70      	popgt	{r4, r5, r6, pc}
   812ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   812b0:	f04f 0e00 	mov.w	lr, #0
   812b4:	3c01      	subs	r4, #1
   812b6:	f300 80ab 	bgt.w	81410 <__aeabi_dmul+0x238>
   812ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
   812be:	bfde      	ittt	le
   812c0:	2000      	movle	r0, #0
   812c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   812c6:	bd70      	pople	{r4, r5, r6, pc}
   812c8:	f1c4 0400 	rsb	r4, r4, #0
   812cc:	3c20      	subs	r4, #32
   812ce:	da35      	bge.n	8133c <__aeabi_dmul+0x164>
   812d0:	340c      	adds	r4, #12
   812d2:	dc1b      	bgt.n	8130c <__aeabi_dmul+0x134>
   812d4:	f104 0414 	add.w	r4, r4, #20
   812d8:	f1c4 0520 	rsb	r5, r4, #32
   812dc:	fa00 f305 	lsl.w	r3, r0, r5
   812e0:	fa20 f004 	lsr.w	r0, r0, r4
   812e4:	fa01 f205 	lsl.w	r2, r1, r5
   812e8:	ea40 0002 	orr.w	r0, r0, r2
   812ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   812f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   812f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   812f8:	fa21 f604 	lsr.w	r6, r1, r4
   812fc:	eb42 0106 	adc.w	r1, r2, r6
   81300:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   81304:	bf08      	it	eq
   81306:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8130a:	bd70      	pop	{r4, r5, r6, pc}
   8130c:	f1c4 040c 	rsb	r4, r4, #12
   81310:	f1c4 0520 	rsb	r5, r4, #32
   81314:	fa00 f304 	lsl.w	r3, r0, r4
   81318:	fa20 f005 	lsr.w	r0, r0, r5
   8131c:	fa01 f204 	lsl.w	r2, r1, r4
   81320:	ea40 0002 	orr.w	r0, r0, r2
   81324:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81328:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8132c:	f141 0100 	adc.w	r1, r1, #0
   81330:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   81334:	bf08      	it	eq
   81336:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8133a:	bd70      	pop	{r4, r5, r6, pc}
   8133c:	f1c4 0520 	rsb	r5, r4, #32
   81340:	fa00 f205 	lsl.w	r2, r0, r5
   81344:	ea4e 0e02 	orr.w	lr, lr, r2
   81348:	fa20 f304 	lsr.w	r3, r0, r4
   8134c:	fa01 f205 	lsl.w	r2, r1, r5
   81350:	ea43 0302 	orr.w	r3, r3, r2
   81354:	fa21 f004 	lsr.w	r0, r1, r4
   81358:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8135c:	fa21 f204 	lsr.w	r2, r1, r4
   81360:	ea20 0002 	bic.w	r0, r0, r2
   81364:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   81368:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8136c:	bf08      	it	eq
   8136e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   81372:	bd70      	pop	{r4, r5, r6, pc}
   81374:	f094 0f00 	teq	r4, #0
   81378:	d10f      	bne.n	8139a <__aeabi_dmul+0x1c2>
   8137a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   8137e:	0040      	lsls	r0, r0, #1
   81380:	eb41 0101 	adc.w	r1, r1, r1
   81384:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81388:	bf08      	it	eq
   8138a:	3c01      	subeq	r4, #1
   8138c:	d0f7      	beq.n	8137e <__aeabi_dmul+0x1a6>
   8138e:	ea41 0106 	orr.w	r1, r1, r6
   81392:	f095 0f00 	teq	r5, #0
   81396:	bf18      	it	ne
   81398:	4770      	bxne	lr
   8139a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   8139e:	0052      	lsls	r2, r2, #1
   813a0:	eb43 0303 	adc.w	r3, r3, r3
   813a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   813a8:	bf08      	it	eq
   813aa:	3d01      	subeq	r5, #1
   813ac:	d0f7      	beq.n	8139e <__aeabi_dmul+0x1c6>
   813ae:	ea43 0306 	orr.w	r3, r3, r6
   813b2:	4770      	bx	lr
   813b4:	ea94 0f0c 	teq	r4, ip
   813b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   813bc:	bf18      	it	ne
   813be:	ea95 0f0c 	teqne	r5, ip
   813c2:	d00c      	beq.n	813de <__aeabi_dmul+0x206>
   813c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   813c8:	bf18      	it	ne
   813ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   813ce:	d1d1      	bne.n	81374 <__aeabi_dmul+0x19c>
   813d0:	ea81 0103 	eor.w	r1, r1, r3
   813d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   813d8:	f04f 0000 	mov.w	r0, #0
   813dc:	bd70      	pop	{r4, r5, r6, pc}
   813de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   813e2:	bf06      	itte	eq
   813e4:	4610      	moveq	r0, r2
   813e6:	4619      	moveq	r1, r3
   813e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   813ec:	d019      	beq.n	81422 <__aeabi_dmul+0x24a>
   813ee:	ea94 0f0c 	teq	r4, ip
   813f2:	d102      	bne.n	813fa <__aeabi_dmul+0x222>
   813f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   813f8:	d113      	bne.n	81422 <__aeabi_dmul+0x24a>
   813fa:	ea95 0f0c 	teq	r5, ip
   813fe:	d105      	bne.n	8140c <__aeabi_dmul+0x234>
   81400:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   81404:	bf1c      	itt	ne
   81406:	4610      	movne	r0, r2
   81408:	4619      	movne	r1, r3
   8140a:	d10a      	bne.n	81422 <__aeabi_dmul+0x24a>
   8140c:	ea81 0103 	eor.w	r1, r1, r3
   81410:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81414:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   81418:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8141c:	f04f 0000 	mov.w	r0, #0
   81420:	bd70      	pop	{r4, r5, r6, pc}
   81422:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   81426:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8142a:	bd70      	pop	{r4, r5, r6, pc}

0008142c <__aeabi_ddiv>:
   8142c:	b570      	push	{r4, r5, r6, lr}
   8142e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   81432:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   81436:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8143a:	bf1d      	ittte	ne
   8143c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   81440:	ea94 0f0c 	teqne	r4, ip
   81444:	ea95 0f0c 	teqne	r5, ip
   81448:	f000 f8a7 	bleq	8159a <__aeabi_ddiv+0x16e>
   8144c:	eba4 0405 	sub.w	r4, r4, r5
   81450:	ea81 0e03 	eor.w	lr, r1, r3
   81454:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   81458:	ea4f 3101 	mov.w	r1, r1, lsl #12
   8145c:	f000 8088 	beq.w	81570 <__aeabi_ddiv+0x144>
   81460:	ea4f 3303 	mov.w	r3, r3, lsl #12
   81464:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   81468:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   8146c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   81470:	ea4f 2202 	mov.w	r2, r2, lsl #8
   81474:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   81478:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   8147c:	ea4f 2600 	mov.w	r6, r0, lsl #8
   81480:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   81484:	429d      	cmp	r5, r3
   81486:	bf08      	it	eq
   81488:	4296      	cmpeq	r6, r2
   8148a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   8148e:	f504 7440 	add.w	r4, r4, #768	; 0x300
   81492:	d202      	bcs.n	8149a <__aeabi_ddiv+0x6e>
   81494:	085b      	lsrs	r3, r3, #1
   81496:	ea4f 0232 	mov.w	r2, r2, rrx
   8149a:	1ab6      	subs	r6, r6, r2
   8149c:	eb65 0503 	sbc.w	r5, r5, r3
   814a0:	085b      	lsrs	r3, r3, #1
   814a2:	ea4f 0232 	mov.w	r2, r2, rrx
   814a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   814aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   814ae:	ebb6 0e02 	subs.w	lr, r6, r2
   814b2:	eb75 0e03 	sbcs.w	lr, r5, r3
   814b6:	bf22      	ittt	cs
   814b8:	1ab6      	subcs	r6, r6, r2
   814ba:	4675      	movcs	r5, lr
   814bc:	ea40 000c 	orrcs.w	r0, r0, ip
   814c0:	085b      	lsrs	r3, r3, #1
   814c2:	ea4f 0232 	mov.w	r2, r2, rrx
   814c6:	ebb6 0e02 	subs.w	lr, r6, r2
   814ca:	eb75 0e03 	sbcs.w	lr, r5, r3
   814ce:	bf22      	ittt	cs
   814d0:	1ab6      	subcs	r6, r6, r2
   814d2:	4675      	movcs	r5, lr
   814d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   814d8:	085b      	lsrs	r3, r3, #1
   814da:	ea4f 0232 	mov.w	r2, r2, rrx
   814de:	ebb6 0e02 	subs.w	lr, r6, r2
   814e2:	eb75 0e03 	sbcs.w	lr, r5, r3
   814e6:	bf22      	ittt	cs
   814e8:	1ab6      	subcs	r6, r6, r2
   814ea:	4675      	movcs	r5, lr
   814ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   814f0:	085b      	lsrs	r3, r3, #1
   814f2:	ea4f 0232 	mov.w	r2, r2, rrx
   814f6:	ebb6 0e02 	subs.w	lr, r6, r2
   814fa:	eb75 0e03 	sbcs.w	lr, r5, r3
   814fe:	bf22      	ittt	cs
   81500:	1ab6      	subcs	r6, r6, r2
   81502:	4675      	movcs	r5, lr
   81504:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   81508:	ea55 0e06 	orrs.w	lr, r5, r6
   8150c:	d018      	beq.n	81540 <__aeabi_ddiv+0x114>
   8150e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   81512:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   81516:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8151a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   8151e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   81522:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   81526:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8152a:	d1c0      	bne.n	814ae <__aeabi_ddiv+0x82>
   8152c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81530:	d10b      	bne.n	8154a <__aeabi_ddiv+0x11e>
   81532:	ea41 0100 	orr.w	r1, r1, r0
   81536:	f04f 0000 	mov.w	r0, #0
   8153a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   8153e:	e7b6      	b.n	814ae <__aeabi_ddiv+0x82>
   81540:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81544:	bf04      	itt	eq
   81546:	4301      	orreq	r1, r0
   81548:	2000      	moveq	r0, #0
   8154a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   8154e:	bf88      	it	hi
   81550:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   81554:	f63f aeaf 	bhi.w	812b6 <__aeabi_dmul+0xde>
   81558:	ebb5 0c03 	subs.w	ip, r5, r3
   8155c:	bf04      	itt	eq
   8155e:	ebb6 0c02 	subseq.w	ip, r6, r2
   81562:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   81566:	f150 0000 	adcs.w	r0, r0, #0
   8156a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8156e:	bd70      	pop	{r4, r5, r6, pc}
   81570:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   81574:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   81578:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   8157c:	bfc2      	ittt	gt
   8157e:	ebd4 050c 	rsbsgt	r5, r4, ip
   81582:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   81586:	bd70      	popgt	{r4, r5, r6, pc}
   81588:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   8158c:	f04f 0e00 	mov.w	lr, #0
   81590:	3c01      	subs	r4, #1
   81592:	e690      	b.n	812b6 <__aeabi_dmul+0xde>
   81594:	ea45 0e06 	orr.w	lr, r5, r6
   81598:	e68d      	b.n	812b6 <__aeabi_dmul+0xde>
   8159a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   8159e:	ea94 0f0c 	teq	r4, ip
   815a2:	bf08      	it	eq
   815a4:	ea95 0f0c 	teqeq	r5, ip
   815a8:	f43f af3b 	beq.w	81422 <__aeabi_dmul+0x24a>
   815ac:	ea94 0f0c 	teq	r4, ip
   815b0:	d10a      	bne.n	815c8 <__aeabi_ddiv+0x19c>
   815b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   815b6:	f47f af34 	bne.w	81422 <__aeabi_dmul+0x24a>
   815ba:	ea95 0f0c 	teq	r5, ip
   815be:	f47f af25 	bne.w	8140c <__aeabi_dmul+0x234>
   815c2:	4610      	mov	r0, r2
   815c4:	4619      	mov	r1, r3
   815c6:	e72c      	b.n	81422 <__aeabi_dmul+0x24a>
   815c8:	ea95 0f0c 	teq	r5, ip
   815cc:	d106      	bne.n	815dc <__aeabi_ddiv+0x1b0>
   815ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   815d2:	f43f aefd 	beq.w	813d0 <__aeabi_dmul+0x1f8>
   815d6:	4610      	mov	r0, r2
   815d8:	4619      	mov	r1, r3
   815da:	e722      	b.n	81422 <__aeabi_dmul+0x24a>
   815dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   815e0:	bf18      	it	ne
   815e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   815e6:	f47f aec5 	bne.w	81374 <__aeabi_dmul+0x19c>
   815ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   815ee:	f47f af0d 	bne.w	8140c <__aeabi_dmul+0x234>
   815f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   815f6:	f47f aeeb 	bne.w	813d0 <__aeabi_dmul+0x1f8>
   815fa:	e712      	b.n	81422 <__aeabi_dmul+0x24a>

000815fc <__aeabi_d2uiz>:
   815fc:	004a      	lsls	r2, r1, #1
   815fe:	d211      	bcs.n	81624 <__aeabi_d2uiz+0x28>
   81600:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   81604:	d211      	bcs.n	8162a <__aeabi_d2uiz+0x2e>
   81606:	d50d      	bpl.n	81624 <__aeabi_d2uiz+0x28>
   81608:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   8160c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   81610:	d40e      	bmi.n	81630 <__aeabi_d2uiz+0x34>
   81612:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   81616:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8161a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   8161e:	fa23 f002 	lsr.w	r0, r3, r2
   81622:	4770      	bx	lr
   81624:	f04f 0000 	mov.w	r0, #0
   81628:	4770      	bx	lr
   8162a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   8162e:	d102      	bne.n	81636 <__aeabi_d2uiz+0x3a>
   81630:	f04f 30ff 	mov.w	r0, #4294967295
   81634:	4770      	bx	lr
   81636:	f04f 0000 	mov.w	r0, #0
   8163a:	4770      	bx	lr

0008163c <__libc_init_array>:
   8163c:	b570      	push	{r4, r5, r6, lr}
   8163e:	4e0f      	ldr	r6, [pc, #60]	; (8167c <__libc_init_array+0x40>)
   81640:	4d0f      	ldr	r5, [pc, #60]	; (81680 <__libc_init_array+0x44>)
   81642:	1b76      	subs	r6, r6, r5
   81644:	10b6      	asrs	r6, r6, #2
   81646:	bf18      	it	ne
   81648:	2400      	movne	r4, #0
   8164a:	d005      	beq.n	81658 <__libc_init_array+0x1c>
   8164c:	3401      	adds	r4, #1
   8164e:	f855 3b04 	ldr.w	r3, [r5], #4
   81652:	4798      	blx	r3
   81654:	42a6      	cmp	r6, r4
   81656:	d1f9      	bne.n	8164c <__libc_init_array+0x10>
   81658:	4e0a      	ldr	r6, [pc, #40]	; (81684 <__libc_init_array+0x48>)
   8165a:	4d0b      	ldr	r5, [pc, #44]	; (81688 <__libc_init_array+0x4c>)
   8165c:	f003 f804 	bl	84668 <_init>
   81660:	1b76      	subs	r6, r6, r5
   81662:	10b6      	asrs	r6, r6, #2
   81664:	bf18      	it	ne
   81666:	2400      	movne	r4, #0
   81668:	d006      	beq.n	81678 <__libc_init_array+0x3c>
   8166a:	3401      	adds	r4, #1
   8166c:	f855 3b04 	ldr.w	r3, [r5], #4
   81670:	4798      	blx	r3
   81672:	42a6      	cmp	r6, r4
   81674:	d1f9      	bne.n	8166a <__libc_init_array+0x2e>
   81676:	bd70      	pop	{r4, r5, r6, pc}
   81678:	bd70      	pop	{r4, r5, r6, pc}
   8167a:	bf00      	nop
   8167c:	00084674 	.word	0x00084674
   81680:	00084674 	.word	0x00084674
   81684:	0008467c 	.word	0x0008467c
   81688:	00084674 	.word	0x00084674

0008168c <iprintf>:
   8168c:	b40f      	push	{r0, r1, r2, r3}
   8168e:	b510      	push	{r4, lr}
   81690:	4b07      	ldr	r3, [pc, #28]	; (816b0 <iprintf+0x24>)
   81692:	b082      	sub	sp, #8
   81694:	ac04      	add	r4, sp, #16
   81696:	f854 2b04 	ldr.w	r2, [r4], #4
   8169a:	6818      	ldr	r0, [r3, #0]
   8169c:	4623      	mov	r3, r4
   8169e:	6881      	ldr	r1, [r0, #8]
   816a0:	9401      	str	r4, [sp, #4]
   816a2:	f000 f965 	bl	81970 <_vfiprintf_r>
   816a6:	b002      	add	sp, #8
   816a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   816ac:	b004      	add	sp, #16
   816ae:	4770      	bx	lr
   816b0:	20070140 	.word	0x20070140

000816b4 <memset>:
   816b4:	b470      	push	{r4, r5, r6}
   816b6:	0786      	lsls	r6, r0, #30
   816b8:	d046      	beq.n	81748 <memset+0x94>
   816ba:	1e54      	subs	r4, r2, #1
   816bc:	2a00      	cmp	r2, #0
   816be:	d041      	beq.n	81744 <memset+0x90>
   816c0:	b2ca      	uxtb	r2, r1
   816c2:	4603      	mov	r3, r0
   816c4:	e002      	b.n	816cc <memset+0x18>
   816c6:	f114 34ff 	adds.w	r4, r4, #4294967295
   816ca:	d33b      	bcc.n	81744 <memset+0x90>
   816cc:	f803 2b01 	strb.w	r2, [r3], #1
   816d0:	079d      	lsls	r5, r3, #30
   816d2:	d1f8      	bne.n	816c6 <memset+0x12>
   816d4:	2c03      	cmp	r4, #3
   816d6:	d92e      	bls.n	81736 <memset+0x82>
   816d8:	b2cd      	uxtb	r5, r1
   816da:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   816de:	2c0f      	cmp	r4, #15
   816e0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   816e4:	d919      	bls.n	8171a <memset+0x66>
   816e6:	4626      	mov	r6, r4
   816e8:	f103 0210 	add.w	r2, r3, #16
   816ec:	3e10      	subs	r6, #16
   816ee:	2e0f      	cmp	r6, #15
   816f0:	f842 5c10 	str.w	r5, [r2, #-16]
   816f4:	f842 5c0c 	str.w	r5, [r2, #-12]
   816f8:	f842 5c08 	str.w	r5, [r2, #-8]
   816fc:	f842 5c04 	str.w	r5, [r2, #-4]
   81700:	f102 0210 	add.w	r2, r2, #16
   81704:	d8f2      	bhi.n	816ec <memset+0x38>
   81706:	f1a4 0210 	sub.w	r2, r4, #16
   8170a:	f022 020f 	bic.w	r2, r2, #15
   8170e:	f004 040f 	and.w	r4, r4, #15
   81712:	3210      	adds	r2, #16
   81714:	2c03      	cmp	r4, #3
   81716:	4413      	add	r3, r2
   81718:	d90d      	bls.n	81736 <memset+0x82>
   8171a:	461e      	mov	r6, r3
   8171c:	4622      	mov	r2, r4
   8171e:	3a04      	subs	r2, #4
   81720:	2a03      	cmp	r2, #3
   81722:	f846 5b04 	str.w	r5, [r6], #4
   81726:	d8fa      	bhi.n	8171e <memset+0x6a>
   81728:	1f22      	subs	r2, r4, #4
   8172a:	f022 0203 	bic.w	r2, r2, #3
   8172e:	3204      	adds	r2, #4
   81730:	4413      	add	r3, r2
   81732:	f004 0403 	and.w	r4, r4, #3
   81736:	b12c      	cbz	r4, 81744 <memset+0x90>
   81738:	b2c9      	uxtb	r1, r1
   8173a:	441c      	add	r4, r3
   8173c:	f803 1b01 	strb.w	r1, [r3], #1
   81740:	429c      	cmp	r4, r3
   81742:	d1fb      	bne.n	8173c <memset+0x88>
   81744:	bc70      	pop	{r4, r5, r6}
   81746:	4770      	bx	lr
   81748:	4614      	mov	r4, r2
   8174a:	4603      	mov	r3, r0
   8174c:	e7c2      	b.n	816d4 <memset+0x20>
   8174e:	bf00      	nop

00081750 <setbuf>:
   81750:	2900      	cmp	r1, #0
   81752:	bf0c      	ite	eq
   81754:	2202      	moveq	r2, #2
   81756:	2200      	movne	r2, #0
   81758:	f44f 6380 	mov.w	r3, #1024	; 0x400
   8175c:	f000 b800 	b.w	81760 <setvbuf>

00081760 <setvbuf>:
   81760:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   81764:	4d61      	ldr	r5, [pc, #388]	; (818ec <setvbuf+0x18c>)
   81766:	b083      	sub	sp, #12
   81768:	682d      	ldr	r5, [r5, #0]
   8176a:	4604      	mov	r4, r0
   8176c:	460f      	mov	r7, r1
   8176e:	4690      	mov	r8, r2
   81770:	461e      	mov	r6, r3
   81772:	b115      	cbz	r5, 8177a <setvbuf+0x1a>
   81774:	6bab      	ldr	r3, [r5, #56]	; 0x38
   81776:	2b00      	cmp	r3, #0
   81778:	d064      	beq.n	81844 <setvbuf+0xe4>
   8177a:	f1b8 0f02 	cmp.w	r8, #2
   8177e:	d006      	beq.n	8178e <setvbuf+0x2e>
   81780:	f1b8 0f01 	cmp.w	r8, #1
   81784:	f200 809f 	bhi.w	818c6 <setvbuf+0x166>
   81788:	2e00      	cmp	r6, #0
   8178a:	f2c0 809c 	blt.w	818c6 <setvbuf+0x166>
   8178e:	6e63      	ldr	r3, [r4, #100]	; 0x64
   81790:	07d8      	lsls	r0, r3, #31
   81792:	d534      	bpl.n	817fe <setvbuf+0x9e>
   81794:	4621      	mov	r1, r4
   81796:	4628      	mov	r0, r5
   81798:	f001 f882 	bl	828a0 <_fflush_r>
   8179c:	6b21      	ldr	r1, [r4, #48]	; 0x30
   8179e:	b141      	cbz	r1, 817b2 <setvbuf+0x52>
   817a0:	f104 0340 	add.w	r3, r4, #64	; 0x40
   817a4:	4299      	cmp	r1, r3
   817a6:	d002      	beq.n	817ae <setvbuf+0x4e>
   817a8:	4628      	mov	r0, r5
   817aa:	f001 f9f7 	bl	82b9c <_free_r>
   817ae:	2300      	movs	r3, #0
   817b0:	6323      	str	r3, [r4, #48]	; 0x30
   817b2:	2200      	movs	r2, #0
   817b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   817b8:	61a2      	str	r2, [r4, #24]
   817ba:	6062      	str	r2, [r4, #4]
   817bc:	061a      	lsls	r2, r3, #24
   817be:	d43a      	bmi.n	81836 <setvbuf+0xd6>
   817c0:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   817c4:	f023 0303 	bic.w	r3, r3, #3
   817c8:	f1b8 0f02 	cmp.w	r8, #2
   817cc:	81a3      	strh	r3, [r4, #12]
   817ce:	d01d      	beq.n	8180c <setvbuf+0xac>
   817d0:	ab01      	add	r3, sp, #4
   817d2:	466a      	mov	r2, sp
   817d4:	4621      	mov	r1, r4
   817d6:	4628      	mov	r0, r5
   817d8:	f001 fc7e 	bl	830d8 <__swhatbuf_r>
   817dc:	89a3      	ldrh	r3, [r4, #12]
   817de:	4318      	orrs	r0, r3
   817e0:	81a0      	strh	r0, [r4, #12]
   817e2:	2e00      	cmp	r6, #0
   817e4:	d132      	bne.n	8184c <setvbuf+0xec>
   817e6:	9e00      	ldr	r6, [sp, #0]
   817e8:	4630      	mov	r0, r6
   817ea:	f001 fced 	bl	831c8 <malloc>
   817ee:	4607      	mov	r7, r0
   817f0:	2800      	cmp	r0, #0
   817f2:	d06b      	beq.n	818cc <setvbuf+0x16c>
   817f4:	89a3      	ldrh	r3, [r4, #12]
   817f6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   817fa:	81a3      	strh	r3, [r4, #12]
   817fc:	e028      	b.n	81850 <setvbuf+0xf0>
   817fe:	89a3      	ldrh	r3, [r4, #12]
   81800:	0599      	lsls	r1, r3, #22
   81802:	d4c7      	bmi.n	81794 <setvbuf+0x34>
   81804:	6da0      	ldr	r0, [r4, #88]	; 0x58
   81806:	f001 fc63 	bl	830d0 <__retarget_lock_acquire_recursive>
   8180a:	e7c3      	b.n	81794 <setvbuf+0x34>
   8180c:	2500      	movs	r5, #0
   8180e:	2600      	movs	r6, #0
   81810:	2001      	movs	r0, #1
   81812:	6e61      	ldr	r1, [r4, #100]	; 0x64
   81814:	f104 0243 	add.w	r2, r4, #67	; 0x43
   81818:	f043 0302 	orr.w	r3, r3, #2
   8181c:	60a6      	str	r6, [r4, #8]
   8181e:	07ce      	lsls	r6, r1, #31
   81820:	81a3      	strh	r3, [r4, #12]
   81822:	6160      	str	r0, [r4, #20]
   81824:	6022      	str	r2, [r4, #0]
   81826:	6122      	str	r2, [r4, #16]
   81828:	d401      	bmi.n	8182e <setvbuf+0xce>
   8182a:	0598      	lsls	r0, r3, #22
   8182c:	d53e      	bpl.n	818ac <setvbuf+0x14c>
   8182e:	4628      	mov	r0, r5
   81830:	b003      	add	sp, #12
   81832:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   81836:	6921      	ldr	r1, [r4, #16]
   81838:	4628      	mov	r0, r5
   8183a:	f001 f9af 	bl	82b9c <_free_r>
   8183e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   81842:	e7bd      	b.n	817c0 <setvbuf+0x60>
   81844:	4628      	mov	r0, r5
   81846:	f001 f883 	bl	82950 <__sinit>
   8184a:	e796      	b.n	8177a <setvbuf+0x1a>
   8184c:	2f00      	cmp	r7, #0
   8184e:	d0cb      	beq.n	817e8 <setvbuf+0x88>
   81850:	6bab      	ldr	r3, [r5, #56]	; 0x38
   81852:	2b00      	cmp	r3, #0
   81854:	d033      	beq.n	818be <setvbuf+0x15e>
   81856:	9b00      	ldr	r3, [sp, #0]
   81858:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   8185c:	429e      	cmp	r6, r3
   8185e:	bf1c      	itt	ne
   81860:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
   81864:	81a2      	strhne	r2, [r4, #12]
   81866:	f1b8 0f01 	cmp.w	r8, #1
   8186a:	bf04      	itt	eq
   8186c:	f042 0201 	orreq.w	r2, r2, #1
   81870:	81a2      	strheq	r2, [r4, #12]
   81872:	b292      	uxth	r2, r2
   81874:	f012 0308 	ands.w	r3, r2, #8
   81878:	6027      	str	r7, [r4, #0]
   8187a:	6127      	str	r7, [r4, #16]
   8187c:	6166      	str	r6, [r4, #20]
   8187e:	d00e      	beq.n	8189e <setvbuf+0x13e>
   81880:	07d1      	lsls	r1, r2, #31
   81882:	d51a      	bpl.n	818ba <setvbuf+0x15a>
   81884:	2300      	movs	r3, #0
   81886:	6e65      	ldr	r5, [r4, #100]	; 0x64
   81888:	4276      	negs	r6, r6
   8188a:	f015 0501 	ands.w	r5, r5, #1
   8188e:	61a6      	str	r6, [r4, #24]
   81890:	60a3      	str	r3, [r4, #8]
   81892:	d009      	beq.n	818a8 <setvbuf+0x148>
   81894:	2500      	movs	r5, #0
   81896:	4628      	mov	r0, r5
   81898:	b003      	add	sp, #12
   8189a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8189e:	60a3      	str	r3, [r4, #8]
   818a0:	6e65      	ldr	r5, [r4, #100]	; 0x64
   818a2:	f015 0501 	ands.w	r5, r5, #1
   818a6:	d1f5      	bne.n	81894 <setvbuf+0x134>
   818a8:	0593      	lsls	r3, r2, #22
   818aa:	d4c0      	bmi.n	8182e <setvbuf+0xce>
   818ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
   818ae:	f001 fc11 	bl	830d4 <__retarget_lock_release_recursive>
   818b2:	4628      	mov	r0, r5
   818b4:	b003      	add	sp, #12
   818b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   818ba:	60a6      	str	r6, [r4, #8]
   818bc:	e7f0      	b.n	818a0 <setvbuf+0x140>
   818be:	4628      	mov	r0, r5
   818c0:	f001 f846 	bl	82950 <__sinit>
   818c4:	e7c7      	b.n	81856 <setvbuf+0xf6>
   818c6:	f04f 35ff 	mov.w	r5, #4294967295
   818ca:	e7b0      	b.n	8182e <setvbuf+0xce>
   818cc:	f8dd 9000 	ldr.w	r9, [sp]
   818d0:	45b1      	cmp	r9, r6
   818d2:	d004      	beq.n	818de <setvbuf+0x17e>
   818d4:	4648      	mov	r0, r9
   818d6:	f001 fc77 	bl	831c8 <malloc>
   818da:	4607      	mov	r7, r0
   818dc:	b920      	cbnz	r0, 818e8 <setvbuf+0x188>
   818de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   818e2:	f04f 35ff 	mov.w	r5, #4294967295
   818e6:	e792      	b.n	8180e <setvbuf+0xae>
   818e8:	464e      	mov	r6, r9
   818ea:	e783      	b.n	817f4 <setvbuf+0x94>
   818ec:	20070140 	.word	0x20070140

000818f0 <__sprint_r.part.0>:
   818f0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   818f4:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   818f6:	4693      	mov	fp, r2
   818f8:	049c      	lsls	r4, r3, #18
   818fa:	d52f      	bpl.n	8195c <__sprint_r.part.0+0x6c>
   818fc:	6893      	ldr	r3, [r2, #8]
   818fe:	6812      	ldr	r2, [r2, #0]
   81900:	b353      	cbz	r3, 81958 <__sprint_r.part.0+0x68>
   81902:	460e      	mov	r6, r1
   81904:	4607      	mov	r7, r0
   81906:	f102 0908 	add.w	r9, r2, #8
   8190a:	e919 0420 	ldmdb	r9, {r5, sl}
   8190e:	ea5f 089a 	movs.w	r8, sl, lsr #2
   81912:	d017      	beq.n	81944 <__sprint_r.part.0+0x54>
   81914:	2400      	movs	r4, #0
   81916:	3d04      	subs	r5, #4
   81918:	e001      	b.n	8191e <__sprint_r.part.0+0x2e>
   8191a:	45a0      	cmp	r8, r4
   8191c:	d010      	beq.n	81940 <__sprint_r.part.0+0x50>
   8191e:	4632      	mov	r2, r6
   81920:	f855 1f04 	ldr.w	r1, [r5, #4]!
   81924:	4638      	mov	r0, r7
   81926:	f001 f8b5 	bl	82a94 <_fputwc_r>
   8192a:	1c43      	adds	r3, r0, #1
   8192c:	f104 0401 	add.w	r4, r4, #1
   81930:	d1f3      	bne.n	8191a <__sprint_r.part.0+0x2a>
   81932:	2300      	movs	r3, #0
   81934:	f8cb 3008 	str.w	r3, [fp, #8]
   81938:	f8cb 3004 	str.w	r3, [fp, #4]
   8193c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81940:	f8db 3008 	ldr.w	r3, [fp, #8]
   81944:	f02a 0a03 	bic.w	sl, sl, #3
   81948:	eba3 030a 	sub.w	r3, r3, sl
   8194c:	f8cb 3008 	str.w	r3, [fp, #8]
   81950:	f109 0908 	add.w	r9, r9, #8
   81954:	2b00      	cmp	r3, #0
   81956:	d1d8      	bne.n	8190a <__sprint_r.part.0+0x1a>
   81958:	2000      	movs	r0, #0
   8195a:	e7ea      	b.n	81932 <__sprint_r.part.0+0x42>
   8195c:	f001 fa04 	bl	82d68 <__sfvwrite_r>
   81960:	2300      	movs	r3, #0
   81962:	f8cb 3008 	str.w	r3, [fp, #8]
   81966:	f8cb 3004 	str.w	r3, [fp, #4]
   8196a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8196e:	bf00      	nop

00081970 <_vfiprintf_r>:
   81970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81974:	b0ad      	sub	sp, #180	; 0xb4
   81976:	461d      	mov	r5, r3
   81978:	468b      	mov	fp, r1
   8197a:	4690      	mov	r8, r2
   8197c:	9307      	str	r3, [sp, #28]
   8197e:	9006      	str	r0, [sp, #24]
   81980:	b118      	cbz	r0, 8198a <_vfiprintf_r+0x1a>
   81982:	6b83      	ldr	r3, [r0, #56]	; 0x38
   81984:	2b00      	cmp	r3, #0
   81986:	f000 80f3 	beq.w	81b70 <_vfiprintf_r+0x200>
   8198a:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   8198e:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
   81992:	07df      	lsls	r7, r3, #31
   81994:	b281      	uxth	r1, r0
   81996:	d402      	bmi.n	8199e <_vfiprintf_r+0x2e>
   81998:	058e      	lsls	r6, r1, #22
   8199a:	f140 80fc 	bpl.w	81b96 <_vfiprintf_r+0x226>
   8199e:	048c      	lsls	r4, r1, #18
   819a0:	d40a      	bmi.n	819b8 <_vfiprintf_r+0x48>
   819a2:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   819a6:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
   819aa:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   819ae:	f8ab 100c 	strh.w	r1, [fp, #12]
   819b2:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
   819b6:	b289      	uxth	r1, r1
   819b8:	0708      	lsls	r0, r1, #28
   819ba:	f140 80b3 	bpl.w	81b24 <_vfiprintf_r+0x1b4>
   819be:	f8db 3010 	ldr.w	r3, [fp, #16]
   819c2:	2b00      	cmp	r3, #0
   819c4:	f000 80ae 	beq.w	81b24 <_vfiprintf_r+0x1b4>
   819c8:	f001 031a 	and.w	r3, r1, #26
   819cc:	2b0a      	cmp	r3, #10
   819ce:	f000 80b5 	beq.w	81b3c <_vfiprintf_r+0x1cc>
   819d2:	2300      	movs	r3, #0
   819d4:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
   819d8:	46d1      	mov	r9, sl
   819da:	930b      	str	r3, [sp, #44]	; 0x2c
   819dc:	9303      	str	r3, [sp, #12]
   819de:	9311      	str	r3, [sp, #68]	; 0x44
   819e0:	9310      	str	r3, [sp, #64]	; 0x40
   819e2:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
   819e6:	f8cd b010 	str.w	fp, [sp, #16]
   819ea:	f898 3000 	ldrb.w	r3, [r8]
   819ee:	4644      	mov	r4, r8
   819f0:	b1fb      	cbz	r3, 81a32 <_vfiprintf_r+0xc2>
   819f2:	2b25      	cmp	r3, #37	; 0x25
   819f4:	d102      	bne.n	819fc <_vfiprintf_r+0x8c>
   819f6:	e01c      	b.n	81a32 <_vfiprintf_r+0xc2>
   819f8:	2b25      	cmp	r3, #37	; 0x25
   819fa:	d003      	beq.n	81a04 <_vfiprintf_r+0x94>
   819fc:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   81a00:	2b00      	cmp	r3, #0
   81a02:	d1f9      	bne.n	819f8 <_vfiprintf_r+0x88>
   81a04:	eba4 0508 	sub.w	r5, r4, r8
   81a08:	b19d      	cbz	r5, 81a32 <_vfiprintf_r+0xc2>
   81a0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81a0c:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81a0e:	3301      	adds	r3, #1
   81a10:	442a      	add	r2, r5
   81a12:	2b07      	cmp	r3, #7
   81a14:	f8c9 8000 	str.w	r8, [r9]
   81a18:	f8c9 5004 	str.w	r5, [r9, #4]
   81a1c:	9211      	str	r2, [sp, #68]	; 0x44
   81a1e:	9310      	str	r3, [sp, #64]	; 0x40
   81a20:	dd7a      	ble.n	81b18 <_vfiprintf_r+0x1a8>
   81a22:	2a00      	cmp	r2, #0
   81a24:	f040 84b5 	bne.w	82392 <_vfiprintf_r+0xa22>
   81a28:	46d1      	mov	r9, sl
   81a2a:	9b03      	ldr	r3, [sp, #12]
   81a2c:	9210      	str	r2, [sp, #64]	; 0x40
   81a2e:	442b      	add	r3, r5
   81a30:	9303      	str	r3, [sp, #12]
   81a32:	7823      	ldrb	r3, [r4, #0]
   81a34:	2b00      	cmp	r3, #0
   81a36:	f000 83e5 	beq.w	82204 <_vfiprintf_r+0x894>
   81a3a:	2000      	movs	r0, #0
   81a3c:	f04f 0300 	mov.w	r3, #0
   81a40:	f104 0801 	add.w	r8, r4, #1
   81a44:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   81a48:	7862      	ldrb	r2, [r4, #1]
   81a4a:	4606      	mov	r6, r0
   81a4c:	4605      	mov	r5, r0
   81a4e:	4603      	mov	r3, r0
   81a50:	f04f 34ff 	mov.w	r4, #4294967295
   81a54:	f108 0801 	add.w	r8, r8, #1
   81a58:	f1a2 0120 	sub.w	r1, r2, #32
   81a5c:	2958      	cmp	r1, #88	; 0x58
   81a5e:	f200 82d9 	bhi.w	82014 <_vfiprintf_r+0x6a4>
   81a62:	e8df f011 	tbh	[pc, r1, lsl #1]
   81a66:	0228      	.short	0x0228
   81a68:	02d702d7 	.word	0x02d702d7
   81a6c:	02d70230 	.word	0x02d70230
   81a70:	02d702d7 	.word	0x02d702d7
   81a74:	02d702d7 	.word	0x02d702d7
   81a78:	00a002d7 	.word	0x00a002d7
   81a7c:	02d70288 	.word	0x02d70288
   81a80:	02b800a8 	.word	0x02b800a8
   81a84:	01a602d7 	.word	0x01a602d7
   81a88:	01ab01ab 	.word	0x01ab01ab
   81a8c:	01ab01ab 	.word	0x01ab01ab
   81a90:	01ab01ab 	.word	0x01ab01ab
   81a94:	01ab01ab 	.word	0x01ab01ab
   81a98:	02d701ab 	.word	0x02d701ab
   81a9c:	02d702d7 	.word	0x02d702d7
   81aa0:	02d702d7 	.word	0x02d702d7
   81aa4:	02d702d7 	.word	0x02d702d7
   81aa8:	02d702d7 	.word	0x02d702d7
   81aac:	01b902d7 	.word	0x01b902d7
   81ab0:	02d702d7 	.word	0x02d702d7
   81ab4:	02d702d7 	.word	0x02d702d7
   81ab8:	02d702d7 	.word	0x02d702d7
   81abc:	02d702d7 	.word	0x02d702d7
   81ac0:	02d702d7 	.word	0x02d702d7
   81ac4:	02d7019e 	.word	0x02d7019e
   81ac8:	02d702d7 	.word	0x02d702d7
   81acc:	02d702d7 	.word	0x02d702d7
   81ad0:	02d701a2 	.word	0x02d701a2
   81ad4:	025a02d7 	.word	0x025a02d7
   81ad8:	02d702d7 	.word	0x02d702d7
   81adc:	02d702d7 	.word	0x02d702d7
   81ae0:	02d702d7 	.word	0x02d702d7
   81ae4:	02d702d7 	.word	0x02d702d7
   81ae8:	02d702d7 	.word	0x02d702d7
   81aec:	02220261 	.word	0x02220261
   81af0:	02d702d7 	.word	0x02d702d7
   81af4:	027602d7 	.word	0x027602d7
   81af8:	02d70222 	.word	0x02d70222
   81afc:	027b02d7 	.word	0x027b02d7
   81b00:	01fc02d7 	.word	0x01fc02d7
   81b04:	02100189 	.word	0x02100189
   81b08:	02d702d2 	.word	0x02d702d2
   81b0c:	02d70295 	.word	0x02d70295
   81b10:	02d700ad 	.word	0x02d700ad
   81b14:	023502d7 	.word	0x023502d7
   81b18:	f109 0908 	add.w	r9, r9, #8
   81b1c:	9b03      	ldr	r3, [sp, #12]
   81b1e:	442b      	add	r3, r5
   81b20:	9303      	str	r3, [sp, #12]
   81b22:	e786      	b.n	81a32 <_vfiprintf_r+0xc2>
   81b24:	4659      	mov	r1, fp
   81b26:	9806      	ldr	r0, [sp, #24]
   81b28:	f000 fdaa 	bl	82680 <__swsetup_r>
   81b2c:	bb18      	cbnz	r0, 81b76 <_vfiprintf_r+0x206>
   81b2e:	f8bb 100c 	ldrh.w	r1, [fp, #12]
   81b32:	f001 031a 	and.w	r3, r1, #26
   81b36:	2b0a      	cmp	r3, #10
   81b38:	f47f af4b 	bne.w	819d2 <_vfiprintf_r+0x62>
   81b3c:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
   81b40:	2b00      	cmp	r3, #0
   81b42:	f6ff af46 	blt.w	819d2 <_vfiprintf_r+0x62>
   81b46:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   81b4a:	07db      	lsls	r3, r3, #31
   81b4c:	d405      	bmi.n	81b5a <_vfiprintf_r+0x1ea>
   81b4e:	058f      	lsls	r7, r1, #22
   81b50:	d403      	bmi.n	81b5a <_vfiprintf_r+0x1ea>
   81b52:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   81b56:	f001 fabd 	bl	830d4 <__retarget_lock_release_recursive>
   81b5a:	462b      	mov	r3, r5
   81b5c:	4642      	mov	r2, r8
   81b5e:	4659      	mov	r1, fp
   81b60:	9806      	ldr	r0, [sp, #24]
   81b62:	f000 fd49 	bl	825f8 <__sbprintf>
   81b66:	9003      	str	r0, [sp, #12]
   81b68:	9803      	ldr	r0, [sp, #12]
   81b6a:	b02d      	add	sp, #180	; 0xb4
   81b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81b70:	f000 feee 	bl	82950 <__sinit>
   81b74:	e709      	b.n	8198a <_vfiprintf_r+0x1a>
   81b76:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   81b7a:	07d9      	lsls	r1, r3, #31
   81b7c:	d404      	bmi.n	81b88 <_vfiprintf_r+0x218>
   81b7e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   81b82:	059a      	lsls	r2, r3, #22
   81b84:	f140 84ae 	bpl.w	824e4 <_vfiprintf_r+0xb74>
   81b88:	f04f 33ff 	mov.w	r3, #4294967295
   81b8c:	9303      	str	r3, [sp, #12]
   81b8e:	9803      	ldr	r0, [sp, #12]
   81b90:	b02d      	add	sp, #180	; 0xb4
   81b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81b96:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   81b9a:	f001 fa99 	bl	830d0 <__retarget_lock_acquire_recursive>
   81b9e:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
   81ba2:	b281      	uxth	r1, r0
   81ba4:	e6fb      	b.n	8199e <_vfiprintf_r+0x2e>
   81ba6:	9907      	ldr	r1, [sp, #28]
   81ba8:	460a      	mov	r2, r1
   81baa:	680d      	ldr	r5, [r1, #0]
   81bac:	3204      	adds	r2, #4
   81bae:	2d00      	cmp	r5, #0
   81bb0:	9207      	str	r2, [sp, #28]
   81bb2:	da02      	bge.n	81bba <_vfiprintf_r+0x24a>
   81bb4:	426d      	negs	r5, r5
   81bb6:	f043 0304 	orr.w	r3, r3, #4
   81bba:	f898 2000 	ldrb.w	r2, [r8]
   81bbe:	e749      	b.n	81a54 <_vfiprintf_r+0xe4>
   81bc0:	9508      	str	r5, [sp, #32]
   81bc2:	069e      	lsls	r6, r3, #26
   81bc4:	f100 845a 	bmi.w	8247c <_vfiprintf_r+0xb0c>
   81bc8:	9907      	ldr	r1, [sp, #28]
   81bca:	06dd      	lsls	r5, r3, #27
   81bcc:	460a      	mov	r2, r1
   81bce:	f100 83ef 	bmi.w	823b0 <_vfiprintf_r+0xa40>
   81bd2:	0658      	lsls	r0, r3, #25
   81bd4:	f140 83ec 	bpl.w	823b0 <_vfiprintf_r+0xa40>
   81bd8:	2700      	movs	r7, #0
   81bda:	2201      	movs	r2, #1
   81bdc:	880e      	ldrh	r6, [r1, #0]
   81bde:	3104      	adds	r1, #4
   81be0:	9107      	str	r1, [sp, #28]
   81be2:	f04f 0100 	mov.w	r1, #0
   81be6:	2500      	movs	r5, #0
   81be8:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
   81bec:	1c61      	adds	r1, r4, #1
   81bee:	f000 8117 	beq.w	81e20 <_vfiprintf_r+0x4b0>
   81bf2:	f023 0180 	bic.w	r1, r3, #128	; 0x80
   81bf6:	9102      	str	r1, [sp, #8]
   81bf8:	ea56 0107 	orrs.w	r1, r6, r7
   81bfc:	f040 8115 	bne.w	81e2a <_vfiprintf_r+0x4ba>
   81c00:	2c00      	cmp	r4, #0
   81c02:	f040 835b 	bne.w	822bc <_vfiprintf_r+0x94c>
   81c06:	2a00      	cmp	r2, #0
   81c08:	f040 83b6 	bne.w	82378 <_vfiprintf_r+0xa08>
   81c0c:	f013 0301 	ands.w	r3, r3, #1
   81c10:	9305      	str	r3, [sp, #20]
   81c12:	f000 8455 	beq.w	824c0 <_vfiprintf_r+0xb50>
   81c16:	2330      	movs	r3, #48	; 0x30
   81c18:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
   81c1c:	f80b 3d41 	strb.w	r3, [fp, #-65]!
   81c20:	9b05      	ldr	r3, [sp, #20]
   81c22:	42a3      	cmp	r3, r4
   81c24:	bfb8      	it	lt
   81c26:	4623      	movlt	r3, r4
   81c28:	9301      	str	r3, [sp, #4]
   81c2a:	b10d      	cbz	r5, 81c30 <_vfiprintf_r+0x2c0>
   81c2c:	3301      	adds	r3, #1
   81c2e:	9301      	str	r3, [sp, #4]
   81c30:	9b02      	ldr	r3, [sp, #8]
   81c32:	f013 0302 	ands.w	r3, r3, #2
   81c36:	9309      	str	r3, [sp, #36]	; 0x24
   81c38:	d002      	beq.n	81c40 <_vfiprintf_r+0x2d0>
   81c3a:	9b01      	ldr	r3, [sp, #4]
   81c3c:	3302      	adds	r3, #2
   81c3e:	9301      	str	r3, [sp, #4]
   81c40:	9b02      	ldr	r3, [sp, #8]
   81c42:	f013 0384 	ands.w	r3, r3, #132	; 0x84
   81c46:	930a      	str	r3, [sp, #40]	; 0x28
   81c48:	f040 8215 	bne.w	82076 <_vfiprintf_r+0x706>
   81c4c:	9b08      	ldr	r3, [sp, #32]
   81c4e:	9a01      	ldr	r2, [sp, #4]
   81c50:	1a9d      	subs	r5, r3, r2
   81c52:	2d00      	cmp	r5, #0
   81c54:	f340 820f 	ble.w	82076 <_vfiprintf_r+0x706>
   81c58:	2d10      	cmp	r5, #16
   81c5a:	f340 8484 	ble.w	82566 <_vfiprintf_r+0xbf6>
   81c5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81c60:	46ce      	mov	lr, r9
   81c62:	2710      	movs	r7, #16
   81c64:	46a1      	mov	r9, r4
   81c66:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81c68:	4ec5      	ldr	r6, [pc, #788]	; (81f80 <_vfiprintf_r+0x610>)
   81c6a:	4619      	mov	r1, r3
   81c6c:	9c06      	ldr	r4, [sp, #24]
   81c6e:	e007      	b.n	81c80 <_vfiprintf_r+0x310>
   81c70:	f101 0c02 	add.w	ip, r1, #2
   81c74:	4601      	mov	r1, r0
   81c76:	f10e 0e08 	add.w	lr, lr, #8
   81c7a:	3d10      	subs	r5, #16
   81c7c:	2d10      	cmp	r5, #16
   81c7e:	dd11      	ble.n	81ca4 <_vfiprintf_r+0x334>
   81c80:	1c48      	adds	r0, r1, #1
   81c82:	3210      	adds	r2, #16
   81c84:	2807      	cmp	r0, #7
   81c86:	9211      	str	r2, [sp, #68]	; 0x44
   81c88:	e88e 00c0 	stmia.w	lr, {r6, r7}
   81c8c:	9010      	str	r0, [sp, #64]	; 0x40
   81c8e:	ddef      	ble.n	81c70 <_vfiprintf_r+0x300>
   81c90:	2a00      	cmp	r2, #0
   81c92:	f040 81d9 	bne.w	82048 <_vfiprintf_r+0x6d8>
   81c96:	3d10      	subs	r5, #16
   81c98:	2d10      	cmp	r5, #16
   81c9a:	4611      	mov	r1, r2
   81c9c:	f04f 0c01 	mov.w	ip, #1
   81ca0:	46d6      	mov	lr, sl
   81ca2:	dced      	bgt.n	81c80 <_vfiprintf_r+0x310>
   81ca4:	464c      	mov	r4, r9
   81ca6:	4661      	mov	r1, ip
   81ca8:	46f1      	mov	r9, lr
   81caa:	442a      	add	r2, r5
   81cac:	2907      	cmp	r1, #7
   81cae:	9211      	str	r2, [sp, #68]	; 0x44
   81cb0:	f8c9 6000 	str.w	r6, [r9]
   81cb4:	f8c9 5004 	str.w	r5, [r9, #4]
   81cb8:	9110      	str	r1, [sp, #64]	; 0x40
   81cba:	f300 82eb 	bgt.w	82294 <_vfiprintf_r+0x924>
   81cbe:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81cc2:	f109 0908 	add.w	r9, r9, #8
   81cc6:	1c48      	adds	r0, r1, #1
   81cc8:	2d00      	cmp	r5, #0
   81cca:	f040 81dc 	bne.w	82086 <_vfiprintf_r+0x716>
   81cce:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81cd0:	2b00      	cmp	r3, #0
   81cd2:	f000 81f6 	beq.w	820c2 <_vfiprintf_r+0x752>
   81cd6:	2102      	movs	r1, #2
   81cd8:	ab0e      	add	r3, sp, #56	; 0x38
   81cda:	440a      	add	r2, r1
   81cdc:	2807      	cmp	r0, #7
   81cde:	9211      	str	r2, [sp, #68]	; 0x44
   81ce0:	9010      	str	r0, [sp, #64]	; 0x40
   81ce2:	f8c9 1004 	str.w	r1, [r9, #4]
   81ce6:	f8c9 3000 	str.w	r3, [r9]
   81cea:	f340 81e6 	ble.w	820ba <_vfiprintf_r+0x74a>
   81cee:	2a00      	cmp	r2, #0
   81cf0:	f040 8395 	bne.w	8241e <_vfiprintf_r+0xaae>
   81cf4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81cf6:	2001      	movs	r0, #1
   81cf8:	2b80      	cmp	r3, #128	; 0x80
   81cfa:	4611      	mov	r1, r2
   81cfc:	46d1      	mov	r9, sl
   81cfe:	f040 81e4 	bne.w	820ca <_vfiprintf_r+0x75a>
   81d02:	9b08      	ldr	r3, [sp, #32]
   81d04:	9d01      	ldr	r5, [sp, #4]
   81d06:	1b5e      	subs	r6, r3, r5
   81d08:	2e00      	cmp	r6, #0
   81d0a:	f340 81de 	ble.w	820ca <_vfiprintf_r+0x75a>
   81d0e:	2e10      	cmp	r6, #16
   81d10:	f340 843c 	ble.w	8258c <_vfiprintf_r+0xc1c>
   81d14:	46cc      	mov	ip, r9
   81d16:	2710      	movs	r7, #16
   81d18:	46a1      	mov	r9, r4
   81d1a:	4d9a      	ldr	r5, [pc, #616]	; (81f84 <_vfiprintf_r+0x614>)
   81d1c:	9c06      	ldr	r4, [sp, #24]
   81d1e:	e007      	b.n	81d30 <_vfiprintf_r+0x3c0>
   81d20:	f101 0e02 	add.w	lr, r1, #2
   81d24:	4601      	mov	r1, r0
   81d26:	f10c 0c08 	add.w	ip, ip, #8
   81d2a:	3e10      	subs	r6, #16
   81d2c:	2e10      	cmp	r6, #16
   81d2e:	dd11      	ble.n	81d54 <_vfiprintf_r+0x3e4>
   81d30:	1c48      	adds	r0, r1, #1
   81d32:	3210      	adds	r2, #16
   81d34:	2807      	cmp	r0, #7
   81d36:	9211      	str	r2, [sp, #68]	; 0x44
   81d38:	e88c 00a0 	stmia.w	ip, {r5, r7}
   81d3c:	9010      	str	r0, [sp, #64]	; 0x40
   81d3e:	ddef      	ble.n	81d20 <_vfiprintf_r+0x3b0>
   81d40:	2a00      	cmp	r2, #0
   81d42:	f040 829b 	bne.w	8227c <_vfiprintf_r+0x90c>
   81d46:	3e10      	subs	r6, #16
   81d48:	2e10      	cmp	r6, #16
   81d4a:	f04f 0e01 	mov.w	lr, #1
   81d4e:	4611      	mov	r1, r2
   81d50:	46d4      	mov	ip, sl
   81d52:	dced      	bgt.n	81d30 <_vfiprintf_r+0x3c0>
   81d54:	464c      	mov	r4, r9
   81d56:	46e1      	mov	r9, ip
   81d58:	4432      	add	r2, r6
   81d5a:	f1be 0f07 	cmp.w	lr, #7
   81d5e:	9211      	str	r2, [sp, #68]	; 0x44
   81d60:	e889 0060 	stmia.w	r9, {r5, r6}
   81d64:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
   81d68:	f300 8366 	bgt.w	82438 <_vfiprintf_r+0xac8>
   81d6c:	f109 0908 	add.w	r9, r9, #8
   81d70:	f10e 0001 	add.w	r0, lr, #1
   81d74:	4671      	mov	r1, lr
   81d76:	e1a8      	b.n	820ca <_vfiprintf_r+0x75a>
   81d78:	9508      	str	r5, [sp, #32]
   81d7a:	f013 0220 	ands.w	r2, r3, #32
   81d7e:	f040 8389 	bne.w	82494 <_vfiprintf_r+0xb24>
   81d82:	f013 0110 	ands.w	r1, r3, #16
   81d86:	f040 8319 	bne.w	823bc <_vfiprintf_r+0xa4c>
   81d8a:	f013 0240 	ands.w	r2, r3, #64	; 0x40
   81d8e:	f000 8315 	beq.w	823bc <_vfiprintf_r+0xa4c>
   81d92:	9807      	ldr	r0, [sp, #28]
   81d94:	460a      	mov	r2, r1
   81d96:	4601      	mov	r1, r0
   81d98:	3104      	adds	r1, #4
   81d9a:	8806      	ldrh	r6, [r0, #0]
   81d9c:	2700      	movs	r7, #0
   81d9e:	9107      	str	r1, [sp, #28]
   81da0:	e71f      	b.n	81be2 <_vfiprintf_r+0x272>
   81da2:	9508      	str	r5, [sp, #32]
   81da4:	f043 0310 	orr.w	r3, r3, #16
   81da8:	e7e7      	b.n	81d7a <_vfiprintf_r+0x40a>
   81daa:	9508      	str	r5, [sp, #32]
   81dac:	f043 0310 	orr.w	r3, r3, #16
   81db0:	e707      	b.n	81bc2 <_vfiprintf_r+0x252>
   81db2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   81db6:	f898 2000 	ldrb.w	r2, [r8]
   81dba:	e64b      	b.n	81a54 <_vfiprintf_r+0xe4>
   81dbc:	2500      	movs	r5, #0
   81dbe:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   81dc2:	f818 2b01 	ldrb.w	r2, [r8], #1
   81dc6:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   81dca:	eb01 0545 	add.w	r5, r1, r5, lsl #1
   81dce:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   81dd2:	2909      	cmp	r1, #9
   81dd4:	d9f5      	bls.n	81dc2 <_vfiprintf_r+0x452>
   81dd6:	e63f      	b.n	81a58 <_vfiprintf_r+0xe8>
   81dd8:	9508      	str	r5, [sp, #32]
   81dda:	2800      	cmp	r0, #0
   81ddc:	f040 8402 	bne.w	825e4 <_vfiprintf_r+0xc74>
   81de0:	f043 0310 	orr.w	r3, r3, #16
   81de4:	069e      	lsls	r6, r3, #26
   81de6:	f100 833d 	bmi.w	82464 <_vfiprintf_r+0xaf4>
   81dea:	9907      	ldr	r1, [sp, #28]
   81dec:	06dd      	lsls	r5, r3, #27
   81dee:	460a      	mov	r2, r1
   81df0:	f100 82f0 	bmi.w	823d4 <_vfiprintf_r+0xa64>
   81df4:	0658      	lsls	r0, r3, #25
   81df6:	f140 82ed 	bpl.w	823d4 <_vfiprintf_r+0xa64>
   81dfa:	f9b1 6000 	ldrsh.w	r6, [r1]
   81dfe:	3204      	adds	r2, #4
   81e00:	17f7      	asrs	r7, r6, #31
   81e02:	4630      	mov	r0, r6
   81e04:	4639      	mov	r1, r7
   81e06:	9207      	str	r2, [sp, #28]
   81e08:	2800      	cmp	r0, #0
   81e0a:	f171 0200 	sbcs.w	r2, r1, #0
   81e0e:	f2c0 835a 	blt.w	824c6 <_vfiprintf_r+0xb56>
   81e12:	1c61      	adds	r1, r4, #1
   81e14:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81e18:	f04f 0201 	mov.w	r2, #1
   81e1c:	f47f aee9 	bne.w	81bf2 <_vfiprintf_r+0x282>
   81e20:	ea56 0107 	orrs.w	r1, r6, r7
   81e24:	f000 824b 	beq.w	822be <_vfiprintf_r+0x94e>
   81e28:	9302      	str	r3, [sp, #8]
   81e2a:	2a01      	cmp	r2, #1
   81e2c:	f000 828a 	beq.w	82344 <_vfiprintf_r+0x9d4>
   81e30:	2a02      	cmp	r2, #2
   81e32:	f040 825a 	bne.w	822ea <_vfiprintf_r+0x97a>
   81e36:	46d3      	mov	fp, sl
   81e38:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81e3a:	0933      	lsrs	r3, r6, #4
   81e3c:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
   81e40:	0939      	lsrs	r1, r7, #4
   81e42:	f006 020f 	and.w	r2, r6, #15
   81e46:	460f      	mov	r7, r1
   81e48:	461e      	mov	r6, r3
   81e4a:	5c83      	ldrb	r3, [r0, r2]
   81e4c:	f80b 3d01 	strb.w	r3, [fp, #-1]!
   81e50:	ea56 0307 	orrs.w	r3, r6, r7
   81e54:	d1f1      	bne.n	81e3a <_vfiprintf_r+0x4ca>
   81e56:	ebaa 030b 	sub.w	r3, sl, fp
   81e5a:	9305      	str	r3, [sp, #20]
   81e5c:	e6e0      	b.n	81c20 <_vfiprintf_r+0x2b0>
   81e5e:	2800      	cmp	r0, #0
   81e60:	f040 83bd 	bne.w	825de <_vfiprintf_r+0xc6e>
   81e64:	0699      	lsls	r1, r3, #26
   81e66:	f100 8359 	bmi.w	8251c <_vfiprintf_r+0xbac>
   81e6a:	06da      	lsls	r2, r3, #27
   81e6c:	f100 80e5 	bmi.w	8203a <_vfiprintf_r+0x6ca>
   81e70:	065b      	lsls	r3, r3, #25
   81e72:	f140 80e2 	bpl.w	8203a <_vfiprintf_r+0x6ca>
   81e76:	9a07      	ldr	r2, [sp, #28]
   81e78:	6813      	ldr	r3, [r2, #0]
   81e7a:	3204      	adds	r2, #4
   81e7c:	9207      	str	r2, [sp, #28]
   81e7e:	f8bd 200c 	ldrh.w	r2, [sp, #12]
   81e82:	801a      	strh	r2, [r3, #0]
   81e84:	e5b1      	b.n	819ea <_vfiprintf_r+0x7a>
   81e86:	2278      	movs	r2, #120	; 0x78
   81e88:	2130      	movs	r1, #48	; 0x30
   81e8a:	9508      	str	r5, [sp, #32]
   81e8c:	9d07      	ldr	r5, [sp, #28]
   81e8e:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
   81e92:	1d2a      	adds	r2, r5, #4
   81e94:	9207      	str	r2, [sp, #28]
   81e96:	4a3c      	ldr	r2, [pc, #240]	; (81f88 <_vfiprintf_r+0x618>)
   81e98:	682e      	ldr	r6, [r5, #0]
   81e9a:	920b      	str	r2, [sp, #44]	; 0x2c
   81e9c:	f043 0302 	orr.w	r3, r3, #2
   81ea0:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
   81ea4:	2700      	movs	r7, #0
   81ea6:	2202      	movs	r2, #2
   81ea8:	e69b      	b.n	81be2 <_vfiprintf_r+0x272>
   81eaa:	9508      	str	r5, [sp, #32]
   81eac:	2800      	cmp	r0, #0
   81eae:	d099      	beq.n	81de4 <_vfiprintf_r+0x474>
   81eb0:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   81eb4:	e796      	b.n	81de4 <_vfiprintf_r+0x474>
   81eb6:	f898 2000 	ldrb.w	r2, [r8]
   81eba:	2e00      	cmp	r6, #0
   81ebc:	f47f adca 	bne.w	81a54 <_vfiprintf_r+0xe4>
   81ec0:	2001      	movs	r0, #1
   81ec2:	2620      	movs	r6, #32
   81ec4:	e5c6      	b.n	81a54 <_vfiprintf_r+0xe4>
   81ec6:	f043 0301 	orr.w	r3, r3, #1
   81eca:	f898 2000 	ldrb.w	r2, [r8]
   81ece:	e5c1      	b.n	81a54 <_vfiprintf_r+0xe4>
   81ed0:	9508      	str	r5, [sp, #32]
   81ed2:	2800      	cmp	r0, #0
   81ed4:	f040 8380 	bne.w	825d8 <_vfiprintf_r+0xc68>
   81ed8:	492b      	ldr	r1, [pc, #172]	; (81f88 <_vfiprintf_r+0x618>)
   81eda:	910b      	str	r1, [sp, #44]	; 0x2c
   81edc:	069f      	lsls	r7, r3, #26
   81ede:	f100 82e5 	bmi.w	824ac <_vfiprintf_r+0xb3c>
   81ee2:	9807      	ldr	r0, [sp, #28]
   81ee4:	06de      	lsls	r6, r3, #27
   81ee6:	4601      	mov	r1, r0
   81ee8:	f100 826f 	bmi.w	823ca <_vfiprintf_r+0xa5a>
   81eec:	065d      	lsls	r5, r3, #25
   81eee:	f140 826c 	bpl.w	823ca <_vfiprintf_r+0xa5a>
   81ef2:	2700      	movs	r7, #0
   81ef4:	3104      	adds	r1, #4
   81ef6:	8806      	ldrh	r6, [r0, #0]
   81ef8:	9107      	str	r1, [sp, #28]
   81efa:	07d8      	lsls	r0, r3, #31
   81efc:	f140 8220 	bpl.w	82340 <_vfiprintf_r+0x9d0>
   81f00:	ea56 0107 	orrs.w	r1, r6, r7
   81f04:	f000 821c 	beq.w	82340 <_vfiprintf_r+0x9d0>
   81f08:	2130      	movs	r1, #48	; 0x30
   81f0a:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
   81f0e:	f043 0302 	orr.w	r3, r3, #2
   81f12:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
   81f16:	2202      	movs	r2, #2
   81f18:	e663      	b.n	81be2 <_vfiprintf_r+0x272>
   81f1a:	9508      	str	r5, [sp, #32]
   81f1c:	2800      	cmp	r0, #0
   81f1e:	f040 8355 	bne.w	825cc <_vfiprintf_r+0xc5c>
   81f22:	491a      	ldr	r1, [pc, #104]	; (81f8c <_vfiprintf_r+0x61c>)
   81f24:	910b      	str	r1, [sp, #44]	; 0x2c
   81f26:	e7d9      	b.n	81edc <_vfiprintf_r+0x56c>
   81f28:	2201      	movs	r2, #1
   81f2a:	9807      	ldr	r0, [sp, #28]
   81f2c:	4611      	mov	r1, r2
   81f2e:	9201      	str	r2, [sp, #4]
   81f30:	6802      	ldr	r2, [r0, #0]
   81f32:	f04f 0400 	mov.w	r4, #0
   81f36:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   81f3a:	4602      	mov	r2, r0
   81f3c:	3204      	adds	r2, #4
   81f3e:	9508      	str	r5, [sp, #32]
   81f40:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
   81f44:	9105      	str	r1, [sp, #20]
   81f46:	9207      	str	r2, [sp, #28]
   81f48:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
   81f4c:	9302      	str	r3, [sp, #8]
   81f4e:	2400      	movs	r4, #0
   81f50:	e66e      	b.n	81c30 <_vfiprintf_r+0x2c0>
   81f52:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81f56:	f898 2000 	ldrb.w	r2, [r8]
   81f5a:	e57b      	b.n	81a54 <_vfiprintf_r+0xe4>
   81f5c:	f898 2000 	ldrb.w	r2, [r8]
   81f60:	2a6c      	cmp	r2, #108	; 0x6c
   81f62:	bf03      	ittte	eq
   81f64:	f898 2001 	ldrbeq.w	r2, [r8, #1]
   81f68:	f043 0320 	orreq.w	r3, r3, #32
   81f6c:	f108 0801 	addeq.w	r8, r8, #1
   81f70:	f043 0310 	orrne.w	r3, r3, #16
   81f74:	e56e      	b.n	81a54 <_vfiprintf_r+0xe4>
   81f76:	f898 2000 	ldrb.w	r2, [r8]
   81f7a:	2001      	movs	r0, #1
   81f7c:	262b      	movs	r6, #43	; 0x2b
   81f7e:	e569      	b.n	81a54 <_vfiprintf_r+0xe4>
   81f80:	00084534 	.word	0x00084534
   81f84:	00084544 	.word	0x00084544
   81f88:	00084518 	.word	0x00084518
   81f8c:	00084504 	.word	0x00084504
   81f90:	f04f 0200 	mov.w	r2, #0
   81f94:	9907      	ldr	r1, [sp, #28]
   81f96:	9508      	str	r5, [sp, #32]
   81f98:	f8d1 b000 	ldr.w	fp, [r1]
   81f9c:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   81fa0:	1d0d      	adds	r5, r1, #4
   81fa2:	f1bb 0f00 	cmp.w	fp, #0
   81fa6:	f000 82e4 	beq.w	82572 <_vfiprintf_r+0xc02>
   81faa:	1c67      	adds	r7, r4, #1
   81fac:	f000 82c3 	beq.w	82536 <_vfiprintf_r+0xbc6>
   81fb0:	4622      	mov	r2, r4
   81fb2:	2100      	movs	r1, #0
   81fb4:	4658      	mov	r0, fp
   81fb6:	9301      	str	r3, [sp, #4]
   81fb8:	f001 fbc6 	bl	83748 <memchr>
   81fbc:	9b01      	ldr	r3, [sp, #4]
   81fbe:	2800      	cmp	r0, #0
   81fc0:	f000 82e8 	beq.w	82594 <_vfiprintf_r+0xc24>
   81fc4:	eba0 020b 	sub.w	r2, r0, fp
   81fc8:	9507      	str	r5, [sp, #28]
   81fca:	9205      	str	r2, [sp, #20]
   81fcc:	9302      	str	r3, [sp, #8]
   81fce:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81fd2:	2400      	movs	r4, #0
   81fd4:	e624      	b.n	81c20 <_vfiprintf_r+0x2b0>
   81fd6:	f898 2000 	ldrb.w	r2, [r8]
   81fda:	f108 0701 	add.w	r7, r8, #1
   81fde:	2a2a      	cmp	r2, #42	; 0x2a
   81fe0:	f000 82e9 	beq.w	825b6 <_vfiprintf_r+0xc46>
   81fe4:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   81fe8:	2909      	cmp	r1, #9
   81fea:	46b8      	mov	r8, r7
   81fec:	f04f 0400 	mov.w	r4, #0
   81ff0:	f63f ad32 	bhi.w	81a58 <_vfiprintf_r+0xe8>
   81ff4:	f818 2b01 	ldrb.w	r2, [r8], #1
   81ff8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   81ffc:	eb01 0444 	add.w	r4, r1, r4, lsl #1
   82000:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   82004:	2909      	cmp	r1, #9
   82006:	d9f5      	bls.n	81ff4 <_vfiprintf_r+0x684>
   82008:	e526      	b.n	81a58 <_vfiprintf_r+0xe8>
   8200a:	f043 0320 	orr.w	r3, r3, #32
   8200e:	f898 2000 	ldrb.w	r2, [r8]
   82012:	e51f      	b.n	81a54 <_vfiprintf_r+0xe4>
   82014:	9508      	str	r5, [sp, #32]
   82016:	2800      	cmp	r0, #0
   82018:	f040 82db 	bne.w	825d2 <_vfiprintf_r+0xc62>
   8201c:	2a00      	cmp	r2, #0
   8201e:	f000 80f1 	beq.w	82204 <_vfiprintf_r+0x894>
   82022:	2101      	movs	r1, #1
   82024:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   82028:	f04f 0200 	mov.w	r2, #0
   8202c:	9101      	str	r1, [sp, #4]
   8202e:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   82032:	9105      	str	r1, [sp, #20]
   82034:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
   82038:	e788      	b.n	81f4c <_vfiprintf_r+0x5dc>
   8203a:	9a07      	ldr	r2, [sp, #28]
   8203c:	6813      	ldr	r3, [r2, #0]
   8203e:	3204      	adds	r2, #4
   82040:	9207      	str	r2, [sp, #28]
   82042:	9a03      	ldr	r2, [sp, #12]
   82044:	601a      	str	r2, [r3, #0]
   82046:	e4d0      	b.n	819ea <_vfiprintf_r+0x7a>
   82048:	aa0f      	add	r2, sp, #60	; 0x3c
   8204a:	9904      	ldr	r1, [sp, #16]
   8204c:	4620      	mov	r0, r4
   8204e:	f7ff fc4f 	bl	818f0 <__sprint_r.part.0>
   82052:	2800      	cmp	r0, #0
   82054:	f040 8143 	bne.w	822de <_vfiprintf_r+0x96e>
   82058:	9910      	ldr	r1, [sp, #64]	; 0x40
   8205a:	46d6      	mov	lr, sl
   8205c:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8205e:	f101 0c01 	add.w	ip, r1, #1
   82062:	e60a      	b.n	81c7a <_vfiprintf_r+0x30a>
   82064:	aa0f      	add	r2, sp, #60	; 0x3c
   82066:	9904      	ldr	r1, [sp, #16]
   82068:	9806      	ldr	r0, [sp, #24]
   8206a:	f7ff fc41 	bl	818f0 <__sprint_r.part.0>
   8206e:	2800      	cmp	r0, #0
   82070:	f040 8135 	bne.w	822de <_vfiprintf_r+0x96e>
   82074:	46d1      	mov	r9, sl
   82076:	9910      	ldr	r1, [sp, #64]	; 0x40
   82078:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   8207c:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8207e:	1c48      	adds	r0, r1, #1
   82080:	2d00      	cmp	r5, #0
   82082:	f43f ae24 	beq.w	81cce <_vfiprintf_r+0x35e>
   82086:	2101      	movs	r1, #1
   82088:	f10d 0537 	add.w	r5, sp, #55	; 0x37
   8208c:	440a      	add	r2, r1
   8208e:	2807      	cmp	r0, #7
   82090:	9211      	str	r2, [sp, #68]	; 0x44
   82092:	9010      	str	r0, [sp, #64]	; 0x40
   82094:	f8c9 1004 	str.w	r1, [r9, #4]
   82098:	f8c9 5000 	str.w	r5, [r9]
   8209c:	f340 8109 	ble.w	822b2 <_vfiprintf_r+0x942>
   820a0:	2a00      	cmp	r2, #0
   820a2:	f040 81af 	bne.w	82404 <_vfiprintf_r+0xa94>
   820a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   820a8:	2b00      	cmp	r3, #0
   820aa:	f43f ae23 	beq.w	81cf4 <_vfiprintf_r+0x384>
   820ae:	2202      	movs	r2, #2
   820b0:	4608      	mov	r0, r1
   820b2:	46d1      	mov	r9, sl
   820b4:	ab0e      	add	r3, sp, #56	; 0x38
   820b6:	921d      	str	r2, [sp, #116]	; 0x74
   820b8:	931c      	str	r3, [sp, #112]	; 0x70
   820ba:	4601      	mov	r1, r0
   820bc:	f109 0908 	add.w	r9, r9, #8
   820c0:	3001      	adds	r0, #1
   820c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   820c4:	2b80      	cmp	r3, #128	; 0x80
   820c6:	f43f ae1c 	beq.w	81d02 <_vfiprintf_r+0x392>
   820ca:	9b05      	ldr	r3, [sp, #20]
   820cc:	1ae4      	subs	r4, r4, r3
   820ce:	2c00      	cmp	r4, #0
   820d0:	dd2f      	ble.n	82132 <_vfiprintf_r+0x7c2>
   820d2:	2c10      	cmp	r4, #16
   820d4:	f340 8220 	ble.w	82518 <_vfiprintf_r+0xba8>
   820d8:	46ce      	mov	lr, r9
   820da:	2610      	movs	r6, #16
   820dc:	4db2      	ldr	r5, [pc, #712]	; (823a8 <_vfiprintf_r+0xa38>)
   820de:	9f06      	ldr	r7, [sp, #24]
   820e0:	f8dd 9010 	ldr.w	r9, [sp, #16]
   820e4:	e006      	b.n	820f4 <_vfiprintf_r+0x784>
   820e6:	1c88      	adds	r0, r1, #2
   820e8:	4619      	mov	r1, r3
   820ea:	f10e 0e08 	add.w	lr, lr, #8
   820ee:	3c10      	subs	r4, #16
   820f0:	2c10      	cmp	r4, #16
   820f2:	dd10      	ble.n	82116 <_vfiprintf_r+0x7a6>
   820f4:	1c4b      	adds	r3, r1, #1
   820f6:	3210      	adds	r2, #16
   820f8:	2b07      	cmp	r3, #7
   820fa:	9211      	str	r2, [sp, #68]	; 0x44
   820fc:	e88e 0060 	stmia.w	lr, {r5, r6}
   82100:	9310      	str	r3, [sp, #64]	; 0x40
   82102:	ddf0      	ble.n	820e6 <_vfiprintf_r+0x776>
   82104:	2a00      	cmp	r2, #0
   82106:	d165      	bne.n	821d4 <_vfiprintf_r+0x864>
   82108:	3c10      	subs	r4, #16
   8210a:	2c10      	cmp	r4, #16
   8210c:	f04f 0001 	mov.w	r0, #1
   82110:	4611      	mov	r1, r2
   82112:	46d6      	mov	lr, sl
   82114:	dcee      	bgt.n	820f4 <_vfiprintf_r+0x784>
   82116:	46f1      	mov	r9, lr
   82118:	4422      	add	r2, r4
   8211a:	2807      	cmp	r0, #7
   8211c:	9211      	str	r2, [sp, #68]	; 0x44
   8211e:	f8c9 5000 	str.w	r5, [r9]
   82122:	f8c9 4004 	str.w	r4, [r9, #4]
   82126:	9010      	str	r0, [sp, #64]	; 0x40
   82128:	f300 8085 	bgt.w	82236 <_vfiprintf_r+0x8c6>
   8212c:	f109 0908 	add.w	r9, r9, #8
   82130:	3001      	adds	r0, #1
   82132:	9905      	ldr	r1, [sp, #20]
   82134:	2807      	cmp	r0, #7
   82136:	440a      	add	r2, r1
   82138:	9211      	str	r2, [sp, #68]	; 0x44
   8213a:	f8c9 b000 	str.w	fp, [r9]
   8213e:	f8c9 1004 	str.w	r1, [r9, #4]
   82142:	9010      	str	r0, [sp, #64]	; 0x40
   82144:	f340 8082 	ble.w	8224c <_vfiprintf_r+0x8dc>
   82148:	2a00      	cmp	r2, #0
   8214a:	f040 8118 	bne.w	8237e <_vfiprintf_r+0xa0e>
   8214e:	9b02      	ldr	r3, [sp, #8]
   82150:	9210      	str	r2, [sp, #64]	; 0x40
   82152:	0758      	lsls	r0, r3, #29
   82154:	d535      	bpl.n	821c2 <_vfiprintf_r+0x852>
   82156:	9b08      	ldr	r3, [sp, #32]
   82158:	9901      	ldr	r1, [sp, #4]
   8215a:	1a5c      	subs	r4, r3, r1
   8215c:	2c00      	cmp	r4, #0
   8215e:	f340 80e7 	ble.w	82330 <_vfiprintf_r+0x9c0>
   82162:	46d1      	mov	r9, sl
   82164:	2c10      	cmp	r4, #16
   82166:	f340 820d 	ble.w	82584 <_vfiprintf_r+0xc14>
   8216a:	2510      	movs	r5, #16
   8216c:	9910      	ldr	r1, [sp, #64]	; 0x40
   8216e:	4e8f      	ldr	r6, [pc, #572]	; (823ac <_vfiprintf_r+0xa3c>)
   82170:	9f06      	ldr	r7, [sp, #24]
   82172:	f8dd b010 	ldr.w	fp, [sp, #16]
   82176:	e006      	b.n	82186 <_vfiprintf_r+0x816>
   82178:	1c88      	adds	r0, r1, #2
   8217a:	4619      	mov	r1, r3
   8217c:	f109 0908 	add.w	r9, r9, #8
   82180:	3c10      	subs	r4, #16
   82182:	2c10      	cmp	r4, #16
   82184:	dd11      	ble.n	821aa <_vfiprintf_r+0x83a>
   82186:	1c4b      	adds	r3, r1, #1
   82188:	3210      	adds	r2, #16
   8218a:	2b07      	cmp	r3, #7
   8218c:	9211      	str	r2, [sp, #68]	; 0x44
   8218e:	f8c9 6000 	str.w	r6, [r9]
   82192:	f8c9 5004 	str.w	r5, [r9, #4]
   82196:	9310      	str	r3, [sp, #64]	; 0x40
   82198:	ddee      	ble.n	82178 <_vfiprintf_r+0x808>
   8219a:	bb42      	cbnz	r2, 821ee <_vfiprintf_r+0x87e>
   8219c:	3c10      	subs	r4, #16
   8219e:	2c10      	cmp	r4, #16
   821a0:	f04f 0001 	mov.w	r0, #1
   821a4:	4611      	mov	r1, r2
   821a6:	46d1      	mov	r9, sl
   821a8:	dced      	bgt.n	82186 <_vfiprintf_r+0x816>
   821aa:	4422      	add	r2, r4
   821ac:	2807      	cmp	r0, #7
   821ae:	9211      	str	r2, [sp, #68]	; 0x44
   821b0:	f8c9 6000 	str.w	r6, [r9]
   821b4:	f8c9 4004 	str.w	r4, [r9, #4]
   821b8:	9010      	str	r0, [sp, #64]	; 0x40
   821ba:	dd51      	ble.n	82260 <_vfiprintf_r+0x8f0>
   821bc:	2a00      	cmp	r2, #0
   821be:	f040 819a 	bne.w	824f6 <_vfiprintf_r+0xb86>
   821c2:	9b03      	ldr	r3, [sp, #12]
   821c4:	9a08      	ldr	r2, [sp, #32]
   821c6:	9901      	ldr	r1, [sp, #4]
   821c8:	428a      	cmp	r2, r1
   821ca:	bfac      	ite	ge
   821cc:	189b      	addge	r3, r3, r2
   821ce:	185b      	addlt	r3, r3, r1
   821d0:	9303      	str	r3, [sp, #12]
   821d2:	e04e      	b.n	82272 <_vfiprintf_r+0x902>
   821d4:	aa0f      	add	r2, sp, #60	; 0x3c
   821d6:	4649      	mov	r1, r9
   821d8:	4638      	mov	r0, r7
   821da:	f7ff fb89 	bl	818f0 <__sprint_r.part.0>
   821de:	2800      	cmp	r0, #0
   821e0:	f040 813e 	bne.w	82460 <_vfiprintf_r+0xaf0>
   821e4:	9910      	ldr	r1, [sp, #64]	; 0x40
   821e6:	46d6      	mov	lr, sl
   821e8:	9a11      	ldr	r2, [sp, #68]	; 0x44
   821ea:	1c48      	adds	r0, r1, #1
   821ec:	e77f      	b.n	820ee <_vfiprintf_r+0x77e>
   821ee:	aa0f      	add	r2, sp, #60	; 0x3c
   821f0:	4659      	mov	r1, fp
   821f2:	4638      	mov	r0, r7
   821f4:	f7ff fb7c 	bl	818f0 <__sprint_r.part.0>
   821f8:	b960      	cbnz	r0, 82214 <_vfiprintf_r+0x8a4>
   821fa:	9910      	ldr	r1, [sp, #64]	; 0x40
   821fc:	46d1      	mov	r9, sl
   821fe:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82200:	1c48      	adds	r0, r1, #1
   82202:	e7bd      	b.n	82180 <_vfiprintf_r+0x810>
   82204:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82206:	f8dd b010 	ldr.w	fp, [sp, #16]
   8220a:	2b00      	cmp	r3, #0
   8220c:	f040 81ca 	bne.w	825a4 <_vfiprintf_r+0xc34>
   82210:	2300      	movs	r3, #0
   82212:	9310      	str	r3, [sp, #64]	; 0x40
   82214:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   82218:	f013 0f01 	tst.w	r3, #1
   8221c:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   82220:	d102      	bne.n	82228 <_vfiprintf_r+0x8b8>
   82222:	059a      	lsls	r2, r3, #22
   82224:	f140 80dd 	bpl.w	823e2 <_vfiprintf_r+0xa72>
   82228:	065b      	lsls	r3, r3, #25
   8222a:	f53f acad 	bmi.w	81b88 <_vfiprintf_r+0x218>
   8222e:	9803      	ldr	r0, [sp, #12]
   82230:	b02d      	add	sp, #180	; 0xb4
   82232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82236:	2a00      	cmp	r2, #0
   82238:	f040 8105 	bne.w	82446 <_vfiprintf_r+0xad6>
   8223c:	2301      	movs	r3, #1
   8223e:	46d1      	mov	r9, sl
   82240:	9a05      	ldr	r2, [sp, #20]
   82242:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
   82246:	921d      	str	r2, [sp, #116]	; 0x74
   82248:	9211      	str	r2, [sp, #68]	; 0x44
   8224a:	9310      	str	r3, [sp, #64]	; 0x40
   8224c:	f109 0908 	add.w	r9, r9, #8
   82250:	9b02      	ldr	r3, [sp, #8]
   82252:	0759      	lsls	r1, r3, #29
   82254:	d504      	bpl.n	82260 <_vfiprintf_r+0x8f0>
   82256:	9b08      	ldr	r3, [sp, #32]
   82258:	9901      	ldr	r1, [sp, #4]
   8225a:	1a5c      	subs	r4, r3, r1
   8225c:	2c00      	cmp	r4, #0
   8225e:	dc81      	bgt.n	82164 <_vfiprintf_r+0x7f4>
   82260:	9b03      	ldr	r3, [sp, #12]
   82262:	9908      	ldr	r1, [sp, #32]
   82264:	9801      	ldr	r0, [sp, #4]
   82266:	4281      	cmp	r1, r0
   82268:	bfac      	ite	ge
   8226a:	185b      	addge	r3, r3, r1
   8226c:	181b      	addlt	r3, r3, r0
   8226e:	9303      	str	r3, [sp, #12]
   82270:	bb72      	cbnz	r2, 822d0 <_vfiprintf_r+0x960>
   82272:	2300      	movs	r3, #0
   82274:	46d1      	mov	r9, sl
   82276:	9310      	str	r3, [sp, #64]	; 0x40
   82278:	f7ff bbb7 	b.w	819ea <_vfiprintf_r+0x7a>
   8227c:	aa0f      	add	r2, sp, #60	; 0x3c
   8227e:	9904      	ldr	r1, [sp, #16]
   82280:	4620      	mov	r0, r4
   82282:	f7ff fb35 	bl	818f0 <__sprint_r.part.0>
   82286:	bb50      	cbnz	r0, 822de <_vfiprintf_r+0x96e>
   82288:	9910      	ldr	r1, [sp, #64]	; 0x40
   8228a:	46d4      	mov	ip, sl
   8228c:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8228e:	f101 0e01 	add.w	lr, r1, #1
   82292:	e54a      	b.n	81d2a <_vfiprintf_r+0x3ba>
   82294:	2a00      	cmp	r2, #0
   82296:	f47f aee5 	bne.w	82064 <_vfiprintf_r+0x6f4>
   8229a:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
   8229e:	2900      	cmp	r1, #0
   822a0:	f000 811a 	beq.w	824d8 <_vfiprintf_r+0xb68>
   822a4:	2201      	movs	r2, #1
   822a6:	46d1      	mov	r9, sl
   822a8:	4610      	mov	r0, r2
   822aa:	f10d 0137 	add.w	r1, sp, #55	; 0x37
   822ae:	921d      	str	r2, [sp, #116]	; 0x74
   822b0:	911c      	str	r1, [sp, #112]	; 0x70
   822b2:	4601      	mov	r1, r0
   822b4:	f109 0908 	add.w	r9, r9, #8
   822b8:	3001      	adds	r0, #1
   822ba:	e508      	b.n	81cce <_vfiprintf_r+0x35e>
   822bc:	9b02      	ldr	r3, [sp, #8]
   822be:	2a01      	cmp	r2, #1
   822c0:	f000 8097 	beq.w	823f2 <_vfiprintf_r+0xa82>
   822c4:	2a02      	cmp	r2, #2
   822c6:	d10d      	bne.n	822e4 <_vfiprintf_r+0x974>
   822c8:	9302      	str	r3, [sp, #8]
   822ca:	2600      	movs	r6, #0
   822cc:	2700      	movs	r7, #0
   822ce:	e5b2      	b.n	81e36 <_vfiprintf_r+0x4c6>
   822d0:	aa0f      	add	r2, sp, #60	; 0x3c
   822d2:	9904      	ldr	r1, [sp, #16]
   822d4:	9806      	ldr	r0, [sp, #24]
   822d6:	f7ff fb0b 	bl	818f0 <__sprint_r.part.0>
   822da:	2800      	cmp	r0, #0
   822dc:	d0c9      	beq.n	82272 <_vfiprintf_r+0x902>
   822de:	f8dd b010 	ldr.w	fp, [sp, #16]
   822e2:	e797      	b.n	82214 <_vfiprintf_r+0x8a4>
   822e4:	2600      	movs	r6, #0
   822e6:	2700      	movs	r7, #0
   822e8:	9302      	str	r3, [sp, #8]
   822ea:	4651      	mov	r1, sl
   822ec:	e000      	b.n	822f0 <_vfiprintf_r+0x980>
   822ee:	4659      	mov	r1, fp
   822f0:	08f2      	lsrs	r2, r6, #3
   822f2:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
   822f6:	08f8      	lsrs	r0, r7, #3
   822f8:	f006 0307 	and.w	r3, r6, #7
   822fc:	4607      	mov	r7, r0
   822fe:	4616      	mov	r6, r2
   82300:	3330      	adds	r3, #48	; 0x30
   82302:	ea56 0207 	orrs.w	r2, r6, r7
   82306:	f801 3c01 	strb.w	r3, [r1, #-1]
   8230a:	f101 3bff 	add.w	fp, r1, #4294967295
   8230e:	d1ee      	bne.n	822ee <_vfiprintf_r+0x97e>
   82310:	9a02      	ldr	r2, [sp, #8]
   82312:	07d6      	lsls	r6, r2, #31
   82314:	f57f ad9f 	bpl.w	81e56 <_vfiprintf_r+0x4e6>
   82318:	2b30      	cmp	r3, #48	; 0x30
   8231a:	f43f ad9c 	beq.w	81e56 <_vfiprintf_r+0x4e6>
   8231e:	2330      	movs	r3, #48	; 0x30
   82320:	3902      	subs	r1, #2
   82322:	f80b 3c01 	strb.w	r3, [fp, #-1]
   82326:	ebaa 0301 	sub.w	r3, sl, r1
   8232a:	9305      	str	r3, [sp, #20]
   8232c:	468b      	mov	fp, r1
   8232e:	e477      	b.n	81c20 <_vfiprintf_r+0x2b0>
   82330:	9b03      	ldr	r3, [sp, #12]
   82332:	9a08      	ldr	r2, [sp, #32]
   82334:	428a      	cmp	r2, r1
   82336:	bfac      	ite	ge
   82338:	189b      	addge	r3, r3, r2
   8233a:	185b      	addlt	r3, r3, r1
   8233c:	9303      	str	r3, [sp, #12]
   8233e:	e798      	b.n	82272 <_vfiprintf_r+0x902>
   82340:	2202      	movs	r2, #2
   82342:	e44e      	b.n	81be2 <_vfiprintf_r+0x272>
   82344:	2f00      	cmp	r7, #0
   82346:	bf08      	it	eq
   82348:	2e0a      	cmpeq	r6, #10
   8234a:	d351      	bcc.n	823f0 <_vfiprintf_r+0xa80>
   8234c:	46d3      	mov	fp, sl
   8234e:	4630      	mov	r0, r6
   82350:	4639      	mov	r1, r7
   82352:	220a      	movs	r2, #10
   82354:	2300      	movs	r3, #0
   82356:	f001 ff29 	bl	841ac <__aeabi_uldivmod>
   8235a:	3230      	adds	r2, #48	; 0x30
   8235c:	f80b 2d01 	strb.w	r2, [fp, #-1]!
   82360:	4630      	mov	r0, r6
   82362:	4639      	mov	r1, r7
   82364:	2300      	movs	r3, #0
   82366:	220a      	movs	r2, #10
   82368:	f001 ff20 	bl	841ac <__aeabi_uldivmod>
   8236c:	4606      	mov	r6, r0
   8236e:	460f      	mov	r7, r1
   82370:	ea56 0307 	orrs.w	r3, r6, r7
   82374:	d1eb      	bne.n	8234e <_vfiprintf_r+0x9de>
   82376:	e56e      	b.n	81e56 <_vfiprintf_r+0x4e6>
   82378:	9405      	str	r4, [sp, #20]
   8237a:	46d3      	mov	fp, sl
   8237c:	e450      	b.n	81c20 <_vfiprintf_r+0x2b0>
   8237e:	aa0f      	add	r2, sp, #60	; 0x3c
   82380:	9904      	ldr	r1, [sp, #16]
   82382:	9806      	ldr	r0, [sp, #24]
   82384:	f7ff fab4 	bl	818f0 <__sprint_r.part.0>
   82388:	2800      	cmp	r0, #0
   8238a:	d1a8      	bne.n	822de <_vfiprintf_r+0x96e>
   8238c:	46d1      	mov	r9, sl
   8238e:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82390:	e75e      	b.n	82250 <_vfiprintf_r+0x8e0>
   82392:	aa0f      	add	r2, sp, #60	; 0x3c
   82394:	9904      	ldr	r1, [sp, #16]
   82396:	9806      	ldr	r0, [sp, #24]
   82398:	f7ff faaa 	bl	818f0 <__sprint_r.part.0>
   8239c:	2800      	cmp	r0, #0
   8239e:	d19e      	bne.n	822de <_vfiprintf_r+0x96e>
   823a0:	46d1      	mov	r9, sl
   823a2:	f7ff bbbb 	b.w	81b1c <_vfiprintf_r+0x1ac>
   823a6:	bf00      	nop
   823a8:	00084544 	.word	0x00084544
   823ac:	00084534 	.word	0x00084534
   823b0:	3104      	adds	r1, #4
   823b2:	6816      	ldr	r6, [r2, #0]
   823b4:	2700      	movs	r7, #0
   823b6:	2201      	movs	r2, #1
   823b8:	9107      	str	r1, [sp, #28]
   823ba:	e412      	b.n	81be2 <_vfiprintf_r+0x272>
   823bc:	9807      	ldr	r0, [sp, #28]
   823be:	2700      	movs	r7, #0
   823c0:	4601      	mov	r1, r0
   823c2:	3104      	adds	r1, #4
   823c4:	6806      	ldr	r6, [r0, #0]
   823c6:	9107      	str	r1, [sp, #28]
   823c8:	e40b      	b.n	81be2 <_vfiprintf_r+0x272>
   823ca:	680e      	ldr	r6, [r1, #0]
   823cc:	3104      	adds	r1, #4
   823ce:	9107      	str	r1, [sp, #28]
   823d0:	2700      	movs	r7, #0
   823d2:	e592      	b.n	81efa <_vfiprintf_r+0x58a>
   823d4:	6816      	ldr	r6, [r2, #0]
   823d6:	3204      	adds	r2, #4
   823d8:	17f7      	asrs	r7, r6, #31
   823da:	9207      	str	r2, [sp, #28]
   823dc:	4630      	mov	r0, r6
   823de:	4639      	mov	r1, r7
   823e0:	e512      	b.n	81e08 <_vfiprintf_r+0x498>
   823e2:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   823e6:	f000 fe75 	bl	830d4 <__retarget_lock_release_recursive>
   823ea:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   823ee:	e71b      	b.n	82228 <_vfiprintf_r+0x8b8>
   823f0:	9b02      	ldr	r3, [sp, #8]
   823f2:	9302      	str	r3, [sp, #8]
   823f4:	2301      	movs	r3, #1
   823f6:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
   823fa:	3630      	adds	r6, #48	; 0x30
   823fc:	f80b 6d41 	strb.w	r6, [fp, #-65]!
   82400:	9305      	str	r3, [sp, #20]
   82402:	e40d      	b.n	81c20 <_vfiprintf_r+0x2b0>
   82404:	aa0f      	add	r2, sp, #60	; 0x3c
   82406:	9904      	ldr	r1, [sp, #16]
   82408:	9806      	ldr	r0, [sp, #24]
   8240a:	f7ff fa71 	bl	818f0 <__sprint_r.part.0>
   8240e:	2800      	cmp	r0, #0
   82410:	f47f af65 	bne.w	822de <_vfiprintf_r+0x96e>
   82414:	9910      	ldr	r1, [sp, #64]	; 0x40
   82416:	46d1      	mov	r9, sl
   82418:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8241a:	1c48      	adds	r0, r1, #1
   8241c:	e457      	b.n	81cce <_vfiprintf_r+0x35e>
   8241e:	aa0f      	add	r2, sp, #60	; 0x3c
   82420:	9904      	ldr	r1, [sp, #16]
   82422:	9806      	ldr	r0, [sp, #24]
   82424:	f7ff fa64 	bl	818f0 <__sprint_r.part.0>
   82428:	2800      	cmp	r0, #0
   8242a:	f47f af58 	bne.w	822de <_vfiprintf_r+0x96e>
   8242e:	9910      	ldr	r1, [sp, #64]	; 0x40
   82430:	46d1      	mov	r9, sl
   82432:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82434:	1c48      	adds	r0, r1, #1
   82436:	e644      	b.n	820c2 <_vfiprintf_r+0x752>
   82438:	2a00      	cmp	r2, #0
   8243a:	f040 8087 	bne.w	8254c <_vfiprintf_r+0xbdc>
   8243e:	2001      	movs	r0, #1
   82440:	4611      	mov	r1, r2
   82442:	46d1      	mov	r9, sl
   82444:	e641      	b.n	820ca <_vfiprintf_r+0x75a>
   82446:	aa0f      	add	r2, sp, #60	; 0x3c
   82448:	9904      	ldr	r1, [sp, #16]
   8244a:	9806      	ldr	r0, [sp, #24]
   8244c:	f7ff fa50 	bl	818f0 <__sprint_r.part.0>
   82450:	2800      	cmp	r0, #0
   82452:	f47f af44 	bne.w	822de <_vfiprintf_r+0x96e>
   82456:	9810      	ldr	r0, [sp, #64]	; 0x40
   82458:	46d1      	mov	r9, sl
   8245a:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8245c:	3001      	adds	r0, #1
   8245e:	e668      	b.n	82132 <_vfiprintf_r+0x7c2>
   82460:	46cb      	mov	fp, r9
   82462:	e6d7      	b.n	82214 <_vfiprintf_r+0x8a4>
   82464:	9d07      	ldr	r5, [sp, #28]
   82466:	3507      	adds	r5, #7
   82468:	f025 0507 	bic.w	r5, r5, #7
   8246c:	f105 0208 	add.w	r2, r5, #8
   82470:	e9d5 0100 	ldrd	r0, r1, [r5]
   82474:	9207      	str	r2, [sp, #28]
   82476:	4606      	mov	r6, r0
   82478:	460f      	mov	r7, r1
   8247a:	e4c5      	b.n	81e08 <_vfiprintf_r+0x498>
   8247c:	9d07      	ldr	r5, [sp, #28]
   8247e:	3507      	adds	r5, #7
   82480:	f025 0207 	bic.w	r2, r5, #7
   82484:	f102 0108 	add.w	r1, r2, #8
   82488:	e9d2 6700 	ldrd	r6, r7, [r2]
   8248c:	9107      	str	r1, [sp, #28]
   8248e:	2201      	movs	r2, #1
   82490:	f7ff bba7 	b.w	81be2 <_vfiprintf_r+0x272>
   82494:	9d07      	ldr	r5, [sp, #28]
   82496:	3507      	adds	r5, #7
   82498:	f025 0207 	bic.w	r2, r5, #7
   8249c:	f102 0108 	add.w	r1, r2, #8
   824a0:	e9d2 6700 	ldrd	r6, r7, [r2]
   824a4:	9107      	str	r1, [sp, #28]
   824a6:	2200      	movs	r2, #0
   824a8:	f7ff bb9b 	b.w	81be2 <_vfiprintf_r+0x272>
   824ac:	9d07      	ldr	r5, [sp, #28]
   824ae:	3507      	adds	r5, #7
   824b0:	f025 0107 	bic.w	r1, r5, #7
   824b4:	f101 0008 	add.w	r0, r1, #8
   824b8:	9007      	str	r0, [sp, #28]
   824ba:	e9d1 6700 	ldrd	r6, r7, [r1]
   824be:	e51c      	b.n	81efa <_vfiprintf_r+0x58a>
   824c0:	46d3      	mov	fp, sl
   824c2:	f7ff bbad 	b.w	81c20 <_vfiprintf_r+0x2b0>
   824c6:	252d      	movs	r5, #45	; 0x2d
   824c8:	4276      	negs	r6, r6
   824ca:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
   824ce:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
   824d2:	2201      	movs	r2, #1
   824d4:	f7ff bb8a 	b.w	81bec <_vfiprintf_r+0x27c>
   824d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   824da:	b9b3      	cbnz	r3, 8250a <_vfiprintf_r+0xb9a>
   824dc:	4611      	mov	r1, r2
   824de:	2001      	movs	r0, #1
   824e0:	46d1      	mov	r9, sl
   824e2:	e5f2      	b.n	820ca <_vfiprintf_r+0x75a>
   824e4:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   824e8:	f000 fdf4 	bl	830d4 <__retarget_lock_release_recursive>
   824ec:	f04f 33ff 	mov.w	r3, #4294967295
   824f0:	9303      	str	r3, [sp, #12]
   824f2:	f7ff bb4c 	b.w	81b8e <_vfiprintf_r+0x21e>
   824f6:	aa0f      	add	r2, sp, #60	; 0x3c
   824f8:	9904      	ldr	r1, [sp, #16]
   824fa:	9806      	ldr	r0, [sp, #24]
   824fc:	f7ff f9f8 	bl	818f0 <__sprint_r.part.0>
   82500:	2800      	cmp	r0, #0
   82502:	f47f aeec 	bne.w	822de <_vfiprintf_r+0x96e>
   82506:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82508:	e6aa      	b.n	82260 <_vfiprintf_r+0x8f0>
   8250a:	2202      	movs	r2, #2
   8250c:	ab0e      	add	r3, sp, #56	; 0x38
   8250e:	921d      	str	r2, [sp, #116]	; 0x74
   82510:	931c      	str	r3, [sp, #112]	; 0x70
   82512:	2001      	movs	r0, #1
   82514:	46d1      	mov	r9, sl
   82516:	e5d0      	b.n	820ba <_vfiprintf_r+0x74a>
   82518:	4d34      	ldr	r5, [pc, #208]	; (825ec <_vfiprintf_r+0xc7c>)
   8251a:	e5fd      	b.n	82118 <_vfiprintf_r+0x7a8>
   8251c:	9a07      	ldr	r2, [sp, #28]
   8251e:	4613      	mov	r3, r2
   82520:	3304      	adds	r3, #4
   82522:	9307      	str	r3, [sp, #28]
   82524:	9b03      	ldr	r3, [sp, #12]
   82526:	6811      	ldr	r1, [r2, #0]
   82528:	17dd      	asrs	r5, r3, #31
   8252a:	461a      	mov	r2, r3
   8252c:	462b      	mov	r3, r5
   8252e:	e9c1 2300 	strd	r2, r3, [r1]
   82532:	f7ff ba5a 	b.w	819ea <_vfiprintf_r+0x7a>
   82536:	4658      	mov	r0, fp
   82538:	9507      	str	r5, [sp, #28]
   8253a:	9302      	str	r3, [sp, #8]
   8253c:	f001 fc3c 	bl	83db8 <strlen>
   82540:	2400      	movs	r4, #0
   82542:	9005      	str	r0, [sp, #20]
   82544:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   82548:	f7ff bb6a 	b.w	81c20 <_vfiprintf_r+0x2b0>
   8254c:	aa0f      	add	r2, sp, #60	; 0x3c
   8254e:	9904      	ldr	r1, [sp, #16]
   82550:	9806      	ldr	r0, [sp, #24]
   82552:	f7ff f9cd 	bl	818f0 <__sprint_r.part.0>
   82556:	2800      	cmp	r0, #0
   82558:	f47f aec1 	bne.w	822de <_vfiprintf_r+0x96e>
   8255c:	9910      	ldr	r1, [sp, #64]	; 0x40
   8255e:	46d1      	mov	r9, sl
   82560:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82562:	1c48      	adds	r0, r1, #1
   82564:	e5b1      	b.n	820ca <_vfiprintf_r+0x75a>
   82566:	9910      	ldr	r1, [sp, #64]	; 0x40
   82568:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8256a:	3101      	adds	r1, #1
   8256c:	4e20      	ldr	r6, [pc, #128]	; (825f0 <_vfiprintf_r+0xc80>)
   8256e:	f7ff bb9c 	b.w	81caa <_vfiprintf_r+0x33a>
   82572:	2c06      	cmp	r4, #6
   82574:	bf28      	it	cs
   82576:	2406      	movcs	r4, #6
   82578:	9507      	str	r5, [sp, #28]
   8257a:	9405      	str	r4, [sp, #20]
   8257c:	9401      	str	r4, [sp, #4]
   8257e:	f8df b074 	ldr.w	fp, [pc, #116]	; 825f4 <_vfiprintf_r+0xc84>
   82582:	e4e3      	b.n	81f4c <_vfiprintf_r+0x5dc>
   82584:	9810      	ldr	r0, [sp, #64]	; 0x40
   82586:	4e1a      	ldr	r6, [pc, #104]	; (825f0 <_vfiprintf_r+0xc80>)
   82588:	3001      	adds	r0, #1
   8258a:	e60e      	b.n	821aa <_vfiprintf_r+0x83a>
   8258c:	4686      	mov	lr, r0
   8258e:	4d17      	ldr	r5, [pc, #92]	; (825ec <_vfiprintf_r+0xc7c>)
   82590:	f7ff bbe2 	b.w	81d58 <_vfiprintf_r+0x3e8>
   82594:	9405      	str	r4, [sp, #20]
   82596:	9507      	str	r5, [sp, #28]
   82598:	9302      	str	r3, [sp, #8]
   8259a:	4604      	mov	r4, r0
   8259c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   825a0:	f7ff bb3e 	b.w	81c20 <_vfiprintf_r+0x2b0>
   825a4:	9806      	ldr	r0, [sp, #24]
   825a6:	aa0f      	add	r2, sp, #60	; 0x3c
   825a8:	4659      	mov	r1, fp
   825aa:	f7ff f9a1 	bl	818f0 <__sprint_r.part.0>
   825ae:	2800      	cmp	r0, #0
   825b0:	f43f ae2e 	beq.w	82210 <_vfiprintf_r+0x8a0>
   825b4:	e62e      	b.n	82214 <_vfiprintf_r+0x8a4>
   825b6:	9907      	ldr	r1, [sp, #28]
   825b8:	f898 2001 	ldrb.w	r2, [r8, #1]
   825bc:	680c      	ldr	r4, [r1, #0]
   825be:	3104      	adds	r1, #4
   825c0:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
   825c4:	46b8      	mov	r8, r7
   825c6:	9107      	str	r1, [sp, #28]
   825c8:	f7ff ba44 	b.w	81a54 <_vfiprintf_r+0xe4>
   825cc:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   825d0:	e4a7      	b.n	81f22 <_vfiprintf_r+0x5b2>
   825d2:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   825d6:	e521      	b.n	8201c <_vfiprintf_r+0x6ac>
   825d8:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   825dc:	e47c      	b.n	81ed8 <_vfiprintf_r+0x568>
   825de:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   825e2:	e43f      	b.n	81e64 <_vfiprintf_r+0x4f4>
   825e4:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   825e8:	f7ff bbfa 	b.w	81de0 <_vfiprintf_r+0x470>
   825ec:	00084544 	.word	0x00084544
   825f0:	00084534 	.word	0x00084534
   825f4:	0008452c 	.word	0x0008452c

000825f8 <__sbprintf>:
   825f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   825fc:	460c      	mov	r4, r1
   825fe:	f04f 0e00 	mov.w	lr, #0
   82602:	f44f 6580 	mov.w	r5, #1024	; 0x400
   82606:	4606      	mov	r6, r0
   82608:	4617      	mov	r7, r2
   8260a:	4698      	mov	r8, r3
   8260c:	6e62      	ldr	r2, [r4, #100]	; 0x64
   8260e:	89e3      	ldrh	r3, [r4, #14]
   82610:	8989      	ldrh	r1, [r1, #12]
   82612:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
   82616:	f021 0102 	bic.w	r1, r1, #2
   8261a:	9219      	str	r2, [sp, #100]	; 0x64
   8261c:	f8ad 300e 	strh.w	r3, [sp, #14]
   82620:	69e2      	ldr	r2, [r4, #28]
   82622:	6a63      	ldr	r3, [r4, #36]	; 0x24
   82624:	f8ad 100c 	strh.w	r1, [sp, #12]
   82628:	a816      	add	r0, sp, #88	; 0x58
   8262a:	a91a      	add	r1, sp, #104	; 0x68
   8262c:	f8cd e018 	str.w	lr, [sp, #24]
   82630:	9207      	str	r2, [sp, #28]
   82632:	9309      	str	r3, [sp, #36]	; 0x24
   82634:	9100      	str	r1, [sp, #0]
   82636:	9104      	str	r1, [sp, #16]
   82638:	9502      	str	r5, [sp, #8]
   8263a:	9505      	str	r5, [sp, #20]
   8263c:	f000 fd44 	bl	830c8 <__retarget_lock_init_recursive>
   82640:	4643      	mov	r3, r8
   82642:	463a      	mov	r2, r7
   82644:	4669      	mov	r1, sp
   82646:	4630      	mov	r0, r6
   82648:	f7ff f992 	bl	81970 <_vfiprintf_r>
   8264c:	1e05      	subs	r5, r0, #0
   8264e:	db07      	blt.n	82660 <__sbprintf+0x68>
   82650:	4630      	mov	r0, r6
   82652:	4669      	mov	r1, sp
   82654:	f000 f924 	bl	828a0 <_fflush_r>
   82658:	2800      	cmp	r0, #0
   8265a:	bf18      	it	ne
   8265c:	f04f 35ff 	movne.w	r5, #4294967295
   82660:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   82664:	065b      	lsls	r3, r3, #25
   82666:	d503      	bpl.n	82670 <__sbprintf+0x78>
   82668:	89a3      	ldrh	r3, [r4, #12]
   8266a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8266e:	81a3      	strh	r3, [r4, #12]
   82670:	9816      	ldr	r0, [sp, #88]	; 0x58
   82672:	f000 fd2b 	bl	830cc <__retarget_lock_close_recursive>
   82676:	4628      	mov	r0, r5
   82678:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
   8267c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00082680 <__swsetup_r>:
   82680:	b538      	push	{r3, r4, r5, lr}
   82682:	4b30      	ldr	r3, [pc, #192]	; (82744 <__swsetup_r+0xc4>)
   82684:	4605      	mov	r5, r0
   82686:	6818      	ldr	r0, [r3, #0]
   82688:	460c      	mov	r4, r1
   8268a:	b110      	cbz	r0, 82692 <__swsetup_r+0x12>
   8268c:	6b83      	ldr	r3, [r0, #56]	; 0x38
   8268e:	2b00      	cmp	r3, #0
   82690:	d038      	beq.n	82704 <__swsetup_r+0x84>
   82692:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   82696:	b293      	uxth	r3, r2
   82698:	0718      	lsls	r0, r3, #28
   8269a:	d50c      	bpl.n	826b6 <__swsetup_r+0x36>
   8269c:	6920      	ldr	r0, [r4, #16]
   8269e:	b1a8      	cbz	r0, 826cc <__swsetup_r+0x4c>
   826a0:	f013 0201 	ands.w	r2, r3, #1
   826a4:	d01e      	beq.n	826e4 <__swsetup_r+0x64>
   826a6:	2200      	movs	r2, #0
   826a8:	6963      	ldr	r3, [r4, #20]
   826aa:	60a2      	str	r2, [r4, #8]
   826ac:	425b      	negs	r3, r3
   826ae:	61a3      	str	r3, [r4, #24]
   826b0:	b1f0      	cbz	r0, 826f0 <__swsetup_r+0x70>
   826b2:	2000      	movs	r0, #0
   826b4:	bd38      	pop	{r3, r4, r5, pc}
   826b6:	06d9      	lsls	r1, r3, #27
   826b8:	d53b      	bpl.n	82732 <__swsetup_r+0xb2>
   826ba:	0758      	lsls	r0, r3, #29
   826bc:	d425      	bmi.n	8270a <__swsetup_r+0x8a>
   826be:	6920      	ldr	r0, [r4, #16]
   826c0:	f042 0308 	orr.w	r3, r2, #8
   826c4:	81a3      	strh	r3, [r4, #12]
   826c6:	b29b      	uxth	r3, r3
   826c8:	2800      	cmp	r0, #0
   826ca:	d1e9      	bne.n	826a0 <__swsetup_r+0x20>
   826cc:	f403 7220 	and.w	r2, r3, #640	; 0x280
   826d0:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   826d4:	d0e4      	beq.n	826a0 <__swsetup_r+0x20>
   826d6:	4628      	mov	r0, r5
   826d8:	4621      	mov	r1, r4
   826da:	f000 fd2b 	bl	83134 <__smakebuf_r>
   826de:	89a3      	ldrh	r3, [r4, #12]
   826e0:	6920      	ldr	r0, [r4, #16]
   826e2:	e7dd      	b.n	826a0 <__swsetup_r+0x20>
   826e4:	0799      	lsls	r1, r3, #30
   826e6:	bf58      	it	pl
   826e8:	6962      	ldrpl	r2, [r4, #20]
   826ea:	60a2      	str	r2, [r4, #8]
   826ec:	2800      	cmp	r0, #0
   826ee:	d1e0      	bne.n	826b2 <__swsetup_r+0x32>
   826f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   826f4:	061a      	lsls	r2, r3, #24
   826f6:	d5dd      	bpl.n	826b4 <__swsetup_r+0x34>
   826f8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   826fc:	81a3      	strh	r3, [r4, #12]
   826fe:	f04f 30ff 	mov.w	r0, #4294967295
   82702:	bd38      	pop	{r3, r4, r5, pc}
   82704:	f000 f924 	bl	82950 <__sinit>
   82708:	e7c3      	b.n	82692 <__swsetup_r+0x12>
   8270a:	6b21      	ldr	r1, [r4, #48]	; 0x30
   8270c:	b151      	cbz	r1, 82724 <__swsetup_r+0xa4>
   8270e:	f104 0340 	add.w	r3, r4, #64	; 0x40
   82712:	4299      	cmp	r1, r3
   82714:	d004      	beq.n	82720 <__swsetup_r+0xa0>
   82716:	4628      	mov	r0, r5
   82718:	f000 fa40 	bl	82b9c <_free_r>
   8271c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   82720:	2300      	movs	r3, #0
   82722:	6323      	str	r3, [r4, #48]	; 0x30
   82724:	2300      	movs	r3, #0
   82726:	6920      	ldr	r0, [r4, #16]
   82728:	f022 0224 	bic.w	r2, r2, #36	; 0x24
   8272c:	e884 0009 	stmia.w	r4, {r0, r3}
   82730:	e7c6      	b.n	826c0 <__swsetup_r+0x40>
   82732:	2309      	movs	r3, #9
   82734:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   82738:	602b      	str	r3, [r5, #0]
   8273a:	f04f 30ff 	mov.w	r0, #4294967295
   8273e:	81a2      	strh	r2, [r4, #12]
   82740:	bd38      	pop	{r3, r4, r5, pc}
   82742:	bf00      	nop
   82744:	20070140 	.word	0x20070140

00082748 <register_fini>:
   82748:	4b02      	ldr	r3, [pc, #8]	; (82754 <register_fini+0xc>)
   8274a:	b113      	cbz	r3, 82752 <register_fini+0xa>
   8274c:	4802      	ldr	r0, [pc, #8]	; (82758 <register_fini+0x10>)
   8274e:	f000 b805 	b.w	8275c <atexit>
   82752:	4770      	bx	lr
   82754:	00000000 	.word	0x00000000
   82758:	000829c9 	.word	0x000829c9

0008275c <atexit>:
   8275c:	2300      	movs	r3, #0
   8275e:	4601      	mov	r1, r0
   82760:	461a      	mov	r2, r3
   82762:	4618      	mov	r0, r3
   82764:	f001 bbfa 	b.w	83f5c <__register_exitproc>

00082768 <__sflush_r>:
   82768:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
   8276c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82770:	b29a      	uxth	r2, r3
   82772:	460d      	mov	r5, r1
   82774:	0711      	lsls	r1, r2, #28
   82776:	4680      	mov	r8, r0
   82778:	d43a      	bmi.n	827f0 <__sflush_r+0x88>
   8277a:	686a      	ldr	r2, [r5, #4]
   8277c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   82780:	2a00      	cmp	r2, #0
   82782:	81ab      	strh	r3, [r5, #12]
   82784:	dd70      	ble.n	82868 <__sflush_r+0x100>
   82786:	6aac      	ldr	r4, [r5, #40]	; 0x28
   82788:	2c00      	cmp	r4, #0
   8278a:	d04a      	beq.n	82822 <__sflush_r+0xba>
   8278c:	2200      	movs	r2, #0
   8278e:	b29b      	uxth	r3, r3
   82790:	f8d8 6000 	ldr.w	r6, [r8]
   82794:	f8c8 2000 	str.w	r2, [r8]
   82798:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
   8279c:	d068      	beq.n	82870 <__sflush_r+0x108>
   8279e:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   827a0:	075f      	lsls	r7, r3, #29
   827a2:	d505      	bpl.n	827b0 <__sflush_r+0x48>
   827a4:	6869      	ldr	r1, [r5, #4]
   827a6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   827a8:	1a52      	subs	r2, r2, r1
   827aa:	b10b      	cbz	r3, 827b0 <__sflush_r+0x48>
   827ac:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   827ae:	1ad2      	subs	r2, r2, r3
   827b0:	2300      	movs	r3, #0
   827b2:	69e9      	ldr	r1, [r5, #28]
   827b4:	4640      	mov	r0, r8
   827b6:	47a0      	blx	r4
   827b8:	1c44      	adds	r4, r0, #1
   827ba:	d03d      	beq.n	82838 <__sflush_r+0xd0>
   827bc:	2100      	movs	r1, #0
   827be:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
   827c2:	692a      	ldr	r2, [r5, #16]
   827c4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   827c8:	81ab      	strh	r3, [r5, #12]
   827ca:	04db      	lsls	r3, r3, #19
   827cc:	6069      	str	r1, [r5, #4]
   827ce:	602a      	str	r2, [r5, #0]
   827d0:	d448      	bmi.n	82864 <__sflush_r+0xfc>
   827d2:	6b29      	ldr	r1, [r5, #48]	; 0x30
   827d4:	f8c8 6000 	str.w	r6, [r8]
   827d8:	b319      	cbz	r1, 82822 <__sflush_r+0xba>
   827da:	f105 0340 	add.w	r3, r5, #64	; 0x40
   827de:	4299      	cmp	r1, r3
   827e0:	d002      	beq.n	827e8 <__sflush_r+0x80>
   827e2:	4640      	mov	r0, r8
   827e4:	f000 f9da 	bl	82b9c <_free_r>
   827e8:	2000      	movs	r0, #0
   827ea:	6328      	str	r0, [r5, #48]	; 0x30
   827ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   827f0:	692e      	ldr	r6, [r5, #16]
   827f2:	b1b6      	cbz	r6, 82822 <__sflush_r+0xba>
   827f4:	0791      	lsls	r1, r2, #30
   827f6:	bf18      	it	ne
   827f8:	2300      	movne	r3, #0
   827fa:	682c      	ldr	r4, [r5, #0]
   827fc:	bf08      	it	eq
   827fe:	696b      	ldreq	r3, [r5, #20]
   82800:	602e      	str	r6, [r5, #0]
   82802:	1ba4      	subs	r4, r4, r6
   82804:	60ab      	str	r3, [r5, #8]
   82806:	e00a      	b.n	8281e <__sflush_r+0xb6>
   82808:	4623      	mov	r3, r4
   8280a:	4632      	mov	r2, r6
   8280c:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   8280e:	69e9      	ldr	r1, [r5, #28]
   82810:	4640      	mov	r0, r8
   82812:	47b8      	blx	r7
   82814:	2800      	cmp	r0, #0
   82816:	eba4 0400 	sub.w	r4, r4, r0
   8281a:	4406      	add	r6, r0
   8281c:	dd04      	ble.n	82828 <__sflush_r+0xc0>
   8281e:	2c00      	cmp	r4, #0
   82820:	dcf2      	bgt.n	82808 <__sflush_r+0xa0>
   82822:	2000      	movs	r0, #0
   82824:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82828:	89ab      	ldrh	r3, [r5, #12]
   8282a:	f04f 30ff 	mov.w	r0, #4294967295
   8282e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82832:	81ab      	strh	r3, [r5, #12]
   82834:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82838:	f8d8 4000 	ldr.w	r4, [r8]
   8283c:	2c1d      	cmp	r4, #29
   8283e:	d8f3      	bhi.n	82828 <__sflush_r+0xc0>
   82840:	4b16      	ldr	r3, [pc, #88]	; (8289c <__sflush_r+0x134>)
   82842:	40e3      	lsrs	r3, r4
   82844:	43db      	mvns	r3, r3
   82846:	f013 0301 	ands.w	r3, r3, #1
   8284a:	d1ed      	bne.n	82828 <__sflush_r+0xc0>
   8284c:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
   82850:	6929      	ldr	r1, [r5, #16]
   82852:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   82856:	81aa      	strh	r2, [r5, #12]
   82858:	04d2      	lsls	r2, r2, #19
   8285a:	606b      	str	r3, [r5, #4]
   8285c:	6029      	str	r1, [r5, #0]
   8285e:	d5b8      	bpl.n	827d2 <__sflush_r+0x6a>
   82860:	2c00      	cmp	r4, #0
   82862:	d1b6      	bne.n	827d2 <__sflush_r+0x6a>
   82864:	6528      	str	r0, [r5, #80]	; 0x50
   82866:	e7b4      	b.n	827d2 <__sflush_r+0x6a>
   82868:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   8286a:	2a00      	cmp	r2, #0
   8286c:	dc8b      	bgt.n	82786 <__sflush_r+0x1e>
   8286e:	e7d8      	b.n	82822 <__sflush_r+0xba>
   82870:	2301      	movs	r3, #1
   82872:	69e9      	ldr	r1, [r5, #28]
   82874:	4640      	mov	r0, r8
   82876:	47a0      	blx	r4
   82878:	1c43      	adds	r3, r0, #1
   8287a:	4602      	mov	r2, r0
   8287c:	d002      	beq.n	82884 <__sflush_r+0x11c>
   8287e:	89ab      	ldrh	r3, [r5, #12]
   82880:	6aac      	ldr	r4, [r5, #40]	; 0x28
   82882:	e78d      	b.n	827a0 <__sflush_r+0x38>
   82884:	f8d8 3000 	ldr.w	r3, [r8]
   82888:	2b00      	cmp	r3, #0
   8288a:	d0f8      	beq.n	8287e <__sflush_r+0x116>
   8288c:	2b1d      	cmp	r3, #29
   8288e:	d001      	beq.n	82894 <__sflush_r+0x12c>
   82890:	2b16      	cmp	r3, #22
   82892:	d1c9      	bne.n	82828 <__sflush_r+0xc0>
   82894:	f8c8 6000 	str.w	r6, [r8]
   82898:	e7c3      	b.n	82822 <__sflush_r+0xba>
   8289a:	bf00      	nop
   8289c:	20400001 	.word	0x20400001

000828a0 <_fflush_r>:
   828a0:	b538      	push	{r3, r4, r5, lr}
   828a2:	460d      	mov	r5, r1
   828a4:	4604      	mov	r4, r0
   828a6:	b108      	cbz	r0, 828ac <_fflush_r+0xc>
   828a8:	6b83      	ldr	r3, [r0, #56]	; 0x38
   828aa:	b1bb      	cbz	r3, 828dc <_fflush_r+0x3c>
   828ac:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
   828b0:	b188      	cbz	r0, 828d6 <_fflush_r+0x36>
   828b2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   828b4:	07db      	lsls	r3, r3, #31
   828b6:	d401      	bmi.n	828bc <_fflush_r+0x1c>
   828b8:	0581      	lsls	r1, r0, #22
   828ba:	d517      	bpl.n	828ec <_fflush_r+0x4c>
   828bc:	4620      	mov	r0, r4
   828be:	4629      	mov	r1, r5
   828c0:	f7ff ff52 	bl	82768 <__sflush_r>
   828c4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   828c6:	4604      	mov	r4, r0
   828c8:	07da      	lsls	r2, r3, #31
   828ca:	d402      	bmi.n	828d2 <_fflush_r+0x32>
   828cc:	89ab      	ldrh	r3, [r5, #12]
   828ce:	059b      	lsls	r3, r3, #22
   828d0:	d507      	bpl.n	828e2 <_fflush_r+0x42>
   828d2:	4620      	mov	r0, r4
   828d4:	bd38      	pop	{r3, r4, r5, pc}
   828d6:	4604      	mov	r4, r0
   828d8:	4620      	mov	r0, r4
   828da:	bd38      	pop	{r3, r4, r5, pc}
   828dc:	f000 f838 	bl	82950 <__sinit>
   828e0:	e7e4      	b.n	828ac <_fflush_r+0xc>
   828e2:	6da8      	ldr	r0, [r5, #88]	; 0x58
   828e4:	f000 fbf6 	bl	830d4 <__retarget_lock_release_recursive>
   828e8:	4620      	mov	r0, r4
   828ea:	bd38      	pop	{r3, r4, r5, pc}
   828ec:	6da8      	ldr	r0, [r5, #88]	; 0x58
   828ee:	f000 fbef 	bl	830d0 <__retarget_lock_acquire_recursive>
   828f2:	e7e3      	b.n	828bc <_fflush_r+0x1c>

000828f4 <_cleanup_r>:
   828f4:	4901      	ldr	r1, [pc, #4]	; (828fc <_cleanup_r+0x8>)
   828f6:	f000 bbb1 	b.w	8305c <_fwalk_reent>
   828fa:	bf00      	nop
   828fc:	00084045 	.word	0x00084045

00082900 <std.isra.0>:
   82900:	2300      	movs	r3, #0
   82902:	b510      	push	{r4, lr}
   82904:	4604      	mov	r4, r0
   82906:	8181      	strh	r1, [r0, #12]
   82908:	81c2      	strh	r2, [r0, #14]
   8290a:	6003      	str	r3, [r0, #0]
   8290c:	6043      	str	r3, [r0, #4]
   8290e:	6083      	str	r3, [r0, #8]
   82910:	6643      	str	r3, [r0, #100]	; 0x64
   82912:	6103      	str	r3, [r0, #16]
   82914:	6143      	str	r3, [r0, #20]
   82916:	6183      	str	r3, [r0, #24]
   82918:	4619      	mov	r1, r3
   8291a:	2208      	movs	r2, #8
   8291c:	305c      	adds	r0, #92	; 0x5c
   8291e:	f7fe fec9 	bl	816b4 <memset>
   82922:	4807      	ldr	r0, [pc, #28]	; (82940 <std.isra.0+0x40>)
   82924:	4907      	ldr	r1, [pc, #28]	; (82944 <std.isra.0+0x44>)
   82926:	4a08      	ldr	r2, [pc, #32]	; (82948 <std.isra.0+0x48>)
   82928:	4b08      	ldr	r3, [pc, #32]	; (8294c <std.isra.0+0x4c>)
   8292a:	6220      	str	r0, [r4, #32]
   8292c:	61e4      	str	r4, [r4, #28]
   8292e:	6261      	str	r1, [r4, #36]	; 0x24
   82930:	62a2      	str	r2, [r4, #40]	; 0x28
   82932:	62e3      	str	r3, [r4, #44]	; 0x2c
   82934:	f104 0058 	add.w	r0, r4, #88	; 0x58
   82938:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   8293c:	f000 bbc4 	b.w	830c8 <__retarget_lock_init_recursive>
   82940:	00083d31 	.word	0x00083d31
   82944:	00083d55 	.word	0x00083d55
   82948:	00083d91 	.word	0x00083d91
   8294c:	00083db1 	.word	0x00083db1

00082950 <__sinit>:
   82950:	b510      	push	{r4, lr}
   82952:	4604      	mov	r4, r0
   82954:	4814      	ldr	r0, [pc, #80]	; (829a8 <__sinit+0x58>)
   82956:	f000 fbbb 	bl	830d0 <__retarget_lock_acquire_recursive>
   8295a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   8295c:	b9fa      	cbnz	r2, 8299e <__sinit+0x4e>
   8295e:	2003      	movs	r0, #3
   82960:	4912      	ldr	r1, [pc, #72]	; (829ac <__sinit+0x5c>)
   82962:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
   82966:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
   8296a:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
   8296e:	f8c4 02e4 	str.w	r0, [r4, #740]	; 0x2e4
   82972:	63e1      	str	r1, [r4, #60]	; 0x3c
   82974:	6860      	ldr	r0, [r4, #4]
   82976:	2104      	movs	r1, #4
   82978:	f7ff ffc2 	bl	82900 <std.isra.0>
   8297c:	68a0      	ldr	r0, [r4, #8]
   8297e:	2201      	movs	r2, #1
   82980:	2109      	movs	r1, #9
   82982:	f7ff ffbd 	bl	82900 <std.isra.0>
   82986:	68e0      	ldr	r0, [r4, #12]
   82988:	2202      	movs	r2, #2
   8298a:	2112      	movs	r1, #18
   8298c:	f7ff ffb8 	bl	82900 <std.isra.0>
   82990:	2301      	movs	r3, #1
   82992:	4805      	ldr	r0, [pc, #20]	; (829a8 <__sinit+0x58>)
   82994:	63a3      	str	r3, [r4, #56]	; 0x38
   82996:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   8299a:	f000 bb9b 	b.w	830d4 <__retarget_lock_release_recursive>
   8299e:	4802      	ldr	r0, [pc, #8]	; (829a8 <__sinit+0x58>)
   829a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   829a4:	f000 bb96 	b.w	830d4 <__retarget_lock_release_recursive>
   829a8:	20070c6c 	.word	0x20070c6c
   829ac:	000828f5 	.word	0x000828f5

000829b0 <__sfp_lock_acquire>:
   829b0:	4801      	ldr	r0, [pc, #4]	; (829b8 <__sfp_lock_acquire+0x8>)
   829b2:	f000 bb8d 	b.w	830d0 <__retarget_lock_acquire_recursive>
   829b6:	bf00      	nop
   829b8:	20070c80 	.word	0x20070c80

000829bc <__sfp_lock_release>:
   829bc:	4801      	ldr	r0, [pc, #4]	; (829c4 <__sfp_lock_release+0x8>)
   829be:	f000 bb89 	b.w	830d4 <__retarget_lock_release_recursive>
   829c2:	bf00      	nop
   829c4:	20070c80 	.word	0x20070c80

000829c8 <__libc_fini_array>:
   829c8:	b538      	push	{r3, r4, r5, lr}
   829ca:	4c0a      	ldr	r4, [pc, #40]	; (829f4 <__libc_fini_array+0x2c>)
   829cc:	4d0a      	ldr	r5, [pc, #40]	; (829f8 <__libc_fini_array+0x30>)
   829ce:	1b64      	subs	r4, r4, r5
   829d0:	10a4      	asrs	r4, r4, #2
   829d2:	d00a      	beq.n	829ea <__libc_fini_array+0x22>
   829d4:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   829d8:	3b01      	subs	r3, #1
   829da:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   829de:	3c01      	subs	r4, #1
   829e0:	f855 3904 	ldr.w	r3, [r5], #-4
   829e4:	4798      	blx	r3
   829e6:	2c00      	cmp	r4, #0
   829e8:	d1f9      	bne.n	829de <__libc_fini_array+0x16>
   829ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   829ee:	f001 be45 	b.w	8467c <_fini>
   829f2:	bf00      	nop
   829f4:	0008468c 	.word	0x0008468c
   829f8:	00084688 	.word	0x00084688

000829fc <__fputwc>:
   829fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   82a00:	b083      	sub	sp, #12
   82a02:	4607      	mov	r7, r0
   82a04:	4688      	mov	r8, r1
   82a06:	4614      	mov	r4, r2
   82a08:	f000 fb50 	bl	830ac <__locale_mb_cur_max>
   82a0c:	2801      	cmp	r0, #1
   82a0e:	d033      	beq.n	82a78 <__fputwc+0x7c>
   82a10:	4642      	mov	r2, r8
   82a12:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   82a16:	a901      	add	r1, sp, #4
   82a18:	4638      	mov	r0, r7
   82a1a:	f001 fa53 	bl	83ec4 <_wcrtomb_r>
   82a1e:	1c42      	adds	r2, r0, #1
   82a20:	4606      	mov	r6, r0
   82a22:	d022      	beq.n	82a6a <__fputwc+0x6e>
   82a24:	b390      	cbz	r0, 82a8c <__fputwc+0x90>
   82a26:	f89d 1004 	ldrb.w	r1, [sp, #4]
   82a2a:	2500      	movs	r5, #0
   82a2c:	f10d 0904 	add.w	r9, sp, #4
   82a30:	e008      	b.n	82a44 <__fputwc+0x48>
   82a32:	6823      	ldr	r3, [r4, #0]
   82a34:	1c5a      	adds	r2, r3, #1
   82a36:	6022      	str	r2, [r4, #0]
   82a38:	7019      	strb	r1, [r3, #0]
   82a3a:	3501      	adds	r5, #1
   82a3c:	42b5      	cmp	r5, r6
   82a3e:	d225      	bcs.n	82a8c <__fputwc+0x90>
   82a40:	f815 1009 	ldrb.w	r1, [r5, r9]
   82a44:	68a3      	ldr	r3, [r4, #8]
   82a46:	3b01      	subs	r3, #1
   82a48:	2b00      	cmp	r3, #0
   82a4a:	60a3      	str	r3, [r4, #8]
   82a4c:	daf1      	bge.n	82a32 <__fputwc+0x36>
   82a4e:	69a2      	ldr	r2, [r4, #24]
   82a50:	4293      	cmp	r3, r2
   82a52:	db01      	blt.n	82a58 <__fputwc+0x5c>
   82a54:	290a      	cmp	r1, #10
   82a56:	d1ec      	bne.n	82a32 <__fputwc+0x36>
   82a58:	4622      	mov	r2, r4
   82a5a:	4638      	mov	r0, r7
   82a5c:	f001 f9da 	bl	83e14 <__swbuf_r>
   82a60:	1c43      	adds	r3, r0, #1
   82a62:	d1ea      	bne.n	82a3a <__fputwc+0x3e>
   82a64:	b003      	add	sp, #12
   82a66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   82a6a:	89a3      	ldrh	r3, [r4, #12]
   82a6c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82a70:	81a3      	strh	r3, [r4, #12]
   82a72:	b003      	add	sp, #12
   82a74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   82a78:	f108 33ff 	add.w	r3, r8, #4294967295
   82a7c:	2bfe      	cmp	r3, #254	; 0xfe
   82a7e:	d8c7      	bhi.n	82a10 <__fputwc+0x14>
   82a80:	fa5f f188 	uxtb.w	r1, r8
   82a84:	4606      	mov	r6, r0
   82a86:	f88d 1004 	strb.w	r1, [sp, #4]
   82a8a:	e7ce      	b.n	82a2a <__fputwc+0x2e>
   82a8c:	4640      	mov	r0, r8
   82a8e:	b003      	add	sp, #12
   82a90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00082a94 <_fputwc_r>:
   82a94:	b530      	push	{r4, r5, lr}
   82a96:	6e53      	ldr	r3, [r2, #100]	; 0x64
   82a98:	4614      	mov	r4, r2
   82a9a:	f013 0f01 	tst.w	r3, #1
   82a9e:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   82aa2:	b083      	sub	sp, #12
   82aa4:	4605      	mov	r5, r0
   82aa6:	b29a      	uxth	r2, r3
   82aa8:	d101      	bne.n	82aae <_fputwc_r+0x1a>
   82aaa:	0590      	lsls	r0, r2, #22
   82aac:	d51c      	bpl.n	82ae8 <_fputwc_r+0x54>
   82aae:	0490      	lsls	r0, r2, #18
   82ab0:	d406      	bmi.n	82ac0 <_fputwc_r+0x2c>
   82ab2:	6e62      	ldr	r2, [r4, #100]	; 0x64
   82ab4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   82ab8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   82abc:	81a3      	strh	r3, [r4, #12]
   82abe:	6662      	str	r2, [r4, #100]	; 0x64
   82ac0:	4628      	mov	r0, r5
   82ac2:	4622      	mov	r2, r4
   82ac4:	f7ff ff9a 	bl	829fc <__fputwc>
   82ac8:	6e63      	ldr	r3, [r4, #100]	; 0x64
   82aca:	4605      	mov	r5, r0
   82acc:	07da      	lsls	r2, r3, #31
   82ace:	d402      	bmi.n	82ad6 <_fputwc_r+0x42>
   82ad0:	89a3      	ldrh	r3, [r4, #12]
   82ad2:	059b      	lsls	r3, r3, #22
   82ad4:	d502      	bpl.n	82adc <_fputwc_r+0x48>
   82ad6:	4628      	mov	r0, r5
   82ad8:	b003      	add	sp, #12
   82ada:	bd30      	pop	{r4, r5, pc}
   82adc:	6da0      	ldr	r0, [r4, #88]	; 0x58
   82ade:	f000 faf9 	bl	830d4 <__retarget_lock_release_recursive>
   82ae2:	4628      	mov	r0, r5
   82ae4:	b003      	add	sp, #12
   82ae6:	bd30      	pop	{r4, r5, pc}
   82ae8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   82aea:	9101      	str	r1, [sp, #4]
   82aec:	f000 faf0 	bl	830d0 <__retarget_lock_acquire_recursive>
   82af0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82af4:	9901      	ldr	r1, [sp, #4]
   82af6:	b29a      	uxth	r2, r3
   82af8:	e7d9      	b.n	82aae <_fputwc_r+0x1a>
   82afa:	bf00      	nop

00082afc <_malloc_trim_r>:
   82afc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82afe:	460c      	mov	r4, r1
   82b00:	4f23      	ldr	r7, [pc, #140]	; (82b90 <_malloc_trim_r+0x94>)
   82b02:	4606      	mov	r6, r0
   82b04:	f000 ff40 	bl	83988 <__malloc_lock>
   82b08:	68bb      	ldr	r3, [r7, #8]
   82b0a:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   82b0e:	685d      	ldr	r5, [r3, #4]
   82b10:	310f      	adds	r1, #15
   82b12:	f025 0503 	bic.w	r5, r5, #3
   82b16:	4429      	add	r1, r5
   82b18:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   82b1c:	f021 010f 	bic.w	r1, r1, #15
   82b20:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   82b24:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   82b28:	db07      	blt.n	82b3a <_malloc_trim_r+0x3e>
   82b2a:	2100      	movs	r1, #0
   82b2c:	4630      	mov	r0, r6
   82b2e:	f001 f8ed 	bl	83d0c <_sbrk_r>
   82b32:	68bb      	ldr	r3, [r7, #8]
   82b34:	442b      	add	r3, r5
   82b36:	4298      	cmp	r0, r3
   82b38:	d004      	beq.n	82b44 <_malloc_trim_r+0x48>
   82b3a:	4630      	mov	r0, r6
   82b3c:	f000 ff2a 	bl	83994 <__malloc_unlock>
   82b40:	2000      	movs	r0, #0
   82b42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82b44:	4261      	negs	r1, r4
   82b46:	4630      	mov	r0, r6
   82b48:	f001 f8e0 	bl	83d0c <_sbrk_r>
   82b4c:	3001      	adds	r0, #1
   82b4e:	d00d      	beq.n	82b6c <_malloc_trim_r+0x70>
   82b50:	4b10      	ldr	r3, [pc, #64]	; (82b94 <_malloc_trim_r+0x98>)
   82b52:	68ba      	ldr	r2, [r7, #8]
   82b54:	6819      	ldr	r1, [r3, #0]
   82b56:	1b2d      	subs	r5, r5, r4
   82b58:	f045 0501 	orr.w	r5, r5, #1
   82b5c:	4630      	mov	r0, r6
   82b5e:	1b09      	subs	r1, r1, r4
   82b60:	6055      	str	r5, [r2, #4]
   82b62:	6019      	str	r1, [r3, #0]
   82b64:	f000 ff16 	bl	83994 <__malloc_unlock>
   82b68:	2001      	movs	r0, #1
   82b6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82b6c:	2100      	movs	r1, #0
   82b6e:	4630      	mov	r0, r6
   82b70:	f001 f8cc 	bl	83d0c <_sbrk_r>
   82b74:	68ba      	ldr	r2, [r7, #8]
   82b76:	1a83      	subs	r3, r0, r2
   82b78:	2b0f      	cmp	r3, #15
   82b7a:	ddde      	ble.n	82b3a <_malloc_trim_r+0x3e>
   82b7c:	4c06      	ldr	r4, [pc, #24]	; (82b98 <_malloc_trim_r+0x9c>)
   82b7e:	4905      	ldr	r1, [pc, #20]	; (82b94 <_malloc_trim_r+0x98>)
   82b80:	6824      	ldr	r4, [r4, #0]
   82b82:	f043 0301 	orr.w	r3, r3, #1
   82b86:	1b00      	subs	r0, r0, r4
   82b88:	6053      	str	r3, [r2, #4]
   82b8a:	6008      	str	r0, [r1, #0]
   82b8c:	e7d5      	b.n	82b3a <_malloc_trim_r+0x3e>
   82b8e:	bf00      	nop
   82b90:	200706e0 	.word	0x200706e0
   82b94:	20070c20 	.word	0x20070c20
   82b98:	20070ae8 	.word	0x20070ae8

00082b9c <_free_r>:
   82b9c:	2900      	cmp	r1, #0
   82b9e:	d044      	beq.n	82c2a <_free_r+0x8e>
   82ba0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82ba4:	460d      	mov	r5, r1
   82ba6:	4680      	mov	r8, r0
   82ba8:	f000 feee 	bl	83988 <__malloc_lock>
   82bac:	f855 7c04 	ldr.w	r7, [r5, #-4]
   82bb0:	4969      	ldr	r1, [pc, #420]	; (82d58 <_free_r+0x1bc>)
   82bb2:	f1a5 0408 	sub.w	r4, r5, #8
   82bb6:	f027 0301 	bic.w	r3, r7, #1
   82bba:	18e2      	adds	r2, r4, r3
   82bbc:	688e      	ldr	r6, [r1, #8]
   82bbe:	6850      	ldr	r0, [r2, #4]
   82bc0:	42b2      	cmp	r2, r6
   82bc2:	f020 0003 	bic.w	r0, r0, #3
   82bc6:	d05e      	beq.n	82c86 <_free_r+0xea>
   82bc8:	07fe      	lsls	r6, r7, #31
   82bca:	6050      	str	r0, [r2, #4]
   82bcc:	d40b      	bmi.n	82be6 <_free_r+0x4a>
   82bce:	f855 7c08 	ldr.w	r7, [r5, #-8]
   82bd2:	f101 0e08 	add.w	lr, r1, #8
   82bd6:	1be4      	subs	r4, r4, r7
   82bd8:	68a5      	ldr	r5, [r4, #8]
   82bda:	443b      	add	r3, r7
   82bdc:	4575      	cmp	r5, lr
   82bde:	d06d      	beq.n	82cbc <_free_r+0x120>
   82be0:	68e7      	ldr	r7, [r4, #12]
   82be2:	60ef      	str	r7, [r5, #12]
   82be4:	60bd      	str	r5, [r7, #8]
   82be6:	1815      	adds	r5, r2, r0
   82be8:	686d      	ldr	r5, [r5, #4]
   82bea:	07ed      	lsls	r5, r5, #31
   82bec:	d53e      	bpl.n	82c6c <_free_r+0xd0>
   82bee:	f043 0201 	orr.w	r2, r3, #1
   82bf2:	6062      	str	r2, [r4, #4]
   82bf4:	50e3      	str	r3, [r4, r3]
   82bf6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   82bfa:	d217      	bcs.n	82c2c <_free_r+0x90>
   82bfc:	2201      	movs	r2, #1
   82bfe:	08db      	lsrs	r3, r3, #3
   82c00:	1098      	asrs	r0, r3, #2
   82c02:	684d      	ldr	r5, [r1, #4]
   82c04:	4413      	add	r3, r2
   82c06:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   82c0a:	4082      	lsls	r2, r0
   82c0c:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   82c10:	432a      	orrs	r2, r5
   82c12:	3808      	subs	r0, #8
   82c14:	60e0      	str	r0, [r4, #12]
   82c16:	60a7      	str	r7, [r4, #8]
   82c18:	604a      	str	r2, [r1, #4]
   82c1a:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   82c1e:	60fc      	str	r4, [r7, #12]
   82c20:	4640      	mov	r0, r8
   82c22:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   82c26:	f000 beb5 	b.w	83994 <__malloc_unlock>
   82c2a:	4770      	bx	lr
   82c2c:	0a5a      	lsrs	r2, r3, #9
   82c2e:	2a04      	cmp	r2, #4
   82c30:	d852      	bhi.n	82cd8 <_free_r+0x13c>
   82c32:	099a      	lsrs	r2, r3, #6
   82c34:	f102 0739 	add.w	r7, r2, #57	; 0x39
   82c38:	00ff      	lsls	r7, r7, #3
   82c3a:	f102 0538 	add.w	r5, r2, #56	; 0x38
   82c3e:	19c8      	adds	r0, r1, r7
   82c40:	59ca      	ldr	r2, [r1, r7]
   82c42:	3808      	subs	r0, #8
   82c44:	4290      	cmp	r0, r2
   82c46:	d04f      	beq.n	82ce8 <_free_r+0x14c>
   82c48:	6851      	ldr	r1, [r2, #4]
   82c4a:	f021 0103 	bic.w	r1, r1, #3
   82c4e:	428b      	cmp	r3, r1
   82c50:	d232      	bcs.n	82cb8 <_free_r+0x11c>
   82c52:	6892      	ldr	r2, [r2, #8]
   82c54:	4290      	cmp	r0, r2
   82c56:	d1f7      	bne.n	82c48 <_free_r+0xac>
   82c58:	68c3      	ldr	r3, [r0, #12]
   82c5a:	60a0      	str	r0, [r4, #8]
   82c5c:	60e3      	str	r3, [r4, #12]
   82c5e:	609c      	str	r4, [r3, #8]
   82c60:	60c4      	str	r4, [r0, #12]
   82c62:	4640      	mov	r0, r8
   82c64:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   82c68:	f000 be94 	b.w	83994 <__malloc_unlock>
   82c6c:	6895      	ldr	r5, [r2, #8]
   82c6e:	4f3b      	ldr	r7, [pc, #236]	; (82d5c <_free_r+0x1c0>)
   82c70:	4403      	add	r3, r0
   82c72:	42bd      	cmp	r5, r7
   82c74:	d040      	beq.n	82cf8 <_free_r+0x15c>
   82c76:	68d0      	ldr	r0, [r2, #12]
   82c78:	f043 0201 	orr.w	r2, r3, #1
   82c7c:	60e8      	str	r0, [r5, #12]
   82c7e:	6085      	str	r5, [r0, #8]
   82c80:	6062      	str	r2, [r4, #4]
   82c82:	50e3      	str	r3, [r4, r3]
   82c84:	e7b7      	b.n	82bf6 <_free_r+0x5a>
   82c86:	07ff      	lsls	r7, r7, #31
   82c88:	4403      	add	r3, r0
   82c8a:	d407      	bmi.n	82c9c <_free_r+0x100>
   82c8c:	f855 5c08 	ldr.w	r5, [r5, #-8]
   82c90:	1b64      	subs	r4, r4, r5
   82c92:	68e2      	ldr	r2, [r4, #12]
   82c94:	68a0      	ldr	r0, [r4, #8]
   82c96:	442b      	add	r3, r5
   82c98:	60c2      	str	r2, [r0, #12]
   82c9a:	6090      	str	r0, [r2, #8]
   82c9c:	4a30      	ldr	r2, [pc, #192]	; (82d60 <_free_r+0x1c4>)
   82c9e:	f043 0001 	orr.w	r0, r3, #1
   82ca2:	6812      	ldr	r2, [r2, #0]
   82ca4:	6060      	str	r0, [r4, #4]
   82ca6:	4293      	cmp	r3, r2
   82ca8:	608c      	str	r4, [r1, #8]
   82caa:	d3b9      	bcc.n	82c20 <_free_r+0x84>
   82cac:	4b2d      	ldr	r3, [pc, #180]	; (82d64 <_free_r+0x1c8>)
   82cae:	4640      	mov	r0, r8
   82cb0:	6819      	ldr	r1, [r3, #0]
   82cb2:	f7ff ff23 	bl	82afc <_malloc_trim_r>
   82cb6:	e7b3      	b.n	82c20 <_free_r+0x84>
   82cb8:	4610      	mov	r0, r2
   82cba:	e7cd      	b.n	82c58 <_free_r+0xbc>
   82cbc:	1811      	adds	r1, r2, r0
   82cbe:	6849      	ldr	r1, [r1, #4]
   82cc0:	07c9      	lsls	r1, r1, #31
   82cc2:	d444      	bmi.n	82d4e <_free_r+0x1b2>
   82cc4:	6891      	ldr	r1, [r2, #8]
   82cc6:	4403      	add	r3, r0
   82cc8:	68d2      	ldr	r2, [r2, #12]
   82cca:	f043 0001 	orr.w	r0, r3, #1
   82cce:	60ca      	str	r2, [r1, #12]
   82cd0:	6091      	str	r1, [r2, #8]
   82cd2:	6060      	str	r0, [r4, #4]
   82cd4:	50e3      	str	r3, [r4, r3]
   82cd6:	e7a3      	b.n	82c20 <_free_r+0x84>
   82cd8:	2a14      	cmp	r2, #20
   82cda:	d816      	bhi.n	82d0a <_free_r+0x16e>
   82cdc:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   82ce0:	00ff      	lsls	r7, r7, #3
   82ce2:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   82ce6:	e7aa      	b.n	82c3e <_free_r+0xa2>
   82ce8:	2301      	movs	r3, #1
   82cea:	10aa      	asrs	r2, r5, #2
   82cec:	684d      	ldr	r5, [r1, #4]
   82cee:	4093      	lsls	r3, r2
   82cf0:	432b      	orrs	r3, r5
   82cf2:	604b      	str	r3, [r1, #4]
   82cf4:	4603      	mov	r3, r0
   82cf6:	e7b0      	b.n	82c5a <_free_r+0xbe>
   82cf8:	f043 0201 	orr.w	r2, r3, #1
   82cfc:	614c      	str	r4, [r1, #20]
   82cfe:	610c      	str	r4, [r1, #16]
   82d00:	60e5      	str	r5, [r4, #12]
   82d02:	60a5      	str	r5, [r4, #8]
   82d04:	6062      	str	r2, [r4, #4]
   82d06:	50e3      	str	r3, [r4, r3]
   82d08:	e78a      	b.n	82c20 <_free_r+0x84>
   82d0a:	2a54      	cmp	r2, #84	; 0x54
   82d0c:	d806      	bhi.n	82d1c <_free_r+0x180>
   82d0e:	0b1a      	lsrs	r2, r3, #12
   82d10:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   82d14:	00ff      	lsls	r7, r7, #3
   82d16:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   82d1a:	e790      	b.n	82c3e <_free_r+0xa2>
   82d1c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   82d20:	d806      	bhi.n	82d30 <_free_r+0x194>
   82d22:	0bda      	lsrs	r2, r3, #15
   82d24:	f102 0778 	add.w	r7, r2, #120	; 0x78
   82d28:	00ff      	lsls	r7, r7, #3
   82d2a:	f102 0577 	add.w	r5, r2, #119	; 0x77
   82d2e:	e786      	b.n	82c3e <_free_r+0xa2>
   82d30:	f240 5054 	movw	r0, #1364	; 0x554
   82d34:	4282      	cmp	r2, r0
   82d36:	d806      	bhi.n	82d46 <_free_r+0x1aa>
   82d38:	0c9a      	lsrs	r2, r3, #18
   82d3a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   82d3e:	00ff      	lsls	r7, r7, #3
   82d40:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   82d44:	e77b      	b.n	82c3e <_free_r+0xa2>
   82d46:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   82d4a:	257e      	movs	r5, #126	; 0x7e
   82d4c:	e777      	b.n	82c3e <_free_r+0xa2>
   82d4e:	f043 0101 	orr.w	r1, r3, #1
   82d52:	6061      	str	r1, [r4, #4]
   82d54:	6013      	str	r3, [r2, #0]
   82d56:	e763      	b.n	82c20 <_free_r+0x84>
   82d58:	200706e0 	.word	0x200706e0
   82d5c:	200706e8 	.word	0x200706e8
   82d60:	20070aec 	.word	0x20070aec
   82d64:	20070c50 	.word	0x20070c50

00082d68 <__sfvwrite_r>:
   82d68:	6893      	ldr	r3, [r2, #8]
   82d6a:	2b00      	cmp	r3, #0
   82d6c:	d071      	beq.n	82e52 <__sfvwrite_r+0xea>
   82d6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82d72:	898b      	ldrh	r3, [r1, #12]
   82d74:	b083      	sub	sp, #12
   82d76:	460c      	mov	r4, r1
   82d78:	0719      	lsls	r1, r3, #28
   82d7a:	9000      	str	r0, [sp, #0]
   82d7c:	4616      	mov	r6, r2
   82d7e:	d525      	bpl.n	82dcc <__sfvwrite_r+0x64>
   82d80:	6922      	ldr	r2, [r4, #16]
   82d82:	b31a      	cbz	r2, 82dcc <__sfvwrite_r+0x64>
   82d84:	f013 0002 	ands.w	r0, r3, #2
   82d88:	6835      	ldr	r5, [r6, #0]
   82d8a:	d02b      	beq.n	82de4 <__sfvwrite_r+0x7c>
   82d8c:	f04f 0900 	mov.w	r9, #0
   82d90:	46b0      	mov	r8, r6
   82d92:	464f      	mov	r7, r9
   82d94:	f8df a2c0 	ldr.w	sl, [pc, #704]	; 83058 <__sfvwrite_r+0x2f0>
   82d98:	2f00      	cmp	r7, #0
   82d9a:	d055      	beq.n	82e48 <__sfvwrite_r+0xe0>
   82d9c:	4557      	cmp	r7, sl
   82d9e:	463b      	mov	r3, r7
   82da0:	464a      	mov	r2, r9
   82da2:	bf28      	it	cs
   82da4:	4653      	movcs	r3, sl
   82da6:	69e1      	ldr	r1, [r4, #28]
   82da8:	9800      	ldr	r0, [sp, #0]
   82daa:	6a66      	ldr	r6, [r4, #36]	; 0x24
   82dac:	47b0      	blx	r6
   82dae:	2800      	cmp	r0, #0
   82db0:	dd56      	ble.n	82e60 <__sfvwrite_r+0xf8>
   82db2:	f8d8 3008 	ldr.w	r3, [r8, #8]
   82db6:	4481      	add	r9, r0
   82db8:	1a1b      	subs	r3, r3, r0
   82dba:	1a3f      	subs	r7, r7, r0
   82dbc:	f8c8 3008 	str.w	r3, [r8, #8]
   82dc0:	2b00      	cmp	r3, #0
   82dc2:	d1e9      	bne.n	82d98 <__sfvwrite_r+0x30>
   82dc4:	2000      	movs	r0, #0
   82dc6:	b003      	add	sp, #12
   82dc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82dcc:	4621      	mov	r1, r4
   82dce:	9800      	ldr	r0, [sp, #0]
   82dd0:	f7ff fc56 	bl	82680 <__swsetup_r>
   82dd4:	2800      	cmp	r0, #0
   82dd6:	f040 8135 	bne.w	83044 <__sfvwrite_r+0x2dc>
   82dda:	89a3      	ldrh	r3, [r4, #12]
   82ddc:	6835      	ldr	r5, [r6, #0]
   82dde:	f013 0002 	ands.w	r0, r3, #2
   82de2:	d1d3      	bne.n	82d8c <__sfvwrite_r+0x24>
   82de4:	f013 0901 	ands.w	r9, r3, #1
   82de8:	d144      	bne.n	82e74 <__sfvwrite_r+0x10c>
   82dea:	464f      	mov	r7, r9
   82dec:	9601      	str	r6, [sp, #4]
   82dee:	b337      	cbz	r7, 82e3e <__sfvwrite_r+0xd6>
   82df0:	059a      	lsls	r2, r3, #22
   82df2:	f8d4 8008 	ldr.w	r8, [r4, #8]
   82df6:	f140 8085 	bpl.w	82f04 <__sfvwrite_r+0x19c>
   82dfa:	4547      	cmp	r7, r8
   82dfc:	46c3      	mov	fp, r8
   82dfe:	f0c0 80ad 	bcc.w	82f5c <__sfvwrite_r+0x1f4>
   82e02:	f413 6f90 	tst.w	r3, #1152	; 0x480
   82e06:	f040 80ae 	bne.w	82f66 <__sfvwrite_r+0x1fe>
   82e0a:	46ba      	mov	sl, r7
   82e0c:	6820      	ldr	r0, [r4, #0]
   82e0e:	465a      	mov	r2, fp
   82e10:	4649      	mov	r1, r9
   82e12:	f000 fd55 	bl	838c0 <memmove>
   82e16:	68a2      	ldr	r2, [r4, #8]
   82e18:	6823      	ldr	r3, [r4, #0]
   82e1a:	eba2 0208 	sub.w	r2, r2, r8
   82e1e:	445b      	add	r3, fp
   82e20:	60a2      	str	r2, [r4, #8]
   82e22:	6023      	str	r3, [r4, #0]
   82e24:	9a01      	ldr	r2, [sp, #4]
   82e26:	44d1      	add	r9, sl
   82e28:	6893      	ldr	r3, [r2, #8]
   82e2a:	eba7 070a 	sub.w	r7, r7, sl
   82e2e:	eba3 030a 	sub.w	r3, r3, sl
   82e32:	6093      	str	r3, [r2, #8]
   82e34:	2b00      	cmp	r3, #0
   82e36:	d0c5      	beq.n	82dc4 <__sfvwrite_r+0x5c>
   82e38:	89a3      	ldrh	r3, [r4, #12]
   82e3a:	2f00      	cmp	r7, #0
   82e3c:	d1d8      	bne.n	82df0 <__sfvwrite_r+0x88>
   82e3e:	f8d5 9000 	ldr.w	r9, [r5]
   82e42:	686f      	ldr	r7, [r5, #4]
   82e44:	3508      	adds	r5, #8
   82e46:	e7d2      	b.n	82dee <__sfvwrite_r+0x86>
   82e48:	f8d5 9000 	ldr.w	r9, [r5]
   82e4c:	686f      	ldr	r7, [r5, #4]
   82e4e:	3508      	adds	r5, #8
   82e50:	e7a2      	b.n	82d98 <__sfvwrite_r+0x30>
   82e52:	2000      	movs	r0, #0
   82e54:	4770      	bx	lr
   82e56:	4621      	mov	r1, r4
   82e58:	9800      	ldr	r0, [sp, #0]
   82e5a:	f7ff fd21 	bl	828a0 <_fflush_r>
   82e5e:	b378      	cbz	r0, 82ec0 <__sfvwrite_r+0x158>
   82e60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82e64:	f04f 30ff 	mov.w	r0, #4294967295
   82e68:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82e6c:	81a3      	strh	r3, [r4, #12]
   82e6e:	b003      	add	sp, #12
   82e70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82e74:	4681      	mov	r9, r0
   82e76:	4633      	mov	r3, r6
   82e78:	464e      	mov	r6, r9
   82e7a:	46a8      	mov	r8, r5
   82e7c:	469a      	mov	sl, r3
   82e7e:	464d      	mov	r5, r9
   82e80:	b356      	cbz	r6, 82ed8 <__sfvwrite_r+0x170>
   82e82:	2800      	cmp	r0, #0
   82e84:	d032      	beq.n	82eec <__sfvwrite_r+0x184>
   82e86:	45b1      	cmp	r9, r6
   82e88:	46cb      	mov	fp, r9
   82e8a:	bf28      	it	cs
   82e8c:	46b3      	movcs	fp, r6
   82e8e:	6820      	ldr	r0, [r4, #0]
   82e90:	6923      	ldr	r3, [r4, #16]
   82e92:	465f      	mov	r7, fp
   82e94:	4298      	cmp	r0, r3
   82e96:	6962      	ldr	r2, [r4, #20]
   82e98:	d904      	bls.n	82ea4 <__sfvwrite_r+0x13c>
   82e9a:	68a3      	ldr	r3, [r4, #8]
   82e9c:	4413      	add	r3, r2
   82e9e:	459b      	cmp	fp, r3
   82ea0:	f300 80a8 	bgt.w	82ff4 <__sfvwrite_r+0x28c>
   82ea4:	4593      	cmp	fp, r2
   82ea6:	db4d      	blt.n	82f44 <__sfvwrite_r+0x1dc>
   82ea8:	4613      	mov	r3, r2
   82eaa:	6a67      	ldr	r7, [r4, #36]	; 0x24
   82eac:	462a      	mov	r2, r5
   82eae:	69e1      	ldr	r1, [r4, #28]
   82eb0:	9800      	ldr	r0, [sp, #0]
   82eb2:	47b8      	blx	r7
   82eb4:	1e07      	subs	r7, r0, #0
   82eb6:	ddd3      	ble.n	82e60 <__sfvwrite_r+0xf8>
   82eb8:	ebb9 0907 	subs.w	r9, r9, r7
   82ebc:	d0cb      	beq.n	82e56 <__sfvwrite_r+0xee>
   82ebe:	2001      	movs	r0, #1
   82ec0:	f8da 3008 	ldr.w	r3, [sl, #8]
   82ec4:	443d      	add	r5, r7
   82ec6:	1bdb      	subs	r3, r3, r7
   82ec8:	1bf6      	subs	r6, r6, r7
   82eca:	f8ca 3008 	str.w	r3, [sl, #8]
   82ece:	2b00      	cmp	r3, #0
   82ed0:	f43f af78 	beq.w	82dc4 <__sfvwrite_r+0x5c>
   82ed4:	2e00      	cmp	r6, #0
   82ed6:	d1d4      	bne.n	82e82 <__sfvwrite_r+0x11a>
   82ed8:	f108 0308 	add.w	r3, r8, #8
   82edc:	f853 6c04 	ldr.w	r6, [r3, #-4]
   82ee0:	4698      	mov	r8, r3
   82ee2:	f853 5c08 	ldr.w	r5, [r3, #-8]
   82ee6:	3308      	adds	r3, #8
   82ee8:	2e00      	cmp	r6, #0
   82eea:	d0f7      	beq.n	82edc <__sfvwrite_r+0x174>
   82eec:	4632      	mov	r2, r6
   82eee:	210a      	movs	r1, #10
   82ef0:	4628      	mov	r0, r5
   82ef2:	f000 fc29 	bl	83748 <memchr>
   82ef6:	2800      	cmp	r0, #0
   82ef8:	f000 80a1 	beq.w	8303e <__sfvwrite_r+0x2d6>
   82efc:	3001      	adds	r0, #1
   82efe:	eba0 0905 	sub.w	r9, r0, r5
   82f02:	e7c0      	b.n	82e86 <__sfvwrite_r+0x11e>
   82f04:	6820      	ldr	r0, [r4, #0]
   82f06:	6923      	ldr	r3, [r4, #16]
   82f08:	4298      	cmp	r0, r3
   82f0a:	d802      	bhi.n	82f12 <__sfvwrite_r+0x1aa>
   82f0c:	6963      	ldr	r3, [r4, #20]
   82f0e:	429f      	cmp	r7, r3
   82f10:	d25d      	bcs.n	82fce <__sfvwrite_r+0x266>
   82f12:	45b8      	cmp	r8, r7
   82f14:	bf28      	it	cs
   82f16:	46b8      	movcs	r8, r7
   82f18:	4649      	mov	r1, r9
   82f1a:	4642      	mov	r2, r8
   82f1c:	f000 fcd0 	bl	838c0 <memmove>
   82f20:	68a3      	ldr	r3, [r4, #8]
   82f22:	6822      	ldr	r2, [r4, #0]
   82f24:	eba3 0308 	sub.w	r3, r3, r8
   82f28:	4442      	add	r2, r8
   82f2a:	60a3      	str	r3, [r4, #8]
   82f2c:	6022      	str	r2, [r4, #0]
   82f2e:	b10b      	cbz	r3, 82f34 <__sfvwrite_r+0x1cc>
   82f30:	46c2      	mov	sl, r8
   82f32:	e777      	b.n	82e24 <__sfvwrite_r+0xbc>
   82f34:	4621      	mov	r1, r4
   82f36:	9800      	ldr	r0, [sp, #0]
   82f38:	f7ff fcb2 	bl	828a0 <_fflush_r>
   82f3c:	2800      	cmp	r0, #0
   82f3e:	d18f      	bne.n	82e60 <__sfvwrite_r+0xf8>
   82f40:	46c2      	mov	sl, r8
   82f42:	e76f      	b.n	82e24 <__sfvwrite_r+0xbc>
   82f44:	465a      	mov	r2, fp
   82f46:	4629      	mov	r1, r5
   82f48:	f000 fcba 	bl	838c0 <memmove>
   82f4c:	68a2      	ldr	r2, [r4, #8]
   82f4e:	6823      	ldr	r3, [r4, #0]
   82f50:	eba2 020b 	sub.w	r2, r2, fp
   82f54:	445b      	add	r3, fp
   82f56:	60a2      	str	r2, [r4, #8]
   82f58:	6023      	str	r3, [r4, #0]
   82f5a:	e7ad      	b.n	82eb8 <__sfvwrite_r+0x150>
   82f5c:	46b8      	mov	r8, r7
   82f5e:	46ba      	mov	sl, r7
   82f60:	46bb      	mov	fp, r7
   82f62:	6820      	ldr	r0, [r4, #0]
   82f64:	e753      	b.n	82e0e <__sfvwrite_r+0xa6>
   82f66:	6962      	ldr	r2, [r4, #20]
   82f68:	6820      	ldr	r0, [r4, #0]
   82f6a:	6921      	ldr	r1, [r4, #16]
   82f6c:	eb02 0842 	add.w	r8, r2, r2, lsl #1
   82f70:	eba0 0a01 	sub.w	sl, r0, r1
   82f74:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
   82f78:	f10a 0001 	add.w	r0, sl, #1
   82f7c:	ea4f 0868 	mov.w	r8, r8, asr #1
   82f80:	4438      	add	r0, r7
   82f82:	4540      	cmp	r0, r8
   82f84:	4642      	mov	r2, r8
   82f86:	bf84      	itt	hi
   82f88:	4680      	movhi	r8, r0
   82f8a:	4642      	movhi	r2, r8
   82f8c:	055b      	lsls	r3, r3, #21
   82f8e:	d544      	bpl.n	8301a <__sfvwrite_r+0x2b2>
   82f90:	4611      	mov	r1, r2
   82f92:	9800      	ldr	r0, [sp, #0]
   82f94:	f000 f920 	bl	831d8 <_malloc_r>
   82f98:	4683      	mov	fp, r0
   82f9a:	2800      	cmp	r0, #0
   82f9c:	d055      	beq.n	8304a <__sfvwrite_r+0x2e2>
   82f9e:	4652      	mov	r2, sl
   82fa0:	6921      	ldr	r1, [r4, #16]
   82fa2:	f000 fc17 	bl	837d4 <memcpy>
   82fa6:	89a3      	ldrh	r3, [r4, #12]
   82fa8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   82fac:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   82fb0:	81a3      	strh	r3, [r4, #12]
   82fb2:	eb0b 000a 	add.w	r0, fp, sl
   82fb6:	eba8 030a 	sub.w	r3, r8, sl
   82fba:	f8c4 b010 	str.w	fp, [r4, #16]
   82fbe:	f8c4 8014 	str.w	r8, [r4, #20]
   82fc2:	6020      	str	r0, [r4, #0]
   82fc4:	60a3      	str	r3, [r4, #8]
   82fc6:	46b8      	mov	r8, r7
   82fc8:	46ba      	mov	sl, r7
   82fca:	46bb      	mov	fp, r7
   82fcc:	e71f      	b.n	82e0e <__sfvwrite_r+0xa6>
   82fce:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
   82fd2:	42ba      	cmp	r2, r7
   82fd4:	bf28      	it	cs
   82fd6:	463a      	movcs	r2, r7
   82fd8:	fb92 f2f3 	sdiv	r2, r2, r3
   82fdc:	69e1      	ldr	r1, [r4, #28]
   82fde:	fb03 f302 	mul.w	r3, r3, r2
   82fe2:	9800      	ldr	r0, [sp, #0]
   82fe4:	464a      	mov	r2, r9
   82fe6:	6a66      	ldr	r6, [r4, #36]	; 0x24
   82fe8:	47b0      	blx	r6
   82fea:	f1b0 0a00 	subs.w	sl, r0, #0
   82fee:	f73f af19 	bgt.w	82e24 <__sfvwrite_r+0xbc>
   82ff2:	e735      	b.n	82e60 <__sfvwrite_r+0xf8>
   82ff4:	461a      	mov	r2, r3
   82ff6:	4629      	mov	r1, r5
   82ff8:	9301      	str	r3, [sp, #4]
   82ffa:	f000 fc61 	bl	838c0 <memmove>
   82ffe:	6822      	ldr	r2, [r4, #0]
   83000:	9b01      	ldr	r3, [sp, #4]
   83002:	4621      	mov	r1, r4
   83004:	441a      	add	r2, r3
   83006:	6022      	str	r2, [r4, #0]
   83008:	9800      	ldr	r0, [sp, #0]
   8300a:	f7ff fc49 	bl	828a0 <_fflush_r>
   8300e:	9b01      	ldr	r3, [sp, #4]
   83010:	2800      	cmp	r0, #0
   83012:	f47f af25 	bne.w	82e60 <__sfvwrite_r+0xf8>
   83016:	461f      	mov	r7, r3
   83018:	e74e      	b.n	82eb8 <__sfvwrite_r+0x150>
   8301a:	9800      	ldr	r0, [sp, #0]
   8301c:	f000 fcc0 	bl	839a0 <_realloc_r>
   83020:	4683      	mov	fp, r0
   83022:	2800      	cmp	r0, #0
   83024:	d1c5      	bne.n	82fb2 <__sfvwrite_r+0x24a>
   83026:	9d00      	ldr	r5, [sp, #0]
   83028:	6921      	ldr	r1, [r4, #16]
   8302a:	4628      	mov	r0, r5
   8302c:	f7ff fdb6 	bl	82b9c <_free_r>
   83030:	220c      	movs	r2, #12
   83032:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83036:	602a      	str	r2, [r5, #0]
   83038:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   8303c:	e712      	b.n	82e64 <__sfvwrite_r+0xfc>
   8303e:	f106 0901 	add.w	r9, r6, #1
   83042:	e720      	b.n	82e86 <__sfvwrite_r+0x11e>
   83044:	f04f 30ff 	mov.w	r0, #4294967295
   83048:	e6bd      	b.n	82dc6 <__sfvwrite_r+0x5e>
   8304a:	220c      	movs	r2, #12
   8304c:	9900      	ldr	r1, [sp, #0]
   8304e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83052:	600a      	str	r2, [r1, #0]
   83054:	e706      	b.n	82e64 <__sfvwrite_r+0xfc>
   83056:	bf00      	nop
   83058:	7ffffc00 	.word	0x7ffffc00

0008305c <_fwalk_reent>:
   8305c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   83060:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
   83064:	d01e      	beq.n	830a4 <_fwalk_reent+0x48>
   83066:	4688      	mov	r8, r1
   83068:	4607      	mov	r7, r0
   8306a:	f04f 0900 	mov.w	r9, #0
   8306e:	6875      	ldr	r5, [r6, #4]
   83070:	68b4      	ldr	r4, [r6, #8]
   83072:	3d01      	subs	r5, #1
   83074:	d410      	bmi.n	83098 <_fwalk_reent+0x3c>
   83076:	89a3      	ldrh	r3, [r4, #12]
   83078:	3d01      	subs	r5, #1
   8307a:	2b01      	cmp	r3, #1
   8307c:	d908      	bls.n	83090 <_fwalk_reent+0x34>
   8307e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   83082:	3301      	adds	r3, #1
   83084:	d004      	beq.n	83090 <_fwalk_reent+0x34>
   83086:	4621      	mov	r1, r4
   83088:	4638      	mov	r0, r7
   8308a:	47c0      	blx	r8
   8308c:	ea49 0900 	orr.w	r9, r9, r0
   83090:	1c6b      	adds	r3, r5, #1
   83092:	f104 0468 	add.w	r4, r4, #104	; 0x68
   83096:	d1ee      	bne.n	83076 <_fwalk_reent+0x1a>
   83098:	6836      	ldr	r6, [r6, #0]
   8309a:	2e00      	cmp	r6, #0
   8309c:	d1e7      	bne.n	8306e <_fwalk_reent+0x12>
   8309e:	4648      	mov	r0, r9
   830a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   830a4:	46b1      	mov	r9, r6
   830a6:	4648      	mov	r0, r9
   830a8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000830ac <__locale_mb_cur_max>:
   830ac:	4b04      	ldr	r3, [pc, #16]	; (830c0 <__locale_mb_cur_max+0x14>)
   830ae:	4a05      	ldr	r2, [pc, #20]	; (830c4 <__locale_mb_cur_max+0x18>)
   830b0:	681b      	ldr	r3, [r3, #0]
   830b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   830b4:	2b00      	cmp	r3, #0
   830b6:	bf08      	it	eq
   830b8:	4613      	moveq	r3, r2
   830ba:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
   830be:	4770      	bx	lr
   830c0:	20070140 	.word	0x20070140
   830c4:	20070574 	.word	0x20070574

000830c8 <__retarget_lock_init_recursive>:
   830c8:	4770      	bx	lr
   830ca:	bf00      	nop

000830cc <__retarget_lock_close_recursive>:
   830cc:	4770      	bx	lr
   830ce:	bf00      	nop

000830d0 <__retarget_lock_acquire_recursive>:
   830d0:	4770      	bx	lr
   830d2:	bf00      	nop

000830d4 <__retarget_lock_release_recursive>:
   830d4:	4770      	bx	lr
   830d6:	bf00      	nop

000830d8 <__swhatbuf_r>:
   830d8:	b570      	push	{r4, r5, r6, lr}
   830da:	460c      	mov	r4, r1
   830dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   830e0:	b090      	sub	sp, #64	; 0x40
   830e2:	2900      	cmp	r1, #0
   830e4:	4615      	mov	r5, r2
   830e6:	461e      	mov	r6, r3
   830e8:	db14      	blt.n	83114 <__swhatbuf_r+0x3c>
   830ea:	aa01      	add	r2, sp, #4
   830ec:	f001 f80c 	bl	84108 <_fstat_r>
   830f0:	2800      	cmp	r0, #0
   830f2:	db0f      	blt.n	83114 <__swhatbuf_r+0x3c>
   830f4:	9a02      	ldr	r2, [sp, #8]
   830f6:	f44f 6380 	mov.w	r3, #1024	; 0x400
   830fa:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   830fe:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
   83102:	fab2 f282 	clz	r2, r2
   83106:	f44f 6000 	mov.w	r0, #2048	; 0x800
   8310a:	0952      	lsrs	r2, r2, #5
   8310c:	6032      	str	r2, [r6, #0]
   8310e:	602b      	str	r3, [r5, #0]
   83110:	b010      	add	sp, #64	; 0x40
   83112:	bd70      	pop	{r4, r5, r6, pc}
   83114:	2300      	movs	r3, #0
   83116:	89a2      	ldrh	r2, [r4, #12]
   83118:	6033      	str	r3, [r6, #0]
   8311a:	f012 0080 	ands.w	r0, r2, #128	; 0x80
   8311e:	d004      	beq.n	8312a <__swhatbuf_r+0x52>
   83120:	2240      	movs	r2, #64	; 0x40
   83122:	4618      	mov	r0, r3
   83124:	602a      	str	r2, [r5, #0]
   83126:	b010      	add	sp, #64	; 0x40
   83128:	bd70      	pop	{r4, r5, r6, pc}
   8312a:	f44f 6380 	mov.w	r3, #1024	; 0x400
   8312e:	602b      	str	r3, [r5, #0]
   83130:	b010      	add	sp, #64	; 0x40
   83132:	bd70      	pop	{r4, r5, r6, pc}

00083134 <__smakebuf_r>:
   83134:	898a      	ldrh	r2, [r1, #12]
   83136:	460b      	mov	r3, r1
   83138:	0792      	lsls	r2, r2, #30
   8313a:	d506      	bpl.n	8314a <__smakebuf_r+0x16>
   8313c:	2101      	movs	r1, #1
   8313e:	f103 0243 	add.w	r2, r3, #67	; 0x43
   83142:	6159      	str	r1, [r3, #20]
   83144:	601a      	str	r2, [r3, #0]
   83146:	611a      	str	r2, [r3, #16]
   83148:	4770      	bx	lr
   8314a:	b5f0      	push	{r4, r5, r6, r7, lr}
   8314c:	b083      	sub	sp, #12
   8314e:	ab01      	add	r3, sp, #4
   83150:	466a      	mov	r2, sp
   83152:	460c      	mov	r4, r1
   83154:	4606      	mov	r6, r0
   83156:	f7ff ffbf 	bl	830d8 <__swhatbuf_r>
   8315a:	9900      	ldr	r1, [sp, #0]
   8315c:	4605      	mov	r5, r0
   8315e:	4630      	mov	r0, r6
   83160:	f000 f83a 	bl	831d8 <_malloc_r>
   83164:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83168:	b1d8      	cbz	r0, 831a2 <__smakebuf_r+0x6e>
   8316a:	e89d 0006 	ldmia.w	sp, {r1, r2}
   8316e:	4f15      	ldr	r7, [pc, #84]	; (831c4 <__smakebuf_r+0x90>)
   83170:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   83174:	63f7      	str	r7, [r6, #60]	; 0x3c
   83176:	81a3      	strh	r3, [r4, #12]
   83178:	6020      	str	r0, [r4, #0]
   8317a:	6120      	str	r0, [r4, #16]
   8317c:	6161      	str	r1, [r4, #20]
   8317e:	b91a      	cbnz	r2, 83188 <__smakebuf_r+0x54>
   83180:	432b      	orrs	r3, r5
   83182:	81a3      	strh	r3, [r4, #12]
   83184:	b003      	add	sp, #12
   83186:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83188:	4630      	mov	r0, r6
   8318a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   8318e:	f000 ffcf 	bl	84130 <_isatty_r>
   83192:	b1a0      	cbz	r0, 831be <__smakebuf_r+0x8a>
   83194:	89a3      	ldrh	r3, [r4, #12]
   83196:	f023 0303 	bic.w	r3, r3, #3
   8319a:	f043 0301 	orr.w	r3, r3, #1
   8319e:	b21b      	sxth	r3, r3
   831a0:	e7ee      	b.n	83180 <__smakebuf_r+0x4c>
   831a2:	059a      	lsls	r2, r3, #22
   831a4:	d4ee      	bmi.n	83184 <__smakebuf_r+0x50>
   831a6:	2101      	movs	r1, #1
   831a8:	f023 0303 	bic.w	r3, r3, #3
   831ac:	f104 0243 	add.w	r2, r4, #67	; 0x43
   831b0:	f043 0302 	orr.w	r3, r3, #2
   831b4:	81a3      	strh	r3, [r4, #12]
   831b6:	6161      	str	r1, [r4, #20]
   831b8:	6022      	str	r2, [r4, #0]
   831ba:	6122      	str	r2, [r4, #16]
   831bc:	e7e2      	b.n	83184 <__smakebuf_r+0x50>
   831be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   831c2:	e7dd      	b.n	83180 <__smakebuf_r+0x4c>
   831c4:	000828f5 	.word	0x000828f5

000831c8 <malloc>:
   831c8:	4b02      	ldr	r3, [pc, #8]	; (831d4 <malloc+0xc>)
   831ca:	4601      	mov	r1, r0
   831cc:	6818      	ldr	r0, [r3, #0]
   831ce:	f000 b803 	b.w	831d8 <_malloc_r>
   831d2:	bf00      	nop
   831d4:	20070140 	.word	0x20070140

000831d8 <_malloc_r>:
   831d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   831dc:	f101 060b 	add.w	r6, r1, #11
   831e0:	2e16      	cmp	r6, #22
   831e2:	b083      	sub	sp, #12
   831e4:	4605      	mov	r5, r0
   831e6:	f240 809e 	bls.w	83326 <_malloc_r+0x14e>
   831ea:	f036 0607 	bics.w	r6, r6, #7
   831ee:	f100 80bd 	bmi.w	8336c <_malloc_r+0x194>
   831f2:	42b1      	cmp	r1, r6
   831f4:	f200 80ba 	bhi.w	8336c <_malloc_r+0x194>
   831f8:	f000 fbc6 	bl	83988 <__malloc_lock>
   831fc:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   83200:	f0c0 8285 	bcc.w	8370e <_malloc_r+0x536>
   83204:	0a73      	lsrs	r3, r6, #9
   83206:	f000 80b8 	beq.w	8337a <_malloc_r+0x1a2>
   8320a:	2b04      	cmp	r3, #4
   8320c:	f200 816c 	bhi.w	834e8 <_malloc_r+0x310>
   83210:	09b3      	lsrs	r3, r6, #6
   83212:	f103 0039 	add.w	r0, r3, #57	; 0x39
   83216:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   8321a:	00c1      	lsls	r1, r0, #3
   8321c:	4fb8      	ldr	r7, [pc, #736]	; (83500 <_malloc_r+0x328>)
   8321e:	4439      	add	r1, r7
   83220:	684c      	ldr	r4, [r1, #4]
   83222:	3908      	subs	r1, #8
   83224:	42a1      	cmp	r1, r4
   83226:	d106      	bne.n	83236 <_malloc_r+0x5e>
   83228:	e00c      	b.n	83244 <_malloc_r+0x6c>
   8322a:	2a00      	cmp	r2, #0
   8322c:	f280 80ab 	bge.w	83386 <_malloc_r+0x1ae>
   83230:	68e4      	ldr	r4, [r4, #12]
   83232:	42a1      	cmp	r1, r4
   83234:	d006      	beq.n	83244 <_malloc_r+0x6c>
   83236:	6863      	ldr	r3, [r4, #4]
   83238:	f023 0303 	bic.w	r3, r3, #3
   8323c:	1b9a      	subs	r2, r3, r6
   8323e:	2a0f      	cmp	r2, #15
   83240:	ddf3      	ble.n	8322a <_malloc_r+0x52>
   83242:	4670      	mov	r0, lr
   83244:	693c      	ldr	r4, [r7, #16]
   83246:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 83514 <_malloc_r+0x33c>
   8324a:	4574      	cmp	r4, lr
   8324c:	f000 819e 	beq.w	8358c <_malloc_r+0x3b4>
   83250:	6863      	ldr	r3, [r4, #4]
   83252:	f023 0303 	bic.w	r3, r3, #3
   83256:	1b9a      	subs	r2, r3, r6
   83258:	2a0f      	cmp	r2, #15
   8325a:	f300 8183 	bgt.w	83564 <_malloc_r+0x38c>
   8325e:	2a00      	cmp	r2, #0
   83260:	f8c7 e014 	str.w	lr, [r7, #20]
   83264:	f8c7 e010 	str.w	lr, [r7, #16]
   83268:	f280 8091 	bge.w	8338e <_malloc_r+0x1b6>
   8326c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   83270:	f080 8154 	bcs.w	8351c <_malloc_r+0x344>
   83274:	2201      	movs	r2, #1
   83276:	08db      	lsrs	r3, r3, #3
   83278:	6879      	ldr	r1, [r7, #4]
   8327a:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   8327e:	4413      	add	r3, r2
   83280:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   83284:	fa02 f20c 	lsl.w	r2, r2, ip
   83288:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   8328c:	430a      	orrs	r2, r1
   8328e:	f1ac 0108 	sub.w	r1, ip, #8
   83292:	60e1      	str	r1, [r4, #12]
   83294:	f8c4 8008 	str.w	r8, [r4, #8]
   83298:	607a      	str	r2, [r7, #4]
   8329a:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   8329e:	f8c8 400c 	str.w	r4, [r8, #12]
   832a2:	2401      	movs	r4, #1
   832a4:	1083      	asrs	r3, r0, #2
   832a6:	409c      	lsls	r4, r3
   832a8:	4294      	cmp	r4, r2
   832aa:	d87d      	bhi.n	833a8 <_malloc_r+0x1d0>
   832ac:	4214      	tst	r4, r2
   832ae:	d106      	bne.n	832be <_malloc_r+0xe6>
   832b0:	f020 0003 	bic.w	r0, r0, #3
   832b4:	0064      	lsls	r4, r4, #1
   832b6:	4214      	tst	r4, r2
   832b8:	f100 0004 	add.w	r0, r0, #4
   832bc:	d0fa      	beq.n	832b4 <_malloc_r+0xdc>
   832be:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   832c2:	46cc      	mov	ip, r9
   832c4:	4680      	mov	r8, r0
   832c6:	f8dc 300c 	ldr.w	r3, [ip, #12]
   832ca:	459c      	cmp	ip, r3
   832cc:	d107      	bne.n	832de <_malloc_r+0x106>
   832ce:	e15f      	b.n	83590 <_malloc_r+0x3b8>
   832d0:	2a00      	cmp	r2, #0
   832d2:	f280 816d 	bge.w	835b0 <_malloc_r+0x3d8>
   832d6:	68db      	ldr	r3, [r3, #12]
   832d8:	459c      	cmp	ip, r3
   832da:	f000 8159 	beq.w	83590 <_malloc_r+0x3b8>
   832de:	6859      	ldr	r1, [r3, #4]
   832e0:	f021 0103 	bic.w	r1, r1, #3
   832e4:	1b8a      	subs	r2, r1, r6
   832e6:	2a0f      	cmp	r2, #15
   832e8:	ddf2      	ble.n	832d0 <_malloc_r+0xf8>
   832ea:	68dc      	ldr	r4, [r3, #12]
   832ec:	f8d3 c008 	ldr.w	ip, [r3, #8]
   832f0:	f046 0801 	orr.w	r8, r6, #1
   832f4:	4628      	mov	r0, r5
   832f6:	441e      	add	r6, r3
   832f8:	f042 0501 	orr.w	r5, r2, #1
   832fc:	f8c3 8004 	str.w	r8, [r3, #4]
   83300:	f8cc 400c 	str.w	r4, [ip, #12]
   83304:	f8c4 c008 	str.w	ip, [r4, #8]
   83308:	617e      	str	r6, [r7, #20]
   8330a:	613e      	str	r6, [r7, #16]
   8330c:	f8c6 e00c 	str.w	lr, [r6, #12]
   83310:	f8c6 e008 	str.w	lr, [r6, #8]
   83314:	6075      	str	r5, [r6, #4]
   83316:	505a      	str	r2, [r3, r1]
   83318:	9300      	str	r3, [sp, #0]
   8331a:	f000 fb3b 	bl	83994 <__malloc_unlock>
   8331e:	9b00      	ldr	r3, [sp, #0]
   83320:	f103 0408 	add.w	r4, r3, #8
   83324:	e01e      	b.n	83364 <_malloc_r+0x18c>
   83326:	2910      	cmp	r1, #16
   83328:	d820      	bhi.n	8336c <_malloc_r+0x194>
   8332a:	f000 fb2d 	bl	83988 <__malloc_lock>
   8332e:	2610      	movs	r6, #16
   83330:	2318      	movs	r3, #24
   83332:	2002      	movs	r0, #2
   83334:	4f72      	ldr	r7, [pc, #456]	; (83500 <_malloc_r+0x328>)
   83336:	443b      	add	r3, r7
   83338:	685c      	ldr	r4, [r3, #4]
   8333a:	f1a3 0208 	sub.w	r2, r3, #8
   8333e:	4294      	cmp	r4, r2
   83340:	f000 812f 	beq.w	835a2 <_malloc_r+0x3ca>
   83344:	6863      	ldr	r3, [r4, #4]
   83346:	68e1      	ldr	r1, [r4, #12]
   83348:	f023 0303 	bic.w	r3, r3, #3
   8334c:	4423      	add	r3, r4
   8334e:	685a      	ldr	r2, [r3, #4]
   83350:	68a6      	ldr	r6, [r4, #8]
   83352:	f042 0201 	orr.w	r2, r2, #1
   83356:	60f1      	str	r1, [r6, #12]
   83358:	4628      	mov	r0, r5
   8335a:	608e      	str	r6, [r1, #8]
   8335c:	605a      	str	r2, [r3, #4]
   8335e:	f000 fb19 	bl	83994 <__malloc_unlock>
   83362:	3408      	adds	r4, #8
   83364:	4620      	mov	r0, r4
   83366:	b003      	add	sp, #12
   83368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8336c:	2400      	movs	r4, #0
   8336e:	230c      	movs	r3, #12
   83370:	4620      	mov	r0, r4
   83372:	602b      	str	r3, [r5, #0]
   83374:	b003      	add	sp, #12
   83376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8337a:	2040      	movs	r0, #64	; 0x40
   8337c:	f44f 7100 	mov.w	r1, #512	; 0x200
   83380:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   83384:	e74a      	b.n	8321c <_malloc_r+0x44>
   83386:	4423      	add	r3, r4
   83388:	685a      	ldr	r2, [r3, #4]
   8338a:	68e1      	ldr	r1, [r4, #12]
   8338c:	e7e0      	b.n	83350 <_malloc_r+0x178>
   8338e:	4423      	add	r3, r4
   83390:	685a      	ldr	r2, [r3, #4]
   83392:	4628      	mov	r0, r5
   83394:	f042 0201 	orr.w	r2, r2, #1
   83398:	605a      	str	r2, [r3, #4]
   8339a:	3408      	adds	r4, #8
   8339c:	f000 fafa 	bl	83994 <__malloc_unlock>
   833a0:	4620      	mov	r0, r4
   833a2:	b003      	add	sp, #12
   833a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   833a8:	68bc      	ldr	r4, [r7, #8]
   833aa:	6863      	ldr	r3, [r4, #4]
   833ac:	f023 0803 	bic.w	r8, r3, #3
   833b0:	45b0      	cmp	r8, r6
   833b2:	d304      	bcc.n	833be <_malloc_r+0x1e6>
   833b4:	eba8 0306 	sub.w	r3, r8, r6
   833b8:	2b0f      	cmp	r3, #15
   833ba:	f300 8085 	bgt.w	834c8 <_malloc_r+0x2f0>
   833be:	f8df 9158 	ldr.w	r9, [pc, #344]	; 83518 <_malloc_r+0x340>
   833c2:	4b50      	ldr	r3, [pc, #320]	; (83504 <_malloc_r+0x32c>)
   833c4:	f8d9 2000 	ldr.w	r2, [r9]
   833c8:	681b      	ldr	r3, [r3, #0]
   833ca:	3201      	adds	r2, #1
   833cc:	4433      	add	r3, r6
   833ce:	eb04 0a08 	add.w	sl, r4, r8
   833d2:	f000 8154 	beq.w	8367e <_malloc_r+0x4a6>
   833d6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   833da:	330f      	adds	r3, #15
   833dc:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   833e0:	f02b 0b0f 	bic.w	fp, fp, #15
   833e4:	4659      	mov	r1, fp
   833e6:	4628      	mov	r0, r5
   833e8:	f000 fc90 	bl	83d0c <_sbrk_r>
   833ec:	1c41      	adds	r1, r0, #1
   833ee:	4602      	mov	r2, r0
   833f0:	f000 80fb 	beq.w	835ea <_malloc_r+0x412>
   833f4:	4582      	cmp	sl, r0
   833f6:	f200 80f6 	bhi.w	835e6 <_malloc_r+0x40e>
   833fa:	4b43      	ldr	r3, [pc, #268]	; (83508 <_malloc_r+0x330>)
   833fc:	6819      	ldr	r1, [r3, #0]
   833fe:	4459      	add	r1, fp
   83400:	6019      	str	r1, [r3, #0]
   83402:	f000 814c 	beq.w	8369e <_malloc_r+0x4c6>
   83406:	f8d9 0000 	ldr.w	r0, [r9]
   8340a:	3001      	adds	r0, #1
   8340c:	bf1b      	ittet	ne
   8340e:	eba2 0a0a 	subne.w	sl, r2, sl
   83412:	4451      	addne	r1, sl
   83414:	f8c9 2000 	streq.w	r2, [r9]
   83418:	6019      	strne	r1, [r3, #0]
   8341a:	f012 0107 	ands.w	r1, r2, #7
   8341e:	f000 8114 	beq.w	8364a <_malloc_r+0x472>
   83422:	f1c1 0008 	rsb	r0, r1, #8
   83426:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   8342a:	4402      	add	r2, r0
   8342c:	3108      	adds	r1, #8
   8342e:	eb02 090b 	add.w	r9, r2, fp
   83432:	f3c9 090b 	ubfx	r9, r9, #0, #12
   83436:	eba1 0909 	sub.w	r9, r1, r9
   8343a:	4649      	mov	r1, r9
   8343c:	4628      	mov	r0, r5
   8343e:	9301      	str	r3, [sp, #4]
   83440:	9200      	str	r2, [sp, #0]
   83442:	f000 fc63 	bl	83d0c <_sbrk_r>
   83446:	1c43      	adds	r3, r0, #1
   83448:	e89d 000c 	ldmia.w	sp, {r2, r3}
   8344c:	f000 8142 	beq.w	836d4 <_malloc_r+0x4fc>
   83450:	1a80      	subs	r0, r0, r2
   83452:	4448      	add	r0, r9
   83454:	f040 0001 	orr.w	r0, r0, #1
   83458:	6819      	ldr	r1, [r3, #0]
   8345a:	42bc      	cmp	r4, r7
   8345c:	4449      	add	r1, r9
   8345e:	60ba      	str	r2, [r7, #8]
   83460:	6019      	str	r1, [r3, #0]
   83462:	6050      	str	r0, [r2, #4]
   83464:	d017      	beq.n	83496 <_malloc_r+0x2be>
   83466:	f1b8 0f0f 	cmp.w	r8, #15
   8346a:	f240 80fa 	bls.w	83662 <_malloc_r+0x48a>
   8346e:	f04f 0c05 	mov.w	ip, #5
   83472:	6862      	ldr	r2, [r4, #4]
   83474:	f1a8 000c 	sub.w	r0, r8, #12
   83478:	f020 0007 	bic.w	r0, r0, #7
   8347c:	f002 0201 	and.w	r2, r2, #1
   83480:	eb04 0e00 	add.w	lr, r4, r0
   83484:	4302      	orrs	r2, r0
   83486:	280f      	cmp	r0, #15
   83488:	6062      	str	r2, [r4, #4]
   8348a:	f8ce c004 	str.w	ip, [lr, #4]
   8348e:	f8ce c008 	str.w	ip, [lr, #8]
   83492:	f200 8116 	bhi.w	836c2 <_malloc_r+0x4ea>
   83496:	4b1d      	ldr	r3, [pc, #116]	; (8350c <_malloc_r+0x334>)
   83498:	68bc      	ldr	r4, [r7, #8]
   8349a:	681a      	ldr	r2, [r3, #0]
   8349c:	4291      	cmp	r1, r2
   8349e:	bf88      	it	hi
   834a0:	6019      	strhi	r1, [r3, #0]
   834a2:	4b1b      	ldr	r3, [pc, #108]	; (83510 <_malloc_r+0x338>)
   834a4:	681a      	ldr	r2, [r3, #0]
   834a6:	4291      	cmp	r1, r2
   834a8:	6862      	ldr	r2, [r4, #4]
   834aa:	bf88      	it	hi
   834ac:	6019      	strhi	r1, [r3, #0]
   834ae:	f022 0203 	bic.w	r2, r2, #3
   834b2:	4296      	cmp	r6, r2
   834b4:	eba2 0306 	sub.w	r3, r2, r6
   834b8:	d801      	bhi.n	834be <_malloc_r+0x2e6>
   834ba:	2b0f      	cmp	r3, #15
   834bc:	dc04      	bgt.n	834c8 <_malloc_r+0x2f0>
   834be:	4628      	mov	r0, r5
   834c0:	f000 fa68 	bl	83994 <__malloc_unlock>
   834c4:	2400      	movs	r4, #0
   834c6:	e74d      	b.n	83364 <_malloc_r+0x18c>
   834c8:	f046 0201 	orr.w	r2, r6, #1
   834cc:	f043 0301 	orr.w	r3, r3, #1
   834d0:	4426      	add	r6, r4
   834d2:	6062      	str	r2, [r4, #4]
   834d4:	4628      	mov	r0, r5
   834d6:	60be      	str	r6, [r7, #8]
   834d8:	3408      	adds	r4, #8
   834da:	6073      	str	r3, [r6, #4]
   834dc:	f000 fa5a 	bl	83994 <__malloc_unlock>
   834e0:	4620      	mov	r0, r4
   834e2:	b003      	add	sp, #12
   834e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   834e8:	2b14      	cmp	r3, #20
   834ea:	d970      	bls.n	835ce <_malloc_r+0x3f6>
   834ec:	2b54      	cmp	r3, #84	; 0x54
   834ee:	f200 80a2 	bhi.w	83636 <_malloc_r+0x45e>
   834f2:	0b33      	lsrs	r3, r6, #12
   834f4:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   834f8:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   834fc:	00c1      	lsls	r1, r0, #3
   834fe:	e68d      	b.n	8321c <_malloc_r+0x44>
   83500:	200706e0 	.word	0x200706e0
   83504:	20070c50 	.word	0x20070c50
   83508:	20070c20 	.word	0x20070c20
   8350c:	20070c48 	.word	0x20070c48
   83510:	20070c4c 	.word	0x20070c4c
   83514:	200706e8 	.word	0x200706e8
   83518:	20070ae8 	.word	0x20070ae8
   8351c:	0a5a      	lsrs	r2, r3, #9
   8351e:	2a04      	cmp	r2, #4
   83520:	d95b      	bls.n	835da <_malloc_r+0x402>
   83522:	2a14      	cmp	r2, #20
   83524:	f200 80ae 	bhi.w	83684 <_malloc_r+0x4ac>
   83528:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   8352c:	00c9      	lsls	r1, r1, #3
   8352e:	325b      	adds	r2, #91	; 0x5b
   83530:	eb07 0c01 	add.w	ip, r7, r1
   83534:	5879      	ldr	r1, [r7, r1]
   83536:	f1ac 0c08 	sub.w	ip, ip, #8
   8353a:	458c      	cmp	ip, r1
   8353c:	f000 8088 	beq.w	83650 <_malloc_r+0x478>
   83540:	684a      	ldr	r2, [r1, #4]
   83542:	f022 0203 	bic.w	r2, r2, #3
   83546:	4293      	cmp	r3, r2
   83548:	d273      	bcs.n	83632 <_malloc_r+0x45a>
   8354a:	6889      	ldr	r1, [r1, #8]
   8354c:	458c      	cmp	ip, r1
   8354e:	d1f7      	bne.n	83540 <_malloc_r+0x368>
   83550:	f8dc 300c 	ldr.w	r3, [ip, #12]
   83554:	687a      	ldr	r2, [r7, #4]
   83556:	60e3      	str	r3, [r4, #12]
   83558:	f8c4 c008 	str.w	ip, [r4, #8]
   8355c:	609c      	str	r4, [r3, #8]
   8355e:	f8cc 400c 	str.w	r4, [ip, #12]
   83562:	e69e      	b.n	832a2 <_malloc_r+0xca>
   83564:	f046 0c01 	orr.w	ip, r6, #1
   83568:	f042 0101 	orr.w	r1, r2, #1
   8356c:	4426      	add	r6, r4
   8356e:	f8c4 c004 	str.w	ip, [r4, #4]
   83572:	4628      	mov	r0, r5
   83574:	617e      	str	r6, [r7, #20]
   83576:	613e      	str	r6, [r7, #16]
   83578:	f8c6 e00c 	str.w	lr, [r6, #12]
   8357c:	f8c6 e008 	str.w	lr, [r6, #8]
   83580:	6071      	str	r1, [r6, #4]
   83582:	50e2      	str	r2, [r4, r3]
   83584:	f000 fa06 	bl	83994 <__malloc_unlock>
   83588:	3408      	adds	r4, #8
   8358a:	e6eb      	b.n	83364 <_malloc_r+0x18c>
   8358c:	687a      	ldr	r2, [r7, #4]
   8358e:	e688      	b.n	832a2 <_malloc_r+0xca>
   83590:	f108 0801 	add.w	r8, r8, #1
   83594:	f018 0f03 	tst.w	r8, #3
   83598:	f10c 0c08 	add.w	ip, ip, #8
   8359c:	f47f ae93 	bne.w	832c6 <_malloc_r+0xee>
   835a0:	e02d      	b.n	835fe <_malloc_r+0x426>
   835a2:	68dc      	ldr	r4, [r3, #12]
   835a4:	42a3      	cmp	r3, r4
   835a6:	bf08      	it	eq
   835a8:	3002      	addeq	r0, #2
   835aa:	f43f ae4b 	beq.w	83244 <_malloc_r+0x6c>
   835ae:	e6c9      	b.n	83344 <_malloc_r+0x16c>
   835b0:	461c      	mov	r4, r3
   835b2:	4419      	add	r1, r3
   835b4:	684a      	ldr	r2, [r1, #4]
   835b6:	68db      	ldr	r3, [r3, #12]
   835b8:	f854 6f08 	ldr.w	r6, [r4, #8]!
   835bc:	f042 0201 	orr.w	r2, r2, #1
   835c0:	604a      	str	r2, [r1, #4]
   835c2:	4628      	mov	r0, r5
   835c4:	60f3      	str	r3, [r6, #12]
   835c6:	609e      	str	r6, [r3, #8]
   835c8:	f000 f9e4 	bl	83994 <__malloc_unlock>
   835cc:	e6ca      	b.n	83364 <_malloc_r+0x18c>
   835ce:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   835d2:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   835d6:	00c1      	lsls	r1, r0, #3
   835d8:	e620      	b.n	8321c <_malloc_r+0x44>
   835da:	099a      	lsrs	r2, r3, #6
   835dc:	f102 0139 	add.w	r1, r2, #57	; 0x39
   835e0:	00c9      	lsls	r1, r1, #3
   835e2:	3238      	adds	r2, #56	; 0x38
   835e4:	e7a4      	b.n	83530 <_malloc_r+0x358>
   835e6:	42bc      	cmp	r4, r7
   835e8:	d054      	beq.n	83694 <_malloc_r+0x4bc>
   835ea:	68bc      	ldr	r4, [r7, #8]
   835ec:	6862      	ldr	r2, [r4, #4]
   835ee:	f022 0203 	bic.w	r2, r2, #3
   835f2:	e75e      	b.n	834b2 <_malloc_r+0x2da>
   835f4:	f859 3908 	ldr.w	r3, [r9], #-8
   835f8:	4599      	cmp	r9, r3
   835fa:	f040 8086 	bne.w	8370a <_malloc_r+0x532>
   835fe:	f010 0f03 	tst.w	r0, #3
   83602:	f100 30ff 	add.w	r0, r0, #4294967295
   83606:	d1f5      	bne.n	835f4 <_malloc_r+0x41c>
   83608:	687b      	ldr	r3, [r7, #4]
   8360a:	ea23 0304 	bic.w	r3, r3, r4
   8360e:	607b      	str	r3, [r7, #4]
   83610:	0064      	lsls	r4, r4, #1
   83612:	429c      	cmp	r4, r3
   83614:	f63f aec8 	bhi.w	833a8 <_malloc_r+0x1d0>
   83618:	2c00      	cmp	r4, #0
   8361a:	f43f aec5 	beq.w	833a8 <_malloc_r+0x1d0>
   8361e:	421c      	tst	r4, r3
   83620:	4640      	mov	r0, r8
   83622:	f47f ae4c 	bne.w	832be <_malloc_r+0xe6>
   83626:	0064      	lsls	r4, r4, #1
   83628:	421c      	tst	r4, r3
   8362a:	f100 0004 	add.w	r0, r0, #4
   8362e:	d0fa      	beq.n	83626 <_malloc_r+0x44e>
   83630:	e645      	b.n	832be <_malloc_r+0xe6>
   83632:	468c      	mov	ip, r1
   83634:	e78c      	b.n	83550 <_malloc_r+0x378>
   83636:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   8363a:	d815      	bhi.n	83668 <_malloc_r+0x490>
   8363c:	0bf3      	lsrs	r3, r6, #15
   8363e:	f103 0078 	add.w	r0, r3, #120	; 0x78
   83642:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   83646:	00c1      	lsls	r1, r0, #3
   83648:	e5e8      	b.n	8321c <_malloc_r+0x44>
   8364a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   8364e:	e6ee      	b.n	8342e <_malloc_r+0x256>
   83650:	2101      	movs	r1, #1
   83652:	687b      	ldr	r3, [r7, #4]
   83654:	1092      	asrs	r2, r2, #2
   83656:	fa01 f202 	lsl.w	r2, r1, r2
   8365a:	431a      	orrs	r2, r3
   8365c:	607a      	str	r2, [r7, #4]
   8365e:	4663      	mov	r3, ip
   83660:	e779      	b.n	83556 <_malloc_r+0x37e>
   83662:	2301      	movs	r3, #1
   83664:	6053      	str	r3, [r2, #4]
   83666:	e72a      	b.n	834be <_malloc_r+0x2e6>
   83668:	f240 5254 	movw	r2, #1364	; 0x554
   8366c:	4293      	cmp	r3, r2
   8366e:	d822      	bhi.n	836b6 <_malloc_r+0x4de>
   83670:	0cb3      	lsrs	r3, r6, #18
   83672:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   83676:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   8367a:	00c1      	lsls	r1, r0, #3
   8367c:	e5ce      	b.n	8321c <_malloc_r+0x44>
   8367e:	f103 0b10 	add.w	fp, r3, #16
   83682:	e6af      	b.n	833e4 <_malloc_r+0x20c>
   83684:	2a54      	cmp	r2, #84	; 0x54
   83686:	d829      	bhi.n	836dc <_malloc_r+0x504>
   83688:	0b1a      	lsrs	r2, r3, #12
   8368a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   8368e:	00c9      	lsls	r1, r1, #3
   83690:	326e      	adds	r2, #110	; 0x6e
   83692:	e74d      	b.n	83530 <_malloc_r+0x358>
   83694:	4b20      	ldr	r3, [pc, #128]	; (83718 <_malloc_r+0x540>)
   83696:	6819      	ldr	r1, [r3, #0]
   83698:	4459      	add	r1, fp
   8369a:	6019      	str	r1, [r3, #0]
   8369c:	e6b3      	b.n	83406 <_malloc_r+0x22e>
   8369e:	f3ca 000b 	ubfx	r0, sl, #0, #12
   836a2:	2800      	cmp	r0, #0
   836a4:	f47f aeaf 	bne.w	83406 <_malloc_r+0x22e>
   836a8:	eb08 030b 	add.w	r3, r8, fp
   836ac:	68ba      	ldr	r2, [r7, #8]
   836ae:	f043 0301 	orr.w	r3, r3, #1
   836b2:	6053      	str	r3, [r2, #4]
   836b4:	e6ef      	b.n	83496 <_malloc_r+0x2be>
   836b6:	207f      	movs	r0, #127	; 0x7f
   836b8:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   836bc:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   836c0:	e5ac      	b.n	8321c <_malloc_r+0x44>
   836c2:	f104 0108 	add.w	r1, r4, #8
   836c6:	4628      	mov	r0, r5
   836c8:	9300      	str	r3, [sp, #0]
   836ca:	f7ff fa67 	bl	82b9c <_free_r>
   836ce:	9b00      	ldr	r3, [sp, #0]
   836d0:	6819      	ldr	r1, [r3, #0]
   836d2:	e6e0      	b.n	83496 <_malloc_r+0x2be>
   836d4:	2001      	movs	r0, #1
   836d6:	f04f 0900 	mov.w	r9, #0
   836da:	e6bd      	b.n	83458 <_malloc_r+0x280>
   836dc:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   836e0:	d805      	bhi.n	836ee <_malloc_r+0x516>
   836e2:	0bda      	lsrs	r2, r3, #15
   836e4:	f102 0178 	add.w	r1, r2, #120	; 0x78
   836e8:	00c9      	lsls	r1, r1, #3
   836ea:	3277      	adds	r2, #119	; 0x77
   836ec:	e720      	b.n	83530 <_malloc_r+0x358>
   836ee:	f240 5154 	movw	r1, #1364	; 0x554
   836f2:	428a      	cmp	r2, r1
   836f4:	d805      	bhi.n	83702 <_malloc_r+0x52a>
   836f6:	0c9a      	lsrs	r2, r3, #18
   836f8:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   836fc:	00c9      	lsls	r1, r1, #3
   836fe:	327c      	adds	r2, #124	; 0x7c
   83700:	e716      	b.n	83530 <_malloc_r+0x358>
   83702:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   83706:	227e      	movs	r2, #126	; 0x7e
   83708:	e712      	b.n	83530 <_malloc_r+0x358>
   8370a:	687b      	ldr	r3, [r7, #4]
   8370c:	e780      	b.n	83610 <_malloc_r+0x438>
   8370e:	08f0      	lsrs	r0, r6, #3
   83710:	f106 0308 	add.w	r3, r6, #8
   83714:	e60e      	b.n	83334 <_malloc_r+0x15c>
   83716:	bf00      	nop
   83718:	20070c20 	.word	0x20070c20

0008371c <__ascii_mbtowc>:
   8371c:	b082      	sub	sp, #8
   8371e:	b149      	cbz	r1, 83734 <__ascii_mbtowc+0x18>
   83720:	b15a      	cbz	r2, 8373a <__ascii_mbtowc+0x1e>
   83722:	b16b      	cbz	r3, 83740 <__ascii_mbtowc+0x24>
   83724:	7813      	ldrb	r3, [r2, #0]
   83726:	600b      	str	r3, [r1, #0]
   83728:	7812      	ldrb	r2, [r2, #0]
   8372a:	1c10      	adds	r0, r2, #0
   8372c:	bf18      	it	ne
   8372e:	2001      	movne	r0, #1
   83730:	b002      	add	sp, #8
   83732:	4770      	bx	lr
   83734:	a901      	add	r1, sp, #4
   83736:	2a00      	cmp	r2, #0
   83738:	d1f3      	bne.n	83722 <__ascii_mbtowc+0x6>
   8373a:	4610      	mov	r0, r2
   8373c:	b002      	add	sp, #8
   8373e:	4770      	bx	lr
   83740:	f06f 0001 	mvn.w	r0, #1
   83744:	e7f4      	b.n	83730 <__ascii_mbtowc+0x14>
   83746:	bf00      	nop

00083748 <memchr>:
   83748:	0783      	lsls	r3, r0, #30
   8374a:	b470      	push	{r4, r5, r6}
   8374c:	b2cd      	uxtb	r5, r1
   8374e:	d03d      	beq.n	837cc <memchr+0x84>
   83750:	1e54      	subs	r4, r2, #1
   83752:	b30a      	cbz	r2, 83798 <memchr+0x50>
   83754:	7803      	ldrb	r3, [r0, #0]
   83756:	42ab      	cmp	r3, r5
   83758:	d01f      	beq.n	8379a <memchr+0x52>
   8375a:	1c43      	adds	r3, r0, #1
   8375c:	e005      	b.n	8376a <memchr+0x22>
   8375e:	f114 34ff 	adds.w	r4, r4, #4294967295
   83762:	d319      	bcc.n	83798 <memchr+0x50>
   83764:	7802      	ldrb	r2, [r0, #0]
   83766:	42aa      	cmp	r2, r5
   83768:	d017      	beq.n	8379a <memchr+0x52>
   8376a:	f013 0f03 	tst.w	r3, #3
   8376e:	4618      	mov	r0, r3
   83770:	f103 0301 	add.w	r3, r3, #1
   83774:	d1f3      	bne.n	8375e <memchr+0x16>
   83776:	2c03      	cmp	r4, #3
   83778:	d811      	bhi.n	8379e <memchr+0x56>
   8377a:	b34c      	cbz	r4, 837d0 <memchr+0x88>
   8377c:	7803      	ldrb	r3, [r0, #0]
   8377e:	42ab      	cmp	r3, r5
   83780:	d00b      	beq.n	8379a <memchr+0x52>
   83782:	4404      	add	r4, r0
   83784:	1c43      	adds	r3, r0, #1
   83786:	e002      	b.n	8378e <memchr+0x46>
   83788:	7802      	ldrb	r2, [r0, #0]
   8378a:	42aa      	cmp	r2, r5
   8378c:	d005      	beq.n	8379a <memchr+0x52>
   8378e:	429c      	cmp	r4, r3
   83790:	4618      	mov	r0, r3
   83792:	f103 0301 	add.w	r3, r3, #1
   83796:	d1f7      	bne.n	83788 <memchr+0x40>
   83798:	2000      	movs	r0, #0
   8379a:	bc70      	pop	{r4, r5, r6}
   8379c:	4770      	bx	lr
   8379e:	0209      	lsls	r1, r1, #8
   837a0:	b289      	uxth	r1, r1
   837a2:	4329      	orrs	r1, r5
   837a4:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   837a8:	6803      	ldr	r3, [r0, #0]
   837aa:	4606      	mov	r6, r0
   837ac:	404b      	eors	r3, r1
   837ae:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   837b2:	ea22 0303 	bic.w	r3, r2, r3
   837b6:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   837ba:	f100 0004 	add.w	r0, r0, #4
   837be:	d103      	bne.n	837c8 <memchr+0x80>
   837c0:	3c04      	subs	r4, #4
   837c2:	2c03      	cmp	r4, #3
   837c4:	d8f0      	bhi.n	837a8 <memchr+0x60>
   837c6:	e7d8      	b.n	8377a <memchr+0x32>
   837c8:	4630      	mov	r0, r6
   837ca:	e7d7      	b.n	8377c <memchr+0x34>
   837cc:	4614      	mov	r4, r2
   837ce:	e7d2      	b.n	83776 <memchr+0x2e>
   837d0:	4620      	mov	r0, r4
   837d2:	e7e2      	b.n	8379a <memchr+0x52>

000837d4 <memcpy>:
   837d4:	4684      	mov	ip, r0
   837d6:	ea41 0300 	orr.w	r3, r1, r0
   837da:	f013 0303 	ands.w	r3, r3, #3
   837de:	d149      	bne.n	83874 <memcpy+0xa0>
   837e0:	3a40      	subs	r2, #64	; 0x40
   837e2:	d323      	bcc.n	8382c <memcpy+0x58>
   837e4:	680b      	ldr	r3, [r1, #0]
   837e6:	6003      	str	r3, [r0, #0]
   837e8:	684b      	ldr	r3, [r1, #4]
   837ea:	6043      	str	r3, [r0, #4]
   837ec:	688b      	ldr	r3, [r1, #8]
   837ee:	6083      	str	r3, [r0, #8]
   837f0:	68cb      	ldr	r3, [r1, #12]
   837f2:	60c3      	str	r3, [r0, #12]
   837f4:	690b      	ldr	r3, [r1, #16]
   837f6:	6103      	str	r3, [r0, #16]
   837f8:	694b      	ldr	r3, [r1, #20]
   837fa:	6143      	str	r3, [r0, #20]
   837fc:	698b      	ldr	r3, [r1, #24]
   837fe:	6183      	str	r3, [r0, #24]
   83800:	69cb      	ldr	r3, [r1, #28]
   83802:	61c3      	str	r3, [r0, #28]
   83804:	6a0b      	ldr	r3, [r1, #32]
   83806:	6203      	str	r3, [r0, #32]
   83808:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   8380a:	6243      	str	r3, [r0, #36]	; 0x24
   8380c:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   8380e:	6283      	str	r3, [r0, #40]	; 0x28
   83810:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   83812:	62c3      	str	r3, [r0, #44]	; 0x2c
   83814:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   83816:	6303      	str	r3, [r0, #48]	; 0x30
   83818:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   8381a:	6343      	str	r3, [r0, #52]	; 0x34
   8381c:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   8381e:	6383      	str	r3, [r0, #56]	; 0x38
   83820:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   83822:	63c3      	str	r3, [r0, #60]	; 0x3c
   83824:	3040      	adds	r0, #64	; 0x40
   83826:	3140      	adds	r1, #64	; 0x40
   83828:	3a40      	subs	r2, #64	; 0x40
   8382a:	d2db      	bcs.n	837e4 <memcpy+0x10>
   8382c:	3230      	adds	r2, #48	; 0x30
   8382e:	d30b      	bcc.n	83848 <memcpy+0x74>
   83830:	680b      	ldr	r3, [r1, #0]
   83832:	6003      	str	r3, [r0, #0]
   83834:	684b      	ldr	r3, [r1, #4]
   83836:	6043      	str	r3, [r0, #4]
   83838:	688b      	ldr	r3, [r1, #8]
   8383a:	6083      	str	r3, [r0, #8]
   8383c:	68cb      	ldr	r3, [r1, #12]
   8383e:	60c3      	str	r3, [r0, #12]
   83840:	3010      	adds	r0, #16
   83842:	3110      	adds	r1, #16
   83844:	3a10      	subs	r2, #16
   83846:	d2f3      	bcs.n	83830 <memcpy+0x5c>
   83848:	320c      	adds	r2, #12
   8384a:	d305      	bcc.n	83858 <memcpy+0x84>
   8384c:	f851 3b04 	ldr.w	r3, [r1], #4
   83850:	f840 3b04 	str.w	r3, [r0], #4
   83854:	3a04      	subs	r2, #4
   83856:	d2f9      	bcs.n	8384c <memcpy+0x78>
   83858:	3204      	adds	r2, #4
   8385a:	d008      	beq.n	8386e <memcpy+0x9a>
   8385c:	07d2      	lsls	r2, r2, #31
   8385e:	bf1c      	itt	ne
   83860:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83864:	f800 3b01 	strbne.w	r3, [r0], #1
   83868:	d301      	bcc.n	8386e <memcpy+0x9a>
   8386a:	880b      	ldrh	r3, [r1, #0]
   8386c:	8003      	strh	r3, [r0, #0]
   8386e:	4660      	mov	r0, ip
   83870:	4770      	bx	lr
   83872:	bf00      	nop
   83874:	2a08      	cmp	r2, #8
   83876:	d313      	bcc.n	838a0 <memcpy+0xcc>
   83878:	078b      	lsls	r3, r1, #30
   8387a:	d0b1      	beq.n	837e0 <memcpy+0xc>
   8387c:	f010 0303 	ands.w	r3, r0, #3
   83880:	d0ae      	beq.n	837e0 <memcpy+0xc>
   83882:	f1c3 0304 	rsb	r3, r3, #4
   83886:	1ad2      	subs	r2, r2, r3
   83888:	07db      	lsls	r3, r3, #31
   8388a:	bf1c      	itt	ne
   8388c:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83890:	f800 3b01 	strbne.w	r3, [r0], #1
   83894:	d3a4      	bcc.n	837e0 <memcpy+0xc>
   83896:	f831 3b02 	ldrh.w	r3, [r1], #2
   8389a:	f820 3b02 	strh.w	r3, [r0], #2
   8389e:	e79f      	b.n	837e0 <memcpy+0xc>
   838a0:	3a04      	subs	r2, #4
   838a2:	d3d9      	bcc.n	83858 <memcpy+0x84>
   838a4:	3a01      	subs	r2, #1
   838a6:	f811 3b01 	ldrb.w	r3, [r1], #1
   838aa:	f800 3b01 	strb.w	r3, [r0], #1
   838ae:	d2f9      	bcs.n	838a4 <memcpy+0xd0>
   838b0:	780b      	ldrb	r3, [r1, #0]
   838b2:	7003      	strb	r3, [r0, #0]
   838b4:	784b      	ldrb	r3, [r1, #1]
   838b6:	7043      	strb	r3, [r0, #1]
   838b8:	788b      	ldrb	r3, [r1, #2]
   838ba:	7083      	strb	r3, [r0, #2]
   838bc:	4660      	mov	r0, ip
   838be:	4770      	bx	lr

000838c0 <memmove>:
   838c0:	4288      	cmp	r0, r1
   838c2:	b5f0      	push	{r4, r5, r6, r7, lr}
   838c4:	d90d      	bls.n	838e2 <memmove+0x22>
   838c6:	188b      	adds	r3, r1, r2
   838c8:	4298      	cmp	r0, r3
   838ca:	d20a      	bcs.n	838e2 <memmove+0x22>
   838cc:	1884      	adds	r4, r0, r2
   838ce:	2a00      	cmp	r2, #0
   838d0:	d051      	beq.n	83976 <memmove+0xb6>
   838d2:	4622      	mov	r2, r4
   838d4:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   838d8:	4299      	cmp	r1, r3
   838da:	f802 4d01 	strb.w	r4, [r2, #-1]!
   838de:	d1f9      	bne.n	838d4 <memmove+0x14>
   838e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   838e2:	2a0f      	cmp	r2, #15
   838e4:	d948      	bls.n	83978 <memmove+0xb8>
   838e6:	ea41 0300 	orr.w	r3, r1, r0
   838ea:	079b      	lsls	r3, r3, #30
   838ec:	d146      	bne.n	8397c <memmove+0xbc>
   838ee:	4615      	mov	r5, r2
   838f0:	f100 0410 	add.w	r4, r0, #16
   838f4:	f101 0310 	add.w	r3, r1, #16
   838f8:	f853 6c10 	ldr.w	r6, [r3, #-16]
   838fc:	3d10      	subs	r5, #16
   838fe:	f844 6c10 	str.w	r6, [r4, #-16]
   83902:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   83906:	2d0f      	cmp	r5, #15
   83908:	f844 6c0c 	str.w	r6, [r4, #-12]
   8390c:	f853 6c08 	ldr.w	r6, [r3, #-8]
   83910:	f104 0410 	add.w	r4, r4, #16
   83914:	f844 6c18 	str.w	r6, [r4, #-24]
   83918:	f853 6c04 	ldr.w	r6, [r3, #-4]
   8391c:	f103 0310 	add.w	r3, r3, #16
   83920:	f844 6c14 	str.w	r6, [r4, #-20]
   83924:	d8e8      	bhi.n	838f8 <memmove+0x38>
   83926:	f1a2 0310 	sub.w	r3, r2, #16
   8392a:	f023 030f 	bic.w	r3, r3, #15
   8392e:	f002 0e0f 	and.w	lr, r2, #15
   83932:	3310      	adds	r3, #16
   83934:	f1be 0f03 	cmp.w	lr, #3
   83938:	4419      	add	r1, r3
   8393a:	4403      	add	r3, r0
   8393c:	d921      	bls.n	83982 <memmove+0xc2>
   8393e:	460e      	mov	r6, r1
   83940:	4674      	mov	r4, lr
   83942:	1f1d      	subs	r5, r3, #4
   83944:	f856 7b04 	ldr.w	r7, [r6], #4
   83948:	3c04      	subs	r4, #4
   8394a:	2c03      	cmp	r4, #3
   8394c:	f845 7f04 	str.w	r7, [r5, #4]!
   83950:	d8f8      	bhi.n	83944 <memmove+0x84>
   83952:	f1ae 0404 	sub.w	r4, lr, #4
   83956:	f024 0403 	bic.w	r4, r4, #3
   8395a:	3404      	adds	r4, #4
   8395c:	4421      	add	r1, r4
   8395e:	4423      	add	r3, r4
   83960:	f002 0203 	and.w	r2, r2, #3
   83964:	b162      	cbz	r2, 83980 <memmove+0xc0>
   83966:	3b01      	subs	r3, #1
   83968:	440a      	add	r2, r1
   8396a:	f811 4b01 	ldrb.w	r4, [r1], #1
   8396e:	428a      	cmp	r2, r1
   83970:	f803 4f01 	strb.w	r4, [r3, #1]!
   83974:	d1f9      	bne.n	8396a <memmove+0xaa>
   83976:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83978:	4603      	mov	r3, r0
   8397a:	e7f3      	b.n	83964 <memmove+0xa4>
   8397c:	4603      	mov	r3, r0
   8397e:	e7f2      	b.n	83966 <memmove+0xa6>
   83980:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83982:	4672      	mov	r2, lr
   83984:	e7ee      	b.n	83964 <memmove+0xa4>
   83986:	bf00      	nop

00083988 <__malloc_lock>:
   83988:	4801      	ldr	r0, [pc, #4]	; (83990 <__malloc_lock+0x8>)
   8398a:	f7ff bba1 	b.w	830d0 <__retarget_lock_acquire_recursive>
   8398e:	bf00      	nop
   83990:	20070c70 	.word	0x20070c70

00083994 <__malloc_unlock>:
   83994:	4801      	ldr	r0, [pc, #4]	; (8399c <__malloc_unlock+0x8>)
   83996:	f7ff bb9d 	b.w	830d4 <__retarget_lock_release_recursive>
   8399a:	bf00      	nop
   8399c:	20070c70 	.word	0x20070c70

000839a0 <_realloc_r>:
   839a0:	2900      	cmp	r1, #0
   839a2:	f000 8094 	beq.w	83ace <_realloc_r+0x12e>
   839a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   839aa:	460c      	mov	r4, r1
   839ac:	4615      	mov	r5, r2
   839ae:	b083      	sub	sp, #12
   839b0:	4680      	mov	r8, r0
   839b2:	f105 060b 	add.w	r6, r5, #11
   839b6:	f7ff ffe7 	bl	83988 <__malloc_lock>
   839ba:	f854 ec04 	ldr.w	lr, [r4, #-4]
   839be:	2e16      	cmp	r6, #22
   839c0:	f02e 0703 	bic.w	r7, lr, #3
   839c4:	f1a4 0908 	sub.w	r9, r4, #8
   839c8:	d83c      	bhi.n	83a44 <_realloc_r+0xa4>
   839ca:	2210      	movs	r2, #16
   839cc:	4616      	mov	r6, r2
   839ce:	42b5      	cmp	r5, r6
   839d0:	d83d      	bhi.n	83a4e <_realloc_r+0xae>
   839d2:	4297      	cmp	r7, r2
   839d4:	da43      	bge.n	83a5e <_realloc_r+0xbe>
   839d6:	4bc6      	ldr	r3, [pc, #792]	; (83cf0 <_realloc_r+0x350>)
   839d8:	eb09 0007 	add.w	r0, r9, r7
   839dc:	6899      	ldr	r1, [r3, #8]
   839de:	4288      	cmp	r0, r1
   839e0:	f000 80c3 	beq.w	83b6a <_realloc_r+0x1ca>
   839e4:	6843      	ldr	r3, [r0, #4]
   839e6:	f023 0101 	bic.w	r1, r3, #1
   839ea:	4401      	add	r1, r0
   839ec:	6849      	ldr	r1, [r1, #4]
   839ee:	07c9      	lsls	r1, r1, #31
   839f0:	d54d      	bpl.n	83a8e <_realloc_r+0xee>
   839f2:	f01e 0f01 	tst.w	lr, #1
   839f6:	f000 809b 	beq.w	83b30 <_realloc_r+0x190>
   839fa:	4629      	mov	r1, r5
   839fc:	4640      	mov	r0, r8
   839fe:	f7ff fbeb 	bl	831d8 <_malloc_r>
   83a02:	4605      	mov	r5, r0
   83a04:	2800      	cmp	r0, #0
   83a06:	d03b      	beq.n	83a80 <_realloc_r+0xe0>
   83a08:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83a0c:	f1a0 0208 	sub.w	r2, r0, #8
   83a10:	f023 0301 	bic.w	r3, r3, #1
   83a14:	444b      	add	r3, r9
   83a16:	429a      	cmp	r2, r3
   83a18:	f000 812b 	beq.w	83c72 <_realloc_r+0x2d2>
   83a1c:	1f3a      	subs	r2, r7, #4
   83a1e:	2a24      	cmp	r2, #36	; 0x24
   83a20:	f200 8118 	bhi.w	83c54 <_realloc_r+0x2b4>
   83a24:	2a13      	cmp	r2, #19
   83a26:	f200 80eb 	bhi.w	83c00 <_realloc_r+0x260>
   83a2a:	4603      	mov	r3, r0
   83a2c:	4622      	mov	r2, r4
   83a2e:	6811      	ldr	r1, [r2, #0]
   83a30:	6019      	str	r1, [r3, #0]
   83a32:	6851      	ldr	r1, [r2, #4]
   83a34:	6059      	str	r1, [r3, #4]
   83a36:	6892      	ldr	r2, [r2, #8]
   83a38:	609a      	str	r2, [r3, #8]
   83a3a:	4621      	mov	r1, r4
   83a3c:	4640      	mov	r0, r8
   83a3e:	f7ff f8ad 	bl	82b9c <_free_r>
   83a42:	e01d      	b.n	83a80 <_realloc_r+0xe0>
   83a44:	f026 0607 	bic.w	r6, r6, #7
   83a48:	2e00      	cmp	r6, #0
   83a4a:	4632      	mov	r2, r6
   83a4c:	dabf      	bge.n	839ce <_realloc_r+0x2e>
   83a4e:	2500      	movs	r5, #0
   83a50:	230c      	movs	r3, #12
   83a52:	4628      	mov	r0, r5
   83a54:	f8c8 3000 	str.w	r3, [r8]
   83a58:	b003      	add	sp, #12
   83a5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83a5e:	4625      	mov	r5, r4
   83a60:	1bbb      	subs	r3, r7, r6
   83a62:	2b0f      	cmp	r3, #15
   83a64:	f8d9 2004 	ldr.w	r2, [r9, #4]
   83a68:	d81d      	bhi.n	83aa6 <_realloc_r+0x106>
   83a6a:	f002 0201 	and.w	r2, r2, #1
   83a6e:	433a      	orrs	r2, r7
   83a70:	eb09 0107 	add.w	r1, r9, r7
   83a74:	f8c9 2004 	str.w	r2, [r9, #4]
   83a78:	684b      	ldr	r3, [r1, #4]
   83a7a:	f043 0301 	orr.w	r3, r3, #1
   83a7e:	604b      	str	r3, [r1, #4]
   83a80:	4640      	mov	r0, r8
   83a82:	f7ff ff87 	bl	83994 <__malloc_unlock>
   83a86:	4628      	mov	r0, r5
   83a88:	b003      	add	sp, #12
   83a8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83a8e:	f023 0303 	bic.w	r3, r3, #3
   83a92:	18f9      	adds	r1, r7, r3
   83a94:	4291      	cmp	r1, r2
   83a96:	db1d      	blt.n	83ad4 <_realloc_r+0x134>
   83a98:	68c3      	ldr	r3, [r0, #12]
   83a9a:	6882      	ldr	r2, [r0, #8]
   83a9c:	4625      	mov	r5, r4
   83a9e:	60d3      	str	r3, [r2, #12]
   83aa0:	460f      	mov	r7, r1
   83aa2:	609a      	str	r2, [r3, #8]
   83aa4:	e7dc      	b.n	83a60 <_realloc_r+0xc0>
   83aa6:	f002 0201 	and.w	r2, r2, #1
   83aaa:	eb09 0106 	add.w	r1, r9, r6
   83aae:	f043 0301 	orr.w	r3, r3, #1
   83ab2:	4332      	orrs	r2, r6
   83ab4:	f8c9 2004 	str.w	r2, [r9, #4]
   83ab8:	444f      	add	r7, r9
   83aba:	604b      	str	r3, [r1, #4]
   83abc:	687b      	ldr	r3, [r7, #4]
   83abe:	3108      	adds	r1, #8
   83ac0:	f043 0301 	orr.w	r3, r3, #1
   83ac4:	607b      	str	r3, [r7, #4]
   83ac6:	4640      	mov	r0, r8
   83ac8:	f7ff f868 	bl	82b9c <_free_r>
   83acc:	e7d8      	b.n	83a80 <_realloc_r+0xe0>
   83ace:	4611      	mov	r1, r2
   83ad0:	f7ff bb82 	b.w	831d8 <_malloc_r>
   83ad4:	f01e 0f01 	tst.w	lr, #1
   83ad8:	d18f      	bne.n	839fa <_realloc_r+0x5a>
   83ada:	f854 1c08 	ldr.w	r1, [r4, #-8]
   83ade:	eba9 0a01 	sub.w	sl, r9, r1
   83ae2:	f8da 1004 	ldr.w	r1, [sl, #4]
   83ae6:	f021 0103 	bic.w	r1, r1, #3
   83aea:	440b      	add	r3, r1
   83aec:	443b      	add	r3, r7
   83aee:	4293      	cmp	r3, r2
   83af0:	db26      	blt.n	83b40 <_realloc_r+0x1a0>
   83af2:	4655      	mov	r5, sl
   83af4:	68c1      	ldr	r1, [r0, #12]
   83af6:	6880      	ldr	r0, [r0, #8]
   83af8:	1f3a      	subs	r2, r7, #4
   83afa:	60c1      	str	r1, [r0, #12]
   83afc:	6088      	str	r0, [r1, #8]
   83afe:	f855 0f08 	ldr.w	r0, [r5, #8]!
   83b02:	f8da 100c 	ldr.w	r1, [sl, #12]
   83b06:	2a24      	cmp	r2, #36	; 0x24
   83b08:	60c1      	str	r1, [r0, #12]
   83b0a:	6088      	str	r0, [r1, #8]
   83b0c:	d826      	bhi.n	83b5c <_realloc_r+0x1bc>
   83b0e:	2a13      	cmp	r2, #19
   83b10:	f240 8081 	bls.w	83c16 <_realloc_r+0x276>
   83b14:	6821      	ldr	r1, [r4, #0]
   83b16:	2a1b      	cmp	r2, #27
   83b18:	f8ca 1008 	str.w	r1, [sl, #8]
   83b1c:	6861      	ldr	r1, [r4, #4]
   83b1e:	f8ca 100c 	str.w	r1, [sl, #12]
   83b22:	f200 80ad 	bhi.w	83c80 <_realloc_r+0x2e0>
   83b26:	f104 0008 	add.w	r0, r4, #8
   83b2a:	f10a 0210 	add.w	r2, sl, #16
   83b2e:	e074      	b.n	83c1a <_realloc_r+0x27a>
   83b30:	f854 3c08 	ldr.w	r3, [r4, #-8]
   83b34:	eba9 0a03 	sub.w	sl, r9, r3
   83b38:	f8da 1004 	ldr.w	r1, [sl, #4]
   83b3c:	f021 0103 	bic.w	r1, r1, #3
   83b40:	187b      	adds	r3, r7, r1
   83b42:	4293      	cmp	r3, r2
   83b44:	f6ff af59 	blt.w	839fa <_realloc_r+0x5a>
   83b48:	4655      	mov	r5, sl
   83b4a:	f8da 100c 	ldr.w	r1, [sl, #12]
   83b4e:	f855 0f08 	ldr.w	r0, [r5, #8]!
   83b52:	1f3a      	subs	r2, r7, #4
   83b54:	2a24      	cmp	r2, #36	; 0x24
   83b56:	60c1      	str	r1, [r0, #12]
   83b58:	6088      	str	r0, [r1, #8]
   83b5a:	d9d8      	bls.n	83b0e <_realloc_r+0x16e>
   83b5c:	4621      	mov	r1, r4
   83b5e:	4628      	mov	r0, r5
   83b60:	461f      	mov	r7, r3
   83b62:	46d1      	mov	r9, sl
   83b64:	f7ff feac 	bl	838c0 <memmove>
   83b68:	e77a      	b.n	83a60 <_realloc_r+0xc0>
   83b6a:	6841      	ldr	r1, [r0, #4]
   83b6c:	f106 0010 	add.w	r0, r6, #16
   83b70:	f021 0b03 	bic.w	fp, r1, #3
   83b74:	44bb      	add	fp, r7
   83b76:	4583      	cmp	fp, r0
   83b78:	da58      	bge.n	83c2c <_realloc_r+0x28c>
   83b7a:	f01e 0f01 	tst.w	lr, #1
   83b7e:	f47f af3c 	bne.w	839fa <_realloc_r+0x5a>
   83b82:	f854 1c08 	ldr.w	r1, [r4, #-8]
   83b86:	eba9 0a01 	sub.w	sl, r9, r1
   83b8a:	f8da 1004 	ldr.w	r1, [sl, #4]
   83b8e:	f021 0103 	bic.w	r1, r1, #3
   83b92:	448b      	add	fp, r1
   83b94:	4558      	cmp	r0, fp
   83b96:	dcd3      	bgt.n	83b40 <_realloc_r+0x1a0>
   83b98:	4655      	mov	r5, sl
   83b9a:	f8da 100c 	ldr.w	r1, [sl, #12]
   83b9e:	f855 0f08 	ldr.w	r0, [r5, #8]!
   83ba2:	1f3a      	subs	r2, r7, #4
   83ba4:	2a24      	cmp	r2, #36	; 0x24
   83ba6:	60c1      	str	r1, [r0, #12]
   83ba8:	6088      	str	r0, [r1, #8]
   83baa:	f200 808d 	bhi.w	83cc8 <_realloc_r+0x328>
   83bae:	2a13      	cmp	r2, #19
   83bb0:	f240 8087 	bls.w	83cc2 <_realloc_r+0x322>
   83bb4:	6821      	ldr	r1, [r4, #0]
   83bb6:	2a1b      	cmp	r2, #27
   83bb8:	f8ca 1008 	str.w	r1, [sl, #8]
   83bbc:	6861      	ldr	r1, [r4, #4]
   83bbe:	f8ca 100c 	str.w	r1, [sl, #12]
   83bc2:	f200 8088 	bhi.w	83cd6 <_realloc_r+0x336>
   83bc6:	f104 0108 	add.w	r1, r4, #8
   83bca:	f10a 0210 	add.w	r2, sl, #16
   83bce:	6808      	ldr	r0, [r1, #0]
   83bd0:	6010      	str	r0, [r2, #0]
   83bd2:	6848      	ldr	r0, [r1, #4]
   83bd4:	6050      	str	r0, [r2, #4]
   83bd6:	6889      	ldr	r1, [r1, #8]
   83bd8:	6091      	str	r1, [r2, #8]
   83bda:	ebab 0206 	sub.w	r2, fp, r6
   83bde:	eb0a 0106 	add.w	r1, sl, r6
   83be2:	f042 0201 	orr.w	r2, r2, #1
   83be6:	6099      	str	r1, [r3, #8]
   83be8:	604a      	str	r2, [r1, #4]
   83bea:	f8da 3004 	ldr.w	r3, [sl, #4]
   83bee:	4640      	mov	r0, r8
   83bf0:	f003 0301 	and.w	r3, r3, #1
   83bf4:	431e      	orrs	r6, r3
   83bf6:	f8ca 6004 	str.w	r6, [sl, #4]
   83bfa:	f7ff fecb 	bl	83994 <__malloc_unlock>
   83bfe:	e742      	b.n	83a86 <_realloc_r+0xe6>
   83c00:	6823      	ldr	r3, [r4, #0]
   83c02:	2a1b      	cmp	r2, #27
   83c04:	6003      	str	r3, [r0, #0]
   83c06:	6863      	ldr	r3, [r4, #4]
   83c08:	6043      	str	r3, [r0, #4]
   83c0a:	d827      	bhi.n	83c5c <_realloc_r+0x2bc>
   83c0c:	f100 0308 	add.w	r3, r0, #8
   83c10:	f104 0208 	add.w	r2, r4, #8
   83c14:	e70b      	b.n	83a2e <_realloc_r+0x8e>
   83c16:	4620      	mov	r0, r4
   83c18:	462a      	mov	r2, r5
   83c1a:	6801      	ldr	r1, [r0, #0]
   83c1c:	461f      	mov	r7, r3
   83c1e:	6011      	str	r1, [r2, #0]
   83c20:	6841      	ldr	r1, [r0, #4]
   83c22:	46d1      	mov	r9, sl
   83c24:	6051      	str	r1, [r2, #4]
   83c26:	6883      	ldr	r3, [r0, #8]
   83c28:	6093      	str	r3, [r2, #8]
   83c2a:	e719      	b.n	83a60 <_realloc_r+0xc0>
   83c2c:	ebab 0b06 	sub.w	fp, fp, r6
   83c30:	eb09 0106 	add.w	r1, r9, r6
   83c34:	f04b 0201 	orr.w	r2, fp, #1
   83c38:	6099      	str	r1, [r3, #8]
   83c3a:	604a      	str	r2, [r1, #4]
   83c3c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83c40:	4640      	mov	r0, r8
   83c42:	f003 0301 	and.w	r3, r3, #1
   83c46:	431e      	orrs	r6, r3
   83c48:	f844 6c04 	str.w	r6, [r4, #-4]
   83c4c:	f7ff fea2 	bl	83994 <__malloc_unlock>
   83c50:	4625      	mov	r5, r4
   83c52:	e718      	b.n	83a86 <_realloc_r+0xe6>
   83c54:	4621      	mov	r1, r4
   83c56:	f7ff fe33 	bl	838c0 <memmove>
   83c5a:	e6ee      	b.n	83a3a <_realloc_r+0x9a>
   83c5c:	68a3      	ldr	r3, [r4, #8]
   83c5e:	2a24      	cmp	r2, #36	; 0x24
   83c60:	6083      	str	r3, [r0, #8]
   83c62:	68e3      	ldr	r3, [r4, #12]
   83c64:	60c3      	str	r3, [r0, #12]
   83c66:	d018      	beq.n	83c9a <_realloc_r+0x2fa>
   83c68:	f100 0310 	add.w	r3, r0, #16
   83c6c:	f104 0210 	add.w	r2, r4, #16
   83c70:	e6dd      	b.n	83a2e <_realloc_r+0x8e>
   83c72:	f850 3c04 	ldr.w	r3, [r0, #-4]
   83c76:	4625      	mov	r5, r4
   83c78:	f023 0303 	bic.w	r3, r3, #3
   83c7c:	441f      	add	r7, r3
   83c7e:	e6ef      	b.n	83a60 <_realloc_r+0xc0>
   83c80:	68a1      	ldr	r1, [r4, #8]
   83c82:	2a24      	cmp	r2, #36	; 0x24
   83c84:	f8ca 1010 	str.w	r1, [sl, #16]
   83c88:	68e1      	ldr	r1, [r4, #12]
   83c8a:	f8ca 1014 	str.w	r1, [sl, #20]
   83c8e:	d00d      	beq.n	83cac <_realloc_r+0x30c>
   83c90:	f104 0010 	add.w	r0, r4, #16
   83c94:	f10a 0218 	add.w	r2, sl, #24
   83c98:	e7bf      	b.n	83c1a <_realloc_r+0x27a>
   83c9a:	6922      	ldr	r2, [r4, #16]
   83c9c:	f100 0318 	add.w	r3, r0, #24
   83ca0:	6102      	str	r2, [r0, #16]
   83ca2:	6961      	ldr	r1, [r4, #20]
   83ca4:	f104 0218 	add.w	r2, r4, #24
   83ca8:	6141      	str	r1, [r0, #20]
   83caa:	e6c0      	b.n	83a2e <_realloc_r+0x8e>
   83cac:	6922      	ldr	r2, [r4, #16]
   83cae:	f104 0018 	add.w	r0, r4, #24
   83cb2:	f8ca 2018 	str.w	r2, [sl, #24]
   83cb6:	6961      	ldr	r1, [r4, #20]
   83cb8:	f10a 0220 	add.w	r2, sl, #32
   83cbc:	f8ca 101c 	str.w	r1, [sl, #28]
   83cc0:	e7ab      	b.n	83c1a <_realloc_r+0x27a>
   83cc2:	4621      	mov	r1, r4
   83cc4:	462a      	mov	r2, r5
   83cc6:	e782      	b.n	83bce <_realloc_r+0x22e>
   83cc8:	4621      	mov	r1, r4
   83cca:	4628      	mov	r0, r5
   83ccc:	9301      	str	r3, [sp, #4]
   83cce:	f7ff fdf7 	bl	838c0 <memmove>
   83cd2:	9b01      	ldr	r3, [sp, #4]
   83cd4:	e781      	b.n	83bda <_realloc_r+0x23a>
   83cd6:	68a1      	ldr	r1, [r4, #8]
   83cd8:	2a24      	cmp	r2, #36	; 0x24
   83cda:	f8ca 1010 	str.w	r1, [sl, #16]
   83cde:	68e1      	ldr	r1, [r4, #12]
   83ce0:	f8ca 1014 	str.w	r1, [sl, #20]
   83ce4:	d006      	beq.n	83cf4 <_realloc_r+0x354>
   83ce6:	f104 0110 	add.w	r1, r4, #16
   83cea:	f10a 0218 	add.w	r2, sl, #24
   83cee:	e76e      	b.n	83bce <_realloc_r+0x22e>
   83cf0:	200706e0 	.word	0x200706e0
   83cf4:	6922      	ldr	r2, [r4, #16]
   83cf6:	f104 0118 	add.w	r1, r4, #24
   83cfa:	f8ca 2018 	str.w	r2, [sl, #24]
   83cfe:	6960      	ldr	r0, [r4, #20]
   83d00:	f10a 0220 	add.w	r2, sl, #32
   83d04:	f8ca 001c 	str.w	r0, [sl, #28]
   83d08:	e761      	b.n	83bce <_realloc_r+0x22e>
   83d0a:	bf00      	nop

00083d0c <_sbrk_r>:
   83d0c:	b538      	push	{r3, r4, r5, lr}
   83d0e:	2300      	movs	r3, #0
   83d10:	4c06      	ldr	r4, [pc, #24]	; (83d2c <_sbrk_r+0x20>)
   83d12:	4605      	mov	r5, r0
   83d14:	4608      	mov	r0, r1
   83d16:	6023      	str	r3, [r4, #0]
   83d18:	f7fc ff62 	bl	80be0 <_sbrk>
   83d1c:	1c43      	adds	r3, r0, #1
   83d1e:	d000      	beq.n	83d22 <_sbrk_r+0x16>
   83d20:	bd38      	pop	{r3, r4, r5, pc}
   83d22:	6823      	ldr	r3, [r4, #0]
   83d24:	2b00      	cmp	r3, #0
   83d26:	d0fb      	beq.n	83d20 <_sbrk_r+0x14>
   83d28:	602b      	str	r3, [r5, #0]
   83d2a:	bd38      	pop	{r3, r4, r5, pc}
   83d2c:	20070c84 	.word	0x20070c84

00083d30 <__sread>:
   83d30:	b510      	push	{r4, lr}
   83d32:	460c      	mov	r4, r1
   83d34:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83d38:	f000 fa22 	bl	84180 <_read_r>
   83d3c:	2800      	cmp	r0, #0
   83d3e:	db03      	blt.n	83d48 <__sread+0x18>
   83d40:	6d23      	ldr	r3, [r4, #80]	; 0x50
   83d42:	4403      	add	r3, r0
   83d44:	6523      	str	r3, [r4, #80]	; 0x50
   83d46:	bd10      	pop	{r4, pc}
   83d48:	89a3      	ldrh	r3, [r4, #12]
   83d4a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   83d4e:	81a3      	strh	r3, [r4, #12]
   83d50:	bd10      	pop	{r4, pc}
   83d52:	bf00      	nop

00083d54 <__swrite>:
   83d54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83d58:	460c      	mov	r4, r1
   83d5a:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   83d5e:	461f      	mov	r7, r3
   83d60:	05cb      	lsls	r3, r1, #23
   83d62:	4616      	mov	r6, r2
   83d64:	4605      	mov	r5, r0
   83d66:	d507      	bpl.n	83d78 <__swrite+0x24>
   83d68:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83d6c:	2302      	movs	r3, #2
   83d6e:	2200      	movs	r2, #0
   83d70:	f000 f9f0 	bl	84154 <_lseek_r>
   83d74:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   83d78:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   83d7c:	81a1      	strh	r1, [r4, #12]
   83d7e:	463b      	mov	r3, r7
   83d80:	4632      	mov	r2, r6
   83d82:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83d86:	4628      	mov	r0, r5
   83d88:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   83d8c:	f000 b8d0 	b.w	83f30 <_write_r>

00083d90 <__sseek>:
   83d90:	b510      	push	{r4, lr}
   83d92:	460c      	mov	r4, r1
   83d94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83d98:	f000 f9dc 	bl	84154 <_lseek_r>
   83d9c:	89a3      	ldrh	r3, [r4, #12]
   83d9e:	1c42      	adds	r2, r0, #1
   83da0:	bf0e      	itee	eq
   83da2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   83da6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   83daa:	6520      	strne	r0, [r4, #80]	; 0x50
   83dac:	81a3      	strh	r3, [r4, #12]
   83dae:	bd10      	pop	{r4, pc}

00083db0 <__sclose>:
   83db0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83db4:	f000 b934 	b.w	84020 <_close_r>

00083db8 <strlen>:
   83db8:	f020 0103 	bic.w	r1, r0, #3
   83dbc:	f010 0003 	ands.w	r0, r0, #3
   83dc0:	f1c0 0000 	rsb	r0, r0, #0
   83dc4:	f851 3b04 	ldr.w	r3, [r1], #4
   83dc8:	f100 0c04 	add.w	ip, r0, #4
   83dcc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   83dd0:	f06f 0200 	mvn.w	r2, #0
   83dd4:	bf1c      	itt	ne
   83dd6:	fa22 f20c 	lsrne.w	r2, r2, ip
   83dda:	4313      	orrne	r3, r2
   83ddc:	f04f 0c01 	mov.w	ip, #1
   83de0:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   83de4:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   83de8:	eba3 020c 	sub.w	r2, r3, ip
   83dec:	ea22 0203 	bic.w	r2, r2, r3
   83df0:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   83df4:	bf04      	itt	eq
   83df6:	f851 3b04 	ldreq.w	r3, [r1], #4
   83dfa:	3004      	addeq	r0, #4
   83dfc:	d0f4      	beq.n	83de8 <strlen+0x30>
   83dfe:	f1c2 0100 	rsb	r1, r2, #0
   83e02:	ea02 0201 	and.w	r2, r2, r1
   83e06:	fab2 f282 	clz	r2, r2
   83e0a:	f1c2 021f 	rsb	r2, r2, #31
   83e0e:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   83e12:	4770      	bx	lr

00083e14 <__swbuf_r>:
   83e14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83e16:	460d      	mov	r5, r1
   83e18:	4614      	mov	r4, r2
   83e1a:	4606      	mov	r6, r0
   83e1c:	b110      	cbz	r0, 83e24 <__swbuf_r+0x10>
   83e1e:	6b83      	ldr	r3, [r0, #56]	; 0x38
   83e20:	2b00      	cmp	r3, #0
   83e22:	d04b      	beq.n	83ebc <__swbuf_r+0xa8>
   83e24:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   83e28:	69a3      	ldr	r3, [r4, #24]
   83e2a:	b291      	uxth	r1, r2
   83e2c:	0708      	lsls	r0, r1, #28
   83e2e:	60a3      	str	r3, [r4, #8]
   83e30:	d539      	bpl.n	83ea6 <__swbuf_r+0x92>
   83e32:	6923      	ldr	r3, [r4, #16]
   83e34:	2b00      	cmp	r3, #0
   83e36:	d036      	beq.n	83ea6 <__swbuf_r+0x92>
   83e38:	b2ed      	uxtb	r5, r5
   83e3a:	0489      	lsls	r1, r1, #18
   83e3c:	462f      	mov	r7, r5
   83e3e:	d515      	bpl.n	83e6c <__swbuf_r+0x58>
   83e40:	6822      	ldr	r2, [r4, #0]
   83e42:	6961      	ldr	r1, [r4, #20]
   83e44:	1ad3      	subs	r3, r2, r3
   83e46:	428b      	cmp	r3, r1
   83e48:	da1c      	bge.n	83e84 <__swbuf_r+0x70>
   83e4a:	3301      	adds	r3, #1
   83e4c:	68a1      	ldr	r1, [r4, #8]
   83e4e:	1c50      	adds	r0, r2, #1
   83e50:	3901      	subs	r1, #1
   83e52:	60a1      	str	r1, [r4, #8]
   83e54:	6020      	str	r0, [r4, #0]
   83e56:	7015      	strb	r5, [r2, #0]
   83e58:	6962      	ldr	r2, [r4, #20]
   83e5a:	429a      	cmp	r2, r3
   83e5c:	d01a      	beq.n	83e94 <__swbuf_r+0x80>
   83e5e:	89a3      	ldrh	r3, [r4, #12]
   83e60:	07db      	lsls	r3, r3, #31
   83e62:	d501      	bpl.n	83e68 <__swbuf_r+0x54>
   83e64:	2d0a      	cmp	r5, #10
   83e66:	d015      	beq.n	83e94 <__swbuf_r+0x80>
   83e68:	4638      	mov	r0, r7
   83e6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83e6c:	6e61      	ldr	r1, [r4, #100]	; 0x64
   83e6e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   83e72:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
   83e76:	81a2      	strh	r2, [r4, #12]
   83e78:	6822      	ldr	r2, [r4, #0]
   83e7a:	6661      	str	r1, [r4, #100]	; 0x64
   83e7c:	6961      	ldr	r1, [r4, #20]
   83e7e:	1ad3      	subs	r3, r2, r3
   83e80:	428b      	cmp	r3, r1
   83e82:	dbe2      	blt.n	83e4a <__swbuf_r+0x36>
   83e84:	4621      	mov	r1, r4
   83e86:	4630      	mov	r0, r6
   83e88:	f7fe fd0a 	bl	828a0 <_fflush_r>
   83e8c:	b940      	cbnz	r0, 83ea0 <__swbuf_r+0x8c>
   83e8e:	2301      	movs	r3, #1
   83e90:	6822      	ldr	r2, [r4, #0]
   83e92:	e7db      	b.n	83e4c <__swbuf_r+0x38>
   83e94:	4621      	mov	r1, r4
   83e96:	4630      	mov	r0, r6
   83e98:	f7fe fd02 	bl	828a0 <_fflush_r>
   83e9c:	2800      	cmp	r0, #0
   83e9e:	d0e3      	beq.n	83e68 <__swbuf_r+0x54>
   83ea0:	f04f 37ff 	mov.w	r7, #4294967295
   83ea4:	e7e0      	b.n	83e68 <__swbuf_r+0x54>
   83ea6:	4621      	mov	r1, r4
   83ea8:	4630      	mov	r0, r6
   83eaa:	f7fe fbe9 	bl	82680 <__swsetup_r>
   83eae:	2800      	cmp	r0, #0
   83eb0:	d1f6      	bne.n	83ea0 <__swbuf_r+0x8c>
   83eb2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   83eb6:	6923      	ldr	r3, [r4, #16]
   83eb8:	b291      	uxth	r1, r2
   83eba:	e7bd      	b.n	83e38 <__swbuf_r+0x24>
   83ebc:	f7fe fd48 	bl	82950 <__sinit>
   83ec0:	e7b0      	b.n	83e24 <__swbuf_r+0x10>
   83ec2:	bf00      	nop

00083ec4 <_wcrtomb_r>:
   83ec4:	b5f0      	push	{r4, r5, r6, r7, lr}
   83ec6:	4606      	mov	r6, r0
   83ec8:	b085      	sub	sp, #20
   83eca:	461f      	mov	r7, r3
   83ecc:	b189      	cbz	r1, 83ef2 <_wcrtomb_r+0x2e>
   83ece:	4c10      	ldr	r4, [pc, #64]	; (83f10 <_wcrtomb_r+0x4c>)
   83ed0:	4d10      	ldr	r5, [pc, #64]	; (83f14 <_wcrtomb_r+0x50>)
   83ed2:	6824      	ldr	r4, [r4, #0]
   83ed4:	6b64      	ldr	r4, [r4, #52]	; 0x34
   83ed6:	2c00      	cmp	r4, #0
   83ed8:	bf08      	it	eq
   83eda:	462c      	moveq	r4, r5
   83edc:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   83ee0:	47a0      	blx	r4
   83ee2:	1c43      	adds	r3, r0, #1
   83ee4:	d103      	bne.n	83eee <_wcrtomb_r+0x2a>
   83ee6:	2200      	movs	r2, #0
   83ee8:	238a      	movs	r3, #138	; 0x8a
   83eea:	603a      	str	r2, [r7, #0]
   83eec:	6033      	str	r3, [r6, #0]
   83eee:	b005      	add	sp, #20
   83ef0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83ef2:	460c      	mov	r4, r1
   83ef4:	4a06      	ldr	r2, [pc, #24]	; (83f10 <_wcrtomb_r+0x4c>)
   83ef6:	4d07      	ldr	r5, [pc, #28]	; (83f14 <_wcrtomb_r+0x50>)
   83ef8:	6811      	ldr	r1, [r2, #0]
   83efa:	4622      	mov	r2, r4
   83efc:	6b4c      	ldr	r4, [r1, #52]	; 0x34
   83efe:	a901      	add	r1, sp, #4
   83f00:	2c00      	cmp	r4, #0
   83f02:	bf08      	it	eq
   83f04:	462c      	moveq	r4, r5
   83f06:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   83f0a:	47a0      	blx	r4
   83f0c:	e7e9      	b.n	83ee2 <_wcrtomb_r+0x1e>
   83f0e:	bf00      	nop
   83f10:	20070140 	.word	0x20070140
   83f14:	20070574 	.word	0x20070574

00083f18 <__ascii_wctomb>:
   83f18:	b119      	cbz	r1, 83f22 <__ascii_wctomb+0xa>
   83f1a:	2aff      	cmp	r2, #255	; 0xff
   83f1c:	d803      	bhi.n	83f26 <__ascii_wctomb+0xe>
   83f1e:	700a      	strb	r2, [r1, #0]
   83f20:	2101      	movs	r1, #1
   83f22:	4608      	mov	r0, r1
   83f24:	4770      	bx	lr
   83f26:	238a      	movs	r3, #138	; 0x8a
   83f28:	f04f 31ff 	mov.w	r1, #4294967295
   83f2c:	6003      	str	r3, [r0, #0]
   83f2e:	e7f8      	b.n	83f22 <__ascii_wctomb+0xa>

00083f30 <_write_r>:
   83f30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83f32:	460e      	mov	r6, r1
   83f34:	2500      	movs	r5, #0
   83f36:	4c08      	ldr	r4, [pc, #32]	; (83f58 <_write_r+0x28>)
   83f38:	4611      	mov	r1, r2
   83f3a:	4607      	mov	r7, r0
   83f3c:	461a      	mov	r2, r3
   83f3e:	4630      	mov	r0, r6
   83f40:	6025      	str	r5, [r4, #0]
   83f42:	f7fc fa61 	bl	80408 <_write>
   83f46:	1c43      	adds	r3, r0, #1
   83f48:	d000      	beq.n	83f4c <_write_r+0x1c>
   83f4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83f4c:	6823      	ldr	r3, [r4, #0]
   83f4e:	2b00      	cmp	r3, #0
   83f50:	d0fb      	beq.n	83f4a <_write_r+0x1a>
   83f52:	603b      	str	r3, [r7, #0]
   83f54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83f56:	bf00      	nop
   83f58:	20070c84 	.word	0x20070c84

00083f5c <__register_exitproc>:
   83f5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   83f60:	4d2c      	ldr	r5, [pc, #176]	; (84014 <__register_exitproc+0xb8>)
   83f62:	4606      	mov	r6, r0
   83f64:	6828      	ldr	r0, [r5, #0]
   83f66:	4698      	mov	r8, r3
   83f68:	460f      	mov	r7, r1
   83f6a:	4691      	mov	r9, r2
   83f6c:	f7ff f8b0 	bl	830d0 <__retarget_lock_acquire_recursive>
   83f70:	4b29      	ldr	r3, [pc, #164]	; (84018 <__register_exitproc+0xbc>)
   83f72:	681c      	ldr	r4, [r3, #0]
   83f74:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   83f78:	2b00      	cmp	r3, #0
   83f7a:	d03e      	beq.n	83ffa <__register_exitproc+0x9e>
   83f7c:	685a      	ldr	r2, [r3, #4]
   83f7e:	2a1f      	cmp	r2, #31
   83f80:	dc1c      	bgt.n	83fbc <__register_exitproc+0x60>
   83f82:	f102 0e01 	add.w	lr, r2, #1
   83f86:	b176      	cbz	r6, 83fa6 <__register_exitproc+0x4a>
   83f88:	2101      	movs	r1, #1
   83f8a:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   83f8e:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   83f92:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   83f96:	4091      	lsls	r1, r2
   83f98:	4308      	orrs	r0, r1
   83f9a:	2e02      	cmp	r6, #2
   83f9c:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   83fa0:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   83fa4:	d023      	beq.n	83fee <__register_exitproc+0x92>
   83fa6:	3202      	adds	r2, #2
   83fa8:	f8c3 e004 	str.w	lr, [r3, #4]
   83fac:	6828      	ldr	r0, [r5, #0]
   83fae:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   83fb2:	f7ff f88f 	bl	830d4 <__retarget_lock_release_recursive>
   83fb6:	2000      	movs	r0, #0
   83fb8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   83fbc:	4b17      	ldr	r3, [pc, #92]	; (8401c <__register_exitproc+0xc0>)
   83fbe:	b30b      	cbz	r3, 84004 <__register_exitproc+0xa8>
   83fc0:	f44f 70c8 	mov.w	r0, #400	; 0x190
   83fc4:	f7ff f900 	bl	831c8 <malloc>
   83fc8:	4603      	mov	r3, r0
   83fca:	b1d8      	cbz	r0, 84004 <__register_exitproc+0xa8>
   83fcc:	2000      	movs	r0, #0
   83fce:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   83fd2:	f04f 0e01 	mov.w	lr, #1
   83fd6:	6058      	str	r0, [r3, #4]
   83fd8:	6019      	str	r1, [r3, #0]
   83fda:	4602      	mov	r2, r0
   83fdc:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   83fe0:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   83fe4:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   83fe8:	2e00      	cmp	r6, #0
   83fea:	d0dc      	beq.n	83fa6 <__register_exitproc+0x4a>
   83fec:	e7cc      	b.n	83f88 <__register_exitproc+0x2c>
   83fee:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   83ff2:	4301      	orrs	r1, r0
   83ff4:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   83ff8:	e7d5      	b.n	83fa6 <__register_exitproc+0x4a>
   83ffa:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   83ffe:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   84002:	e7bb      	b.n	83f7c <__register_exitproc+0x20>
   84004:	6828      	ldr	r0, [r5, #0]
   84006:	f7ff f865 	bl	830d4 <__retarget_lock_release_recursive>
   8400a:	f04f 30ff 	mov.w	r0, #4294967295
   8400e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   84012:	bf00      	nop
   84014:	20070570 	.word	0x20070570
   84018:	00084500 	.word	0x00084500
   8401c:	000831c9 	.word	0x000831c9

00084020 <_close_r>:
   84020:	b538      	push	{r3, r4, r5, lr}
   84022:	2300      	movs	r3, #0
   84024:	4c06      	ldr	r4, [pc, #24]	; (84040 <_close_r+0x20>)
   84026:	4605      	mov	r5, r0
   84028:	4608      	mov	r0, r1
   8402a:	6023      	str	r3, [r4, #0]
   8402c:	f7fc fdf4 	bl	80c18 <_close>
   84030:	1c43      	adds	r3, r0, #1
   84032:	d000      	beq.n	84036 <_close_r+0x16>
   84034:	bd38      	pop	{r3, r4, r5, pc}
   84036:	6823      	ldr	r3, [r4, #0]
   84038:	2b00      	cmp	r3, #0
   8403a:	d0fb      	beq.n	84034 <_close_r+0x14>
   8403c:	602b      	str	r3, [r5, #0]
   8403e:	bd38      	pop	{r3, r4, r5, pc}
   84040:	20070c84 	.word	0x20070c84

00084044 <_fclose_r>:
   84044:	b570      	push	{r4, r5, r6, lr}
   84046:	b159      	cbz	r1, 84060 <_fclose_r+0x1c>
   84048:	4605      	mov	r5, r0
   8404a:	460c      	mov	r4, r1
   8404c:	b110      	cbz	r0, 84054 <_fclose_r+0x10>
   8404e:	6b83      	ldr	r3, [r0, #56]	; 0x38
   84050:	2b00      	cmp	r3, #0
   84052:	d03c      	beq.n	840ce <_fclose_r+0x8a>
   84054:	6e63      	ldr	r3, [r4, #100]	; 0x64
   84056:	07d8      	lsls	r0, r3, #31
   84058:	d505      	bpl.n	84066 <_fclose_r+0x22>
   8405a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8405e:	b92b      	cbnz	r3, 8406c <_fclose_r+0x28>
   84060:	2600      	movs	r6, #0
   84062:	4630      	mov	r0, r6
   84064:	bd70      	pop	{r4, r5, r6, pc}
   84066:	89a3      	ldrh	r3, [r4, #12]
   84068:	0599      	lsls	r1, r3, #22
   8406a:	d53c      	bpl.n	840e6 <_fclose_r+0xa2>
   8406c:	4621      	mov	r1, r4
   8406e:	4628      	mov	r0, r5
   84070:	f7fe fb7a 	bl	82768 <__sflush_r>
   84074:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   84076:	4606      	mov	r6, r0
   84078:	b133      	cbz	r3, 84088 <_fclose_r+0x44>
   8407a:	69e1      	ldr	r1, [r4, #28]
   8407c:	4628      	mov	r0, r5
   8407e:	4798      	blx	r3
   84080:	2800      	cmp	r0, #0
   84082:	bfb8      	it	lt
   84084:	f04f 36ff 	movlt.w	r6, #4294967295
   84088:	89a3      	ldrh	r3, [r4, #12]
   8408a:	061a      	lsls	r2, r3, #24
   8408c:	d422      	bmi.n	840d4 <_fclose_r+0x90>
   8408e:	6b21      	ldr	r1, [r4, #48]	; 0x30
   84090:	b141      	cbz	r1, 840a4 <_fclose_r+0x60>
   84092:	f104 0340 	add.w	r3, r4, #64	; 0x40
   84096:	4299      	cmp	r1, r3
   84098:	d002      	beq.n	840a0 <_fclose_r+0x5c>
   8409a:	4628      	mov	r0, r5
   8409c:	f7fe fd7e 	bl	82b9c <_free_r>
   840a0:	2300      	movs	r3, #0
   840a2:	6323      	str	r3, [r4, #48]	; 0x30
   840a4:	6c61      	ldr	r1, [r4, #68]	; 0x44
   840a6:	b121      	cbz	r1, 840b2 <_fclose_r+0x6e>
   840a8:	4628      	mov	r0, r5
   840aa:	f7fe fd77 	bl	82b9c <_free_r>
   840ae:	2300      	movs	r3, #0
   840b0:	6463      	str	r3, [r4, #68]	; 0x44
   840b2:	f7fe fc7d 	bl	829b0 <__sfp_lock_acquire>
   840b6:	2200      	movs	r2, #0
   840b8:	6e63      	ldr	r3, [r4, #100]	; 0x64
   840ba:	81a2      	strh	r2, [r4, #12]
   840bc:	07db      	lsls	r3, r3, #31
   840be:	d50e      	bpl.n	840de <_fclose_r+0x9a>
   840c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   840c2:	f7ff f803 	bl	830cc <__retarget_lock_close_recursive>
   840c6:	f7fe fc79 	bl	829bc <__sfp_lock_release>
   840ca:	4630      	mov	r0, r6
   840cc:	bd70      	pop	{r4, r5, r6, pc}
   840ce:	f7fe fc3f 	bl	82950 <__sinit>
   840d2:	e7bf      	b.n	84054 <_fclose_r+0x10>
   840d4:	6921      	ldr	r1, [r4, #16]
   840d6:	4628      	mov	r0, r5
   840d8:	f7fe fd60 	bl	82b9c <_free_r>
   840dc:	e7d7      	b.n	8408e <_fclose_r+0x4a>
   840de:	6da0      	ldr	r0, [r4, #88]	; 0x58
   840e0:	f7fe fff8 	bl	830d4 <__retarget_lock_release_recursive>
   840e4:	e7ec      	b.n	840c0 <_fclose_r+0x7c>
   840e6:	6da0      	ldr	r0, [r4, #88]	; 0x58
   840e8:	f7fe fff2 	bl	830d0 <__retarget_lock_acquire_recursive>
   840ec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   840f0:	2b00      	cmp	r3, #0
   840f2:	d1bb      	bne.n	8406c <_fclose_r+0x28>
   840f4:	6e66      	ldr	r6, [r4, #100]	; 0x64
   840f6:	f016 0601 	ands.w	r6, r6, #1
   840fa:	d1b1      	bne.n	84060 <_fclose_r+0x1c>
   840fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
   840fe:	f7fe ffe9 	bl	830d4 <__retarget_lock_release_recursive>
   84102:	4630      	mov	r0, r6
   84104:	bd70      	pop	{r4, r5, r6, pc}
   84106:	bf00      	nop

00084108 <_fstat_r>:
   84108:	b570      	push	{r4, r5, r6, lr}
   8410a:	460d      	mov	r5, r1
   8410c:	2300      	movs	r3, #0
   8410e:	4c07      	ldr	r4, [pc, #28]	; (8412c <_fstat_r+0x24>)
   84110:	4606      	mov	r6, r0
   84112:	4611      	mov	r1, r2
   84114:	4628      	mov	r0, r5
   84116:	6023      	str	r3, [r4, #0]
   84118:	f7fc fd81 	bl	80c1e <_fstat>
   8411c:	1c43      	adds	r3, r0, #1
   8411e:	d000      	beq.n	84122 <_fstat_r+0x1a>
   84120:	bd70      	pop	{r4, r5, r6, pc}
   84122:	6823      	ldr	r3, [r4, #0]
   84124:	2b00      	cmp	r3, #0
   84126:	d0fb      	beq.n	84120 <_fstat_r+0x18>
   84128:	6033      	str	r3, [r6, #0]
   8412a:	bd70      	pop	{r4, r5, r6, pc}
   8412c:	20070c84 	.word	0x20070c84

00084130 <_isatty_r>:
   84130:	b538      	push	{r3, r4, r5, lr}
   84132:	2300      	movs	r3, #0
   84134:	4c06      	ldr	r4, [pc, #24]	; (84150 <_isatty_r+0x20>)
   84136:	4605      	mov	r5, r0
   84138:	4608      	mov	r0, r1
   8413a:	6023      	str	r3, [r4, #0]
   8413c:	f7fc fd74 	bl	80c28 <_isatty>
   84140:	1c43      	adds	r3, r0, #1
   84142:	d000      	beq.n	84146 <_isatty_r+0x16>
   84144:	bd38      	pop	{r3, r4, r5, pc}
   84146:	6823      	ldr	r3, [r4, #0]
   84148:	2b00      	cmp	r3, #0
   8414a:	d0fb      	beq.n	84144 <_isatty_r+0x14>
   8414c:	602b      	str	r3, [r5, #0]
   8414e:	bd38      	pop	{r3, r4, r5, pc}
   84150:	20070c84 	.word	0x20070c84

00084154 <_lseek_r>:
   84154:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   84156:	460e      	mov	r6, r1
   84158:	2500      	movs	r5, #0
   8415a:	4c08      	ldr	r4, [pc, #32]	; (8417c <_lseek_r+0x28>)
   8415c:	4611      	mov	r1, r2
   8415e:	4607      	mov	r7, r0
   84160:	461a      	mov	r2, r3
   84162:	4630      	mov	r0, r6
   84164:	6025      	str	r5, [r4, #0]
   84166:	f7fc fd61 	bl	80c2c <_lseek>
   8416a:	1c43      	adds	r3, r0, #1
   8416c:	d000      	beq.n	84170 <_lseek_r+0x1c>
   8416e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84170:	6823      	ldr	r3, [r4, #0]
   84172:	2b00      	cmp	r3, #0
   84174:	d0fb      	beq.n	8416e <_lseek_r+0x1a>
   84176:	603b      	str	r3, [r7, #0]
   84178:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8417a:	bf00      	nop
   8417c:	20070c84 	.word	0x20070c84

00084180 <_read_r>:
   84180:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   84182:	460e      	mov	r6, r1
   84184:	2500      	movs	r5, #0
   84186:	4c08      	ldr	r4, [pc, #32]	; (841a8 <_read_r+0x28>)
   84188:	4611      	mov	r1, r2
   8418a:	4607      	mov	r7, r0
   8418c:	461a      	mov	r2, r3
   8418e:	4630      	mov	r0, r6
   84190:	6025      	str	r5, [r4, #0]
   84192:	f7fc f91b 	bl	803cc <_read>
   84196:	1c43      	adds	r3, r0, #1
   84198:	d000      	beq.n	8419c <_read_r+0x1c>
   8419a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8419c:	6823      	ldr	r3, [r4, #0]
   8419e:	2b00      	cmp	r3, #0
   841a0:	d0fb      	beq.n	8419a <_read_r+0x1a>
   841a2:	603b      	str	r3, [r7, #0]
   841a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   841a6:	bf00      	nop
   841a8:	20070c84 	.word	0x20070c84

000841ac <__aeabi_uldivmod>:
   841ac:	b953      	cbnz	r3, 841c4 <__aeabi_uldivmod+0x18>
   841ae:	b94a      	cbnz	r2, 841c4 <__aeabi_uldivmod+0x18>
   841b0:	2900      	cmp	r1, #0
   841b2:	bf08      	it	eq
   841b4:	2800      	cmpeq	r0, #0
   841b6:	bf1c      	itt	ne
   841b8:	f04f 31ff 	movne.w	r1, #4294967295
   841bc:	f04f 30ff 	movne.w	r0, #4294967295
   841c0:	f000 b97a 	b.w	844b8 <__aeabi_idiv0>
   841c4:	f1ad 0c08 	sub.w	ip, sp, #8
   841c8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   841cc:	f000 f806 	bl	841dc <__udivmoddi4>
   841d0:	f8dd e004 	ldr.w	lr, [sp, #4]
   841d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   841d8:	b004      	add	sp, #16
   841da:	4770      	bx	lr

000841dc <__udivmoddi4>:
   841dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   841e0:	468c      	mov	ip, r1
   841e2:	460e      	mov	r6, r1
   841e4:	4604      	mov	r4, r0
   841e6:	9d08      	ldr	r5, [sp, #32]
   841e8:	2b00      	cmp	r3, #0
   841ea:	d150      	bne.n	8428e <__udivmoddi4+0xb2>
   841ec:	428a      	cmp	r2, r1
   841ee:	4617      	mov	r7, r2
   841f0:	d96c      	bls.n	842cc <__udivmoddi4+0xf0>
   841f2:	fab2 fe82 	clz	lr, r2
   841f6:	f1be 0f00 	cmp.w	lr, #0
   841fa:	d00b      	beq.n	84214 <__udivmoddi4+0x38>
   841fc:	f1ce 0c20 	rsb	ip, lr, #32
   84200:	fa01 f60e 	lsl.w	r6, r1, lr
   84204:	fa20 fc0c 	lsr.w	ip, r0, ip
   84208:	fa02 f70e 	lsl.w	r7, r2, lr
   8420c:	ea4c 0c06 	orr.w	ip, ip, r6
   84210:	fa00 f40e 	lsl.w	r4, r0, lr
   84214:	0c3a      	lsrs	r2, r7, #16
   84216:	fbbc f9f2 	udiv	r9, ip, r2
   8421a:	b2bb      	uxth	r3, r7
   8421c:	fb02 cc19 	mls	ip, r2, r9, ip
   84220:	fb09 fa03 	mul.w	sl, r9, r3
   84224:	ea4f 4814 	mov.w	r8, r4, lsr #16
   84228:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   8422c:	45b2      	cmp	sl, r6
   8422e:	d90a      	bls.n	84246 <__udivmoddi4+0x6a>
   84230:	19f6      	adds	r6, r6, r7
   84232:	f109 31ff 	add.w	r1, r9, #4294967295
   84236:	f080 8125 	bcs.w	84484 <__udivmoddi4+0x2a8>
   8423a:	45b2      	cmp	sl, r6
   8423c:	f240 8122 	bls.w	84484 <__udivmoddi4+0x2a8>
   84240:	f1a9 0902 	sub.w	r9, r9, #2
   84244:	443e      	add	r6, r7
   84246:	eba6 060a 	sub.w	r6, r6, sl
   8424a:	fbb6 f0f2 	udiv	r0, r6, r2
   8424e:	fb02 6610 	mls	r6, r2, r0, r6
   84252:	fb00 f303 	mul.w	r3, r0, r3
   84256:	b2a4      	uxth	r4, r4
   84258:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   8425c:	42a3      	cmp	r3, r4
   8425e:	d909      	bls.n	84274 <__udivmoddi4+0x98>
   84260:	19e4      	adds	r4, r4, r7
   84262:	f100 32ff 	add.w	r2, r0, #4294967295
   84266:	f080 810b 	bcs.w	84480 <__udivmoddi4+0x2a4>
   8426a:	42a3      	cmp	r3, r4
   8426c:	f240 8108 	bls.w	84480 <__udivmoddi4+0x2a4>
   84270:	3802      	subs	r0, #2
   84272:	443c      	add	r4, r7
   84274:	2100      	movs	r1, #0
   84276:	1ae4      	subs	r4, r4, r3
   84278:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   8427c:	2d00      	cmp	r5, #0
   8427e:	d062      	beq.n	84346 <__udivmoddi4+0x16a>
   84280:	2300      	movs	r3, #0
   84282:	fa24 f40e 	lsr.w	r4, r4, lr
   84286:	602c      	str	r4, [r5, #0]
   84288:	606b      	str	r3, [r5, #4]
   8428a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8428e:	428b      	cmp	r3, r1
   84290:	d907      	bls.n	842a2 <__udivmoddi4+0xc6>
   84292:	2d00      	cmp	r5, #0
   84294:	d055      	beq.n	84342 <__udivmoddi4+0x166>
   84296:	2100      	movs	r1, #0
   84298:	e885 0041 	stmia.w	r5, {r0, r6}
   8429c:	4608      	mov	r0, r1
   8429e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   842a2:	fab3 f183 	clz	r1, r3
   842a6:	2900      	cmp	r1, #0
   842a8:	f040 808f 	bne.w	843ca <__udivmoddi4+0x1ee>
   842ac:	42b3      	cmp	r3, r6
   842ae:	d302      	bcc.n	842b6 <__udivmoddi4+0xda>
   842b0:	4282      	cmp	r2, r0
   842b2:	f200 80fc 	bhi.w	844ae <__udivmoddi4+0x2d2>
   842b6:	1a84      	subs	r4, r0, r2
   842b8:	eb66 0603 	sbc.w	r6, r6, r3
   842bc:	2001      	movs	r0, #1
   842be:	46b4      	mov	ip, r6
   842c0:	2d00      	cmp	r5, #0
   842c2:	d040      	beq.n	84346 <__udivmoddi4+0x16a>
   842c4:	e885 1010 	stmia.w	r5, {r4, ip}
   842c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   842cc:	b912      	cbnz	r2, 842d4 <__udivmoddi4+0xf8>
   842ce:	2701      	movs	r7, #1
   842d0:	fbb7 f7f2 	udiv	r7, r7, r2
   842d4:	fab7 fe87 	clz	lr, r7
   842d8:	f1be 0f00 	cmp.w	lr, #0
   842dc:	d135      	bne.n	8434a <__udivmoddi4+0x16e>
   842de:	2101      	movs	r1, #1
   842e0:	1bf6      	subs	r6, r6, r7
   842e2:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   842e6:	fa1f f887 	uxth.w	r8, r7
   842ea:	fbb6 f2fc 	udiv	r2, r6, ip
   842ee:	fb0c 6612 	mls	r6, ip, r2, r6
   842f2:	fb08 f002 	mul.w	r0, r8, r2
   842f6:	0c23      	lsrs	r3, r4, #16
   842f8:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   842fc:	42b0      	cmp	r0, r6
   842fe:	d907      	bls.n	84310 <__udivmoddi4+0x134>
   84300:	19f6      	adds	r6, r6, r7
   84302:	f102 33ff 	add.w	r3, r2, #4294967295
   84306:	d202      	bcs.n	8430e <__udivmoddi4+0x132>
   84308:	42b0      	cmp	r0, r6
   8430a:	f200 80d2 	bhi.w	844b2 <__udivmoddi4+0x2d6>
   8430e:	461a      	mov	r2, r3
   84310:	1a36      	subs	r6, r6, r0
   84312:	fbb6 f0fc 	udiv	r0, r6, ip
   84316:	fb0c 6610 	mls	r6, ip, r0, r6
   8431a:	fb08 f800 	mul.w	r8, r8, r0
   8431e:	b2a3      	uxth	r3, r4
   84320:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   84324:	45a0      	cmp	r8, r4
   84326:	d907      	bls.n	84338 <__udivmoddi4+0x15c>
   84328:	19e4      	adds	r4, r4, r7
   8432a:	f100 33ff 	add.w	r3, r0, #4294967295
   8432e:	d202      	bcs.n	84336 <__udivmoddi4+0x15a>
   84330:	45a0      	cmp	r8, r4
   84332:	f200 80b9 	bhi.w	844a8 <__udivmoddi4+0x2cc>
   84336:	4618      	mov	r0, r3
   84338:	eba4 0408 	sub.w	r4, r4, r8
   8433c:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   84340:	e79c      	b.n	8427c <__udivmoddi4+0xa0>
   84342:	4629      	mov	r1, r5
   84344:	4628      	mov	r0, r5
   84346:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8434a:	fa07 f70e 	lsl.w	r7, r7, lr
   8434e:	f1ce 0320 	rsb	r3, lr, #32
   84352:	fa26 f203 	lsr.w	r2, r6, r3
   84356:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   8435a:	fbb2 f1fc 	udiv	r1, r2, ip
   8435e:	fa1f f887 	uxth.w	r8, r7
   84362:	fb0c 2211 	mls	r2, ip, r1, r2
   84366:	fa06 f60e 	lsl.w	r6, r6, lr
   8436a:	fa20 f303 	lsr.w	r3, r0, r3
   8436e:	fb01 f908 	mul.w	r9, r1, r8
   84372:	4333      	orrs	r3, r6
   84374:	0c1e      	lsrs	r6, r3, #16
   84376:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   8437a:	45b1      	cmp	r9, r6
   8437c:	fa00 f40e 	lsl.w	r4, r0, lr
   84380:	d909      	bls.n	84396 <__udivmoddi4+0x1ba>
   84382:	19f6      	adds	r6, r6, r7
   84384:	f101 32ff 	add.w	r2, r1, #4294967295
   84388:	f080 808c 	bcs.w	844a4 <__udivmoddi4+0x2c8>
   8438c:	45b1      	cmp	r9, r6
   8438e:	f240 8089 	bls.w	844a4 <__udivmoddi4+0x2c8>
   84392:	3902      	subs	r1, #2
   84394:	443e      	add	r6, r7
   84396:	eba6 0609 	sub.w	r6, r6, r9
   8439a:	fbb6 f0fc 	udiv	r0, r6, ip
   8439e:	fb0c 6210 	mls	r2, ip, r0, r6
   843a2:	fb00 f908 	mul.w	r9, r0, r8
   843a6:	b29e      	uxth	r6, r3
   843a8:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   843ac:	45b1      	cmp	r9, r6
   843ae:	d907      	bls.n	843c0 <__udivmoddi4+0x1e4>
   843b0:	19f6      	adds	r6, r6, r7
   843b2:	f100 33ff 	add.w	r3, r0, #4294967295
   843b6:	d271      	bcs.n	8449c <__udivmoddi4+0x2c0>
   843b8:	45b1      	cmp	r9, r6
   843ba:	d96f      	bls.n	8449c <__udivmoddi4+0x2c0>
   843bc:	3802      	subs	r0, #2
   843be:	443e      	add	r6, r7
   843c0:	eba6 0609 	sub.w	r6, r6, r9
   843c4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   843c8:	e78f      	b.n	842ea <__udivmoddi4+0x10e>
   843ca:	f1c1 0720 	rsb	r7, r1, #32
   843ce:	fa22 f807 	lsr.w	r8, r2, r7
   843d2:	408b      	lsls	r3, r1
   843d4:	ea48 0303 	orr.w	r3, r8, r3
   843d8:	fa26 f407 	lsr.w	r4, r6, r7
   843dc:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   843e0:	fbb4 f9fe 	udiv	r9, r4, lr
   843e4:	fa1f fc83 	uxth.w	ip, r3
   843e8:	fb0e 4419 	mls	r4, lr, r9, r4
   843ec:	408e      	lsls	r6, r1
   843ee:	fa20 f807 	lsr.w	r8, r0, r7
   843f2:	fb09 fa0c 	mul.w	sl, r9, ip
   843f6:	ea48 0806 	orr.w	r8, r8, r6
   843fa:	ea4f 4618 	mov.w	r6, r8, lsr #16
   843fe:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   84402:	45a2      	cmp	sl, r4
   84404:	fa02 f201 	lsl.w	r2, r2, r1
   84408:	fa00 f601 	lsl.w	r6, r0, r1
   8440c:	d908      	bls.n	84420 <__udivmoddi4+0x244>
   8440e:	18e4      	adds	r4, r4, r3
   84410:	f109 30ff 	add.w	r0, r9, #4294967295
   84414:	d244      	bcs.n	844a0 <__udivmoddi4+0x2c4>
   84416:	45a2      	cmp	sl, r4
   84418:	d942      	bls.n	844a0 <__udivmoddi4+0x2c4>
   8441a:	f1a9 0902 	sub.w	r9, r9, #2
   8441e:	441c      	add	r4, r3
   84420:	eba4 040a 	sub.w	r4, r4, sl
   84424:	fbb4 f0fe 	udiv	r0, r4, lr
   84428:	fb0e 4410 	mls	r4, lr, r0, r4
   8442c:	fb00 fc0c 	mul.w	ip, r0, ip
   84430:	fa1f f888 	uxth.w	r8, r8
   84434:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   84438:	45a4      	cmp	ip, r4
   8443a:	d907      	bls.n	8444c <__udivmoddi4+0x270>
   8443c:	18e4      	adds	r4, r4, r3
   8443e:	f100 3eff 	add.w	lr, r0, #4294967295
   84442:	d229      	bcs.n	84498 <__udivmoddi4+0x2bc>
   84444:	45a4      	cmp	ip, r4
   84446:	d927      	bls.n	84498 <__udivmoddi4+0x2bc>
   84448:	3802      	subs	r0, #2
   8444a:	441c      	add	r4, r3
   8444c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   84450:	fba0 8902 	umull	r8, r9, r0, r2
   84454:	eba4 0c0c 	sub.w	ip, r4, ip
   84458:	45cc      	cmp	ip, r9
   8445a:	46c2      	mov	sl, r8
   8445c:	46ce      	mov	lr, r9
   8445e:	d315      	bcc.n	8448c <__udivmoddi4+0x2b0>
   84460:	d012      	beq.n	84488 <__udivmoddi4+0x2ac>
   84462:	b155      	cbz	r5, 8447a <__udivmoddi4+0x29e>
   84464:	ebb6 030a 	subs.w	r3, r6, sl
   84468:	eb6c 060e 	sbc.w	r6, ip, lr
   8446c:	fa06 f707 	lsl.w	r7, r6, r7
   84470:	40cb      	lsrs	r3, r1
   84472:	431f      	orrs	r7, r3
   84474:	40ce      	lsrs	r6, r1
   84476:	602f      	str	r7, [r5, #0]
   84478:	606e      	str	r6, [r5, #4]
   8447a:	2100      	movs	r1, #0
   8447c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84480:	4610      	mov	r0, r2
   84482:	e6f7      	b.n	84274 <__udivmoddi4+0x98>
   84484:	4689      	mov	r9, r1
   84486:	e6de      	b.n	84246 <__udivmoddi4+0x6a>
   84488:	4546      	cmp	r6, r8
   8448a:	d2ea      	bcs.n	84462 <__udivmoddi4+0x286>
   8448c:	ebb8 0a02 	subs.w	sl, r8, r2
   84490:	eb69 0e03 	sbc.w	lr, r9, r3
   84494:	3801      	subs	r0, #1
   84496:	e7e4      	b.n	84462 <__udivmoddi4+0x286>
   84498:	4670      	mov	r0, lr
   8449a:	e7d7      	b.n	8444c <__udivmoddi4+0x270>
   8449c:	4618      	mov	r0, r3
   8449e:	e78f      	b.n	843c0 <__udivmoddi4+0x1e4>
   844a0:	4681      	mov	r9, r0
   844a2:	e7bd      	b.n	84420 <__udivmoddi4+0x244>
   844a4:	4611      	mov	r1, r2
   844a6:	e776      	b.n	84396 <__udivmoddi4+0x1ba>
   844a8:	3802      	subs	r0, #2
   844aa:	443c      	add	r4, r7
   844ac:	e744      	b.n	84338 <__udivmoddi4+0x15c>
   844ae:	4608      	mov	r0, r1
   844b0:	e706      	b.n	842c0 <__udivmoddi4+0xe4>
   844b2:	3a02      	subs	r2, #2
   844b4:	443e      	add	r6, r7
   844b6:	e72b      	b.n	84310 <__udivmoddi4+0x134>

000844b8 <__aeabi_idiv0>:
   844b8:	4770      	bx	lr
   844ba:	bf00      	nop
   844bc:	736e6f43 	.word	0x736e6f43
   844c0:	20656c6f 	.word	0x20656c6f
   844c4:	64616572 	.word	0x64616572
   844c8:	00000a79 	.word	0x00000a79
   844cc:	3d3d3d3d 	.word	0x3d3d3d3d
   844d0:	3d3d3d3d 	.word	0x3d3d3d3d
   844d4:	3d3d3d3d 	.word	0x3d3d3d3d
   844d8:	00000a3d 	.word	0x00000a3d
   844dc:	762d4152 	.word	0x762d4152
   844e0:	65756c61 	.word	0x65756c61
   844e4:	6c25203a 	.word	0x6c25203a
   844e8:	2d2d2075 	.word	0x2d2d2075
   844ec:	202d2d2d 	.word	0x202d2d2d
   844f0:	762d4352 	.word	0x762d4352
   844f4:	65756c61 	.word	0x65756c61
   844f8:	6c25203a 	.word	0x6c25203a
   844fc:	00000a75 	.word	0x00000a75

00084500 <_global_impure_ptr>:
   84500:	20070148 33323130 37363534 42413938     H.. 0123456789AB
   84510:	46454443 00000000 33323130 37363534     CDEF....01234567
   84520:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   84530:	0000296c                                l)..

00084534 <blanks.7217>:
   84534:	20202020 20202020 20202020 20202020                     

00084544 <zeroes.7218>:
   84544:	30303030 30303030 30303030 30303030     0000000000000000
   84554:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00084564 <_ctype_>:
   84564:	20202000 20202020 28282020 20282828     .         ((((( 
   84574:	20202020 20202020 20202020 20202020                     
   84584:	10108820 10101010 10101010 10101010      ...............
   84594:	04040410 04040404 10040404 10101010     ................
   845a4:	41411010 41414141 01010101 01010101     ..AAAAAA........
   845b4:	01010101 01010101 01010101 10101010     ................
   845c4:	42421010 42424242 02020202 02020202     ..BBBBBB........
   845d4:	02020202 02020202 02020202 10101010     ................
   845e4:	00000020 00000000 00000000 00000000      ...............
	...

00084668 <_init>:
   84668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8466a:	bf00      	nop
   8466c:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8466e:	bc08      	pop	{r3}
   84670:	469e      	mov	lr, r3
   84672:	4770      	bx	lr

00084674 <__init_array_start>:
   84674:	00082749 	.word	0x00082749

00084678 <__frame_dummy_init_array_entry>:
   84678:	00080119                                ....

0008467c <_fini>:
   8467c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8467e:	bf00      	nop
   84680:	bcf8      	pop	{r3, r4, r5, r6, r7}
   84682:	bc08      	pop	{r3}
   84684:	469e      	mov	lr, r3
   84686:	4770      	bx	lr

00084688 <__fini_array_start>:
   84688:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
	...

2007000c <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4a14      	ldr	r2, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b13      	ldr	r3, [r2, #48]	; 0x30
20070048:	f023 0303 	bic.w	r3, r3, #3
2007004c:	f043 0301 	orr.w	r3, r3, #1
20070050:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070054:	f013 0f08 	tst.w	r3, #8
20070058:	d0fb      	beq.n	20070052 <SystemInit+0x46>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005a:	4a12      	ldr	r2, [pc, #72]	; (200700a4 <SystemInit+0x98>)
2007005c:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
2007005e:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070060:	461a      	mov	r2, r3
20070062:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070064:	f013 0f02 	tst.w	r3, #2
20070068:	d0fb      	beq.n	20070062 <SystemInit+0x56>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006a:	2211      	movs	r2, #17
2007006c:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
2007006e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070070:	461a      	mov	r2, r3
20070072:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070074:	f013 0f08 	tst.w	r3, #8
20070078:	d0fb      	beq.n	20070072 <SystemInit+0x66>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007a:	2212      	movs	r2, #18
2007007c:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070080:	461a      	mov	r2, r3
20070082:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070084:	f013 0f08 	tst.w	r3, #8
20070088:	d0fb      	beq.n	20070082 <SystemInit+0x76>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008a:	4a07      	ldr	r2, [pc, #28]	; (200700a8 <SystemInit+0x9c>)
2007008c:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
2007008e:	601a      	str	r2, [r3, #0]
20070090:	4770      	bx	lr
20070092:	bf00      	nop
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	2007013c 	.word	0x2007013c

200700b0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d915      	bls.n	200700e2 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b6:	4b1b      	ldr	r3, [pc, #108]	; (20070124 <system_init_flash+0x74>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d919      	bls.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700bc:	4b1a      	ldr	r3, [pc, #104]	; (20070128 <system_init_flash+0x78>)
200700be:	4298      	cmp	r0, r3
200700c0:	d91e      	bls.n	20070100 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700c2:	4b1a      	ldr	r3, [pc, #104]	; (2007012c <system_init_flash+0x7c>)
200700c4:	4298      	cmp	r0, r3
200700c6:	d923      	bls.n	20070110 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700c8:	4b19      	ldr	r3, [pc, #100]	; (20070130 <system_init_flash+0x80>)
200700ca:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700cc:	bf94      	ite	ls
200700ce:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700d2:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700d6:	4a17      	ldr	r2, [pc, #92]	; (20070134 <system_init_flash+0x84>)
200700d8:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700da:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700de:	6013      	str	r3, [r2, #0]
200700e0:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700e2:	2300      	movs	r3, #0
200700e4:	4a13      	ldr	r2, [pc, #76]	; (20070134 <system_init_flash+0x84>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700f0:	f44f 7380 	mov.w	r3, #256	; 0x100
200700f4:	4a0f      	ldr	r2, [pc, #60]	; (20070134 <system_init_flash+0x84>)
200700f6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700f8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700fc:	6013      	str	r3, [r2, #0]
200700fe:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20070100:	f44f 7300 	mov.w	r3, #512	; 0x200
20070104:	4a0b      	ldr	r2, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070106:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20070108:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007010c:	6013      	str	r3, [r2, #0]
2007010e:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070110:	f44f 7340 	mov.w	r3, #768	; 0x300
20070114:	4a07      	ldr	r2, [pc, #28]	; (20070134 <system_init_flash+0x84>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0121eabf 	.word	0x0121eabf
20070124:	02faf07f 	.word	0x02faf07f
20070128:	03d08fff 	.word	0x03d08fff
2007012c:	04c4b3ff 	.word	0x04c4b3ff
20070130:	055d4a7f 	.word	0x055d4a7f
20070134:	400e0a00 	.word	0x400e0a00

20070138 <g_interrupt_enabled>:
20070138:	00000001                                ....

2007013c <SystemCoreClock>:
2007013c:	003d0900                                ..=.

20070140 <_impure_ptr>:
20070140:	20070148 00000000                       H.. ....

20070148 <impure_data>:
20070148:	00000000 20070434 2007049c 20070504     ....4.. ... ... 
	...
200701f0:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070200:	0005deec 0000000b 00000000 00000000     ................
	...

20070570 <__atexit_recursive_mutex>:
20070570:	20070c60                                `.. 

20070574 <__global_locale>:
20070574:	00000043 00000000 00000000 00000000     C...............
	...
20070594:	00000043 00000000 00000000 00000000     C...............
	...
200705b4:	00000043 00000000 00000000 00000000     C...............
	...
200705d4:	00000043 00000000 00000000 00000000     C...............
	...
200705f4:	00000043 00000000 00000000 00000000     C...............
	...
20070614:	00000043 00000000 00000000 00000000     C...............
	...
20070634:	00000043 00000000 00000000 00000000     C...............
	...
20070654:	00083f19 0008371d 00000000 00084564     .?...7......dE..
20070664:	00084560 00084514 00084514 00084514     `E...E...E...E..
20070674:	00084514 00084514 00084514 00084514     .E...E...E...E..
20070684:	00084514 00084514 ffffffff ffffffff     .E...E..........
20070694:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
200706bc:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

200706e0 <__malloc_av_>:
	...
200706e8:	200706e0 200706e0 200706e8 200706e8     ... ... ... ... 
200706f8:	200706f0 200706f0 200706f8 200706f8     ... ... ... ... 
20070708:	20070700 20070700 20070708 20070708     ... ... ... ... 
20070718:	20070710 20070710 20070718 20070718     ... ... ... ... 
20070728:	20070720 20070720 20070728 20070728      ..  .. (.. (.. 
20070738:	20070730 20070730 20070738 20070738     0.. 0.. 8.. 8.. 
20070748:	20070740 20070740 20070748 20070748     @.. @.. H.. H.. 
20070758:	20070750 20070750 20070758 20070758     P.. P.. X.. X.. 
20070768:	20070760 20070760 20070768 20070768     `.. `.. h.. h.. 
20070778:	20070770 20070770 20070778 20070778     p.. p.. x.. x.. 
20070788:	20070780 20070780 20070788 20070788     ... ... ... ... 
20070798:	20070790 20070790 20070798 20070798     ... ... ... ... 
200707a8:	200707a0 200707a0 200707a8 200707a8     ... ... ... ... 
200707b8:	200707b0 200707b0 200707b8 200707b8     ... ... ... ... 
200707c8:	200707c0 200707c0 200707c8 200707c8     ... ... ... ... 
200707d8:	200707d0 200707d0 200707d8 200707d8     ... ... ... ... 
200707e8:	200707e0 200707e0 200707e8 200707e8     ... ... ... ... 
200707f8:	200707f0 200707f0 200707f8 200707f8     ... ... ... ... 
20070808:	20070800 20070800 20070808 20070808     ... ... ... ... 
20070818:	20070810 20070810 20070818 20070818     ... ... ... ... 
20070828:	20070820 20070820 20070828 20070828      ..  .. (.. (.. 
20070838:	20070830 20070830 20070838 20070838     0.. 0.. 8.. 8.. 
20070848:	20070840 20070840 20070848 20070848     @.. @.. H.. H.. 
20070858:	20070850 20070850 20070858 20070858     P.. P.. X.. X.. 
20070868:	20070860 20070860 20070868 20070868     `.. `.. h.. h.. 
20070878:	20070870 20070870 20070878 20070878     p.. p.. x.. x.. 
20070888:	20070880 20070880 20070888 20070888     ... ... ... ... 
20070898:	20070890 20070890 20070898 20070898     ... ... ... ... 
200708a8:	200708a0 200708a0 200708a8 200708a8     ... ... ... ... 
200708b8:	200708b0 200708b0 200708b8 200708b8     ... ... ... ... 
200708c8:	200708c0 200708c0 200708c8 200708c8     ... ... ... ... 
200708d8:	200708d0 200708d0 200708d8 200708d8     ... ... ... ... 
200708e8:	200708e0 200708e0 200708e8 200708e8     ... ... ... ... 
200708f8:	200708f0 200708f0 200708f8 200708f8     ... ... ... ... 
20070908:	20070900 20070900 20070908 20070908     ... ... ... ... 
20070918:	20070910 20070910 20070918 20070918     ... ... ... ... 
20070928:	20070920 20070920 20070928 20070928      ..  .. (.. (.. 
20070938:	20070930 20070930 20070938 20070938     0.. 0.. 8.. 8.. 
20070948:	20070940 20070940 20070948 20070948     @.. @.. H.. H.. 
20070958:	20070950 20070950 20070958 20070958     P.. P.. X.. X.. 
20070968:	20070960 20070960 20070968 20070968     `.. `.. h.. h.. 
20070978:	20070970 20070970 20070978 20070978     p.. p.. x.. x.. 
20070988:	20070980 20070980 20070988 20070988     ... ... ... ... 
20070998:	20070990 20070990 20070998 20070998     ... ... ... ... 
200709a8:	200709a0 200709a0 200709a8 200709a8     ... ... ... ... 
200709b8:	200709b0 200709b0 200709b8 200709b8     ... ... ... ... 
200709c8:	200709c0 200709c0 200709c8 200709c8     ... ... ... ... 
200709d8:	200709d0 200709d0 200709d8 200709d8     ... ... ... ... 
200709e8:	200709e0 200709e0 200709e8 200709e8     ... ... ... ... 
200709f8:	200709f0 200709f0 200709f8 200709f8     ... ... ... ... 
20070a08:	20070a00 20070a00 20070a08 20070a08     ... ... ... ... 
20070a18:	20070a10 20070a10 20070a18 20070a18     ... ... ... ... 
20070a28:	20070a20 20070a20 20070a28 20070a28      ..  .. (.. (.. 
20070a38:	20070a30 20070a30 20070a38 20070a38     0.. 0.. 8.. 8.. 
20070a48:	20070a40 20070a40 20070a48 20070a48     @.. @.. H.. H.. 
20070a58:	20070a50 20070a50 20070a58 20070a58     P.. P.. X.. X.. 
20070a68:	20070a60 20070a60 20070a68 20070a68     `.. `.. h.. h.. 
20070a78:	20070a70 20070a70 20070a78 20070a78     p.. p.. x.. x.. 
20070a88:	20070a80 20070a80 20070a88 20070a88     ... ... ... ... 
20070a98:	20070a90 20070a90 20070a98 20070a98     ... ... ... ... 
20070aa8:	20070aa0 20070aa0 20070aa8 20070aa8     ... ... ... ... 
20070ab8:	20070ab0 20070ab0 20070ab8 20070ab8     ... ... ... ... 
20070ac8:	20070ac0 20070ac0 20070ac8 20070ac8     ... ... ... ... 
20070ad8:	20070ad0 20070ad0 20070ad8 20070ad8     ... ... ... ... 

20070ae8 <__malloc_sbrk_base>:
20070ae8:	ffffffff                                ....

20070aec <__malloc_trim_threshold>:
20070aec:	00020000                                ....
